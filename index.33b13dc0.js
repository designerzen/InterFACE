!function(){function t(t,e,n){Object.defineProperty(t,e,{get:n,enumerable:!0})}var e="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class n{constructor(t,e){this.backend=t,this.dataMover=e,this.data=new WeakMap,this.dataIdsCount=0}get(t){return this.data.has(t)||this.dataMover.moveData(this.backend,t),this.data.get(t)}set(t,e){this.dataIdsCount++,this.data.set(t,e)}has(t){return this.data.has(t)}delete(t){return this.dataIdsCount--,this.data.delete(t)}numDataIds(){return this.dataIdsCount}}class r{time(t){return s("time")}read(t){return s("read")}readSync(t){return s("readSync")}numDataIds(){return s("numDataIds")}disposeData(t){return s("disposeData")}write(t,e,n){return s("write")}move(t,e,n,r){return s("move")}memory(){return s("memory")}floatPrecision(){return s("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}batchMatMul(t,e,n,r){return s("batchMatMul")}fusedBatchMatMul({a:t,b:e,transposeA:n,transposeB:r,bias:a,activation:i,preluActivationWeights:o}){return s("fusedBatchMatMul")}slice(t,e,n){return s("slice")}stridedSlice(t,e,n,r){return s("stridedSlice")}unstack(t,e){return s("unstack")}reverse(t,e){return s("reverse")}concat(t,e){return s("concat")}neg(t){return s("neg")}add(t,e){return s("add")}addN(t){return s("addN")}subtract(t,e){return s("subtract")}multiply(t,e){return s("multiply")}realDivide(t,e){return s("realDivide")}floorDiv(t,e){return s("floorDiv")}sum(t,e){return s("sum")}prod(t,e){return s("prod")}unsortedSegmentSum(t,e,n){return s("unsortedSegmentSum")}argMin(t,e){return s("argMin")}argMax(t,e){return s("argMax")}equal(t,e){return s("equal")}notEqual(t,e){return s("notEqual")}less(t,e){return s("less")}lessEqual(t,e){return s("lessEqual")}greater(t,e){return s("greater")}greaterEqual(t,e){return s("greaterEqual")}logicalNot(t){return s("logicalNot")}logicalAnd(t,e){return s("logicalAnd")}logicalOr(t,e){return s("logicalOr")}where(t){return s("where")}select(t,e,n){return s("select")}topk(t,e,n){return s("topk")}min(t,e){return s("min")}minimum(t,e){return s("minimum")}mod(t,e){return s("mod")}max(t,e){return s("max")}maximum(t,e){return s("maximum")}all(t,e){return s("all")}any(t,e){return s("any")}squaredDifference(t,e){return s("squaredDifference")}ceil(t){return s("ceil")}floor(t){return s("floor")}round(t){return s("round")}sign(t){return s("sign")}isNaN(t){return s("isNaN")}isInf(t){return s("isInf")}isFinite(t){return s("isFinite")}pow(t,e){return s("pow")}exp(t){return s("exp")}expm1(t){return s("expm1")}softmax(t,e){return s("softmax")}log(t){return s("log")}log1p(t){return s("log1p")}sqrt(t){return s("sqrt")}rsqrt(t){return s("rsqrt")}square(t){return s("square")}reciprocal(t){return s("reciprocal")}relu(t){return s("relu")}relu6(t){return s("relu6")}prelu(t,e){return s("prelu")}elu(t){return s("elu")}eluDer(t,e){return s("eluDer")}selu(t){return s("selu")}int(t){return s("int")}clip(t,e,n){return s("clip")}abs(t){return s("abs")}complexAbs(t){return s("complexAbs")}sigmoid(t){return s("sigmoid")}softplus(t){return s("softplus")}sin(t){return s("sin")}cos(t){return s("cos")}tan(t){return s("tan")}asin(t){return s("asin")}acos(t){return s("acos")}atan(t){return s("atan")}atan2(t,e){return s("atan2")}sinh(t){return s("sinh")}cosh(t){return s("cosh")}tanh(t){return s("tanh")}asinh(t){return s("asinh")}acosh(t){return s("acosh")}atanh(t){return s("atanh")}erf(t){return s("erf")}step(t,e){return s("step")}fusedConv2d({input:t,filter:e,convInfo:n,bias:r,activation:a,preluActivationWeights:i}){return s("fusedConv2d")}conv2d(t,e,n){return s("conv2d")}conv2dDerInput(t,e,n){return s("conv2dDerInput")}conv2dDerFilter(t,e,n){return s("conv2dDerFilter")}fusedDepthwiseConv2D({input:t,filter:e,convInfo:n,bias:r,activation:a,preluActivationWeights:i}){return s("fusedDepthwiseConv2D")}depthwiseConv2D(t,e,n){return s("depthwiseConv2D")}depthwiseConv2DDerInput(t,e,n){return s("depthwiseConv2DDerInput")}depthwiseConv2DDerFilter(t,e,n){return s("depthwiseConv2DDerFilter")}conv3d(t,e,n){return s("conv3d")}conv3dDerInput(t,e,n){return s("conv3dDerInput")}conv3dDerFilter(t,e,n){return s("conv3dDerFilter")}maxPool(t,e){return s("maxPool")}maxPoolBackprop(t,e,n,r){return s("maxPoolBackprop")}avgPool(t,e){return s("avgPool")}avgPoolBackprop(t,e,n){return s("avgPoolBackprop")}avgPool3d(t,e){return s("avgPool3d")}avgPool3dBackprop(t,e,n){return s("avgPool3dBackprop")}maxPool3d(t,e){return s("maxPool3d")}maxPool3dBackprop(t,e,n,r){return s("maxPool3dBackprop")}reshape(t,e){return s("reshape")}cast(t,e){return s("cast")}tile(t,e){return s("tile")}pad(t,e,n){return s("pad")}transpose(t,e){return s("transpose")}gather(t,e,n){return s("gather")}gatherND(t,e){return s("gatherND")}scatterND(t,e,n){return s("scatterND")}batchToSpaceND(t,e,n){return s("batchToSpaceND")}spaceToBatchND(t,e,n){return s("spaceToBatchND")}resizeBilinear(t,e,n,r){return s("resizeBilinear")}resizeBilinearBackprop(t,e,n){return s("resizeBilinearBackprop")}resizeNearestNeighbor(t,e,n,r){return s("resizeNearestNeighbor")}resizeNearestNeighborBackprop(t,e,n){return s("resizeNearestNeighborBackprop")}batchNorm(t,e,n,r,a,i){return s("batchNorm")}localResponseNormalization4D(t,e,n,r,a){return s("localResponseNormalization4D")}LRNGrad(t,e,n,r,a,i,o){return s("LRNGrad")}multinomial(t,e,n,r){return s("multinomial")}oneHot(t,e,n,r){return s("oneHot")}cumsum(t,e,n,r){return s("cumsum")}nonMaxSuppression(t,e,n,r,a){return s("nonMaxSuppression")}fft(t){return s("fft")}ifft(t){return s("ifft")}complex(t,e){return s("complex")}real(t){return s("real")}imag(t){return s("imag")}cropAndResize(t,e,n,r,a,i){return s("cropAndResize")}depthToSpace(t,e,n){return s("depthToSpace")}split(t,e,n){return s("split")}sparseToDense(t,e,n,r){return s("sparseToDense")}diag(t){return s("diag")}fill(t,e,n){return s("fill")}onesLike(t){return s("onesLike")}zerosLike(t){return s("zerosLike")}linspace(t,e,n){return s("linspace")}dispose(){return s("dispose")}}function s(t){throw new Error(`'${t}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function a(t){let e=t.length,n=0,r=0;for(;e>0;)r=Math.random()*e|0,e--,n=t[e],t[e]=t[r],t[r]=n}function i(t,e,n){return Math.max(t,Math.min(e,n))}function o(t){return t%2==0?t:t+1}function u(t,e){if(!t)throw new Error("string"==typeof e?e:e())}function l(t,e,n=""){u(d(t,e),(()=>n+` Shapes ${t} and ${e} must match`))}function c(t){u(null!=t,(()=>"The input to the tensor constructor must be a non-null value."))}function h(t,e=[],n=!1){if(null==e&&(e=[]),Array.isArray(t)||N(t)&&!n)for(let r=0;r<t.length;++r)h(t[r],e,n);else e.push(t);return e}function p(t){if(0===t.length)return 1;let e=t[0];for(let n=1;n<t.length;n++)e*=t[n];return e}function d(t,e){if(t===e)return!0;if(null==t||null==e)return!1;if(t.length!==e.length)return!1;for(let n=0;n<t.length;n++)if(t[n]!==e[n])return!1;return!0}function f(t){return t%1==0}function m(t){const e=Math.ceil(Math.sqrt(t));return[e,Math.ceil(t/e)]}function g(t,e){return e<=t.length?t:t+" ".repeat(e-t.length)}function y(t,e=(t=>0),n){return new Promise(((r,s)=>{let a=0;const i=()=>{if(t())return void r();a++;const o=e(a);null!=n&&a>=n?s():setTimeout(i,o)};i()}))}function b(t,e){let n=1,r=-1;for(let e=0;e<t.length;++e)if(t[e]>=0)n*=t[e];else if(-1===t[e]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${e}`);r=e}else if(t[e]<0)throw Error(`Shapes can not be < 0. Found ${t[e]} at dim ${e}`);if(-1===r){if(e>0&&e!==n)throw Error(`Size(${e}) must match the product of shape ${t}`);return t}if(0===n)throw Error(`Cannot infer the missing size in [${t}] when there are 0 elements`);if(e%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${n}`);const s=t.slice();return s[r]=e/n,s}function x(t,e){const n=e.length;return u((t=null==t?e.map(((t,e)=>e)):[].concat(t)).every((t=>t>=-n&&t<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${t}`)),u(t.every((t=>f(t))),(()=>`All values in axis param must be integers but got axis ${t}`)),t.map((t=>t<0?n+t:t))}function w(t,e){const n=[],r=[],s=null!=e&&Array.isArray(e)&&0===e.length,a=null==e||s?null:x(e,t).sort();let i=0;for(let e=0;e<t.length;++e){if(null!=a){if(a[i]===e&&1!==t[e])throw new Error(`Can't squeeze axis ${e} since its dim '${t[e]}' is not 1`);(null==a[i]||a[i]>e)&&1===t[e]&&(n.push(t[e]),r.push(e)),a[i]<=e&&i++}1!==t[e]&&(n.push(t[e]),r.push(e))}return{newShape:n,keptDims:r}}function v(t,e){let n=null;if(null==t||"float32"===t)n=new Float32Array(e);else if("int32"===t)n=new Int32Array(e);else{if("bool"!==t)throw new Error(`Unknown data type ${t}`);n=new Uint8Array(e)}return n}function I(t,e){let n=null;if(null==t||"float32"===t)n=new Float32Array(e);else if("int32"===t)n=new Int32Array(e);else if("bool"===t)n=new Uint8Array(e);else{if("string"!==t)throw new Error(`Unknown data type ${t}`);n=new Array(e)}return n}function k(t,e){return"complex64"!==e&&(("float32"!==e||"complex64"===t)&&(("int32"!==e||"float32"===t||"complex64"===t)&&("bool"!==e||"bool"!==t)))}function N(t){return t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array}function S(t){if("float32"===t||"int32"===t)return 4;if("complex64"===t)return 8;if("bool"===t)return 1;throw new Error(`Unknown dtype ${t}`)}function E(t){return"string"==typeof t||t instanceof String}function C(t){return"number"==typeof t}function $(t){return Array.isArray(t)?$(t[0]):t instanceof Float32Array?"float32":t instanceof Int32Array||t instanceof Uint8Array?"int32":C(t)?"float32":E(t)?"string":"boolean"==typeof t?"bool":"float32"}function T(t){return!!(t&&t.constructor&&t.call&&t.apply)}function A(t,e){for(let n=e;n<t;++n)if(t%n==0)return n;return t}function R(t){const e=t.length;if(e<2)return[];const n=new Array(e-1);n[e-2]=t[e-1];for(let r=e-3;r>=0;--r)n[r]=n[r+1]*t[r+1];return n}function _(t,e,n){const r=new Array;if(1===e.length){const s=e[0];for(let e=0;e<s;e++)r[e]=n[t+e]}else{const s=e[0],a=e.slice(1),i=a.reduce(((t,e)=>t*e));for(let e=0;e<s;e++)r[e]=_(t+e*i,a,n)}return r}function D(t,e){if(0===t.length)return e[0];const n=t.reduce(((t,e)=>t*e));if(0===n)return[];if(n!==e.length)throw new Error(`[${t}] does not match the input size ${e.length}.`);return _(0,t,e)}function M(t,e){const n=F(t,e);for(let t=0;t<n.length;t++)n[t]=1;return n}function F(t,e){if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e)return new Uint8Array(t);throw new Error(`Unknown data type ${e}`)}function O(t,e){const n=t.reduce(((t,e)=>t*e),1);if(null==e||"float32"===e)return D(t,new Float32Array(n));if("int32"===e)return D(t,new Int32Array(n));if("bool"===e)return D(t,new Uint8Array(n));throw new Error(`Unknown data type ${e}`)}function L(t){t.forEach((e=>{u(Number.isInteger(e)&&e>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${t}].`))}))}function B(t,e,n){if(0===e)return 0;if(1===e)return t[0];let r=t[t.length-1];for(let e=0;e<t.length-1;++e)r+=n[e]*t[e];return r}function z(t,e,n){if(0===e)return[];if(1===e)return[t];const r=new Array(e);for(let e=0;e<r.length-1;++e)r[e]=Math.floor(t/n[e]),t-=r[e]*n[e];return r[r.length-1]=t,r}function P(t){return t&&t.then&&"function"==typeof t.then}const W="tfjsflags";class V{constructor(t){this.global=t,this.flags={},this.flagRegistry={},this.urlFlags={},this.populateURLFlags()}setPlatform(t,e){null!=this.platform&&console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`),this.platformName=t,this.platform=e}registerFlag(t,e,n){if(this.flagRegistry[t]={evaluationFn:e,setHook:n},null!=this.urlFlags[t]){const e=this.urlFlags[t];console.warn(`Setting feature override from URL ${t}: ${e}.`),this.set(t,e)}}async getAsync(t){return t in this.flags||(this.flags[t]=await this.evaluateFlag(t)),this.flags[t]}get(t){if(t in this.flags)return this.flags[t];const e=this.evaluateFlag(t);if(P(e))throw new Error(`Flag ${t} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[t]=e,this.flags[t]}getNumber(t){return this.get(t)}getBool(t){return this.get(t)}getFlags(){return this.flags}get features(){return this.flags}set(t,e){if(null==this.flagRegistry[t])throw new Error(`Cannot set flag ${t} as it has not been registered.`);this.flags[t]=e,null!=this.flagRegistry[t].setHook&&this.flagRegistry[t].setHook(e)}evaluateFlag(t){if(null==this.flagRegistry[t])throw new Error(`Cannot evaluate flag '${t}': no evaluation function found.`);return this.flagRegistry[t].evaluationFn()}setFlags(t){this.flags=Object.assign({},t)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const t=function(t){const e={};return t.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((t,...n)=>(function(t,e,n){t[decodeURIComponent(e)]=decodeURIComponent(n||"")}(e,n[0],n[1]),n.join("=")))),e}(this.global.location.search);if(W in t){t.tfjsflags.split(",").forEach((t=>{const[e,n]=t.split(":");this.urlFlags[e]=function(t,e){if("true"===(e=e.toLowerCase())||"false"===e)return"true"===e;if(""+ +e===e)return+e;throw new Error(`Could not parse value flag value ${e} for flag ${t}.`)}(e,n)}))}}}function U(){return G}let G=null;var H,j,q={},K=q={};function X(){throw new Error("setTimeout has not been defined")}function Y(){throw new Error("clearTimeout has not been defined")}function J(t){if(H===setTimeout)return setTimeout(t,0);if((H===X||!H)&&setTimeout)return H=setTimeout,setTimeout(t,0);try{return H(t,0)}catch(e){try{return H.call(null,t,0)}catch(e){return H.call(this,t,0)}}}!function(){try{H="function"==typeof setTimeout?setTimeout:X}catch(t){H=X}try{j="function"==typeof clearTimeout?clearTimeout:Y}catch(t){j=Y}}();var Z,Q=[],tt=!1,et=-1;function nt(){tt&&Z&&(tt=!1,Z.length?Q=Z.concat(Q):et=-1,Q.length&&rt())}function rt(){if(!tt){var t=J(nt);tt=!0;for(var e=Q.length;e;){for(Z=Q,Q=[];++et<e;)Z&&Z[et].run();et=-1,e=Q.length}Z=null,tt=!1,function(t){if(j===clearTimeout)return clearTimeout(t);if((j===Y||!j)&&clearTimeout)return j=clearTimeout,clearTimeout(t);try{j(t)}catch(e){try{return j.call(null,t)}catch(e){return j.call(this,t)}}}(t)}}function st(t,e){this.fun=t,this.array=e}function at(){}let it;function ot(){if(null==it){let t;if("undefined"!=typeof window)t=window;else if(void 0!==e)t=e;else if(void 0!==q)t=q;else{if("undefined"==typeof self)throw new Error("Could not find a global object");t=self}it=t}return it}function ut(t,e){const n=function(){const t=ot();return null==t._tfGlobals&&(t._tfGlobals=new Map),t._tfGlobals}();if(n.has(t))return n.get(t);{const r=e();return n.set(t,r),n.get(t)}}K.nextTick=function(t){var e=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)e[n-1]=arguments[n];Q.push(new st(t,e)),1!==Q.length||tt||J(rt)},st.prototype.run=function(){this.fun.apply(null,this.array)},K.title="browser",K.browser=!0,K.env={},K.argv=[],K.version="",K.versions={},K.on=at,K.addListener=at,K.once=at,K.off=at,K.removeListener=at,K.removeAllListeners=at,K.emit=at,K.prependListener=at,K.prependOnceListener=at,K.listeners=function(t){return[]},K.binding=function(t){throw new Error("process.binding is not supported")},K.cwd=function(){return"/"},K.chdir=function(t){throw new Error("process.chdir is not supported")},K.umask=function(){return 0};const lt="Abs",ct="Acos",ht="Acosh",pt="Add",dt="AddN",ft="ArgMax",mt="ArgMin",gt="Asin",yt="Asinh",bt="Atan",xt="Atanh",wt="Atan2",vt="AvgPool",It="AvgPoolBackprop",kt="AvgPool3D",Nt="BatchMatMul",St="BatchToSpaceND",Et="BroadcastTo",Ct="Cast",$t="Ceil",Tt="ClipByValue",At="Complex",Rt="Concat",_t="Conv2D",Dt="Conv2DBackpropFilter",Mt="Conv2DBackpropInput",Ft="Conv3D",Ot="Conv3DBackpropFilterV2",Lt="Conv3DBackpropInputV2",Bt="Cos",zt="Cosh",Pt="Cumsum",Wt="DepthwiseConv2dNative",Vt="DepthwiseConv2dNativeBackpropFilter",Ut="DepthwiseConv2dNativeBackpropInput",Gt="Dilation2D",Ht="Dilation2DBackpropInput",jt="Dilation2DBackpropFilter",qt="Div",Kt="Elu",Xt="Erf",Yt="Exp",Jt="Expm1",Zt="FFT",Qt="Fill",te="FlipLeftRight",ee="Floor",ne="FloorDiv",re="FusedBatchNorm",se="GatherV2",ae="GreaterEqual",ie="Identity",oe="IFFT",ue="Imag",le="IsFinite",ce="IsInf",he="IsNan",pe="Log",de="Log1p",fe="LogicalNot",me="LogSoftmax",ge="Max",ye="Maximum",be="MaxPool",xe="MaxPoolBackprop",we="MaxPool3D",ve="MaxPoolWithArgmax",Ie="Mean",ke="Minimum",Ne="MirrorPad",Se="Multiply",Ee="Negate",Ce="NotEqual",$e="NonMaxSuppressionV3",Te="NonMaxSuppressionV4",Ae="NonMaxSuppressionV5",Re="OnesLike",_e="OneHot",De="PadV2",Me="Prelu",Fe="Real",Oe="Reciprocal",Le="Relu",Be="Reshape",ze="ResizeNearestNeighbor",Pe="ResizeBilinear",We="Relu6",Ve="Reverse",Ue="Round",Ge="Rsqrt",He="SelectV2",je="Selu",qe="Slice",Ke="Sin",Xe="Sinh",Ye="Sign",Je="Sigmoid",Ze="Softplus",Qe="Sqrt",tn="SpaceToBatchND",en="SplitV",nn="Softmax",rn="SquaredDifference",sn="Square",an="Sub",on="Tan",un="Tanh",ln="Tile",cn="Transpose",hn="Unique",pn="Unpack",dn="UnsortedSegmentSum",fn="ZerosLike",mn="Step",gn="FromPixels",yn="RotateWithOffset",bn="_FusedMatMul",xn="FusedConv2D",wn="FusedDepthwiseConv2D",vn=ut("kernelRegistry",(()=>new Map)),In=ut("gradRegistry",(()=>new Map));function kn(t,e){const n=$n(t,e);return vn.get(n)}function Nn(t){return In.get(t)}function Sn(t){const e=vn.entries(),n=[];for(;;){const{done:r,value:s}=e.next();if(r)break;const[a,i]=s,[o]=a.split("_");o===t&&n.push(i)}return n}function En(t){const{kernelName:e,backendName:n}=t,r=$n(e,n);vn.has(r)&&console.warn(`The kernel '${e}' for backend '${n}' is already registered`),vn.set(r,t)}function Cn(t){const{kernelName:e}=t;In.has(e)&&U().getBool("DEBUG")&&console.warn(`Overriding the gradient for '${e}'`),In.set(e,t)}function $n(t,e){return`${e}_${t}`}function Tn(t,e){if("string"===e)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(t)&&(t=h(t)),U().getBool("DEBUG")&&function(t,e){for(let n=0;n<t.length;n++){const r=t[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${e} being uploaded contains ${r}.`)}}(t,e),function(t,e){return t instanceof Float32Array&&"float32"===e||t instanceof Int32Array&&"int32"===e||t instanceof Uint8Array&&"bool"===e}(t,e))return t;if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e){const e=new Uint8Array(t.length);for(let n=0;n<e.length;++n)0!==Math.round(t[n])&&(e[n]=1);return e}throw new Error(`Unknown data type ${e}`)}function An(){return U().platform.now()}function Rn(t,e="utf-8"){return e=e||"utf-8",U().platform.encode(t,e)}function _n(t,e="utf-8"){return e=e||"utf-8",U().platform.decode(t,e)}class Dn{constructor(t,e){this.backendTimer=t,this.logger=e,null==e&&(this.logger=new Fn)}profileKernel(t,e,n){let r;const s=this.backendTimer.time((()=>{r=n()}));for(let e=0;e<r.length;e++){const n=r[e];n.data().then((e=>{Mn(e,n.dtype,t)}))}return{kernelName:t,outputs:r,inputs:e,timeMs:s.then((t=>t.kernelMs)),extraInfo:s.then((t=>null!=t.getExtraProfileInfo?t.getExtraProfileInfo():""))}}logKernelProfile(t){const{kernelName:e,outputs:n,timeMs:r,inputs:s,extraInfo:a}=t;n.forEach((t=>{Promise.all([t.data(),r,a]).then((n=>{this.logger.logKernelProfile(e,t,n[0],n[1],s,n[2])}))}))}}function Mn(t,e,n){if("float32"!==e)return!1;for(let e=0;e<t.length;e++){const r=t[e];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}class Fn{logKernelProfile(t,e,n,r,s,a){const i="number"==typeof r?g(`${r}ms`,9):r.error,o=g(t,25),u=e.rank,l=e.size,c=g(e.shape.toString(),14);let h="";for(const t in s){const n=s[t];if(null!=n){const r=n.shape||e.shape,s=r.length;h+=`${t}: ${s}D ${s>0?r:""} `}}console.log(`%c${o}\t%c${i}\t%c${u}D ${c}\t%c${l}\t%c${h}\t%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function On(t,e,n,r){const s=R(e),a=function(t,e,n,r){const s=p(e),a=r[r.length-1],i=new Array(a).fill(0),o=e.length,u="complex64"===n?Pn(t):t;if(o>1)for(let t=0;t<s/a;t++){const e=t*a;for(let t=0;t<a;t++)i[t]=Math.max(i[t],Ln(u[e+t],0,n).length)}return i}(t,e,n,s),i=e.length,o=zn(t,e,n,s,a),u=["Tensor"];return r&&(u.push(`  dtype: ${n}`),u.push(`  rank: ${i}`),u.push(`  shape: [${e}]`),u.push("  values:")),u.push(o.map((t=>"    "+t)).join("\n")),u.join("\n")}function Ln(t,e,n){let r;return r=Array.isArray(t)?`${parseFloat(t[0].toFixed(7))} + ${parseFloat(t[1].toFixed(7))}j`:E(t)?`'${t}'`:"bool"===n?Bn(t):parseFloat(t.toFixed(7)).toString(),g(r,e)}function Bn(t){return 0===t?"false":"true"}function zn(t,e,n,r,s,a=!0){const i="complex64"===n?2:1,o=e[0],u=e.length;if(0===u){if("complex64"===n){return[Ln(Pn(t)[0],0,n)]}return"bool"===n?[Bn(t[0])]:[t[0].toString()]}if(1===u){if(o>20){const e=3*i;let r=Array.from(t.slice(0,e)),a=Array.from(t.slice((o-3)*i,o*i));return"complex64"===n&&(r=Pn(r),a=Pn(a)),["["+r.map(((t,e)=>Ln(t,s[e],n))).join(", ")+", ..., "+a.map(((t,e)=>Ln(t,s[o-3+e],n))).join(", ")+"]"]}return["["+("complex64"===n?Pn(t):Array.from(t)).map(((t,e)=>Ln(t,s[e],n))).join(", ")+"]"]}const l=e.slice(1),c=r.slice(1),h=r[0]*i,p=[];if(o>20){for(let e=0;e<3;e++){const r=e*h,a=r+h;p.push(...zn(t.slice(r,a),l,n,c,s,!1))}p.push("...");for(let e=o-3;e<o;e++){const r=e*h,a=r+h;p.push(...zn(t.slice(r,a),l,n,c,s,e===o-1))}}else for(let e=0;e<o;e++){const r=e*h,a=r+h;p.push(...zn(t.slice(r,a),l,n,c,s,e===o-1))}const d=2===u?",":"";p[0]="["+p[0]+d;for(let t=1;t<p.length-1;t++)p[t]=" "+p[t]+d;let f=",\n";for(let t=2;t<u;t++)f+="\n";return p[p.length-1]=" "+p[p.length-1]+"]"+(a?"":f),p}function Pn(t){const e=[];for(let n=0;n<t.length;n+=2)e.push([t[n],t[n+1]]);return e}class Wn{constructor(t,e,n){if(this.dtype=e,this.shape=t.slice(),this.size=p(t),null!=n){const t=n.length;u(t===this.size,(()=>`Length of values '${t}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===e)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||I(e,this.size),this.strides=R(t)}set(t,...e){0===e.length&&(e=[0]),u(e.length===this.rank,(()=>`The number of provided coordinates (${e.length}) must match the rank (${this.rank})`));const n=this.locToIndex(e);this.values[n]=t}get(...t){0===t.length&&(t=[0]);let e=0;for(const n of t){if(n<0||n>=this.shape[e]){const e=`Requested out of range element at ${t}.   Buffer shape=${this.shape}`;throw new Error(e)}e++}let n=t[t.length-1];for(let e=0;e<t.length-1;++e)n+=this.strides[e]*t[e];return this.values[n]}locToIndex(t){if(0===this.rank)return 0;if(1===this.rank)return t[0];let e=t[t.length-1];for(let n=0;n<t.length-1;++n)e+=this.strides[n]*t[n];return e}indexToLoc(t){if(0===this.rank)return[];if(1===this.rank)return[t];const e=new Array(this.shape.length);for(let n=0;n<e.length-1;++n)e[n]=Math.floor(t/this.strides[n]),t-=e[n]*this.strides[n];return e[e.length-1]=t,e}get rank(){return this.shape.length}toTensor(){return Vn().makeTensor(this.values,this.shape,this.dtype)}}let Vn=null,Un=null,Gn=null;class Hn{constructor(t,e,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=t.slice(),this.dtype=e||"float32",this.size=p(t),this.strides=R(t),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const t=await this.data();return Un.buffer(this.shape,this.dtype,t)}bufferSync(){return Un.buffer(this.shape,this.dtype,this.dataSync())}async array(){const t=await this.data();return D(this.shape,t)}arraySync(){return D(this.shape,this.dataSync())}async data(){this.throwIfDisposed();const t=Vn().read(this.dataId);if("string"===this.dtype){const e=await t;try{return e.map((t=>_n(t)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return t}dataSync(){this.throwIfDisposed();const t=Vn().readSync(this.dataId);if("string"===this.dtype)try{return t.map((t=>_n(t)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return t}async bytes(){this.throwIfDisposed();const t=await Vn().read(this.dataId);return"string"===this.dtype?t:new Uint8Array(t.buffer)}dispose(){this.isDisposed||(Vn().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(t=!1){return Un.print(this,t)}clone(){return this.throwIfDisposed(),Un.clone(this)}toString(t=!1){return On(this.dataSync(),this.shape,this.dtype,t)}cast(t){return this.throwIfDisposed(),Un.cast(this,t)}variable(t=!0,e,n){return this.throwIfDisposed(),Vn().makeVariable(this,t,e,n)}}Object.defineProperty(Hn,Symbol.hasInstance,{value:t=>!!t&&null!=t.data&&null!=t.dataSync&&null!=t.throwIfDisposed});class jn extends Hn{constructor(t,e,n,r){super(t.shape,t.dtype,t.dataId,r),this.trainable=e,this.name=n}assign(t){if(t.dtype!==this.dtype)throw new Error(`dtype of the new value (${t.dtype}) and previous value (${this.dtype}) must match`);if(!d(t.shape,this.shape))throw new Error(`shape of the new value (${t.shape}) and previous value (${this.shape}) must match`);Vn().disposeTensor(this),this.dataId=t.dataId,Vn().incRef(this,null)}dispose(){Vn().disposeVariable(this),this.isDisposedInternal=!0}}var qn,Kn,Xn,Yn,Jn,Zn,Qn,tr,er,nr;Object.defineProperty(jn,Symbol.hasInstance,{value:t=>t instanceof Hn&&null!=t.assign&&t.assign instanceof Function}),(Kn=qn||(qn={})).R0="R0",Kn.R1="R1",Kn.R2="R2",Kn.R3="R3",Kn.R4="R4",Kn.R5="R5",Kn.R6="R6",(Yn=Xn||(Xn={})).float32="float32",Yn.int32="int32",Yn.bool="int32",Yn.complex64="complex64",(Zn=Jn||(Jn={})).float32="float32",Zn.int32="int32",Zn.bool="bool",Zn.complex64="complex64",(tr=Qn||(Qn={})).float32="float32",tr.int32="float32",tr.bool="float32",tr.complex64="complex64",(nr=er||(er={})).float32="complex64",nr.int32="complex64",nr.bool="complex64",nr.complex64="complex64";const rr={float32:Qn,int32:Xn,bool:Jn,complex64:er};function sr(t,e){if("string"===t||"string"===e){if("string"===t&&"string"===e)return"string";throw new Error(`Can not upcast ${t} with ${e}`)}return rr[t][e]}function ar(t){return sr(t,"int32")}function ir(t,e){if(t.dtype===e.dtype)return[t,e];const n=sr(t.dtype,e.dtype);return[t.cast(n),e.cast(n)]}function or(t,e){return e.some((e=>e.id===t.id))}function ur(t){const e=[];return lr(t,e,new Set),e}function lr(t,e,n){if(null==t)return;if(t instanceof Hn)return void e.push(t);if(r=t,!Array.isArray(r)&&"object"!=typeof r)return;var r;const s=t;for(const t in s){const r=s[t];n.has(r)||(n.add(r),lr(r,e,n))}}class cr{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null}}dispose(){for(const t in this.registeredVariables)this.registeredVariables[t].dispose()}}class hr{constructor(t){this.ENV=t,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new cr}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:t,asyncInit:e}=this.initializeBackendsAndReturnBest();if(e)throw new Error(`The highest priority backend '${t}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(t)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(t){if(!(t in this.registry)){if(!(t in this.registryFactory))return null;{const{asyncInit:e}=this.initializeBackend(t);if(e)return null}}return this.registry[t]}findBackendFactory(t){return t in this.registryFactory?this.registryFactory[t].factory:null}registerBackend(t,e,n=1){return t in this.registryFactory?(console.warn(`${t} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[t]={factory:e,priority:n},!0)}async setBackend(t){if(null==this.registryFactory[t])throw new Error(`Backend name '${t}' not found in registry`);if(this.backendName=t,null==this.registry[t]){this.backendInstance=null;const{success:e,asyncInit:n}=this.initializeBackend(t);if(!(n?await e:e))return!1}return this.backendInstance=this.registry[t],this.setupRegisteredKernels(),this.profiler=new Dn(this.backendInstance),!0}setupRegisteredKernels(){Sn(this.backendName).forEach((t=>{null!=t.setupFunc&&t.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(t){Sn(t).forEach((e=>{null!=e.disposeFunc&&e.disposeFunc(this.registry[t])}))}initializeBackend(t){const e=this.registryFactory[t];if(null==e)throw new Error(`Cannot initialize backend ${t}, no registration found.`);try{const n=e.factory();if(!n||n instanceof r||"function"!=typeof n.then)return this.registry[t]=n,{success:!0,asyncInit:!1};{const e=++this.pendingBackendInitId,r=n.then((n=>!(e<this.pendingBackendInitId)&&(this.registry[t]=n,this.pendingBackendInit=null,!0))).catch((n=>(e<this.pendingBackendInitId||(this.pendingBackendInit=null,console.warn(`Initialization of backend ${t} failed`),console.warn(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(e){return console.warn(`Initialization of backend ${t} failed`),console.warn(e.stack||e.message),{success:!1,asyncInit:!1}}}removeBackend(t){if(!(t in this.registryFactory))throw new Error(`${t} backend not found in registry`);this.backendName===t&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,t in this.registry&&(this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t]),delete this.registryFactory[t],this.backendName===t&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((t,e)=>this.registryFactory[e].priority-this.registryFactory[t].priority))}initializeBackendsAndReturnBest(){const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e],{success:r,asyncInit:s}=this.initializeBackend(n);if(s||r)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(t,e){const n=this.state.tensorInfo.get(e),r=n.backend,s=this.readSync(e);r.disposeData(e),n.backend=t,t.move(e,s,n.shape,n.dtype),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(t,e){let n,r=null;if(null==e){if("function"!=typeof t)throw new Error("Please provide a function to tidy()");e=t}else{if("string"!=typeof t&&!(t instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof e)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=t}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=e(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(t,e,n){t();try{const t=n();return e(),t}catch(t){throw e(),t}}nextTensorId(){return hr.nextTensorId++}nextVariableId(){return hr.nextVariableId++}clone(t){const e=this.makeTensorFromDataId(t.dataId,t.shape,t.dtype),n={x:t};return this.addTapeNode(this.state.activeScope.name,n,[e],(t=>({x:()=>{const e="float32",n={x:t},r={dtype:e};return dr.runKernelFunc((n=>n.cast(t,e)),n,null,Ct,r)}})),[],{}),e}runKernel(t,e,n,r,s){return this.runKernelFunc(null,e,null,t,n,r,s)}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(t,e,n){const r=this.backend.numDataIds();let s=0;n.forEach((t=>{s+="complex64"===t.dtype?3:1}));const a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=r-e-s-a;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${t}'`)}runKernelFunc(t,e,n,r,s,a,i){let o,u=[];const l=this.isTapeOn();null==r&&(r=null!=this.state.activeScope?this.state.activeScope.name:"");const c=this.state.numBytes,h=this.state.numTensors;let p;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);const d=kn(r,this.backendName);let f,m;if(null!=d)p=()=>{const t=this.backend.numDataIds();f=d.kernelFunc({inputs:e,attrs:s,backend:this.backend});const n=Array.isArray(f)?f:[f];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(r,t,n);const o=n.map((({dataId:t,shape:e,dtype:n})=>this.makeTensorFromDataId(t,e,n)));if(l){let t=this.getTensorsForGradient(r,e,o);if(null==t){null==i&&(i=[]);const e=o.filter(((t,e)=>i[e]));t=(a||[]).slice().concat(e)}u=this.saveTensorsForBackwardMode(t)}return o};else{const e=t=>{l&&(u=t.map((t=>this.keep(this.clone(t)))))};p=()=>{const n=this.backend.numDataIds();f=this.tidy((()=>t(this.backend,e)));const s=Array.isArray(f)?f:[f];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(r,n,s),s}}return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(m=this.profiler.profileKernel(r,e,(()=>p())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(m),o=m.outputs):o=p()})),l&&this.addTapeNode(r,e,o,n,u,s),this.state.profiling&&this.state.activeProfile.kernels.push({name:r,bytesAdded:this.state.numBytes-c,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-h,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(e).map((t=>null!=e[t]?e[t].shape:null)),outputShapes:o.map((t=>t.shape)),kernelTimeMs:m.timeMs,extraInfo:m.extraInfo}),Array.isArray(f)?o:o[0]}saveTensorsForBackwardMode(t){return t.map((t=>this.keep(this.clone(t))))}getTensorsForGradient(t,e,n){const r=Nn(t);if(null!=r){const t=r.inputsToSave||[],s=r.outputsToSave||[];let a;r.saveAllInputs?(u(Array.isArray(e),(()=>"saveAllInputs is true, expected inputs to be an array.")),a=Object.keys(e).map((t=>e[t]))):a=t.map((t=>e[t]));const i=n.filter(((t,e)=>s[e]));return a.concat(i)}return null}makeTensor(t,e,n,r){if(null==t)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let s=t;"string"===n&&E(t[0])&&(s=t.map((t=>Rn(t))));const a=r.write(s,e,n),i=new Hn(e,n,a,this.nextTensorId());if(this.incRef(i,r),"string"===n){const t=this.state.tensorInfo.get(a),e=function(t){if(null==t)return 0;let e=0;return t.forEach((t=>e+=t.length)),e}(s);this.state.numBytes+=e-t.bytes,t.bytes=e}return i}makeTensorFromDataId(t,e,n,r){const s=new Hn(e,n=n||"float32",t,this.nextTensorId());return this.incRef(s,r),s}makeVariable(t,e=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==t.dtype&&(t=t.cast(r));const s=new jn(t,e,n,this.nextTensorId());if(null!=this.state.registeredVariables[s.name])throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}incRef(t,e){const n=this.state.tensorInfo.has(t.dataId)?this.state.tensorInfo.get(t.dataId).refCount:0;if(this.state.numTensors++,"string"===t.dtype&&this.state.numStringTensors++,0===n){this.state.numDataBuffers++;let n=0;"complex64"!==t.dtype&&"string"!==t.dtype&&(n=t.size*S(t.dtype)),this.state.tensorInfo.set(t.dataId,{backend:e||this.backend,dtype:t.dtype,shape:t.shape,bytes:n,refCount:0}),this.state.numBytes+=n}this.state.tensorInfo.get(t.dataId).refCount++,t instanceof jn||this.track(t)}disposeTensor(t){if(!this.state.tensorInfo.has(t.dataId))return;this.state.numTensors--,"string"===t.dtype&&this.state.numStringTensors--;const e=this.state.tensorInfo.get(t.dataId);e.refCount<=1?("complex64"!==t.dtype&&(this.state.numBytes-=e.bytes),this.state.numDataBuffers--,e.backend.disposeData(t.dataId),this.state.tensorInfo.delete(t.dataId)):this.state.tensorInfo.get(t.dataId).refCount--}disposeVariables(){for(const t in this.state.registeredVariables){const e=this.state.registeredVariables[t];this.disposeVariable(e)}}disposeVariable(t){this.disposeTensor(t),null!=this.state.registeredVariables[t.name]&&delete this.state.registeredVariables[t.name]}memory(){const t=this.backend.memory();return t.numTensors=this.state.numTensors,t.numDataBuffers=this.state.numDataBuffers,t.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(t.unreliable=!0,null==t.reasons&&(t.reasons=[]),t.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),t}async profile(t){this.state.profiling=!0;const e=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await t(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((t=>t.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-e,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const t of this.state.activeProfile.kernels)t.kernelTimeMs=await t.kernelTimeMs,t.extraInfo=await t.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(t,e,n,r,s,a){const i={id:this.state.nextTapeNodeId++,kernelName:t,inputs:e,outputs:n,saved:s},o=Nn(t);null!=o&&(r=o.gradFunc),null!=r&&(i.gradient=t=>(t=t.map(((t,e)=>{if(null==t){const t=n[e],r=F(t.size,t.dtype);return this.makeTensor(r,t.shape,t.dtype)}return t})),r(t.length>1?t:t[0],s,a))),this.state.activeTape.push(i)}keep(t){return t.kept=!0,t}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(t){const e={track:[],name:"unnamed scope",id:this.state.nextScopeId++};t&&(e.name=t),this.state.scopeStack.push(e),this.state.activeScope=e}endScope(t){const e=ur(t),n=new Set(e.map((t=>t.id)));for(let t=0;t<this.state.activeScope.track.length;t++){const e=this.state.activeScope.track[t];e.kept||n.has(e.id)||e.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],e.forEach((t=>{t.kept||t.scopeId!==r.id||this.track(t)}))}gradients(t,e,n,r=!1){if(u(e.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const s=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",t)));u(s instanceof Hn,(()=>"The result y returned by f() must be a tensor."));const a=function(t,e,n){const r={},s={};for(let t=0;t<e.length;t++)r[e[t].id]=!0;for(let n=0;n<t.length;n++){const a=t[n],i=a.inputs;for(const t in i){const n=i[t];let o=!1;for(let t=0;t<e.length;t++)if(r[n.id]){a.outputs.forEach((t=>r[t.id]=!0)),o=!0,s[a.id]=!0;break}if(o)break}}const a={};a[n.id]=!0;const i={};for(let e=t.length-1;e>=0;e--){const n=t[e],r=n.inputs;for(let t=0;t<n.outputs.length;t++)if(a[n.outputs[t].id]){for(const t in r)a[r[t].id]=!0,i[n.id]=!0;break}}const o=[];for(let e=0;e<t.length;e++){const n=t[e];if(s[n.id]&&i[n.id]){const t={};for(const e in n.inputs){const s=n.inputs[e];r[s.id]&&(t[e]=s)}const e=Object.assign({},n);e.inputs=t,e.outputs=n.outputs,o.push(e)}}return o}(this.state.activeTape,e,s);if(!r&&0===a.length&&e.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const t={};t[s.id]=null==n?function(t){const e=M(p(t),"float32");return dr.makeTensor(e,t,"float32")}(s.shape):n,function(t,e,n,r){for(let s=e.length-1;s>=0;s--){const a=e[s],i=[];if(a.outputs.forEach((e=>{const n=t[e.id];null!=n?i.push(n):i.push(null)})),null==a.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${a.kernelName}.`);const o=a.gradient(i);for(const e in a.inputs){if(!(e in o))throw new Error(`Cannot backprop through input ${e}. Available gradients found: ${Object.keys(o)}.`);const s=n((()=>o[e]()));if("float32"!==s.dtype)throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input ${e} must have 'float32' dtype, but has '${s.dtype}'`);const i=a.inputs[e];if(!d(s.shape,i.shape))throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input '${e}' has shape '${s.shape}', which does not match the shape of the input '${i.shape}'`);if(null==t[i.id])t[i.id]=s;else{const e=t[i.id];t[i.id]=r(e,s),e.dispose()}}}}(t,a,(t=>this.tidy(t)),fr);const r=e.map((e=>t[e.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((t=>{for(const e of t.saved)e.dispose()})),this.state.activeTape=null),{value:s,grads:r}}))}customGrad(t){return u(T(t),(()=>"The f passed in customGrad(f) must be a function.")),(...e)=>{let n;u(e.every((t=>t instanceof Hn)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const r={};return e.forEach(((t,e)=>{r[e]=t})),this.runKernelFunc(((r,s)=>(n=t(...e,s),u(n.value instanceof Hn,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),u(T(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value)),r,((t,r)=>{const s=n.gradFunc(t,r),a=Array.isArray(s)?s:[s];u(a.length===e.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),u(a.every((t=>t instanceof Hn)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const i={};return a.forEach(((t,e)=>{i[e]=()=>t})),i}))}}readSync(t){return this.state.tensorInfo.get(t).backend.readSync(t)}read(t){return this.state.tensorInfo.get(t).backend.read(t)}async time(t){const e=An(),n=await this.backend.time(t);return n.wallMs=An()-e,n}track(t){return null!=this.state.activeScope&&(t.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(t)),t}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new cr;for(const t in this.registry)this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function pr(){const t=ot();if(null==t._tfengine){const e=new V(t);t._tfengine=new hr(e)}var e;return e=t._tfengine.ENV,G=e,Vn=()=>t._tfengine,t._tfengine}hr.nextTensorId=0,hr.nextVariableId=0;const dr=pr();function fr(t,e){const n={a:t,b:e};return dr.runKernelFunc(((n,r)=>{const s=n.add(t,e);return r([t,e]),s}),n,null,pt)}function mr(){if("undefined"!=typeof navigator&&null!=navigator){const t=navigator.userAgent||navigator.vendor||window.opera;return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function gr(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}const yr=U();yr.registerFlag("DEBUG",(()=>!1),(t=>{t&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),yr.registerFlag("IS_BROWSER",(()=>gr())),yr.registerFlag("IS_NODE",(()=>void 0!==q&&void 0!==q.versions&&void 0!==q.versions.node)),yr.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),yr.registerFlag("PROD",(()=>!1)),yr.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>yr.getBool("DEBUG"))),yr.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),yr.registerFlag("IS_TEST",(()=>!1));for(var br=function(t){var e,n,r=function(t){var e=t.length;if(e%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var n=t.indexOf("=");-1===n&&(n=e);return[n,n===e?0:4-n%4]}(t),s=r[0],a=r[1],i=new Ir(function(t,e,n){return 3*(e+n)/4-n}(0,s,a)),o=0,u=a>0?s-4:s;for(n=0;n<u;n+=4)e=vr[t.charCodeAt(n)]<<18|vr[t.charCodeAt(n+1)]<<12|vr[t.charCodeAt(n+2)]<<6|vr[t.charCodeAt(n+3)],i[o++]=e>>16&255,i[o++]=e>>8&255,i[o++]=255&e;2===a&&(e=vr[t.charCodeAt(n)]<<2|vr[t.charCodeAt(n+1)]>>4,i[o++]=255&e);1===a&&(e=vr[t.charCodeAt(n)]<<10|vr[t.charCodeAt(n+1)]<<4|vr[t.charCodeAt(n+2)]>>2,i[o++]=e>>8&255,i[o++]=255&e);return i},xr=function(t){for(var e,n=t.length,r=n%3,s=[],a=16383,i=0,o=n-r;i<o;i+=a)s.push(Er(t,i,i+a>o?o:i+a));1===r?(e=t[n-1],s.push(wr[e>>2]+wr[e<<4&63]+"==")):2===r&&(e=(t[n-2]<<8)+t[n-1],s.push(wr[e>>10]+wr[e>>4&63]+wr[e<<2&63]+"="));return s.join("")},wr=[],vr=[],Ir="undefined"!=typeof Uint8Array?Uint8Array:Array,kr="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",Nr=0,Sr=kr.length;Nr<Sr;++Nr)wr[Nr]=kr[Nr],vr[kr.charCodeAt(Nr)]=Nr;function Er(t,e,n){for(var r,s,a=[],i=e;i<n;i+=3)r=(t[i]<<16&16711680)+(t[i+1]<<8&65280)+(255&t[i+2]),a.push(wr[(s=r)>>18&63]+wr[s>>12&63]+wr[s>>6&63]+wr[63&s]);return a.join("")}vr["-".charCodeAt(0)]=62,vr["_".charCodeAt(0)]=63;var Cr=function(t,e,n,r,s){var a,i,o=8*s-r-1,u=(1<<o)-1,l=u>>1,c=-7,h=n?s-1:0,p=n?-1:1,d=t[e+h];for(h+=p,a=d&(1<<-c)-1,d>>=-c,c+=o;c>0;a=256*a+t[e+h],h+=p,c-=8);for(i=a&(1<<-c)-1,a>>=-c,c+=r;c>0;i=256*i+t[e+h],h+=p,c-=8);if(0===a)a=1-l;else{if(a===u)return i?NaN:1/0*(d?-1:1);i+=Math.pow(2,r),a-=l}return(d?-1:1)*i*Math.pow(2,a-r)},$r=function(t,e,n,r,s,a){var i,o,u,l=8*a-s-1,c=(1<<l)-1,h=c>>1,p=23===s?Math.pow(2,-24)-Math.pow(2,-77):0,d=r?0:a-1,f=r?1:-1,m=e<0||0===e&&1/e<0?1:0;for(e=Math.abs(e),isNaN(e)||e===1/0?(o=isNaN(e)?1:0,i=c):(i=Math.floor(Math.log(e)/Math.LN2),e*(u=Math.pow(2,-i))<1&&(i--,u*=2),(e+=i+h>=1?p/u:p*Math.pow(2,1-h))*u>=2&&(i++,u/=2),i+h>=c?(o=0,i=c):i+h>=1?(o=(e*u-1)*Math.pow(2,s),i+=h):(o=e*Math.pow(2,h-1)*Math.pow(2,s),i=0));s>=8;t[n+d]=255&o,d+=f,o/=256,s-=8);for(i=i<<s|o,l+=s;l>0;t[n+d]=255&i,d+=f,i/=256,l-=8);t[n+d-f]|=128*m},Tr="function"==typeof Symbol&&"function"==typeof Symbol.for?Symbol.for("nodejs.util.inspect.custom"):null,Ar=Dr,Rr=2147483647;function _r(t){if(t>Rr)throw new RangeError('The value "'+t+'" is invalid for option "size"');var e=new Uint8Array(t);return Object.setPrototypeOf(e,Dr.prototype),e}function Dr(t,e,n){if("number"==typeof t){if("string"==typeof e)throw new TypeError('The "string" argument must be of type string. Received type number');return Or(t)}return Mr(t,e,n)}function Mr(t,e,n){if("string"==typeof t)return function(t,e){"string"==typeof e&&""!==e||(e="utf8");if(!Dr.isEncoding(e))throw new TypeError("Unknown encoding: "+e);var n=0|Pr(t,e),r=_r(n),s=r.write(t,e);s!==n&&(r=r.slice(0,s));return r}(t,e);if(ArrayBuffer.isView(t))return function(t){if(ps(t,Uint8Array)){var e=new Uint8Array(t);return Br(e.buffer,e.byteOffset,e.byteLength)}return Lr(t)}(t);if(null==t)throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof t);if(ps(t,ArrayBuffer)||t&&ps(t.buffer,ArrayBuffer))return Br(t,e,n);if("undefined"!=typeof SharedArrayBuffer&&(ps(t,SharedArrayBuffer)||t&&ps(t.buffer,SharedArrayBuffer)))return Br(t,e,n);if("number"==typeof t)throw new TypeError('The "value" argument must not be of type number. Received type number');var r=t.valueOf&&t.valueOf();if(null!=r&&r!==t)return Dr.from(r,e,n);var s=function(t){if(Dr.isBuffer(t)){var e=0|zr(t.length),n=_r(e);return 0===n.length||t.copy(n,0,0,e),n}if(void 0!==t.length)return"number"!=typeof t.length||ds(t.length)?_r(0):Lr(t);if("Buffer"===t.type&&Array.isArray(t.data))return Lr(t.data)}(t);if(s)return s;if("undefined"!=typeof Symbol&&null!=Symbol.toPrimitive&&"function"==typeof t[Symbol.toPrimitive])return Dr.from(t[Symbol.toPrimitive]("string"),e,n);throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof t)}function Fr(t){if("number"!=typeof t)throw new TypeError('"size" argument must be of type number');if(t<0)throw new RangeError('The value "'+t+'" is invalid for option "size"')}function Or(t){return Fr(t),_r(t<0?0:0|zr(t))}function Lr(t){for(var e=t.length<0?0:0|zr(t.length),n=_r(e),r=0;r<e;r+=1)n[r]=255&t[r];return n}function Br(t,e,n){if(e<0||t.byteLength<e)throw new RangeError('"offset" is outside of buffer bounds');if(t.byteLength<e+(n||0))throw new RangeError('"length" is outside of buffer bounds');var r;return r=void 0===e&&void 0===n?new Uint8Array(t):void 0===n?new Uint8Array(t,e):new Uint8Array(t,e,n),Object.setPrototypeOf(r,Dr.prototype),r}function zr(t){if(t>=Rr)throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+Rr.toString(16)+" bytes");return 0|t}function Pr(t,e){if(Dr.isBuffer(t))return t.length;if(ArrayBuffer.isView(t)||ps(t,ArrayBuffer))return t.byteLength;if("string"!=typeof t)throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof t);var n=t.length,r=arguments.length>2&&!0===arguments[2];if(!r&&0===n)return 0;for(var s=!1;;)switch(e){case"ascii":case"latin1":case"binary":return n;case"utf8":case"utf-8":return ls(t).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*n;case"hex":return n>>>1;case"base64":return cs(t).length;default:if(s)return r?-1:ls(t).length;e=(""+e).toLowerCase(),s=!0}}function Wr(t,e,n){var r=!1;if((void 0===e||e<0)&&(e=0),e>this.length)return"";if((void 0===n||n>this.length)&&(n=this.length),n<=0)return"";if((n>>>=0)<=(e>>>=0))return"";for(t||(t="utf8");;)switch(t){case"hex":return es(this,e,n);case"utf8":case"utf-8":return Jr(this,e,n);case"ascii":return Qr(this,e,n);case"latin1":case"binary":return ts(this,e,n);case"base64":return Yr(this,e,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return ns(this,e,n);default:if(r)throw new TypeError("Unknown encoding: "+t);t=(t+"").toLowerCase(),r=!0}}function Vr(t,e,n){var r=t[e];t[e]=t[n],t[n]=r}function Ur(t,e,n,r,s){if(0===t.length)return-1;if("string"==typeof n?(r=n,n=0):n>2147483647?n=2147483647:n<-2147483648&&(n=-2147483648),ds(n=+n)&&(n=s?0:t.length-1),n<0&&(n=t.length+n),n>=t.length){if(s)return-1;n=t.length-1}else if(n<0){if(!s)return-1;n=0}if("string"==typeof e&&(e=Dr.from(e,r)),Dr.isBuffer(e))return 0===e.length?-1:Gr(t,e,n,r,s);if("number"==typeof e)return e&=255,"function"==typeof Uint8Array.prototype.indexOf?s?Uint8Array.prototype.indexOf.call(t,e,n):Uint8Array.prototype.lastIndexOf.call(t,e,n):Gr(t,[e],n,r,s);throw new TypeError("val must be string, number or Buffer")}function Gr(t,e,n,r,s){var a,i=1,o=t.length,u=e.length;if(void 0!==r&&("ucs2"===(r=String(r).toLowerCase())||"ucs-2"===r||"utf16le"===r||"utf-16le"===r)){if(t.length<2||e.length<2)return-1;i=2,o/=2,u/=2,n/=2}function l(t,e){return 1===i?t[e]:t.readUInt16BE(e*i)}if(s){var c=-1;for(a=n;a<o;a++)if(l(t,a)===l(e,-1===c?0:a-c)){if(-1===c&&(c=a),a-c+1===u)return c*i}else-1!==c&&(a-=a-c),c=-1}else for(n+u>o&&(n=o-u),a=n;a>=0;a--){for(var h=!0,p=0;p<u;p++)if(l(t,a+p)!==l(e,p)){h=!1;break}if(h)return a}return-1}function Hr(t,e,n,r){n=Number(n)||0;var s=t.length-n;r?(r=Number(r))>s&&(r=s):r=s;var a=e.length;r>a/2&&(r=a/2);for(var i=0;i<r;++i){var o=parseInt(e.substr(2*i,2),16);if(ds(o))return i;t[n+i]=o}return i}function jr(t,e,n,r){return hs(ls(e,t.length-n),t,n,r)}function qr(t,e,n,r){return hs(function(t){for(var e=[],n=0;n<t.length;++n)e.push(255&t.charCodeAt(n));return e}(e),t,n,r)}function Kr(t,e,n,r){return hs(cs(e),t,n,r)}function Xr(t,e,n,r){return hs(function(t,e){for(var n,r,s,a=[],i=0;i<t.length&&!((e-=2)<0);++i)r=(n=t.charCodeAt(i))>>8,s=n%256,a.push(s),a.push(r);return a}(e,t.length-n),t,n,r)}function Yr(t,e,n){return 0===e&&n===t.length?xr(t):xr(t.slice(e,n))}function Jr(t,e,n){n=Math.min(t.length,n);for(var r=[],s=e;s<n;){var a,i,o,u,l=t[s],c=null,h=l>239?4:l>223?3:l>191?2:1;if(s+h<=n)switch(h){case 1:l<128&&(c=l);break;case 2:128==(192&(a=t[s+1]))&&(u=(31&l)<<6|63&a)>127&&(c=u);break;case 3:a=t[s+1],i=t[s+2],128==(192&a)&&128==(192&i)&&(u=(15&l)<<12|(63&a)<<6|63&i)>2047&&(u<55296||u>57343)&&(c=u);break;case 4:a=t[s+1],i=t[s+2],o=t[s+3],128==(192&a)&&128==(192&i)&&128==(192&o)&&(u=(15&l)<<18|(63&a)<<12|(63&i)<<6|63&o)>65535&&u<1114112&&(c=u)}null===c?(c=65533,h=1):c>65535&&(c-=65536,r.push(c>>>10&1023|55296),c=56320|1023&c),r.push(c),s+=h}return function(t){var e=t.length;if(e<=Zr)return String.fromCharCode.apply(String,t);var n="",r=0;for(;r<e;)n+=String.fromCharCode.apply(String,t.slice(r,r+=Zr));return n}(r)}Dr.TYPED_ARRAY_SUPPORT=function(){try{var t=new Uint8Array(1),e={foo:function(){return 42}};return Object.setPrototypeOf(e,Uint8Array.prototype),Object.setPrototypeOf(t,e),42===t.foo()}catch(t){return!1}}(),Dr.TYPED_ARRAY_SUPPORT||"undefined"==typeof console||"function"!=typeof console.error||console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."),Object.defineProperty(Dr.prototype,"parent",{enumerable:!0,get:function(){if(Dr.isBuffer(this))return this.buffer}}),Object.defineProperty(Dr.prototype,"offset",{enumerable:!0,get:function(){if(Dr.isBuffer(this))return this.byteOffset}}),Dr.poolSize=8192,Dr.from=function(t,e,n){return Mr(t,e,n)},Object.setPrototypeOf(Dr.prototype,Uint8Array.prototype),Object.setPrototypeOf(Dr,Uint8Array),Dr.alloc=function(t,e,n){return function(t,e,n){return Fr(t),t<=0?_r(t):void 0!==e?"string"==typeof n?_r(t).fill(e,n):_r(t).fill(e):_r(t)}(t,e,n)},Dr.allocUnsafe=function(t){return Or(t)},Dr.allocUnsafeSlow=function(t){return Or(t)},Dr.isBuffer=function(t){return null!=t&&!0===t._isBuffer&&t!==Dr.prototype},Dr.compare=function(t,e){if(ps(t,Uint8Array)&&(t=Dr.from(t,t.offset,t.byteLength)),ps(e,Uint8Array)&&(e=Dr.from(e,e.offset,e.byteLength)),!Dr.isBuffer(t)||!Dr.isBuffer(e))throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(t===e)return 0;for(var n=t.length,r=e.length,s=0,a=Math.min(n,r);s<a;++s)if(t[s]!==e[s]){n=t[s],r=e[s];break}return n<r?-1:r<n?1:0},Dr.isEncoding=function(t){switch(String(t).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},Dr.concat=function(t,e){if(!Array.isArray(t))throw new TypeError('"list" argument must be an Array of Buffers');if(0===t.length)return Dr.alloc(0);var n;if(void 0===e)for(e=0,n=0;n<t.length;++n)e+=t[n].length;var r=Dr.allocUnsafe(e),s=0;for(n=0;n<t.length;++n){var a=t[n];if(ps(a,Uint8Array))s+a.length>r.length?Dr.from(a).copy(r,s):Uint8Array.prototype.set.call(r,a,s);else{if(!Dr.isBuffer(a))throw new TypeError('"list" argument must be an Array of Buffers');a.copy(r,s)}s+=a.length}return r},Dr.byteLength=Pr,Dr.prototype._isBuffer=!0,Dr.prototype.swap16=function(){var t=this.length;if(t%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var e=0;e<t;e+=2)Vr(this,e,e+1);return this},Dr.prototype.swap32=function(){var t=this.length;if(t%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var e=0;e<t;e+=4)Vr(this,e,e+3),Vr(this,e+1,e+2);return this},Dr.prototype.swap64=function(){var t=this.length;if(t%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var e=0;e<t;e+=8)Vr(this,e,e+7),Vr(this,e+1,e+6),Vr(this,e+2,e+5),Vr(this,e+3,e+4);return this},Dr.prototype.toString=function(){var t=this.length;return 0===t?"":0===arguments.length?Jr(this,0,t):Wr.apply(this,arguments)},Dr.prototype.toLocaleString=Dr.prototype.toString,Dr.prototype.equals=function(t){if(!Dr.isBuffer(t))throw new TypeError("Argument must be a Buffer");return this===t||0===Dr.compare(this,t)},Dr.prototype.inspect=function(){var t="";return t=this.toString("hex",0,50).replace(/(.{2})/g,"$1 ").trim(),this.length>50&&(t+=" ... "),"<Buffer "+t+">"},Tr&&(Dr.prototype[Tr]=Dr.prototype.inspect),Dr.prototype.compare=function(t,e,n,r,s){if(ps(t,Uint8Array)&&(t=Dr.from(t,t.offset,t.byteLength)),!Dr.isBuffer(t))throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof t);if(void 0===e&&(e=0),void 0===n&&(n=t?t.length:0),void 0===r&&(r=0),void 0===s&&(s=this.length),e<0||n>t.length||r<0||s>this.length)throw new RangeError("out of range index");if(r>=s&&e>=n)return 0;if(r>=s)return-1;if(e>=n)return 1;if(this===t)return 0;for(var a=(s>>>=0)-(r>>>=0),i=(n>>>=0)-(e>>>=0),o=Math.min(a,i),u=this.slice(r,s),l=t.slice(e,n),c=0;c<o;++c)if(u[c]!==l[c]){a=u[c],i=l[c];break}return a<i?-1:i<a?1:0},Dr.prototype.includes=function(t,e,n){return-1!==this.indexOf(t,e,n)},Dr.prototype.indexOf=function(t,e,n){return Ur(this,t,e,n,!0)},Dr.prototype.lastIndexOf=function(t,e,n){return Ur(this,t,e,n,!1)},Dr.prototype.write=function(t,e,n,r){if(void 0===e)r="utf8",n=this.length,e=0;else if(void 0===n&&"string"==typeof e)r=e,n=this.length,e=0;else{if(!isFinite(e))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");e>>>=0,isFinite(n)?(n>>>=0,void 0===r&&(r="utf8")):(r=n,n=void 0)}var s=this.length-e;if((void 0===n||n>s)&&(n=s),t.length>0&&(n<0||e<0)||e>this.length)throw new RangeError("Attempt to write outside buffer bounds");r||(r="utf8");for(var a=!1;;)switch(r){case"hex":return Hr(this,t,e,n);case"utf8":case"utf-8":return jr(this,t,e,n);case"ascii":case"latin1":case"binary":return qr(this,t,e,n);case"base64":return Kr(this,t,e,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return Xr(this,t,e,n);default:if(a)throw new TypeError("Unknown encoding: "+r);r=(""+r).toLowerCase(),a=!0}},Dr.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};var Zr=4096;function Qr(t,e,n){var r="";n=Math.min(t.length,n);for(var s=e;s<n;++s)r+=String.fromCharCode(127&t[s]);return r}function ts(t,e,n){var r="";n=Math.min(t.length,n);for(var s=e;s<n;++s)r+=String.fromCharCode(t[s]);return r}function es(t,e,n){var r=t.length;(!e||e<0)&&(e=0),(!n||n<0||n>r)&&(n=r);for(var s="",a=e;a<n;++a)s+=fs[t[a]];return s}function ns(t,e,n){for(var r=t.slice(e,n),s="",a=0;a<r.length-1;a+=2)s+=String.fromCharCode(r[a]+256*r[a+1]);return s}function rs(t,e,n){if(t%1!=0||t<0)throw new RangeError("offset is not uint");if(t+e>n)throw new RangeError("Trying to access beyond buffer length")}function ss(t,e,n,r,s,a){if(!Dr.isBuffer(t))throw new TypeError('"buffer" argument must be a Buffer instance');if(e>s||e<a)throw new RangeError('"value" argument is out of bounds');if(n+r>t.length)throw new RangeError("Index out of range")}function as(t,e,n,r,s,a){if(n+r>t.length)throw new RangeError("Index out of range");if(n<0)throw new RangeError("Index out of range")}function is(t,e,n,r,s){return e=+e,n>>>=0,s||as(t,0,n,4),$r(t,e,n,r,23,4),n+4}function os(t,e,n,r,s){return e=+e,n>>>=0,s||as(t,0,n,8),$r(t,e,n,r,52,8),n+8}Dr.prototype.slice=function(t,e){var n=this.length;(t=~~t)<0?(t+=n)<0&&(t=0):t>n&&(t=n),(e=void 0===e?n:~~e)<0?(e+=n)<0&&(e=0):e>n&&(e=n),e<t&&(e=t);var r=this.subarray(t,e);return Object.setPrototypeOf(r,Dr.prototype),r},Dr.prototype.readUintLE=Dr.prototype.readUIntLE=function(t,e,n){t>>>=0,e>>>=0,n||rs(t,e,this.length);for(var r=this[t],s=1,a=0;++a<e&&(s*=256);)r+=this[t+a]*s;return r},Dr.prototype.readUintBE=Dr.prototype.readUIntBE=function(t,e,n){t>>>=0,e>>>=0,n||rs(t,e,this.length);for(var r=this[t+--e],s=1;e>0&&(s*=256);)r+=this[t+--e]*s;return r},Dr.prototype.readUint8=Dr.prototype.readUInt8=function(t,e){return t>>>=0,e||rs(t,1,this.length),this[t]},Dr.prototype.readUint16LE=Dr.prototype.readUInt16LE=function(t,e){return t>>>=0,e||rs(t,2,this.length),this[t]|this[t+1]<<8},Dr.prototype.readUint16BE=Dr.prototype.readUInt16BE=function(t,e){return t>>>=0,e||rs(t,2,this.length),this[t]<<8|this[t+1]},Dr.prototype.readUint32LE=Dr.prototype.readUInt32LE=function(t,e){return t>>>=0,e||rs(t,4,this.length),(this[t]|this[t+1]<<8|this[t+2]<<16)+16777216*this[t+3]},Dr.prototype.readUint32BE=Dr.prototype.readUInt32BE=function(t,e){return t>>>=0,e||rs(t,4,this.length),16777216*this[t]+(this[t+1]<<16|this[t+2]<<8|this[t+3])},Dr.prototype.readIntLE=function(t,e,n){t>>>=0,e>>>=0,n||rs(t,e,this.length);for(var r=this[t],s=1,a=0;++a<e&&(s*=256);)r+=this[t+a]*s;return r>=(s*=128)&&(r-=Math.pow(2,8*e)),r},Dr.prototype.readIntBE=function(t,e,n){t>>>=0,e>>>=0,n||rs(t,e,this.length);for(var r=e,s=1,a=this[t+--r];r>0&&(s*=256);)a+=this[t+--r]*s;return a>=(s*=128)&&(a-=Math.pow(2,8*e)),a},Dr.prototype.readInt8=function(t,e){return t>>>=0,e||rs(t,1,this.length),128&this[t]?-1*(255-this[t]+1):this[t]},Dr.prototype.readInt16LE=function(t,e){t>>>=0,e||rs(t,2,this.length);var n=this[t]|this[t+1]<<8;return 32768&n?4294901760|n:n},Dr.prototype.readInt16BE=function(t,e){t>>>=0,e||rs(t,2,this.length);var n=this[t+1]|this[t]<<8;return 32768&n?4294901760|n:n},Dr.prototype.readInt32LE=function(t,e){return t>>>=0,e||rs(t,4,this.length),this[t]|this[t+1]<<8|this[t+2]<<16|this[t+3]<<24},Dr.prototype.readInt32BE=function(t,e){return t>>>=0,e||rs(t,4,this.length),this[t]<<24|this[t+1]<<16|this[t+2]<<8|this[t+3]},Dr.prototype.readFloatLE=function(t,e){return t>>>=0,e||rs(t,4,this.length),Cr(this,t,!0,23,4)},Dr.prototype.readFloatBE=function(t,e){return t>>>=0,e||rs(t,4,this.length),Cr(this,t,!1,23,4)},Dr.prototype.readDoubleLE=function(t,e){return t>>>=0,e||rs(t,8,this.length),Cr(this,t,!0,52,8)},Dr.prototype.readDoubleBE=function(t,e){return t>>>=0,e||rs(t,8,this.length),Cr(this,t,!1,52,8)},Dr.prototype.writeUintLE=Dr.prototype.writeUIntLE=function(t,e,n,r){(t=+t,e>>>=0,n>>>=0,r)||ss(this,t,e,n,Math.pow(2,8*n)-1,0);var s=1,a=0;for(this[e]=255&t;++a<n&&(s*=256);)this[e+a]=t/s&255;return e+n},Dr.prototype.writeUintBE=Dr.prototype.writeUIntBE=function(t,e,n,r){(t=+t,e>>>=0,n>>>=0,r)||ss(this,t,e,n,Math.pow(2,8*n)-1,0);var s=n-1,a=1;for(this[e+s]=255&t;--s>=0&&(a*=256);)this[e+s]=t/a&255;return e+n},Dr.prototype.writeUint8=Dr.prototype.writeUInt8=function(t,e,n){return t=+t,e>>>=0,n||ss(this,t,e,1,255,0),this[e]=255&t,e+1},Dr.prototype.writeUint16LE=Dr.prototype.writeUInt16LE=function(t,e,n){return t=+t,e>>>=0,n||ss(this,t,e,2,65535,0),this[e]=255&t,this[e+1]=t>>>8,e+2},Dr.prototype.writeUint16BE=Dr.prototype.writeUInt16BE=function(t,e,n){return t=+t,e>>>=0,n||ss(this,t,e,2,65535,0),this[e]=t>>>8,this[e+1]=255&t,e+2},Dr.prototype.writeUint32LE=Dr.prototype.writeUInt32LE=function(t,e,n){return t=+t,e>>>=0,n||ss(this,t,e,4,4294967295,0),this[e+3]=t>>>24,this[e+2]=t>>>16,this[e+1]=t>>>8,this[e]=255&t,e+4},Dr.prototype.writeUint32BE=Dr.prototype.writeUInt32BE=function(t,e,n){return t=+t,e>>>=0,n||ss(this,t,e,4,4294967295,0),this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=255&t,e+4},Dr.prototype.writeIntLE=function(t,e,n,r){if(t=+t,e>>>=0,!r){var s=Math.pow(2,8*n-1);ss(this,t,e,n,s-1,-s)}var a=0,i=1,o=0;for(this[e]=255&t;++a<n&&(i*=256);)t<0&&0===o&&0!==this[e+a-1]&&(o=1),this[e+a]=(t/i>>0)-o&255;return e+n},Dr.prototype.writeIntBE=function(t,e,n,r){if(t=+t,e>>>=0,!r){var s=Math.pow(2,8*n-1);ss(this,t,e,n,s-1,-s)}var a=n-1,i=1,o=0;for(this[e+a]=255&t;--a>=0&&(i*=256);)t<0&&0===o&&0!==this[e+a+1]&&(o=1),this[e+a]=(t/i>>0)-o&255;return e+n},Dr.prototype.writeInt8=function(t,e,n){return t=+t,e>>>=0,n||ss(this,t,e,1,127,-128),t<0&&(t=255+t+1),this[e]=255&t,e+1},Dr.prototype.writeInt16LE=function(t,e,n){return t=+t,e>>>=0,n||ss(this,t,e,2,32767,-32768),this[e]=255&t,this[e+1]=t>>>8,e+2},Dr.prototype.writeInt16BE=function(t,e,n){return t=+t,e>>>=0,n||ss(this,t,e,2,32767,-32768),this[e]=t>>>8,this[e+1]=255&t,e+2},Dr.prototype.writeInt32LE=function(t,e,n){return t=+t,e>>>=0,n||ss(this,t,e,4,2147483647,-2147483648),this[e]=255&t,this[e+1]=t>>>8,this[e+2]=t>>>16,this[e+3]=t>>>24,e+4},Dr.prototype.writeInt32BE=function(t,e,n){return t=+t,e>>>=0,n||ss(this,t,e,4,2147483647,-2147483648),t<0&&(t=4294967295+t+1),this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=255&t,e+4},Dr.prototype.writeFloatLE=function(t,e,n){return is(this,t,e,!0,n)},Dr.prototype.writeFloatBE=function(t,e,n){return is(this,t,e,!1,n)},Dr.prototype.writeDoubleLE=function(t,e,n){return os(this,t,e,!0,n)},Dr.prototype.writeDoubleBE=function(t,e,n){return os(this,t,e,!1,n)},Dr.prototype.copy=function(t,e,n,r){if(!Dr.isBuffer(t))throw new TypeError("argument should be a Buffer");if(n||(n=0),r||0===r||(r=this.length),e>=t.length&&(e=t.length),e||(e=0),r>0&&r<n&&(r=n),r===n)return 0;if(0===t.length||0===this.length)return 0;if(e<0)throw new RangeError("targetStart out of bounds");if(n<0||n>=this.length)throw new RangeError("Index out of range");if(r<0)throw new RangeError("sourceEnd out of bounds");r>this.length&&(r=this.length),t.length-e<r-n&&(r=t.length-e+n);var s=r-n;return this===t&&"function"==typeof Uint8Array.prototype.copyWithin?this.copyWithin(e,n,r):Uint8Array.prototype.set.call(t,this.subarray(n,r),e),s},Dr.prototype.fill=function(t,e,n,r){if("string"==typeof t){if("string"==typeof e?(r=e,e=0,n=this.length):"string"==typeof n&&(r=n,n=this.length),void 0!==r&&"string"!=typeof r)throw new TypeError("encoding must be a string");if("string"==typeof r&&!Dr.isEncoding(r))throw new TypeError("Unknown encoding: "+r);if(1===t.length){var s=t.charCodeAt(0);("utf8"===r&&s<128||"latin1"===r)&&(t=s)}}else"number"==typeof t?t&=255:"boolean"==typeof t&&(t=Number(t));if(e<0||this.length<e||this.length<n)throw new RangeError("Out of range index");if(n<=e)return this;var a;if(e>>>=0,n=void 0===n?this.length:n>>>0,t||(t=0),"number"==typeof t)for(a=e;a<n;++a)this[a]=t;else{var i=Dr.isBuffer(t)?t:Dr.from(t,r),o=i.length;if(0===o)throw new TypeError('The value "'+t+'" is invalid for argument "value"');for(a=0;a<n-e;++a)this[a+e]=i[a%o]}return this};var us=/[^+/0-9A-Za-z-_]/g;function ls(t,e){var n;e=e||1/0;for(var r=t.length,s=null,a=[],i=0;i<r;++i){if((n=t.charCodeAt(i))>55295&&n<57344){if(!s){if(n>56319){(e-=3)>-1&&a.push(239,191,189);continue}if(i+1===r){(e-=3)>-1&&a.push(239,191,189);continue}s=n;continue}if(n<56320){(e-=3)>-1&&a.push(239,191,189),s=n;continue}n=65536+(s-55296<<10|n-56320)}else s&&(e-=3)>-1&&a.push(239,191,189);if(s=null,n<128){if((e-=1)<0)break;a.push(n)}else if(n<2048){if((e-=2)<0)break;a.push(n>>6|192,63&n|128)}else if(n<65536){if((e-=3)<0)break;a.push(n>>12|224,n>>6&63|128,63&n|128)}else{if(!(n<1114112))throw new Error("Invalid code point");if((e-=4)<0)break;a.push(n>>18|240,n>>12&63|128,n>>6&63|128,63&n|128)}}return a}function cs(t){return br(function(t){if((t=(t=t.split("=")[0]).trim().replace(us,"")).length<2)return"";for(;t.length%4!=0;)t+="=";return t}(t))}function hs(t,e,n,r){for(var s=0;s<r&&!(s+n>=e.length||s>=t.length);++s)e[s+n]=t[s];return s}function ps(t,e){return t instanceof e||null!=t&&null!=t.constructor&&null!=t.constructor.name&&t.constructor.name===e.name}function ds(t){return t!=t}var fs=function(){for(var t="0123456789abcdef",e=new Array(256),n=0;n<16;++n)for(var r=16*n,s=0;s<16;++s)e[r+s]=t[n]+t[s];return e}();function ms(t,e){let n=t;if(N(t))return"string"===e?[]:[t.length];if(!Array.isArray(t))return[];const r=[];for(;Array.isArray(n)||N(n)&&"string"!==e;)r.push(n.length),n=n[0];return Array.isArray(t)&&U().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&gs(t,r,[]),r}function gs(t,e,n){if(n=n||[],!Array.isArray(t)&&!N(t))return void u(0===e.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${e[0]} elements`));u(e.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${t.length} elements`)),u(t.length===e[0],(()=>`Element arr[${n.join("][")}] should have ${e[0]} elements, but has ${t.length} elements`));const r=e.slice(1);for(let e=0;e<t.length;++e)gs(t[e],r,n.concat(e))}function ys(t,e,n,r){if(null!=t&&("numeric"!==t&&t!==e||"numeric"===t&&"string"===e))throw new Error(`Argument '${n}' passed to '${r}' must be ${t} tensor, but got ${e} tensor`)}function bs(t,e,n,r="numeric"){if(t instanceof Hn)return ys(r,t.dtype,e,n),t;let s=$(t);if("string"!==s&&["bool","int32","float32"].indexOf(r)>=0&&(s=r),ys(r,s,e,n),null==t||!N(t)&&!Array.isArray(t)&&"number"!=typeof t&&"boolean"!=typeof t&&"string"!=typeof t){const r=null==t?"null":t.constructor.name;throw new Error(`Argument '${e}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const a=ms(t,s);N(t)||Array.isArray(t)||(t=[t]);const i="string"!==s?Tn(t,s):h(t,[],!0);return dr.makeTensor(i,a,s)}function xs(t,e,n,r="numeric"){if(!Array.isArray(t))throw new Error(`Argument ${e} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return t.map(((t,r)=>bs(t,`${e}[${r}]`,n)),r)}function ws(t){const e=Object.keys(t);if(1!==e.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${e.length} keys.`);let n=e[0];const r=t[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+="__op";const s=(...t)=>{dr.startScope(n);try{const e=r(...t);return P(e)&&console.error("Cannot return a Promise inside of tidy."),dr.endScope(e),e}catch(t){throw dr.endScope(null),t}};return Object.defineProperty(s,"name",{value:n,configurable:!0}),s}const vs=ws({complex_:function(t,e){const n=bs(t,"real","complex"),r=bs(e,"imag","complex");l(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);const s={real:n,imag:r};return dr.runKernelFunc((t=>t.complex(n,r)),s,null,At)}});function Is(t,e,n,r){if(null==r&&(r=$(t)),"complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!N(t)&&!Array.isArray(t)&&"number"!=typeof t&&"boolean"!=typeof t&&"string"!=typeof t)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=e){L(e);const t=p(e),r=p(n);u(t===r,(()=>`Based on the provided shape, [${e}], the tensor should have ${t} values but has ${r}`));for(let t=0;t<n.length;++t){const r=n[t],s=t!==n.length-1||r!==p(e.slice(t));u(n[t]===e[t]||!s,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${e}). `))}}return N(t)||Array.isArray(t)||(t=[t]),e=e||n,t="string"!==r?Tn(t,r):h(t,[],!0),dr.makeTensor(t,e,r)}function ks(t,e,n){return Is(t,e,ms(t,n),n)}const Ns={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};var Ss=Ar;async function Es(t,e){const n=[],r=[],s=Array.isArray(t)?t.map((t=>t.name)):Object.keys(t);for(let a=0;a<s.length;++a){const i=s[a],o=Array.isArray(t)?t[a].tensor:t[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);const u={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const t=new Promise((async t=>{const e=await o.bytes(),n=e.reduce(((t,e)=>t+e.length),0)+4*e.length,r=new Uint8Array(n);let s=0;for(let t=0;t<e.length;t++){const n=e[t],a=new Uint8Array(new Uint32Array([n.length]).buffer);r.set(a,s),s+=4,r.set(n,s),s+=n.length}t(r)}));r.push(t)}else r.push(o.data());null!=e&&(u.group=e),n.push(u)}return{data:Cs(await Promise.all(r)),specs:n}}function Cs(t){if(null===t)throw new Error(`Invalid input value: ${JSON.stringify(t)}`);let e=0;const n=[];t.forEach((t=>{if(e+=t.byteLength,n.push(t.byteLength===t.buffer.byteLength?t:new t.constructor(t)),!(t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${t.constructor.name}`)}));const r=new Uint8Array(e);let s=0;return n.forEach((t=>{r.set(new Uint8Array(t.buffer),s),s+=t.byteLength})),r.buffer}const $s=void 0!==Ss&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function Ts(t){return $s?Ss.byteLength(t):new Blob([t]).size}function As(t){if(1===t.length)return t[0];let e=0;t.forEach((t=>{e+=t.byteLength}));const n=new Uint8Array(e);let r=0;return t.forEach((t=>{n.set(new Uint8Array(t),r),r+=t.byteLength})),n.buffer}function Rs(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==t.modelTopology?0:Ts(JSON.stringify(t.modelTopology)),weightSpecsBytes:null==t.weightSpecs?0:Ts(JSON.stringify(t.weightSpecs)),weightDataBytes:null==t.weightData?0:t.weightData.byteLength}}function _s(){const t=function(){const t=t=>{let e=t<<13,n=0;for(;0==(8388608&e);)n-=8388608,e<<=1;return e&=-8388609,n+=947912704,e|n},e=new Uint32Array(2048);e[0]=0;for(let n=1;n<1024;n++)e[n]=t(n);for(let t=1024;t<2048;t++)e[t]=939524096+(t-1024<<13);return e}(),e=function(){const t=new Uint32Array(64);t[0]=0,t[31]=1199570944,t[32]=2147483648,t[63]=3347054592;for(let e=1;e<31;e++)t[e]=e<<23;for(let e=33;e<63;e++)t[e]=2147483648+(e-32<<23);return t}(),n=function(){const t=new Uint32Array(64);for(let e=0;e<64;e++)t[e]=1024;return t[0]=t[32]=0,t}();return r=>{const s=new ArrayBuffer(4*r.length),a=new Uint32Array(s);for(let s=0;s<r.length;s++){const i=r[s],o=t[n[i>>10]+(1023&i)]+e[i>>10];a[s]=o}return new Float32Array(s)}}class Ds{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==Ds.instance&&(Ds.instance=new Ds),Ds.instance}static registerSaveRouter(t){Ds.getInstance().saveRouters.push(t)}static registerLoadRouter(t){Ds.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return Ds.getHandlers(t,"save")}static getLoadHandlers(t,e){return Ds.getHandlers(t,"load",e)}static getHandlers(t,e,n){const r=[];return("load"===e?Ds.getInstance().loadRouters:Ds.getInstance().saveRouters).forEach((e=>{const s=e(t,n);null!==s&&r.push(s)})),r}}const Ms=t=>Ds.getSaveHandlers(t),Fs="tensorflowjs",Os="models_store",Ls="model_info_store";function Bs(){if(!U().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const t="undefined"==typeof window?self:window,e=t.indexedDB||t.mozIndexedDB||t.webkitIndexedDB||t.msIndexedDB||t.shimIndexedDB;if(null==e)throw new Error("The current browser does not appear to support IndexedDB.");return e}function zs(t){const e=t.result;e.createObjectStore(Os,{keyPath:"modelPath"}),e.createObjectStore(Ls,{keyPath:"modelPath"})}class Ps{constructor(t){if(this.indexedDB=Bs(),null==t||!t)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=t}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,t)}async load(){return this.databaseAction(this.modelPath)}databaseAction(t,e){return new Promise(((t,n)=>{const r=this.indexedDB.open(Fs,1);r.onupgradeneeded=()=>zs(r),r.onsuccess=()=>{const s=r.result;if(null==e){const e=s.transaction(Os,"readonly"),r=e.objectStore(Os).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return s.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));t(r.result.modelArtifacts)},r.onerror=t=>(s.close(),n(r.error)),e.oncomplete=()=>s.close()}else{const r=Rs(e),a=s.transaction(Ls,"readwrite");let i=a.objectStore(Ls);const o=i.put({modelPath:this.modelPath,modelArtifactsInfo:r});let u;o.onsuccess=()=>{u=s.transaction(Os,"readwrite");const o=u.objectStore(Os).put({modelPath:this.modelPath,modelArtifacts:e,modelArtifactsInfo:r});o.onsuccess=()=>t({modelArtifactsInfo:r}),o.onerror=t=>{i=a.objectStore(Ls);const e=i.delete(this.modelPath);e.onsuccess=()=>(s.close(),n(o.error)),e.onerror=t=>(s.close(),n(o.error))}},o.onerror=t=>(s.close(),n(o.error)),a.oncomplete=()=>{null==u?s.close():u.oncomplete=()=>s.close()}}},r.onerror=t=>n(r.error)}))}}Ps.URL_SCHEME="indexeddb://";const Ws=t=>{return U().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(Ps.URL_SCHEME)?(e=t.slice(Ps.URL_SCHEME.length),new Ps(e)):null;var e};Ds.registerSaveRouter(Ws),Ds.registerLoadRouter(Ws);class Vs{constructor(){this.indexedDB=Bs()}async listModels(){return new Promise(((t,e)=>{const n=this.indexedDB.open(Fs,1);n.onupgradeneeded=()=>zs(n),n.onsuccess=()=>{const r=n.result,s=r.transaction(Ls,"readonly"),a=s.objectStore(Ls).getAll();a.onsuccess=()=>{const e={};for(const t of a.result)e[t.modelPath]=t.modelArtifactsInfo;t(e)},a.onerror=t=>(r.close(),e(a.error)),s.oncomplete=()=>r.close()},n.onerror=t=>e(n.error)}))}async removeModel(t){var e;return t=(e=t).startsWith(Ps.URL_SCHEME)?e.slice(Ps.URL_SCHEME.length):e,new Promise(((e,n)=>{const r=this.indexedDB.open(Fs,1);r.onupgradeneeded=()=>zs(r),r.onsuccess=()=>{const s=r.result,a=s.transaction(Ls,"readwrite"),i=a.objectStore(Ls),o=i.get(t);let u;o.onsuccess=()=>{if(null==o.result)return s.close(),n(new Error(`Cannot find model with path '${t}' in IndexedDB.`));{const r=i.delete(t),a=()=>{u=s.transaction(Os,"readwrite");const r=u.objectStore(Os).delete(t);r.onsuccess=()=>e(o.result.modelArtifactsInfo),r.onerror=t=>n(o.error)};r.onsuccess=a,r.onerror=t=>(a(),s.close(),n(o.error))}},o.onerror=t=>(s.close(),n(o.error)),a.oncomplete=()=>{null==u?s.close():u.oncomplete=()=>s.close()}},r.onerror=t=>n(r.error)}))}}const Us="/",Gs="tensorflowjs_models",Hs="info",js="model_topology",qs="weight_specs",Ks="weight_data",Xs="model_metadata";function Ys(t){return{info:[Gs,t,Hs].join(Us),topology:[Gs,t,js].join(Us),weightSpecs:[Gs,t,qs].join(Us),weightData:[Gs,t,Ks].join(Us),modelMetadata:[Gs,t,Xs].join(Us)}}function Js(t){const e=t.split(Us);if(e.length<3)throw new Error(`Invalid key format: ${t}`);return e.slice(1,e.length-1).join(Us)}class Zs{constructor(t){if(!U().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==t||!t)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=t,this.keys=Ys(this.modelPath)}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const e=JSON.stringify(t.modelTopology),n=JSON.stringify(t.weightSpecs),r=Rs(t);try{return this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,e),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(t){if($s)return Ss.from(t).toString("base64");const e=new Uint8Array(t);let n="";for(let t=0,r=e.length;t<r;t++)n+=String.fromCharCode(e[t]);return btoa(n)}(t.weightData)),this.LS.setItem(this.keys.modelMetadata,JSON.stringify({format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,userDefinedMetadata:t.userDefinedMetadata})),{modelArtifactsInfo:r}}catch(t){throw this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const t=JSON.parse(this.LS.getItem(this.keys.info));if(null==t)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==t.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const e={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);e.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);e.weightSpecs=r;const s=this.LS.getItem(this.keys.modelMetadata);if(null!=s){const t=JSON.parse(s);e.format=t.format,e.generatedBy=t.generatedBy,e.convertedBy=t.convertedBy,e.userDefinedMetadata=t.userDefinedMetadata}const a=this.LS.getItem(this.keys.weightData);if(null==a)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return e.weightData=function(t){if($s){const e=Ss.from(t,"base64");return e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength)}const e=atob(t),n=new Uint8Array(e.length);for(let t=0;t<e.length;++t)n.set([e.charCodeAt(t)],t);return n.buffer}(a),e}}Zs.URL_SCHEME="localstorage://";const Qs=t=>{return U().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(Zs.URL_SCHEME)?(e=t.slice(Zs.URL_SCHEME.length),new Zs(e)):null;var e};Ds.registerSaveRouter(Qs),Ds.registerLoadRouter(Qs);class ta{constructor(){u(U().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),u("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const t={},e=Gs+Us,n=Us+Hs;for(let r=0;r<this.LS.length;++r){const s=this.LS.key(r);if(s.startsWith(e)&&s.endsWith(n)){t[Js(s)]=JSON.parse(this.LS.getItem(s))}}return t}async removeModel(t){var e;const n=Ys(t=(e=t).startsWith(Zs.URL_SCHEME)?e.slice(Zs.URL_SCHEME.length):e);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${t}'`);const r=JSON.parse(this.LS.getItem(n.info));return this.LS.removeItem(n.info),this.LS.removeItem(n.topology),this.LS.removeItem(n.weightSpecs),this.LS.removeItem(n.weightData),r}}class ea{constructor(){this.managers={}}static getInstance(){return null==ea.instance&&(ea.instance=new ea),ea.instance}static registerManager(t,e){u(null!=t,(()=>"scheme must not be undefined or null.")),t.endsWith("://")&&(t=t.slice(0,t.indexOf("://"))),u(t.length>0,(()=>"scheme must not be an empty string."));const n=ea.getInstance();u(null==n.managers[t],(()=>`A model store manager is already registered for scheme '${t}'.`)),n.managers[t]=e}static getManager(t){const e=this.getInstance().managers[t];if(null==e)throw new Error(`Cannot find model manager for scheme '${t}'`);return e}static getSchemes(){return Object.keys(this.getInstance().managers)}}class na{fetch(t,e){return fetch(t,e)}now(){return performance.now()}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error(`Browser's encoder only supports utf-8, but got ${e}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(t)}decode(t,e){return new TextDecoder(e).decode(t)}}if(U().get("IS_BROWSER")){U().setPlatform("browser",new na);try{ea.registerManager(Zs.URL_SCHEME,new ta)}catch(t){}try{ea.registerManager(Ps.URL_SCHEME,new Vs)}catch(t){}}var ra=!1;function sa(){return ra||(ra=!0),{}}const aa=()=>sa();let ia;class oa{constructor(){this.util=sa(),this.textEncoder=new this.util.TextEncoder}fetch(t,e){return null!=U().global.fetch?U().global.fetch(t,e):(null==ia&&(ia=aa()),ia(t,e))}now(){const t=q.hrtime();return 1e3*t[0]+t[1]/1e6}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error(`Node built-in encoder only supports utf-8, but got ${e}`);return this.textEncoder.encode(t)}decode(t,e){return 0===t.length?"":new this.util.TextDecoder(e).decode(t)}}function ua(t,e="float32",n){return e=e||"float32",L(t),new Wn(t,e,n)}U().get("IS_NODE")&&U().setPlatform("node",new oa);const la=ws({cast_:function(t,e){const n=bs(t,"x","cast");if(!function(t){return"bool"===t||"complex64"===t||"float32"===t||"int32"===t||"string"===t}(e))throw new Error(`Failed to cast to unknown dtype ${e}`);if("string"===e&&"string"!==n.dtype||"string"!==e&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const r={x:n},s={dtype:e};return dr.runKernelFunc((t=>t.cast(n,e)),r,null,Ct,s)}});const ca=ws({clone_:function(t){const e=bs(t,"x","clone",null),n={x:e};return dr.runKernelFunc((()=>dr.makeTensorFromDataId(e.dataId,e.shape,e.dtype)),n,null,ie)}});pr();Un={buffer:ua,cast:la,clone:ca,print:function(t,e=!1){console.log(t.toString(e))}};function ha(t){return new Promise((t=>setTimeout(t))).then(t)}class pa{constructor(t){if(!U().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");t.startsWith(pa.URL_SCHEME)&&(t=t.slice(pa.URL_SCHEME.length)),null!=t&&0!==t.length||(t="model"),this.modelTopologyFileName=t+".json",this.weightDataFileName=t+".weights.bin"}async save(t){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const e=window.URL.createObjectURL(new Blob([t.weightData],{type:"application/octet-stream"}));if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=[{paths:["./"+this.weightDataFileName],weights:t.weightSpecs}],r={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,weightsManifest:n},s=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),a=null==this.jsonAnchor?document.createElement("a"):this.jsonAnchor;if(a.download=this.modelTopologyFileName,a.href=s,await ha((()=>a.dispatchEvent(new MouseEvent("click")))),null!=t.weightData){const t=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;t.download=this.weightDataFileName,t.href=e,await ha((()=>t.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:Rs(t)}}}}pa.URL_SCHEME="downloads://";function da(t,e,n,r){!function(t){u(null!=t&&Array.isArray(t)&&t.length>0,(()=>"promises must be a none empty array"))}(t),function(t,e){u(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${t}`)),u(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${e}`)),u(e>=t,(()=>`startFraction must be no more than endFraction, but got startFraction ${t} and endFraction ${e}`))}(n=null==n?0:n,r=null==r?1:r);let s=0;return Promise.all(t.map((a=>(a.then((a=>{const i=n+ ++s/t.length*(r-n);return e(i),a})),a))))}Ds.registerSaveRouter((t=>U().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(pa.URL_SCHEME)?function(t="model"){return new pa(t)}(t.slice(pa.URL_SCHEME.length)):null));class fa{constructor(t,e){if(this.DEFAULT_METHOD="POST",null==e&&(e={}),this.weightPathPrefix=e.weightPathPrefix,this.onProgress=e.onProgress,this.weightUrlConverter=e.weightUrlConverter,null!=e.fetchFunc?(u("function"==typeof e.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=e.fetchFunc):this.fetch=U().platform.fetch,u(null!=t&&t.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(t)&&u(2===t.length,(()=>`URL paths for http must have a length of 2, (actual length is ${t.length}).`)),this.path=t,null!=e.requestInit&&null!=e.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=e.requestInit||{}}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const e=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);e.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:t.weightSpecs}],r={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,userDefinedMetadata:t.userDefinedMetadata,weightsManifest:n};e.body.append("model.json",new Blob([JSON.stringify(r)],{type:"application/json"}),"model.json"),null!=t.weightData&&e.body.append("model.weights.bin",new Blob([t.weightData],{type:"application/octet-stream"}),"model.weights.bin");const s=await this.fetch(this.path,e);if(s.ok)return{modelArtifactsInfo:Rs(t),responses:[s]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${s.status}.`)}async load(){const t=await this.fetch(this.path,this.requestInit);if(!t.ok)throw new Error(`Request to ${this.path} failed with status code ${t.status}. Please verify this URL points to the model JSON of the model to load.`);let e;try{e=await t.json()}catch(t){let e=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?e+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":e+=" Please make sure the server is serving valid JSON for this request.",new Error(e)}const n=e.modelTopology,r=e.weightsManifest,s=e.generatedBy,a=e.convertedBy,i=e.format,o=e.userDefinedMetadata;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);let u,l;if(null!=r){const t=await this.loadWeights(r);[u,l]=t}const c={modelTopology:n,weightSpecs:u,weightData:l,userDefinedMetadata:o,generatedBy:s,convertedBy:a,format:i},h=e.modelInitializer;return h&&(c.modelInitializer=h),c}async loadWeights(t){const e=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(t){const e=t.lastIndexOf("/"),n=t.lastIndexOf("?"),r=t.substring(0,e),s=n>e?t.substring(n):"";return[r+"/",s]}(e),s=this.weightPathPrefix||n,a=[];for(const e of t)a.push(...e.weights);const i=[],o=[];for(const e of t)for(const t of e.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(t)):i.push(s+t+r);this.weightUrlConverter&&i.push(...await Promise.all(o));return[a,As(await async function(t,e){null==e&&(e={});const n=null==e.fetchFunc?U().platform.fetch:e.fetchFunc,r=t.map((t=>n(t,e.requestInit,{isBinary:!0}))),s=(null==e.onProgress?await Promise.all(r):await da(r,e.onProgress,0,.5)).map((t=>t.arrayBuffer()));return null==e.onProgress?await Promise.all(s):await da(s,e.onProgress,.5,1)}(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function ma(t){return null!=t.match(fa.URL_SCHEME_REGEX)}fa.URL_SCHEME_REGEX=/^https?:\/\//;const ga=(t,e)=>{if("undefined"==typeof fetch&&(null==e||null==e.fetchFunc))return null;{let n=!0;if(n=Array.isArray(t)?t.every((t=>ma(t))):ma(t),n)return ya(t,e)}return null};function ya(t,e){return new fa(t,e)}function ba(t,e){return ya(t,e)}Ds.registerSaveRouter(ga),Ds.registerLoadRouter(ga);const xa=ws({reshape_:function(t,e){const n=bs(t,"x","reshape",null),r={x:n},s={shape:e};return dr.runKernelFunc(((t,r)=>(e=b(e,n.size),u(n.size===p(e),(()=>"new shape and old shape must have the same number of elements.")),r([n]),t.reshape(n,e))),r,null,Be,s)}});const wa=ws({matMul_:function(t,e,n=!1,r=!1){let s=bs(t,"a","matMul"),a=bs(e,"b","matMul");[s,a]=ir(s,a);const i={a:s,b:a},o={transposeA:n,transposeB:r};return dr.runKernelFunc(((t,e)=>{e([s,a]);const i=n?s.shape[s.rank-2]:s.shape[s.rank-1],o=r?a.shape[a.rank-1]:a.shape[a.rank-2],l=n?s.shape[s.rank-1]:s.shape[s.rank-2],c=r?a.shape[a.rank-2]:a.shape[a.rank-1],h=s.shape.slice(0,-2),d=a.shape.slice(0,-2),f=p(h),m=p(d),g=f===m||1===f||1===m;u(s.rank>=2&&a.rank>=2&&g,(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${h}) and (${d}).`)),u(i===o,(()=>`Error in matMul: inner shapes (${i}) and (${o}) of Tensors with shapes ${s.shape} and ${a.shape} and transposeA=${n} and transposeB=${r} must match.`));const y=(f>m?h:d).concat([l,c]),b=xa(s,n?[f,i,l]:[f,l,i]),x=xa(a,r?[m,c,o]:[m,o,c]),w=t.batchMatMul(b,x,n,r);return xa(w,y)}),i,null,Nt,o)}});const va=ws({oneHot_:function(t,e,n=1,r=0){if(e<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${e}`);const s=bs(t,"indices","oneHot","int32"),a=[...s.shape,e],i={indices:s},o={depth:e,onValue:n,offValue:r};return dr.runKernelFunc(((t,i)=>(i([s]),xa(t.oneHot(xa(s,[s.size]),e,n,r),a))),i,null,_e,o)}});const Ia=ws({transpose_:function(t,e){const n=bs(t,"x","transpose");if(null==e&&(e=n.shape.map(((t,e)=>e)).reverse()),u(n.rank===e.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${e}.`)),e.forEach((t=>{u(t>=0&&t<n.rank,(()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+` but got ${e}`))})),n.rank<=1)return n.clone();const r={x:n},s={perm:e};return dr.runKernelFunc((t=>t.transpose(n,e)),r,null,cn,s)}});ws({confusionMatrix_:function(t,e,n){const r=bs(t,"labels","confusionMatrix"),s=bs(e,"predictions","confusionMatrix");u(null==n||n>0&&Number.isInteger(n),(()=>`If provided, numClasses must be a positive integer, but got ${n}`)),u(1===r.rank,(()=>`Expected the rank of labels to be 1, but got ${r.rank}`)),u(1===s.rank,(()=>`Expected the rank of predictions to be 1, but got ${s.rank}`)),u(r.shape[0]===s.shape[0],(()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${s.shape[0]}. Labels and predictions should have the same number of elements.`)),u(n>0&&Number.isInteger(n),(()=>`numClasses is required to be a positive integer, but got ${n}`));const a=va(la(r,"int32"),n),i=va(la(s,"int32"),n),o=Ia(a),l=wa(o,i);return la(l,"int32")}});let ka;const Na=ws({fromPixels_:function(t,e=3){if(e>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==t)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,s=!1,a=!1,i=!1;if(t.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&t instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&t instanceof HTMLVideoElement)s=!0;else if("undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement)a=!0;else{if(null==t.getContext)throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${t.constructor.name}`);i=!0}if(s){const e=2;if(s&&t.readyState<e)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(null!=kn(gn,dr.backendName)){const n={pixels:t},r={numChannels:e};return dr.runKernel(gn,n,r)}const[o,u]=s?[t.videoWidth,t.videoHeight]:[t.width,t.height];let l,h;if(i?l=t.getContext("2d").getImageData(0,0,o,u).data:r||n?l=t.data:(a||s)&&(null==ka&&(ka=document.createElement("canvas").getContext("2d")),ka.canvas.width=o,ka.canvas.height=u,ka.drawImage(t,0,0,o,u),l=ka.getImageData(0,0,o,u).data),4===e)h=new Int32Array(l);else{const t=o*u;h=new Int32Array(t*e);for(let n=0;n<t;n++)for(let t=0;t<e;++t)h[n*e+t]=l[4*n+t]}return function(t,e,n){if(c(t),null!=e&&3!==e.length)throw new Error("tensor3d() requires shape to have three numbers");const r=ms(t,n);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Is(t,e,r,n)}(h,[u,o,e],"int32")}});function Sa(t,e){if(t.rank<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==e.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[e.rank-1]>t.rank)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[e.rank-1]} vs. ${t.rank}`);if(0===t.size)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${t.shape}.`);const n=e.shape,r=n[n.length-1];let s=1;for(let t=0;t<n.length-1;++t)s*=n[t];const a=t.shape,i=n.slice();i.pop();let o=1;for(let e=r;e<t.rank;++e)o*=a[e],i.push(a[e]);const u=[...R(t.shape).map((t=>t/o)),1].slice(0,r);return[i,s,o,u]}function Ea(t,e,n){if(e.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(t.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${t.rank}.`);if("int32"!==e.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${e.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===e.size)throw new Error(`Indices specified for empty output. indices shape: ${e.shape}`);if(0===t.size)throw new Error(`Updates specified for empty output. updates shape: ${t.shape}`)}!function(t,e,n){const r=e.rank>1?e.shape[e.rank-1]:1,s=e.rank>1?e.rank-1:1,a=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${e.shape}, shape: ${t}, sliceDim: ${r}, and batchDim: ${s}.`;if(n.rank<s)throw new Error(a+` update.rank < ${s}. `);if(t.length<r+(n.rank-s))throw new Error(a+` Output shape length < ${r+(n.rank-s)}`);if(n.rank!==s+t.length-r)throw new Error(a+" update.rank != "+(s+t.length-r));for(let t=0;t<s;++t)if(n.shape[t]!==e.shape[t])throw new Error(a+` updates.shape[${t}] (${n.shape[t]}) != indices.shape[${t}] (${e.shape[t]}).`);for(let e=0;e<n.rank-s;++e)if(n.shape[e+s]!==t[e+r])throw new Error(a+` updates.shape[${e+s}] (${n.shape[e+s]}) != shape[${e+s}] (${t[e+s]})`)}(n,e,t)}function Ca(t,e,n){const r=e.shape.length,s=r>1?e.shape[r-1]:1,a=n.length;let i=1;for(let t=s;t<a;++t)i*=n[t];const o=s<1?1:s;return{sliceRank:s,numUpdates:p(e.shape)/o,sliceSize:i,strides:[...R(n.slice(0,s)),1],outputSize:p(n)}}function $a(t,e,n){const r=t.shape.length;u(r===e.length,(()=>`Error in slice${r}D: Length of begin ${e} must match the rank of the array (${r}).`)),u(r===n.length,(()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`));for(let s=0;s<r;++s)u(e[s]+n[s]<=t.shape[s],(()=>`Error in slice${r}D: begin[${s}] + size[${s}] (${e[s]+n[s]}) would overflow input.shape[${s}] (${t.shape[s]})`))}function Ta(t){const e=[];let n=0;for(;t>0;)1&t&&e.push(n),t/=2,n++;return e}function Aa(t,e,n){const r=[];for(let s=0;s<t.length;s++)r[s]=Math.ceil((e[s]-t[s])/n[s]);return r}function Ra(t,e,n){return n<=t?n:n-(e-1)}function _a(t,e){const n=[];for(let r=0;r<t;r++)n.push(e+r);return n}function Da(t,e,n,r,s,a,o,u,l){const c=t.length;let h=new Array(c),p=new Array(c),d=new Array(c);if(e.length&&n>0){const l=e[0],c=n+1;h=function(t,e,n,r,s){const a=[...s],i=_a(n,e);for(let s=0;s<a.length;s++)if(i.indexOf(s)>-1)a[s]=0;else{const i=Ra(e,n,s);let o=r[i];t&1<<i&&(o=0),a[s]=o}return a}(o,l,c,r,t),p=function(t,e,n,r,s){const a=[...s],o=_a(n,e);for(let s=0;s<a.length;s++)if(o.indexOf(s)>-1)a[s]=Number.MAX_SAFE_INTEGER;else{const i=Ra(e,n,s);let o=r[i];t&1<<i&&(o=Number.MAX_SAFE_INTEGER),a[s]=o}for(let t=0;t<a.length;t++){const e=s[t];a[t]<0&&(a[t]+=e),a[t]=i(0,a[t],s[t])}return a}(u,l,c,s,t),d=function(t,e,n,r){const s=[...t];for(let t=s.length;t<r.length;t++)s.push(1);for(let t=0;t<n;t++)0===t?s[e]=1:(s.splice(e,0,1),s.pop());return s}(a,l,c,t)}else for(let e=0;e<c;e++)h[e]=Fa(o,r,a,t,e,l),p[e]=Oa(u,s,a,t,e,l),d[e]=Ma(a,e,l);return{begin:h,end:p,strides:d}}function Ma(t,e,n){let r=t[e];return(n&1<<e||null==r)&&(r=1),r}function Fa(t,e,n,r,s,a){let o=e[s];const u=n[s]||1;(t&1<<s||a&1<<s||null==o)&&(o=u>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const l=r[s];return o<0&&(o+=l),o=i(0,o,l-1),o}function Oa(t,e,n,r,s,a){let o=e[s];const u=n[s]||1;(t&1<<s||a&1<<s||null==o)&&(o=u>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const l=r[s];return o<0&&(o+=l),o=u>0?i(0,o,l):i(-1,o,l-1),o}function La(t,e,n){let r=n.length;for(let t=0;t<n.length;t++)if(n[t]>1){r=t;break}for(let s=r+1;s<n.length;s++)if(e[s]>0||n[s]!==t[s])return!1;return!0}function Ba(t,e){let n=t.length>0?t[t.length-1]:1;for(let r=0;r<t.length-1;r++)n+=t[r]*e[r];return n}function za(t,e,n){let r;const s=t.shape.length;let a;return r="number"==typeof e?[e,...new Array(s-1).fill(0)]:e.length<s?e.concat(new Array(s-e.length).fill(0)):e.slice(),r.forEach((t=>{u(-1!==t,(()=>"slice() does not support negative begin indexing."))})),a=null==n?new Array(s).fill(-1):"number"==typeof n?[n,...new Array(s-1).fill(-1)]:n.length<s?n.concat(new Array(s-n.length).fill(-1)):n,a=a.map(((e,n)=>e>=0?e:(u(-1===e,(()=>`Negative size values should be exactly -1 but got ${e} for the slice() size at index ${n}.`)),t.shape[n]-r[n]))),[r,a]}class Pa{getClassName(){return this.constructor.className}static fromConfig(t,e){return new t(e)}}class Wa{constructor(){this.classNameMap={}}static getMap(){return null==Wa.instance&&(Wa.instance=new Wa),Wa.instance}static register(t){Wa.getMap().classNameMap[t.className]=[t,t.fromConfig]}}function Va(t){u(null!=t.className,(()=>"Class being registered does not have the static className property defined.")),u("string"==typeof t.className,(()=>"className is required to be a string, but got type "+typeof t.className)),u(t.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),Wa.register(t)}function Ua(t){U().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(t+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function Ga(){return dr}function Ha(){return dr.memory()}function ja(t,e){return dr.tidy(t,e)}function qa(t){ur(t).forEach((t=>t.dispose()))}function Ka(t){return dr.keep(t)}function Xa(t,e,n=1){return dr.registerBackend(t,e,n)}function Ya(t){return dr.customGrad(t)}Gn=Ua;const Ja=ws({abs_:function(t){const e=bs(t,"x","abs"),n={x:e};return dr.runKernelFunc(((t,n)=>(n([e]),"complex64"===e.dtype?t.complexAbs(e):t.abs(e))),n,null,lt)}});const Za=ws({acos_:function(t){const e=bs(t,"x","acos"),n={x:e};return dr.runKernelFunc(((t,n)=>{const r=t.acos(e);return n([e]),r}),n,null,ct)}});const Qa=ws({acosh_:function(t){const e=bs(t,"x","acosh"),n={x:e};return dr.runKernelFunc(((t,n)=>{const r=t.acosh(e);return n([e]),r}),n,null,ht)}});const ti=ws({add_:function(t,e){let n=bs(t,"a","add"),r=bs(e,"b","add");[n,r]=ir(n,r);const s={a:n,b:r};return dr.runKernelFunc(((t,e)=>{const s=t.add(n,r);return e([n,r]),s}),s,null,pt)}});const ei=ws({addN_:function(t){u(Array.isArray(t),(()=>"The argument passed to tf.addN() must be a list of tensors")),u(t.length>=1,(()=>`Must pass at least one tensor to tf.addN(), but got ${t.length}`));const e=t.map(((t,e)=>bs(t,`tensors${e}`,"addN"))),n=e[0];e.forEach((t=>{if(t.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),e.forEach((t=>{if(!d(t.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));const r=e;return dr.runKernelFunc(((t,n)=>{const r=t.addN(e);return n(e),r}),r,null,dt)}});function ni(t,e){for(let n=0;n<t.length;++n)if(t[t.length-n-1]!==e-1-n)return!1;return!0}function ri(t,e){const n=[],r=t.length;for(let s=0;s<r;s++)-1===e.indexOf(s)&&n.push(t[s]);return[n,e.map((e=>t[e]))]}function si(t,e){return function(t,e,n){const r=t.length+e.length,s=[];let a=0,i=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?s.push(t[a++]):s.push(e[i++]);return s}(t,e.map((t=>1)),e)}function ai(t,e,n){u(ni(e,n),(()=>`${t} supports only inner-most axes for now. Got axes ${e} and rank-${n} input.`))}function ii(t,e){if(ni(t,e))return null;const n=[];for(let r=0;r<e;++r)-1===t.indexOf(r)&&n.push(r);return t.forEach((t=>n.push(t))),n}function oi(t){return t.map(((t,e)=>[e,t])).sort(((t,e)=>t[1]-e[1])).map((t=>t[0]))}function ui(t,e){const n=[];for(let r=e-t;r<e;++r)n.push(r);return n}const li=ws({all_:function(t,e=null,n=!1){let r=bs(t,"x","all","bool");const s={x:r},a={axis:e,keepDims:n};return dr.runKernelFunc((t=>{const s=x(e,r.shape);let a=s;const i=ii(a,r.rank);null!=i&&(r=Ia(r,i),a=ui(a.length,r.rank));const o=t.all(r,a);if(n){const t=si(o.shape,s);return xa(o,t)}return o}),s,null,"All",a)}});const ci=ws({any_:function(t,e=null,n=!1){let r=bs(t,"x","any","bool");const s={x:r},a={axis:e,keepDims:n};return dr.runKernelFunc((t=>{const s=x(e,r.shape);let a=s;const i=ii(a,r.rank);null!=i&&(r=Ia(r,i),a=ui(a.length,r.rank));const o=t.any(r,a);if(n){const t=si(o.shape,s);return xa(o,t)}return o}),s,null,"Any",a)}});const hi=ws({argMax_:function(t,e=0){let n=bs(t,"x","argMax");const r={x:n},s={axis:e};return dr.runKernelFunc(((t,r)=>{r([n]);let s=x(e,n.shape);const a=ii(s,n.rank);return null!=a&&(n=Ia(n,a),s=ui(s.length,n.rank)),t.argMax(n,s[0])}),r,null,ft,s)}});const pi=ws({argMin_:function(t,e=0){let n=bs(t,"x","argMin");const r={x:n},s={axis:e};return dr.runKernelFunc(((t,r)=>{r([n]),null==e&&(e=0);let s=x(e,n.shape);const a=ii(s,n.rank);return null!=a&&(n=Ia(n,a),s=ui(s.length,n.rank)),t.argMin(n,s[0])}),r,null,mt,s)}});const di=ws({asin_:function(t){const e=bs(t,"x","asin"),n={x:e};return dr.runKernelFunc(((t,n)=>{const r=t.asin(e);return n([e]),r}),n,null,gt)}});const fi=ws({asinh_:function(t){const e=bs(t,"x","asinh"),n={x:e};return dr.runKernelFunc(((t,n)=>{const r=t.asinh(e);return n([e]),r}),n,null,yt)}});const mi=ws({atan_:function(t){const e=bs(t,"x","atan"),n={x:e};return dr.runKernelFunc(((t,n)=>{const r=t.atan(e);return n([e]),r}),n,null,bt)}});const gi=ws({atan2_:function(t,e){let n=bs(t,"a","atan2"),r=bs(e,"b","atan2");[n,r]=ir(n,r);const s={a:n,b:r};return dr.runKernelFunc(((t,e)=>{const s=t.atan2(n,r);return e([n,r]),s}),s,null,wt)}});const yi=ws({atanh_:function(t){const e=bs(t,"x","atanh"),n={x:e};return dr.runKernelFunc(((t,n)=>{const r=t.atanh(e);return n([e]),r}),n,null,xt)}});function bi(t,e,n,r,s="NHWC",a){return vi(t,[...e,t[3]],n,a,r,null,null,Ai(s))}function xi(t,e,n,r,s,a,i="channelsLast"){const[o,u]=Ni(e);let l;if("channelsLast"===i)l=[o,u,t[3],t[3]];else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);l=[o,u,t[1],t[1]]}return vi(t,l,n,r,s,a,!1,i)}function wi(t,e,n,r,s,a,i="NDHWC"){const[o,u,l]=Si(e);let c,h;if("NDHWC"===i)h="channelsLast",c=[o,u,l,t[4],t[4]];else{if("NCDHW"!==i)throw new Error(`Unknown dataFormat ${i}`);h="channelsFirst",c=[o,u,l,t[1],t[1]]}return Ii(t,c,n,r,s,!1,h,a)}function vi(t,e,n,r,s,a,i=!1,o="channelsLast"){let[l,c,h,p]=[-1,-1,-1,-1];if("channelsLast"===o)[l,c,h,p]=t;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[l,p,c,h]=t}const[d,m,,g]=e,[y,b]=Ni(n),[x,w]=Ni(r),v=Ei(d,x),I=Ei(m,w),{padInfo:k,outHeight:N,outWidth:S}=function(t,e,n,r,s,a,i,o,l){let c,h,p;if("number"==typeof t){c={top:t,bottom:t,left:t,right:t,type:0===t?"VALID":"NUMBER"};const s=function(t,e,n,r,s){null==r&&(r=ki(t,e,n));const a=t[0],i=t[1],o=Ci((a-e+2*r)/n+1,s);u(f(o),(()=>`The output # of rows (${o}) must be an integer. Change the stride and/or zero pad parameters`));const l=Ci((i-e+2*r)/n+1,s);return u(f(l),(()=>`The output # of columns (${l}) must be an integer. Change the stride and/or zero pad parameters`)),[o,l]}([e,n],a,r,t,o);h=s[0],p=s[1]}else if("same"===t){h=Math.ceil(e/r),p=Math.ceil(n/s);const t=Math.max(0,(h-1)*r+a-e),o=Math.max(0,(p-1)*s+i-n),u=Math.floor(t/2),l=t-u,d=Math.floor(o/2);c={top:u,bottom:l,left:d,right:o-d,type:"SAME"}}else if("valid"===t)c={top:0,bottom:0,left:0,right:0,type:"VALID"},h=Math.ceil((e-a+1)/r),p=Math.ceil((n-i+1)/s);else{if("object"!=typeof t)throw Error(`Unknown padding parameter: ${t}`);{const u="channelsLast"===l?t[1][0]:t[2][0],d="channelsLast"===l?t[1][1]:t[2][1],f="channelsLast"===l?t[2][0]:t[3][0],m="channelsLast"===l?t[2][1]:t[3][1];c={top:u,bottom:d,left:f,right:m,type:0===u&&0===d&&0===f&&0===m?"VALID":"EXPLICIT"},h=Ci((e-a+u+d)/r+1,o),p=Ci((n-i+f+m)/s+1,o)}}return{padInfo:c,outHeight:h,outWidth:p}}(s,c,h,y,b,v,I,a,o),E=i?g*p:g;let C;return"channelsFirst"===o?C=[l,E,N,S]:"channelsLast"===o&&(C=[l,N,S,E]),{batchSize:l,dataFormat:o,inHeight:c,inWidth:h,inChannels:p,outHeight:N,outWidth:S,outChannels:E,padInfo:k,strideHeight:y,strideWidth:b,filterHeight:d,filterWidth:m,effectiveFilterHeight:v,effectiveFilterWidth:I,dilationHeight:x,dilationWidth:w,inShape:t,outShape:C,filterShape:e}}function Ii(t,e,n,r,s,a=!1,i="channelsLast",o){let[l,c,h,p,d]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[l,c,h,p,d]=t;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[l,d,c,h,p]=t}const[m,g,y,,b]=e,[x,w,v]=Si(n),[I,k,N]=Si(r),S=Ei(m,I),E=Ei(g,k),C=Ei(y,N),{padInfo:$,outDepth:T,outHeight:A,outWidth:R}=function(t,e,n,r,s,a,i,o,l,c,h){let p,d,m,g;if("number"==typeof t){p={top:t,bottom:t,left:t,right:t,front:t,back:t,type:0===t?"VALID":"NUMBER"};const a=function(t,e,n,r,s,a){null==s&&(s=ki(t,e,r));const i=t[0],o=t[1],l=t[2],c=Ci((i-e+2*s)/r+1,a);u(f(c),(()=>`The output # of depths (${c}) must be an integer. Change the stride and/or zero pad parameters`));const h=Ci((o-e+2*s)/r+1,a);u(f(h),(()=>`The output # of rows (${h}) must be an integer. Change the stride and/or zero pad parameters`));const p=Ci((l-e+2*s)/r+1,a);return u(f(p),(()=>`The output # of columns (${p}) must be an integer. Change the stride and/or zero pad parameters`)),[c,h,p,n]}([e,n,r,1],o,1,s,t,h);d=a[0],m=a[1],g=a[2]}else if("same"===t){d=Math.ceil(e/s),m=Math.ceil(n/a),g=Math.ceil(r/i);const t=(d-1)*s+o-e,u=(m-1)*a+l-n,h=(g-1)*i+c-r,f=Math.floor(t/2),y=t-f,b=Math.floor(u/2),x=u-b,w=Math.floor(h/2);p={top:b,bottom:x,left:w,right:h-w,front:f,back:y,type:"SAME"}}else{if("valid"!==t)throw Error(`Unknown padding parameter: ${t}`);p={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},d=Math.ceil((e-o+1)/s),m=Math.ceil((n-l+1)/a),g=Math.ceil((r-c+1)/i)}return{padInfo:p,outDepth:d,outHeight:m,outWidth:g}}(s,c,h,p,x,w,v,S,E,C,o),_=a?b*d:b;let D;return"channelsFirst"===i?D=[l,_,T,A,R]:"channelsLast"===i&&(D=[l,T,A,R,_]),{batchSize:l,dataFormat:i,inDepth:c,inHeight:h,inWidth:p,inChannels:d,outDepth:T,outHeight:A,outWidth:R,outChannels:_,padInfo:$,strideDepth:x,strideHeight:w,strideWidth:v,filterDepth:m,filterHeight:g,filterWidth:y,effectiveFilterDepth:S,effectiveFilterHeight:E,effectiveFilterWidth:C,dilationDepth:I,dilationHeight:k,dilationWidth:N,inShape:t,outShape:D,filterShape:e}}function ki(t,e,n,r=1){const s=Ei(e,r);return Math.floor((t[0]*(n-1)-n+s)/2)}function Ni(t){return"number"==typeof t?[t,t,t]:2===t.length?[t[0],t[1],1]:t}function Si(t){return"number"==typeof t?[t,t,t]:t}function Ei(t,e){return e<=1?t:t+(t-1)*(e-1)}function Ci(t,e){if(!e)return t;switch(e){case"round":return Math.round(t);case"ceil":return Math.ceil(t);case"floor":return Math.floor(t);default:throw new Error(`Unknown roundingMode ${e}`)}}function $i(t){const[e,n,r]=Ni(t);return 1===e&&1===n&&1===r}function Ti(t,e){return $i(t)||$i(e)}function Ai(t){if("NHWC"===t)return"channelsLast";if("NCHW"===t)return"channelsFirst";throw new Error(`Unknown dataFormat ${t}`)}const Ri=ws({avgPool_:function(t,e,n,r,s){const a=bs(t,"x","avgPool","float32");u(Ti(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let i=a,o=!1;3===a.rank&&(o=!0,i=xa(a,[1,a.shape[0],a.shape[1],a.shape[2]])),u(4===i.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`)),null!=s&&u(f(r),(()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`));const l={x:i},c={filterSize:e,strides:n,pad:r,dimRoundingMode:s};let h=dr.runKernelFunc(((t,a)=>{const o=xi(i.shape,e,n,1,r,s);return a([i]),1===o.filterWidth&&1===o.filterHeight&&d(o.inShape,o.outShape)?i.clone():t.avgPool(i,o)}),l,null,vt,c);return h=la(h,a.dtype),o?xa(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});const _i=ws({avgPool3d_:function(t,e,n,r,s,a="NDHWC",i){null==i?i=[1,1,1]:Ua("dilations is deprecated, this field will be gone in v3.0.0.");const o=bs(t,"x","avgPool3d","float32");let l=o,c=!1;4===o.rank&&(c=!0,l=xa(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),u(5===l.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${l.rank}.`)),u("NDHWC"===a,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`)),u(Ti(n,i),(()=>`Error in avgPool3d: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`)),null!=s&&u(f(r),(()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`));const h={x:l},p={filterSize:e,strides:n,pad:r,dimRoundingMode:s,dataFormat:a,dilations:i};let d=dr.runKernelFunc(((t,o)=>{null==i&&(i=[1,1,1]);const u=wi(l.shape,e,n,i,r,s,a);return o([l]),t.avgPool3d(l,u)}),h,null,kt,p);return d=la(d,l.dtype),c?xa(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});const Di=ws({batchToSpaceND_:function(t,e,n){const r=bs(t,"x","batchToSpaceND"),s=e.reduce(((t,e)=>t*e));u(r.rank>=1+e.length,(()=>`input rank is ${r.rank} but should be > than blockShape.length ${e.length}`)),u(n.length===e.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${e.length}`)),u(r.shape[0]%s==0,(()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${s}`));const a={x:r},i={blockShape:e,crops:n};return dr.runKernelFunc((t=>t.batchToSpaceND(r,e,n)),a,null,St,i)}});function Mi(t){return null==t?null:0===t.rank?xa(t,[t.size]):1===t.rank?t:2===t.rank?xa(t,[1,1,t.shape[0],t.shape[1]]):3===t.rank?xa(t,[1,t.shape[0],t.shape[1],t.shape[2]]):t}const Fi=ws({batchNorm_:function(t,e,n,r,s,a){null==a&&(a=.001);const i=bs(t,"x","batchNorm"),o=bs(e,"mean","batchNorm"),l=bs(n,"variance","batchNorm");let c,h;null!=s&&(c=bs(s,"scale","batchNorm")),null!=r&&(h=bs(r,"offset","batchNorm")),u(o.rank===l.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),u(null==h||o.rank===h.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),u(null==c||o.rank===c.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const p=function(t){let e;return e=0===t.rank||1===t.rank?xa(t,[1,1,1,t.size]):2===t.rank?xa(t,[1,1,t.shape[0],t.shape[1]]):3===t.rank?xa(t,[1,t.shape[0],t.shape[1],t.shape[2]]):t,e}(i),d={x:p,scale:c,offset:h,mean:o,variance:l},f={varianceEpsilon:a},m=dr.runKernelFunc(((t,e)=>(e([p,o,l,c]),t.batchNorm(p,Mi(o),Mi(l),Mi(h),Mi(c),a))),d,null,re,f);return xa(m,i.shape)}});const Oi=ws({batchNorm2d_:function(t,e,n,r,s,a){const i=bs(t,"x","batchNorm"),o=bs(e,"mean","batchNorm"),l=bs(n,"variance","batchNorm");let c,h;return null!=s&&(c=bs(s,"scale","batchNorm")),null!=r&&(h=bs(r,"offset","batchNorm")),u(2===i.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`)),u(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`)),u(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=c&&u(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${c.rank}.`)),null!=h&&u(2===h.rank||1===h.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${h.rank}.`)),Fi(i,o,l,h,c,a)}});const Li=ws({batchNorm3d_:function(t,e,n,r,s,a){const i=bs(t,"x","batchNorm"),o=bs(e,"mean","batchNorm"),l=bs(n,"variance","batchNorm");let c,h;return null!=s&&(c=bs(s,"scale","batchNorm")),null!=r&&(h=bs(r,"offset","batchNorm")),u(3===i.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`)),u(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`)),u(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=c&&u(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${c.rank}.`)),null!=h&&u(3===h.rank||1===h.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${h.rank}.`)),Fi(i,o,l,h,c,a)}});const Bi=ws({batchNorm4d_:function(t,e,n,r,s,a){const i=bs(t,"x","batchNorm"),o=bs(e,"mean","batchNorm"),l=bs(n,"variance","batchNorm");let c,h;return null!=s&&(c=bs(s,"scale","batchNorm")),null!=r&&(h=bs(r,"offset","batchNorm")),u(4===i.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`)),u(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`)),u(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=c&&u(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${c.rank}.`)),null!=h&&u(4===h.rank||1===h.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${h.rank}.`)),Fi(i,o,l,h,c,a)}});const zi=ws({broadcastTo_:function(t,e){let n=bs(t,"broadcastTo","x");const r=n.shape;if(e.some((t=>!(t>0)||t%1!=0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${e}].`);if(e.length<n.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${n.rank}.`);if(e.length>n.rank){const t=n.shape.slice();for(;t.length<e.length;)t.unshift(1);n=xa(n,t)}const s=n.shape,a=Array.from(e);for(let t=e.length-1;t>=0;t--)if(s[t]===e[t])a[t]=1;else if(1!==n.shape[t])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${e}].`);if(0===a.map(((t,e)=>t>1?e:-1)).filter((t=>t>=0)).length)return ca(n);const i={x:n},o={shape:e,inputShape:s};return dr.runKernelFunc((t=>t.tile(n,a)),i,null,Et,o)}});const Pi=ws({ceil_:function(t){const e=bs(t,"x","ceil"),n={x:e};return dr.runKernelFunc((t=>t.ceil(e)),n,null,$t)}});const Wi=ws({clipByValue_:function(t,e,n){const r=bs(t,"x","clipByValue");u(e<=n,(()=>`Error in clip: min (${e}) must be less than or equal to max (${n}).`));const s={x:r},a={clipValueMin:e,clipValueMax:n};return dr.runKernelFunc(((t,s)=>{const a=t.clip(r,e,n);return s([r]),a}),s,null,Tt,a)}});function Vi(t,e){const n=t[0].length;t.forEach(((t,e)=>{u(t.length===n,(()=>`Error in concat${n}D: rank of tensors[${e}] must be the same as the rank of the rest (${n})`))})),u(e>=0&&e<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const r=t[0];t.forEach(((t,s)=>{for(let a=0;a<n;a++)u(a===e||t[a]===r[a],(()=>`Error in concat${n}D: Shape of tensors[${s}] (${t}) does not match the shape of the rest (${r}) along the non-concatenated axis ${s}.`))}))}function Ui(t,e){const n=t[0].slice();for(let r=1;r<t.length;r++)n[e]+=t[r][e];return n}const Gi=ws({concat_:function(t,e=0){u(t.length>=1,(()=>"Pass at least one tensor to concat"));let n=xs(t,"tensors","concat");"complex64"===n[0].dtype&&n.forEach((t=>{if("complex64"!==t.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${t.dtype}. `)}));const r=n,s={axis:e};return dr.runKernelFunc(((t,r)=>{const s=x(e,n[0].shape)[0],a=Ui(n.map((t=>t.shape)),s);if(0===p(a))return ks([],a);if(n=n.filter((t=>t.size>0)),1===n.length)return n[0];Vi(n.map((t=>t.shape)),s);const i=t.concat(n,s);return r(n),i}),r,null,Rt,s)}});const Hi=ws({concat1d_:function(t){return Gi(t,0)}});const ji=ws({concat2d_:function(t,e){return Gi(t,e)}});const qi=ws({concat3d_:function(t,e){return Gi(t,e)}});const Ki=ws({concat4d_:function(t,e){return Gi(t,e)}});const Xi=ws({conv2d_:function(t,e,n,r,s="NHWC",a=[1,1],i){const o=bs(t,"x","conv2d"),l=bs(e,"filter","conv2d");let c=o,h=!1;3===o.rank&&(h=!0,c=xa(o,[1,o.shape[0],o.shape[1],o.shape[2]])),u(4===c.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${c.rank}.`)),u(4===l.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`)),null!=i&&u(f(r),(()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`));const p="NHWC"===s?c.shape[3]:c.shape[1];u(p===l.shape[2],(()=>`Error in conv2d: depth of input (${p}) must match input depth for filter ${l.shape[2]}.`)),u(Ti(n,a),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`));const d={x:c,filter:l},m={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i},g=dr.runKernelFunc(((t,e)=>{const o=Ai(s),u=vi(c.shape,l.shape,n,a,r,i,!1,o),h=t.conv2d(c,l,u);return e([c,l]),h}),d,null,_t,m);return h?xa(g,[g.shape[1],g.shape[2],g.shape[3]]):g}});const Yi=ws({conv1d_:function(t,e,n,r,s="NWC",a=1,i){const o=bs(t,"x","conv1d"),l=bs(e,"filter","conv1d");let c=o,h=!1;2===o.rank&&(h=!0,c=xa(o,[1,o.shape[0],o.shape[1]])),u(3===c.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${c.rank}.`)),u(3===l.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`)),null!=i&&u(f(r),(()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`)),u(c.shape[2]===l.shape[1],(()=>`Error in conv1d: depth of input (${c.shape[2]}) must match input depth for filter ${l.shape[1]}.`)),u(Ti(n,a),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${a}'`)),u("NWC"===s,(()=>`Error in conv1d: got dataFormat of ${s} but only NWC is currently supported.`));const p=xa(l,[1,l.shape[0],l.shape[1],l.shape[2]]),d=xa(c,[c.shape[0],1,c.shape[1],c.shape[2]]),m=Xi(d,p,[1,n],r,"NHWC",[1,a],i);return xa(m,h?[m.shape[2],m.shape[3]]:[m.shape[0],m.shape[2],m.shape[3]])}});const Ji=ws({conv2DBackpropInput_:function(t,e,n,r,s,a="NHWC",i){u(t.length===e.rank,(()=>`Length of inShape (${t.length}) and rank of dy (${e.rank}) must match`));let o=t,l=e,c=!1;3===e.rank&&(c=!0,l=xa(e,[1,e.shape[0],e.shape[1],e.shape[2]]),o=[1,t[0],t[1],t[2]]),u(4===o.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`)),u(4===l.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`)),u(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const h="NHWC"===a?o[3]:o[1],p="NHWC"===a?l.shape[3]:l.shape[1];u(h===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${h}) must match input depth for filter ${n.shape[2]}.`)),u(p===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${p}) must match output depth for filter ${n.shape[3]}.`)),null!=i&&u(f(s),(()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`));const d={dy:l,filter:n},m={strides:r,pad:s,dataFormat:a,dimRoundingMode:i,inputShape:o},g=dr.runKernelFunc(((t,e)=>{const u=Ai(a),c=vi(o,n.shape,r,1,s,i,!1,u),h=t.conv2dDerInput(l,n,c);return e([l,n]),h}),d,null,Mt,m);return c?xa(g,[g.shape[1],g.shape[2],g.shape[3]]):g}});const Zi=ws({conv2dTranspose_:function(t,e,n,r,s,a){const i=bs(t,"x","conv2dTranspose"),o=bs(e,"filter","conv2dTranspose");return Ji(n,i,o,r,s,"NHWC",a)}});const Qi=ws({conv3d_:function(t,e,n,r,s="NDHWC",a=[1,1,1]){const i=bs(t,"x","conv3d"),o=bs(e,"filter","conv3d");let l=i,c=!1;4===i.rank&&(c=!0,l=xa(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),u(5===l.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`)),u(5===o.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`)),u(l.shape[4]===o.shape[3],(()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`)),u(Ti(n,a),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),u("NDHWC"===s,(()=>`Error in conv3d: got dataFormat of ${s} but only NDHWC is currently supported.`));const h={x:l,filter:o},p={strides:n,pad:r,dataFormat:s,dilations:a},d=dr.runKernelFunc(((t,e)=>{const s=Ii(l.shape,o.shape,n,a,r),i=t.conv3d(l,o,s);return e([l,o]),i}),h,null,Ft,p);return c?xa(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});const to=ws({cos_:function(t){const e=bs(t,"x","cos"),n={x:e};return dr.runKernelFunc(((t,n)=>{const r=t.cos(e);return n([e]),r}),n,null,Bt)}});const eo=ws({cosh_:function(t){const e=bs(t,"x","cosh"),n={x:e};return dr.runKernelFunc(((t,n)=>{const r=t.cosh(e);return n([e]),r}),n,null,zt)}});const no=ws({cumsum_:function(t,e=0,n=!1,r=!1){const s=bs(t,"x","cumsum"),a={x:s},i={axis:e,exclusive:n,reverse:r};return dr.runKernelFunc(((t,a)=>{const i=ii([e],s.rank);let o=s;null!=i&&(o=Ia(s,i));const u=ui(1,s.rank)[0];let l=t.cumsum(o,u,n,r);if(a([s]),null!=i){const t=oi(i);l=Ia(l,t)}return l}),a,null,Pt,i)}});const ro=ws({depthToSpace_:function(t,e,n="NHWC"){const r=bs(t,"x","depthToSpace"),s="NHWC"===n?r.shape[1]:r.shape[2],a="NHWC"===n?r.shape[2]:r.shape[3],i="NHWC"===n?r.shape[3]:r.shape[1];u(s*e>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${e}  for depthToSpace with input shape\n    ${r.shape}`)),u(a*e>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${e} for depthToSpace with input shape\n        ${r.shape}`)),u(i%(e*e)==0,(()=>`Dimension size must be evenly divisible by ${e*e} but is ${i} for depthToSpace with input shape ${r.shape}`));const o={x:r},l={blockSize:e,dataFormat:n};return dr.runKernelFunc((t=>t.depthToSpace(r,e,n)),o,null,"DepthToSpace",l)}});const so=ws({depthwiseConv2d_:function(t,e,n,r,s="NHWC",a=[1,1],i){const o=bs(t,"x","depthwiseConv2d"),l=bs(e,"filter","depthwiseConv2d");let c=o,h=!1;3===o.rank&&(h=!0,c=xa(o,[1,o.shape[0],o.shape[1],o.shape[2]])),u(4===c.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${c.rank}.`)),u(4===l.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`)),u(c.shape[3]===l.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${c.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`)),null!=i&&u(f(r),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`));const p={x:c,filter:l},d={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i},m=dr.runKernelFunc(((t,e)=>{null==a&&(a=[1,1]),u(Ti(n,a),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`));const s=vi(c.shape,l.shape,n,a,r,i,!0),o=t.depthwiseConv2D(c,l,s);return e([c,l]),o}),p,null,Wt,d);return h?xa(m,[m.shape[1],m.shape[2],m.shape[3]]):m}});const ao=ws({dilation2d_:function(t,e,n,r,s=[1,1],a="NHWC"){const i=bs(t,"x","dilation2d"),o=bs(e,"filter","dilation2d");u(3===i.rank||4===i.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`)),u(3===o.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`)),u("NHWC"===a,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${a}`));let l=i,c=!1;3===i.rank&&(l=xa(i,[1,i.shape[0],i.shape[1],i.shape[2]]),c=!0);const h={x:l,filter:o},p={strides:n,pad:r,dilations:s},d=dr.runKernel(Gt,h,p);return c?xa(d,[d.shape[1],d.shape[2],d.shape[3]]):d}});const io=ws({floorDiv_:function(t,e){let n=bs(t,"a","floorDiv"),r=bs(e,"b","floorDiv");[n,r]=ir(n,r);const s={a:n,b:r};return dr.runKernelFunc(((t,e)=>{const s=t.floorDiv(n,r);return e([n,r]),s}),s,null,ne)}});const oo=ws({div_:function(t,e){let n=bs(t,"a","div"),r=bs(e,"b","div");if([n,r]=ir(n,r),"int32"===n.dtype&&"int32"===r.dtype)return io(n,r);const s={a:n,b:r};return dr.runKernelFunc(((t,e)=>{const s=t.realDivide(n,r);return e([n,r]),s}),s,null,qt,{})}});function uo(t,e){const n=t.length,r=[];for(let s=0;s<n;s++){const a=n-1-s,i=t[a]||1;(e[e.length-1-s]||1)>1&&1===i&&r.unshift(a)}return r}function lo(t,e){const n=[];for(let r=0;r<e.length;r++){const s=t[t.length-r-1],a=e.length-r-1,i=e[a];(null==s||1===s&&i>1)&&n.unshift(a)}return n}function co(t,e){const n=[],r=Math.max(t.length,e.length);for(let s=0;s<r;s++){let r=t[t.length-s-1];null==r&&(r=1);let a=e[e.length-s-1];if(null==a&&(a=1),1===r)n.unshift(a);else if(1===a)n.unshift(r);else{if(r!==a){throw Error(`Operands could not be broadcast together with shapes ${t} and ${e}.`)}n.unshift(r)}}return n}const ho=ws({equal_:function(t,e){let n=bs(t,"a","equal"),r=bs(e,"b","equal");[n,r]=ir(n,r),co(n.shape,r.shape);const s={a:n,b:r};return dr.runKernelFunc((t=>t.equal(n,r)),s,null,"Equal")}});const po=ws({where_:function(t,e,n){const r=bs(e,"a","where"),s=bs(n,"b","where"),a=bs(t,"condition","where","bool"),i=co(r.shape,s.shape),o=zi(r,i),c=zi(s,i);1===a.rank&&u(a.shape[0]===r.shape[0],(()=>"The first dimension of `a` must match the size of `condition`.")),1!==a.rank&&l(a.shape,c.shape,"Error in where: ");const h={condition:a,t:o,e:c};return dr.runKernelFunc(((t,e)=>{const n=t.select(a,o,c);return e([a]),n}),h,null,He)}});const fo=ws({zerosLike_:function(t){const e=bs(t,"x","zerosLike"),n={x:e};return dr.runKernelFunc((t=>t.zerosLike(e)),n,null,fn)}});const mo=ws({divNoNan_:function(t,e){let n=bs(t,"a","div"),r=bs(e,"b","div");[n,r]=ir(n,r);const s=oo(n,r),a=fo(s),i=ho(r,a);return po(i,a,s)}});const go=ws({elu_:function(t){const e=bs(t,"x","elu"),n={x:e};return dr.runKernelFunc(((t,n)=>{const r=t.elu(e);return n([r]),r}),n,null,Kt)}});const yo=ws({erf_:function(t){let e=bs(t,"x","erf");u("int32"===e.dtype||"float32"===e.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===e.dtype&&(e=la(e,"float32"));const n={x:e};return dr.runKernelFunc(((t,n)=>{const r=t.erf(e);return n([e]),r}),n,null,Xt)}});const bo=ws({exp_:function(t){const e=bs(t,"x","exp"),n={x:e};return dr.runKernelFunc(((t,n)=>{const r=t.exp(e);return n([r]),r}),n,null,Yt)}});const xo=ws({expandDims_:function(t,e=0){const n=bs(t,"x","expandDims",null);u(e<=n.rank,(()=>"Axis must be <= rank of the tensor"));const r=n.shape.slice();return e<0&&(u(-(n.rank+1)<=e,(()=>`Axis must be in the interval [${-(n.rank+1)}, ${n.rank}]`)),e=n.rank+e+1),r.splice(e,0,1),xa(n,r)}});const wo=ws({expm1_:function(t){const e=bs(t,"x","expm1"),n={x:e};return dr.runKernelFunc(((t,n)=>{const r=t.expm1(e);return n([e]),r}),n,null,Jt)}});const vo=ws({tile_:function(t,e){const n=bs(t,"x","tile",null);u(n.rank===e.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${e}.`));const r=[n],s={x:n},a={reps:e};return dr.runKernelFunc(((t,r)=>{const s=t.tile(n,e);return r([n]),s}),s,null,ln,a,r)}});const Io=ws({eye_:function(t,e,n,r="float32"){null==e&&(e=t);const s=ua([t,e],r),a=t<=e?t:e;for(let t=0;t<a;++t)s.set(1,t,t);const i=xa(s.toTensor(),[t,e]);if(null==n)return i;if(1===n.length)return vo(xo(i,0),[n[0],1,1]);if(2===n.length)return vo(xo(xo(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return vo(xo(xo(xo(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});function ko(t,e,n){const r={shape:t,value:e,dtype:n};return dr.runKernelFunc((r=>r.fill(t,e,n)),{},null,Qt,r)}const No=ws({floor_:function(t){const e=bs(t,"x","floor"),n={x:e};return dr.runKernelFunc((t=>t.floor(e)),n,null,ee)}});function So(t){return t<=30?t:A(t,Math.floor(Math.sqrt(t)))}const Eo=ws({gather_:function(t,e,n=0){const r=bs(t,"x","gather"),s=bs(e,"indices","gather","int32"),a={x:r,indices:s},i={axis:n};return dr.runKernelFunc(((t,e)=>{const a=x(n,r.shape)[0],i=function(t,e,n){const r=t.shape[n],s=[];let a=1,i=1;for(let e=0;e<n;e++)s.push(t.shape[e]),a*=t.shape[e];for(let t=0;t<e.rank;t++)s.push(e.shape[t]);for(let e=n+1;e<t.rank;e++)s.push(t.shape[e]),i*=t.shape[e];return{batchSize:a,sliceSize:i,dimSize:r,outputShape:s}}(r,s,a),o=t.gather(r,xa(s,[s.size]),a);return e([r,s]),xa(o,i.outputShape)}),a,null,se,i)}});const Co=ws({greater_:function(t,e){let n=bs(t,"a","greater"),r=bs(e,"b","greater");[n,r]=ir(n,r),co(n.shape,r.shape);const s={a:n,b:r};return dr.runKernelFunc((t=>t.greater(n,r)),s,null,"Greater")}});const $o=ws({greaterEqual_:function(t,e){let n=bs(t,"a","greaterEqual"),r=bs(e,"b","greaterEqual");[n,r]=ir(n,r),co(n.shape,r.shape);const s={a:n,b:r};return dr.runKernelFunc(((t,e)=>{const s=t.greaterEqual(n,r);return e([n,r]),s}),s,null,ae)}});const To=ws({imag_:function(t){const e=bs(t,"input","imag"),n={input:e};return dr.runKernelFunc((t=>t.imag(e)),n,null,ue)}});const Ao=ws({isFinite_:function(t){const e=bs(t,"x","isFinite"),n={x:e};return dr.runKernelFunc((t=>t.isFinite(e)),n,null,le)}});const Ro=ws({isInf_:function(t){const e=bs(t,"x","isInf"),n={x:e};return dr.runKernelFunc((t=>t.isInf(e)),n,null,ce)}});const _o=ws({isNaN_:function(t){const e=bs(t,"x","isNaN"),n={x:e};return dr.runKernelFunc((t=>t.isNaN(e)),n,null,he)}});const Do=ws({maximum_:function(t,e){let n=bs(t,"a","maximum"),r=bs(e,"b","maximum");[n,r]=ir(n,r),"bool"===n.dtype&&(n=la(n,"int32"),r=la(r,"int32")),co(n.shape,r.shape);const s={a:n,b:r};return dr.runKernelFunc(((t,e)=>{const s=t.maximum(n,r);return e([n,r]),s}),s,null,ye)}});const Mo=ws({mul_:function(t,e){let n=bs(t,"a","mul"),r=bs(e,"b","mul");[n,r]=ir(n,r);const s={a:n,b:r};return dr.runKernelFunc(((t,e)=>{const s=t.multiply(n,r);return e([n,r]),s}),s,null,Se)}});function Fo(t,e){if((N(t)&&"string"!==e||Array.isArray(t))&&"complex64"!==e)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===e&&N(t)&&!(t instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Is(t,[],[],e)}const Oo=ws({leakyRelu_:function(t,e=.2){const n=bs(t,"x","leakyRelu");return Do(Mo(Fo(e),n),n)}});const Lo=ws({less_:function(t,e){let n=bs(t,"a","less"),r=bs(e,"b","less");[n,r]=ir(n,r),co(n.shape,r.shape);const s={a:n,b:r};return dr.runKernelFunc((t=>t.less(n,r)),s,null,"Less")}});const Bo=ws({lessEqual_:function(t,e){let n=bs(t,"a","lessEqual"),r=bs(e,"b","lessEqual");[n,r]=ir(n,r),co(n.shape,r.shape);const s={a:n,b:r};return dr.runKernelFunc(((t,e)=>{const s=t.lessEqual(n,r);return e([n,r]),s}),s,null,"LessEqual")}});function zo(t,e,n){if(n<=0)throw new Error("The number of values should be positive.");const r={start:t,stop:e,num:n};return dr.runKernelFunc((r=>r.linspace(t,e,n)),{},null,"LinSpace",r)}const Po=ws({localResponseNormalization_:function(t,e=5,n=1,r=1,s=.5){const a=bs(t,"x","localResponseNormalization");u(4===a.rank||3===a.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${a.rank}.`)),u(f(e),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`));let i=a,o=!1;3===a.rank&&(o=!0,i=xa(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const l={x:i},c={depthRadius:e,bias:n,alpha:r,beta:s},h=dr.runKernelFunc(((t,a)=>{const o=t.localResponseNormalization4D(i,e,n,r,s);return a([i,o]),o}),l,null,"LRN",c);return o?xa(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});const Wo=ws({log_:function(t){const e=bs(t,"x","log"),n={x:e};return dr.runKernelFunc(((t,n)=>{const r=t.log(e);return n([e]),r}),n,null,pe)}});const Vo=ws({log1p_:function(t){const e=bs(t,"x","log1p"),n={x:e};return dr.runKernelFunc(((t,n)=>{const r=t.log1p(e);return n([e]),r}),n,null,de)}});const Uo=ws({neg_:function(t){const e=bs(t,"x","neg"),n={x:e};return dr.runKernelFunc((t=>t.neg(e)),n,null,Ee)}});const Go=ws({sigmoid_:function(t){const e=bs(t,"x","sigmoid"),n={x:e};return dr.runKernelFunc(((t,n)=>{const r=t.sigmoid(e);return n([r]),r}),n,null,Je)}});const Ho=ws({softplus_:function(t){const e=bs(t,"x","softplus"),n={x:e};return dr.runKernelFunc(((t,n)=>{const r=t.softplus(e);return n([e]),r}),n,null,Ze)}});const jo=ws({logSigmoid_:function(t){const e=bs(t,"x","logSigmoid");return Ya((t=>({value:Uo(Ho(Uo(t))),gradFunc:e=>Mo(e,Go(Uo(t)))})))(e)}});const qo=ws({max_:function(t,e=null,n=!1){const r=bs(t,"x","max"),s={x:r},a={reductionIndices:e,keepDims:n};return dr.runKernelFunc(((t,s)=>{let a=x(e,r.shape);const i=ii(a,r.rank);let o=r;null!=i&&(o=Ia(r,i),a=ui(a.length,o.rank));const u=t.max(o,a);null!=i&&o.dispose();let l=u;if(n){const t=si(l.shape,x(e,r.shape));l=xa(l,t),u.dispose()}return s([r,l]),l}),s,null,ge,a)}});const Ko=ws({sub_:function(t,e){let n=bs(t,"a","sub"),r=bs(e,"b","sub");[n,r]=ir(n,r);const s={a:n,b:r};return dr.runKernelFunc(((t,e)=>{const s=t.subtract(n,r);return e([n,r]),s}),s,null,an)}});const Xo=ws({sum_:function(t,e=null,n=!1){let r=bs(t,"x","sum");"bool"===r.dtype&&(r=la(r,"int32"));const s={x:r},a={axis:e,keepDims:n};return dr.runKernelFunc(((t,s)=>{s([r]);const a=x(e,r.shape),i=ii(a,r.rank);let o=a,u=r;null!=i&&(u=Ia(r,i),o=ui(o.length,r.rank));let l=t.sum(u,o);if(n){const t=si(l.shape,a);l=xa(l,t)}return l}),s,null,"Sum",a)}});const Yo=ws({logSoftmax_:function(t,e=-1){const n=bs(t,"logits","logSoftmax");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${e}`);const r={logits:n},s={axis:e};return dr.runKernelFunc(((n,r)=>{const s=qo(t,e,!0),a=Ko(t,s),i=Ko(la(a,"float32"),Wo(Xo(bo(a),e,!0)));return r([i]),i}),r,null,me,s)}});const Jo=ws({logicalAnd_:function(t,e){const n=bs(t,"a","logicalAnd","bool"),r=bs(e,"b","logicalAnd","bool");co(n.shape,r.shape);const s={a:n,b:r};return dr.runKernelFunc((t=>t.logicalAnd(n,r)),s,null,"LogicalAnd")}});const Zo=ws({logicalNot_:function(t){const e=bs(t,"x","logicalNot","bool"),n={x:e};return dr.runKernelFunc((t=>t.logicalNot(e)),n,null,fe)}});const Qo=ws({logicalOr_:function(t,e){const n=bs(t,"a","logicalOr","bool"),r=bs(e,"b","logicalOr","bool");co(n.shape,r.shape);const s={a:n,b:r};return dr.runKernelFunc((t=>t.logicalOr(n,r)),s,null,"LogicalOr")}});const tu=ws({maxPool_:function(t,e,n,r,s){const a=bs(t,"x","maxPool");let i=a,o=!1;3===a.rank&&(o=!0,i=xa(a,[1,a.shape[0],a.shape[1],a.shape[2]])),u(4===i.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`)),u(Ti(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),null!=s&&u(f(r),(()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`));const l={x:i},c={filterSize:e,strides:n,pad:r,dimRoundingMode:s},h=dr.runKernelFunc(((t,a)=>{const o=xi(i.shape,e,n,1,r,s);let u;return u=1===o.filterWidth&&1===o.filterHeight&&d(o.inShape,o.outShape)?i.clone():t.maxPool(i,o),a([i,u]),u}),l,null,be,c);return o?xa(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});const eu=ws({maxPool3d_:function(t,e=[1,1,1],n,r,s,a="NDHWC",i){null==i?i=[1,1,1]:Ua("dilations is deprecated, this field will be gone in v3.0.0.");const o=bs(t,"x","maxPool3d");let l=o,c=!1;4===o.rank&&(c=!0,l=xa(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),u(5===l.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${l.rank}.`)),u("NDHWC"===a,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`)),u(Ti(n,i),(()=>`Error in maxPool3d: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`)),null!=s&&u(f(r),(()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`));const h={x:l},p={filterSize:e,strides:n,pad:r,dimRoundingMode:s,dataFormat:a,dilations:i},d=dr.runKernelFunc(((t,o)=>{null==i&&(i=[1,1,1]);const u=wi(l.shape,e,n,i,r,s,a),c=t.maxPool3d(l,u);return o([l,c]),c}),h,null,we,p);return c?xa(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});const nu=ws({maxPoolWithArgmax_:function(t,e,n,r,s=!1){const a={x:bs(t,"x","maxPoolWithArgmax")},i={filterSize:e,strides:n,pad:r,includeBatchInIndex:s},o=dr.runKernel(ve,a,i);return{result:o[0],indexes:o[1]}}});function ru(t,e="float32"){if("complex64"===e){const e=ru(t,"float32"),n=ru(t,"float32");return vs(e,n)}const n=F(p(t),e);return dr.makeTensor(n,t,e)}function su(t,e="float32"){if("complex64"===e){const e=su(t,"float32"),n=ru(t,"float32");return vs(e,n)}const n=M(p(t),e);return dr.makeTensor(n,t,e)}const au=ws({mean_:function(t,e=null,n=!1){const r=bs(t,"x","mean"),s=x(e,r.shape),a=p(ri(r.shape,s)[1]),i={x:r},o={axis:e,keepDims:n},u=()=>{const t=Fo(a),s=t.dtype===r.dtype?r:la(r,t.dtype),i=oo(s,t);return Xo(i,e,n)};return Ya((t=>({value:dr.runKernelFunc(u,i,null,Ie,o),gradFunc:e=>{const n=t.shape.slice();s.forEach((t=>{n[t]=1}));const r=xa(e,n);return oo(Mo(r,su(t.shape,"float32")),a)}})))(r)}});const iu=ws({min_:function(t,e=null,n=!1){const r=bs(t,"x","min"),s={x:r},a={axis:e,keepDims:n};return dr.runKernelFunc(((t,s)=>{const a=x(e,r.shape);let i=a;const o=ii(i,r.rank);let u=r;null!=o&&(u=Ia(r,o),i=ui(i.length,r.rank));const l=t.min(u,i);null!=o&&u.dispose();let c=l;if(n){const t=si(c.shape,a);c=xa(l,t),l.dispose()}return s([r,c]),c}),s,null,"Min",a)}});const ou=ws({minimum_:function(t,e){let n=bs(t,"a","minimum"),r=bs(e,"b","minimum");[n,r]=ir(n,r),"bool"===n.dtype&&(n=la(n,"int32"),r=la(r,"int32")),co(n.shape,r.shape);const s={a:n,b:r};return dr.runKernelFunc(((t,e)=>{const s=t.minimum(n,r);return e([n,r]),s}),s,null,ke)}});const uu=ws({mirrorPad_:function(t,e,n){u("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const r=bs(t,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");u(e.length===r.rank,(()=>`Padding doesn't match input. Must be ${r.rank}. Got ${e.length}.`));const s="reflect"===n?1:0;for(let t=0;t<r.rank;t++)u(2===e[t].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),u(e[t][0]>=0&&e[t][0]<=r.shape[t]-s&&e[t][1]>=0&&e[t][1]<=r.shape[t]-s,(()=>`Padding in dimension ${t} cannot be greater than or equal to ${r.shape[t]-s} or less than 0 for input of shape ${r.shape}`));const a={paddings:e,mode:n},i={x:r};return dr.runKernel(Ne,i,a)}});const lu=ws({mod_:function(t,e){let n=bs(t,"a","mod"),r=bs(e,"b","mod");[n,r]=ir(n,r);const s={a:n,b:r};return dr.runKernelFunc(((t,e)=>{const s=t.mod(n,r);return e([n,r]),s}),s,null,"Mod")}});const cu=ws({square_:function(t){const e=bs(t,"x","square"),n=[e];return dr.runKernelFunc(((t,n)=>(n([e]),t.square(e))),{x:e},null,"Square",{},n,[])}});const hu=ws({moments_:function(t,e=null,n=!1){const r=x(e,(t=bs(t,"x","moments")).shape),s=au(t,r,n);let a=s.shape;n||(a=si(s.shape,r));const i=cu(Ko(la(t,"float32"),xa(s,a)));return{mean:s,variance:au(i,r,n)}}});const pu=ws({multinomial_:function(t,e,n,r=!1){const s=bs(t,"logits","multinomial"),a=s.size,i=s.rank;if(a<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${a}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);n=n||Math.random();const o=1===i?xa(s,[1,-1]):s,u=dr.runKernelFunc((t=>t.multinomial(o,r,e,n)),{logits2D:o});return 1===i?xa(u,[u.size]):u}});const du=ws({notEqual_:function(t,e){let n=bs(t,"a","notEqual"),r=bs(e,"b","notEqual");[n,r]=ir(n,r),co(n.shape,r.shape);const s={a:n,b:r};return dr.runKernelFunc((t=>t.notEqual(n,r)),s,null,Ce)}});const fu=ws({real_:function(t){const e=bs(t,"input","real"),n={input:e};return dr.runKernelFunc((t=>t.real(e)),n,null,Fe)}});const mu=ws({onesLike_:function(t){const e=bs(t,"x","onesLike"),n={x:e};return dr.runKernelFunc(((t,n)=>{if("complex64"===e.dtype){const t=mu(fu(e)),n=fo(To(e));return vs(t,n)}return t.onesLike(e)}),n,null,Re)}});const gu=ws({pad_:function(t,e,n=0){const r=bs(t,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const s={paddings:e,constantValue:n},a={x:r};return dr.runKernelFunc(((t,s)=>(s([r]),t.pad(r,e,n))),a,null,De,s)}});const yu=ws({pow_:function(t,e){let n=bs(t,"base","pow"),r=bs(e,"exp","pow");[n,r]=ir(n,r);const s={a:n,b:r};return dr.runKernelFunc(((t,e)=>{const s=t.pow(n,r);return e([n,r,s]),s}),s,null,"Pow")}});const bu=ws({prelu_:function(t,e){const n=bs(t,"x","prelu"),r=bs(e,"alpha","prelu"),s={x:n,alpha:r};return dr.runKernelFunc(((t,e)=>{const s=t.prelu(n,r);return e([n,r]),s}),s,null,Me)}});const xu=ws({prod_:function(t,e=null,n=!1){let r=bs(t,"x","prod");"bool"===r.dtype&&(r=la(r,"int32"));const s={x:r},a={axis:e,keepDims:n};return dr.runKernelFunc((t=>{const s=x(e,r.shape),a=ii(s,r.rank);let i=s,o=r;null!=a&&(o=Ia(r,a),i=ui(i.length,r.rank));let u=t.prod(o,i);if(n){const t=si(u.shape,s);u=xa(u,t)}return u}),s,null,"Prod",a)}});var wu={},vu=function(){var t={exports:this};return function(t,e,n){function r(t){var e,n=this,r=(e=4022871197,function(t){t=t.toString();for(var n=0;n<t.length;n++){var r=.02519603282416938*(e+=t.charCodeAt(n));r-=e=r>>>0,e=(r*=e)>>>0,e+=4294967296*(r-=e)}return 2.3283064365386963e-10*(e>>>0)});n.next=function(){var t=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=t-(n.c=0|t)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(t),n.s0<0&&(n.s0+=1),n.s1-=r(t),n.s1<0&&(n.s1+=1),n.s2-=r(t),n.s2<0&&(n.s2+=1),r=null}function s(t,e){return e.c=t.c,e.s0=t.s0,e.s1=t.s1,e.s2=t.s2,e}function a(t,e){var n=new r(t),a=e&&e.state,i=n.next;return i.int32=function(){return 4294967296*n.next()|0},i.double=function(){return i()+11102230246251565e-32*(2097152*i()|0)},i.quick=i,a&&("object"==typeof a&&s(a,n),i.state=function(){return s(n,{})}),i}e&&e.exports?e.exports=a:n&&n.amd?n((function(){return a})):this.alea=a}(0,"object"==typeof t&&t,!1),t.exports}.call({}),Iu=function(){var t={exports:this};return function(t,e,n){function r(t){var e=this,n="";e.x=0,e.y=0,e.z=0,e.w=0,e.next=function(){var t=e.x^e.x<<11;return e.x=e.y,e.y=e.z,e.z=e.w,e.w^=e.w>>>19^t^t>>>8},t===(0|t)?e.x=t:n+=t;for(var r=0;r<n.length+64;r++)e.x^=0|n.charCodeAt(r),e.next()}function s(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e}function a(t,e){var n=new r(t),a=e&&e.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},i.int32=n.next,i.quick=i,a&&("object"==typeof a&&s(a,n),i.state=function(){return s(n,{})}),i}e&&e.exports?e.exports=a:n&&n.amd?n((function(){return a})):this.xor128=a}(0,"object"==typeof t&&t,!1),t.exports}.call({}),ku=function(){var t={exports:this};return function(t,e,n){function r(t){var e=this,n="";e.next=function(){var t=e.x^e.x>>>2;return e.x=e.y,e.y=e.z,e.z=e.w,e.w=e.v,(e.d=e.d+362437|0)+(e.v=e.v^e.v<<4^t^t<<1)|0},e.x=0,e.y=0,e.z=0,e.w=0,e.v=0,t===(0|t)?e.x=t:n+=t;for(var r=0;r<n.length+64;r++)e.x^=0|n.charCodeAt(r),r==n.length&&(e.d=e.x<<10^e.x>>>4),e.next()}function s(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e.v=t.v,e.d=t.d,e}function a(t,e){var n=new r(t),a=e&&e.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},i.int32=n.next,i.quick=i,a&&("object"==typeof a&&s(a,n),i.state=function(){return s(n,{})}),i}e&&e.exports?e.exports=a:n&&n.amd?n((function(){return a})):this.xorwow=a}(0,"object"==typeof t&&t,!1),t.exports}.call({}),Nu=function(){var t={exports:this};return function(t,e,n){function r(t){var e=this;e.next=function(){var t,n,r=e.x,s=e.i;return t=r[s],n=(t^=t>>>7)^t<<24,n^=(t=r[s+1&7])^t>>>10,n^=(t=r[s+3&7])^t>>>3,n^=(t=r[s+4&7])^t<<7,t=r[s+7&7],n^=(t^=t<<13)^t<<9,r[s]=n,e.i=s+1&7,n},function(t,e){var n,r=[];if(e===(0|e))r[0]=e;else for(e=""+e,n=0;n<e.length;++n)r[7&n]=r[7&n]<<15^e.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],t.x=r,t.i=0,n=256;n>0;--n)t.next()}(e,t)}function s(t,e){return e.x=t.x.slice(),e.i=t.i,e}function a(t,e){null==t&&(t=+new Date);var n=new r(t),a=e&&e.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},i.int32=n.next,i.quick=i,a&&(a.x&&s(a,n),i.state=function(){return s(n,{})}),i}e&&e.exports?e.exports=a:n&&n.amd?n((function(){return a})):this.xorshift7=a}(0,"object"==typeof t&&t,!1),t.exports}.call({}),Su=function(){var t={exports:this};return function(t,e,n){function r(t){var e=this;e.next=function(){var t,n,r=e.w,s=e.X,a=e.i;return e.w=r=r+1640531527|0,n=s[a+34&127],t=s[a=a+1&127],n^=n<<13,t^=t<<17,n^=n>>>15,t^=t>>>12,n=s[a]=n^t,e.i=a,n+(r^r>>>16)|0},function(t,e){var n,r,s,a,i,o=[],u=128;for(e===(0|e)?(r=e,e=null):(e+="\0",r=0,u=Math.max(u,e.length)),s=0,a=-32;a<u;++a)e&&(r^=e.charCodeAt((a+32)%e.length)),0===a&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,a>=0&&(i=i+1640531527|0,s=0==(n=o[127&a]^=r+i)?s+1:0);for(s>=128&&(o[127&(e&&e.length||0)]=-1),s=127,a=512;a>0;--a)r=o[s+34&127],n=o[s=s+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[s]=r^n;t.w=i,t.X=o,t.i=s}(e,t)}function s(t,e){return e.i=t.i,e.w=t.w,e.X=t.X.slice(),e}function a(t,e){null==t&&(t=+new Date);var n=new r(t),a=e&&e.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},i.int32=n.next,i.quick=i,a&&(a.X&&s(a,n),i.state=function(){return s(n,{})}),i}e&&e.exports?e.exports=a:n&&n.amd?n((function(){return a})):this.xor4096=a}(0,"object"==typeof t&&t,!1),t.exports}.call({}),Eu=function(){var t={exports:this};return function(t,e,n){function r(t){var e=this,n="";e.next=function(){var t=e.b,n=e.c,r=e.d,s=e.a;return t=t<<25^t>>>7^n,n=n-r|0,r=r<<24^r>>>8^s,s=s-t|0,e.b=t=t<<20^t>>>12^n,e.c=n=n-r|0,e.d=r<<16^n>>>16^s,e.a=s-t|0},e.a=0,e.b=0,e.c=-1640531527,e.d=1367130551,t===Math.floor(t)?(e.a=t/4294967296|0,e.b=0|t):n+=t;for(var r=0;r<n.length+20;r++)e.b^=0|n.charCodeAt(r),e.next()}function s(t,e){return e.a=t.a,e.b=t.b,e.c=t.c,e.d=t.d,e}function a(t,e){var n=new r(t),a=e&&e.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},i.int32=n.next,i.quick=i,a&&("object"==typeof a&&s(a,n),i.state=function(){return s(n,{})}),i}e&&e.exports?e.exports=a:n&&n.amd?n((function(){return a})):this.tychei=a}(0,"object"==typeof t&&t,!1),t.exports}.call({}),Cu={};!function(t,e){var n,r=this,s=256,a=e.pow(s,6),i=e.pow(2,52),o=2*i,u=255;function l(u,l,m){var g=[],y=d(p((l=1==l?{entropy:!0}:l||{}).entropy?[u,f(t)]:null==u?function(){try{var e;return n&&(e=n.randomBytes)?e=e(s):(e=new Uint8Array(s),(r.crypto||r.msCrypto).getRandomValues(e)),f(e)}catch(e){var a=r.navigator,i=a&&a.plugins;return[+new Date,r,i,r.screen,f(t)]}}():u,3),g),b=new c(g),x=function(){for(var t=b.g(6),e=a,n=0;t<i;)t=(t+n)*s,e*=s,n=b.g(1);for(;t>=o;)t/=2,e/=2,n>>>=1;return(t+n)/e};return x.int32=function(){return 0|b.g(4)},x.quick=function(){return b.g(4)/4294967296},x.double=x,d(f(b.S),t),(l.pass||m||function(t,n,r,s){return s&&(s.S&&h(s,b),t.state=function(){return h(b,{})}),r?(e.random=t,n):t})(x,y,"global"in l?l.global:this==e,l.state)}function c(t){var e,n=t.length,r=this,a=0,i=r.i=r.j=0,o=r.S=[];for(n||(t=[n++]);a<s;)o[a]=a++;for(a=0;a<s;a++)o[a]=o[i=u&i+t[a%n]+(e=o[a])],o[i]=e;(r.g=function(t){for(var e,n=0,a=r.i,i=r.j,o=r.S;t--;)e=o[a=u&a+1],n=n*s+o[u&(o[a]=o[i=u&i+e])+(o[i]=e)];return r.i=a,r.j=i,n})(s)}function h(t,e){return e.i=t.i,e.j=t.j,e.S=t.S.slice(),e}function p(t,e){var n,r=[],s=typeof t;if(e&&"object"==s)for(n in t)try{r.push(p(t[n],e-1))}catch(t){}return r.length?r:"string"==s?t:t+"\0"}function d(t,e){for(var n,r=t+"",s=0;s<r.length;)e[u&s]=u&(n^=19*e[u&s])+r.charCodeAt(s++);return f(e)}function f(t){return String.fromCharCode.apply(0,t)}if(e.seedrandom=l,d(e.random(),t),Cu){Cu=l;try{n=sa()}catch(t){}}else 0}([],Math),Cu.alea=vu,Cu.xor128=Iu,Cu.xorwow=ku,Cu.xorshift7=Nu,Cu.xor4096=Su,Cu.tychei=Eu,wu=Cu;class $u{constructor(t,e,n,r,s){this.mean=t,this.stdDev=e,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const a=s||Math.random();this.random=wu.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){const t=this.nextVal;return this.nextVal=NaN,t}let t,e,n=!1;for(;!n;){let r,s,a;do{r=2*this.random()-1,s=2*this.random()-1,a=r*r+s*s}while(a>=1||0===a);const i=Math.sqrt(-2*Math.log(a)/a);t=this.mean+this.stdDev*r*i,e=this.mean+this.stdDev*s*i,this.truncated&&!this.isValidTruncated(t)||(n=!0)}return this.truncated&&!this.isValidTruncated(e)||(this.nextVal=this.convertValue(e)),this.convertValue(t)}convertValue(t){return null==this.dtype||"float32"===this.dtype?t:Math.round(t)}isValidTruncated(t){return t<=this.upper&&t>=this.lower}}class Tu{constructor(t=0,e=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=t,this.range=e-t,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${t} - ${e} <= 1 and dtype is not float`);this.random=wu.alea(r)}convertValue(t){return this.canReturnFloat()?t:Math.round(t)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const Au=ws({randomNormal_:function(t,e=0,n=1,r,s){if(null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);const a=new $u(e,n,r,!1,s),i=ua(t,r);for(let t=0;t<i.values.length;t++)i.values[t]=a.nextValue();return i.toTensor()}});const Ru=ws({randomUniform_:function(t,e=0,n=1,r="float32",s){const a=ua(t,r),i=new Tu(e,n,null,s);for(let t=0;t<a.values.length;t++)a.values[t]=i.nextValue();return a.toTensor()}});function _u(t,e){c(t);const n=ms(t,e);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Is(t,null,n,e)}function Du(t,e,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");const s={start:t,stop:e,step:n,dtype:r};return dr.runKernelFunc((()=>{if(t===e||t<e&&n<0||e<t&&n>1)return ru([0],r);const s=F(Math.abs(Math.ceil((e-t)/n)),r);e<t&&1===n&&(n=-1),s[0]=t;for(let t=1;t<s.length;t++)s[t]=s[t-1]+n;return _u(s,r)}),{},null,"Range",s)}const Mu=ws({reciprocal_:function(t){const e=bs(t,"x","reciprocal"),n={x:e};return dr.runKernelFunc(((t,n)=>{const r=t.reciprocal(e);return n([e]),r}),n,null,Oe)}});const Fu=ws({relu_:function(t){const e=bs(t,"x","relu"),n={x:e};return dr.runKernelFunc(((t,n)=>(n([e]),"bool"===e.dtype?la(e,"int32"):t.relu(e))),n,null,Le)}});const Ou=ws({reverse_:function(t,e){const n=bs(t,"x","reverse"),r={x:n},s={dims:e};return dr.runKernelFunc((t=>{const r=x(e,n.shape);if(0===n.rank)return ca(n);const s=t.reverse(n,r);return xa(s,n.shape)}),r,null,Ve,s)}});const Lu=ws({round_:function(t){const e=bs(t,"x","round"),n={x:e};return dr.runKernelFunc((t=>t.round(e)),n,null,Ue)}});const Bu=ws({rsqrt_:function(t){const e=bs(t,"x","rsqrt"),n={x:e};return dr.runKernelFunc(((t,n)=>{const r=t.rsqrt(e);return n([e]),r}),n,null,Ge)}});const zu=ws({selu_:function(t){const e=bs(t,"x","selu"),n={x:e};return dr.runKernelFunc(((t,n)=>{const r=t.selu(e);return n([e]),r}),n,null,je)}});const Pu=ws({separableConv2d_:function(t,e,n,r,s,a=[1,1],i="NHWC"){const o=bs(t,"x","separableConv2d"),l=bs(e,"depthwiseFilter","separableConv2d"),c=bs(n,"pointwiseFilter","separableConv2d");let h=o,p=!1;if(3===o.rank&&(p=!0,h=xa(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===i)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");u(4===h.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${h.rank}.`)),u(4===l.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`)),u(4===c.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`)),u(1===c.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${c.shape[0]}.`)),u(1===c.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${c.shape[1]}.`));const d=l.shape[2],f=l.shape[3];u(c.shape[2]===d*f,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*f}, but got ${c.shape[2]}.`));const m=so(h,l,r,s,i,a),g=Xi(m,c,1,"valid",i);return p?xa(g,[g.shape[1],g.shape[2],g.shape[3]]):g}});const Wu=async function(t,e){const n=bs(t,"x","setdiff1d"),r=bs(e,"y","setdiff1d");u(n.dtype===r.dtype,(()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`)),u(1===n.rank,(()=>`x should be 1D tensor, but got x (${n.shape}).`)),u(1===r.rank,(()=>`y should be 1D tensor, but got y (${r.shape}).`));const s=await n.data(),a=await r.data(),i=new Set(a);let o=0;for(let t=0;t<s.length;t++)i.has(s[t])||o++;const l=new Wn([o],n.dtype),c=new Wn([o],"int32");for(let t=0,e=0;t<s.length;t++)i.has(s[t])||(l.values[e]=s[t],c.values[e]=t,e++);return[l.toTensor(),c.toTensor()]};const Vu=ws({sign_:function(t){const e=bs(t,"x","sign"),n={x:e};return dr.runKernelFunc((t=>t.sign(e)),n,null,Ye)}});const Uu=ws({sin_:function(t){const e=bs(t,"x","sin"),n={x:e};return dr.runKernelFunc(((t,n)=>{const r=t.sin(e);return n([e]),r}),n,null,Ke)}});const Gu=ws({sinh_:function(t){const e=bs(t,"x","sinh"),n={x:e};return dr.runKernelFunc(((t,n)=>{const r=t.sinh(e);return n([e]),r}),n,null,Xe)}});const Hu=ws({slice_:function(t,e,n){const r=bs(t,"x","slice");if(0===r.rank)throw new Error("Slicing scalar is not possible");const s={x:r},a={begin:e,size:n};return dr.runKernelFunc(((t,s)=>{const[a,i]=za(r,e,n);return $a(r,a,i),s([r]),t.slice(r,a,i)}),s,null,qe,a)}});const ju=ws({slice1d_:function(t,e,n){const r=bs(t,"x","slice1d");return u(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),Hu(r,[e],[n])}});const qu=ws({slice2d_:function(t,e,n){const r=bs(t,"x","slice2d");return u(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),Hu(r,e,n)}});const Ku=ws({slice3d_:function(t,e,n){const r=bs(t,"x","slice3d");return u(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),Hu(r,e,n)}});const Xu=ws({slice4d_:function(t,e,n){const r=bs(t,"x","slice4d");return u(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),Hu(r,e,n)}});const Yu=ws({softmax_:function(t,e=-1){const n=bs(t,"logits","softmax","float32");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${e}`);const r={logits:n},s={dim:e};return dr.runKernelFunc(((t,r)=>{const s=t.softmax(n,e);return r([s]),s}),r,null,nn,s)}});const Ju=ws({spaceToBatchND_:function(t,e,n){const r=bs(t,"x","spaceToBatchND");u(r.rank>=1+e.length,(()=>`input rank ${r.rank} should be > than [blockShape] ${e.length}`)),u(n.length===e.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${e.length}`)),u(r.shape.reduce(((t,r,s)=>s>0&&s<=e.length?t&&(r+n[s-1][0]+n[s-1][1])%e[s-1]==0:t),!0),(()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${e.toString()}`));const s={x:r},a={blockShape:e,paddings:n};return dr.runKernelFunc((t=>t.spaceToBatchND(r,e,n)),s,null,tn,a)}});const Zu=ws({fft_:function(t){u("complex64"===t.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${t.dtype}.`));const e={input:t};return dr.runKernelFunc((e=>{const n=t.shape[t.shape.length-1],r=t.size/n,s=t.as2D(r,n);return e.fft(s).reshape(t.shape)}),e,null,Zt)}});const Qu=ws({ifft_:function(t){u("complex64"===t.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${t.dtype}.`));const e={input:t};return dr.runKernelFunc((e=>{const n=t.shape[t.shape.length-1],r=t.size/n,s=xa(t,[r,n]),a=e.ifft(s);return xa(a,t.shape)}),e,null,oe)}});const tl=ws({irfft_:function(t){const e=t.shape[t.shape.length-1],n=t.size/e;let r;if(e<=2){const s=xa(t,[n,e]);r=Qu(s)}else{const s=[n,2*(e-1)],a=xa(fu(t),[n,e]),i=xa(To(t),[n,e]),o=Ou(Hu(a,[0,1],[n,e-2]),1),u=Mo(Ou(Hu(i,[0,1],[n,e-2]),1),Fo(-1)),l=Gi([a,o],1),c=Gi([i,u],1),h=xa(vs(l,c),[s[0],s[1]]);r=Qu(h)}if(r=fu(r),3===t.rank&&0!==t.shape[0]){const e=r,n=t.shape[0];r=xa(r,[n,r.shape[0]/n,r.shape[1]]),e.dispose()}return r}});const el=ws({split_:function(t,e,n=0){const r=bs(t,"x","split"),s={x:r},a={numOrSizeSplits:e,axis:n};return dr.runKernelFunc(((t,s)=>{const a=x(n,r.shape)[0],i=function(t,e,n=0){let r=[];if("number"==typeof e)u(t.shape[n]%e==0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(e).fill(t.shape[n]/e);else{u(e.reduce(((t,e)=>(-1===e&&(t+=1),t)),0)<=1,(()=>"There should be only one negative value in split array."));const s=e.indexOf(-1);if(-1!==s){const r=e.reduce(((t,e)=>e>0?t+e:t));e[s]=t.shape[n]-r}u(t.shape[n]===e.reduce(((t,e)=>t+e)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=e}return r}(r,e,a);return t.split(r,i,a)}),s,null,en,a)}});const nl=ws({rfft_:function(t,e){u("float32"===t.dtype,(()=>`The dtype for rfft() must be real value but got ${t.dtype}`));let n=t.shape[t.shape.length-1];const r=t.size/n;let s;if(null!=e&&e<n){const r=t.shape.map((t=>0)),a=t.shape.map((t=>t));a[t.shape.length-1]=e,s=Hu(t,r,a),n=e}else if(null!=e&&e>n){const r=t.shape.map((t=>t));r[t.shape.length-1]=e-n,s=Gi([t,ru(r)],t.shape.length-1),n=e}else s=t;const a=fo(s),i=xa(vs(s,a),[r,n]),o=Zu(i),l=Math.floor(n/2)+1,c=fu(o),h=To(o),p=el(c,[l,n-l],c.shape.length-1),d=el(h,[l,n-l],h.shape.length-1),f=s.shape.slice();return f[s.shape.length-1]=l,xa(vs(p[0],d[0]),f)}});const rl=ws({sqrt_:function(t){const e=bs(t,"x","sqrt"),n={x:e};return dr.runKernelFunc(((t,n)=>{const r=t.sqrt(e);return n([e]),r}),n,null,Qe)}});const sl=ws({squaredDifference_:function(t,e){let n=bs(t,"a","squaredDifference"),r=bs(e,"b","squaredDifference");[n,r]=ir(n,r),co(n.shape,r.shape);const s={a:n,b:r};return dr.runKernelFunc(((t,e)=>{const s=t.squaredDifference(n,r);return e([n,r]),s}),s,null,rn,{})}});const al=ws({squeeze_:function(t,e){const n=bs(t,"x","squeeze");return xa(n,w(n.shape,e).newShape)}});const il=ws({stack_:function(t,e=0){const n=xs(t,"tensors","stack");if(u(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),1===n.length)return xo(n[0],e);const r=n[0].rank,s=n[0].shape,a=n[0].dtype;u(e<=r,(()=>"Axis must be <= rank of the tensor")),n.forEach((t=>{l(s,t.shape,"All tensors passed to stack must have matching shapes"),u(a===t.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const i=n.map((t=>xo(t,e)));return Gi(i,e)}});const ol=ws({step_:function(t,e=0){const n=bs(t,"x","step"),r={x:n},s={alpha:e};return dr.runKernelFunc((t=>t.step(n,e)),r,null,mn,s)}});const ul=ws({stridedSlice_:function(t,e,n,r,s=0,a=0,i=0,o=0,u=0){let l=bs(t,"x","stridedSlice");const c={x:l},h={begin:e,end:n,strides:r,beginMask:s,endMask:a,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:u};return dr.runKernelFunc((t=>{null==r&&(r=new Array(e.length));const c=Ta(i);if(c.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(0!==i&&0!==o)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(0!==i&&0!==u)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");const h=l.rank-e.length,p=Ta(o),d=l.shape.slice();p.forEach((t=>{e[t]=0,n[t]=1,d.splice(t,0,1)})),l=xa(l,d);const{begin:f,end:m,strides:g}=Da(l.shape,c,h,e,n,r,s,a,i);e=f,n=m,r=g;const y=Ta(u);y.forEach((t=>{n[t]=e[t]+1,r[t]=1}));const b=Aa(e,n,r),x=b.filter(((t,e)=>-1===y.indexOf(e)));if(r.every((t=>1===t)))return xa(Hu(l,e,b),x);const w=t.stridedSlice(l,e,n,r);return xa(w,x)}),c,null,"StridedSlice",h)}});const ll=ws({tan_:function(t){const e=bs(t,"x","tan"),n={x:e};return dr.runKernelFunc(((t,n)=>{const r=t.tan(e);return n([e]),r}),n,null,on)}});const cl=ws({tanh_:function(t){const e=bs(t,"x","tanh"),n={x:e};return dr.runKernelFunc(((t,n)=>{const r=t.tanh(e);return n([r]),r}),n,null,un)}});function hl(t,e,n){if(c(t),null!=e&&2!==e.length)throw new Error("tensor2d() requires shape to have two numbers");const r=ms(t,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Is(t,e,r,n)}function pl(t,e,n){if(c(t),null!=e&&4!==e.length)throw new Error("tensor4d() requires shape to have four numbers");const r=ms(t,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Is(t,e,r,n)}const dl=ws({topk_:function(t,e=1,n=!0){const r=bs(t,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const s=r.shape[r.shape.length-1];if(e>s)throw new Error(`'k' passed to topk() must be <= the last dimension (${s}) but got ${e}`);const a={x:r},i={k:e,sorted:n},[o,u]=dr.runKernelFunc((t=>t.topk(r,e,n)),a,null,"TopK",i);return{values:o,indices:u}}});const fl=ws({truncatedNormal_:function(t,e=0,n=1,r,s){if(null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const a=new $u(e,n,r,!0,s),i=ua(t,r);for(let t=0;t<i.values.length;t++)i.values[t]=a.nextValue();return i.toTensor()}});const ml=ws({unique_:function(t,e=0){const n=bs(t,"x","unique",null);u(n.rank>0,(()=>"The input tensor must be at least 1D"));const r={x:n},s={axis:e},[a,i]=dr.runKernel(hn,r,s);return{values:a,indices:i}}});const gl=ws({unstack_:function(t,e=0){const n=bs(t,"x","unstack");u(e>=-n.shape.length&&e<n.shape.length,(()=>`Axis = ${e} is not in [-${n.shape.length}, ${n.shape.length})`)),e<0&&(e+=n.shape.length);const r={value:n},s={axis:e};return dr.runKernelFunc((t=>t.unstack(n,e)),r,null,pn,s)}});function yl(t,e){const n=[];for(let t=0;t<e.length;t++)e[t]&&n.push(t);const r=ua(t,"int32"),s=ua([n.length,t.length],"int32");for(let e=0;e<n.length;e++){const a=r.indexToLoc(n[e]),i=e*t.length;s.values.set(a,i)}return s.toTensor()}const bl=async function(t){const e=bs(t,"condition","whereAsync","bool"),n=await e.data(),r=yl(e.shape,n);return t!==e&&e.dispose(),r};const xl=ws({equalStrict_:function(t,e){Ua("strict variants of ops have been deprecated and will be removed in future");const n=bs(t,"a","equalStrict"),r=bs(e,"b","equalStrict");return l(n.shape,r.shape,"Error in equalStrict: "),ho(n,r)}}),wl=ws({greaterEqualStrict_:function(t,e){Ua("strict variants of ops have been deprecated and will be removed in future");const n=bs(t,"a","greaterEqualStrict"),r=bs(e,"b","greaterEqualStrict");return l(n.shape,r.shape,"Error in greaterEqualStrict: "),$o(n,r)}}),vl=ws({greaterStrict_:function(t,e){Ua("strict variants of ops have been deprecated and will be removed in future");const n=bs(t,"a","greaterStrict"),r=bs(e,"b","greaterStrict");return l(n.shape,r.shape,"Error in greaterStrict: "),Co(n,r)}}),Il=ws({lessEqualStrict_:function(t,e){Ua("strict variants of ops have been deprecated and will be removed in future");const n=bs(t,"a","lessEqualStrict"),r=bs(e,"b","lessEqualStrict");return l(n.shape,r.shape,"Error in lessEqualStrict: "),Bo(n,r)}}),kl=ws({lessStrict_:function(t,e){Ua("strict variants of ops have been deprecated and will be removed in future");const n=bs(t,"a","lessStrict"),r=bs(e,"b","lessStrict");return l(n.shape,r.shape,"Error in lessStrict: "),Lo(n,r)}}),Nl=ws({notEqualStrict_:function(t,e){Ua("strict variants of ops have been deprecated and will be removed in future");const n=bs(t,"a","notEqualStrict"),r=bs(e,"b","notEqualStrict");return l(n.shape,r.shape,"Error in notEqualStrict: "),du(n,r)}});const Sl=ws({addStrict_:function(t,e){Ua("strict variants of ops have been deprecated and will be removed in future");const n=bs(t,"a","addStrict"),r=bs(e,"b","addStrict");return l(n.shape,r.shape,"Error in addStrict: "),ti(n,r)}}),El=ws({divStrict_:function(t,e){Ua("strict variants of ops have been deprecated and will be removed in future");const n=bs(t,"a","div"),r=bs(e,"b","div");return l(n.shape,r.shape,"Error in divideStrict: "),oo(n,r)}}),Cl=ws({maximumStrict_:function(t,e){Ua("strict variants of ops have been deprecated and will be removed in future");const n=bs(t,"a","maximumStrict"),r=bs(e,"b","maximumStrict");return l(n.shape,r.shape,"Error in maximumStrict: "),Do(n,r)}}),$l=ws({minimumStrict_:function(t,e){Ua("strict variants of ops have been deprecated and will be removed in future");const n=bs(t,"a","minimumStrict"),r=bs(e,"b","minimumStrict");return l(n.shape,r.shape,"Error in minimumStrict: "),ou(n,r)}}),Tl=ws({modStrict_:function(t,e){Ua("strict variants of ops have been deprecated and will be removed in future");const n=bs(t,"a","modStrict"),r=bs(e,"b","modStrict");return l(n.shape,r.shape,"Error in modStrict: "),lu(n,r)}}),Al=ws({mulStrict_:function(t,e){Ua("strict variants of ops have been deprecated and will be removed in future");const n=bs(t,"a","mul"),r=bs(e,"b","mul");return l(n.shape,r.shape,"Error in multiplyStrict: "),Mo(n,r)}}),Rl=ws({powStrict_:function(t,e){return Ua("strict variants of ops have been deprecated and will be removed in future"),l(t.shape,e.shape,"Error in powStrict: "),yu(t,e)}}),_l=ws({squaredDifferenceStrict_:function(t,e){Ua("strict variants of ops have been deprecated and will be removed in future");const n=bs(t,"a","squaredDifferenceStrict"),r=bs(e,"b","squaredDifferenceStrict");return l(n.shape,r.shape,"Error in squaredDifferenceStrict: "),sl(n,r)}}),Dl=ws({subStrict_:function(t,e){Ua("strict variants of ops have been deprecated and will be removed in future");const n=bs(t,"a","subStrict"),r=bs(e,"b","subStrict");return l(n.shape,r.shape,"Error in subStrict: "),Ko(n,r)}});function Ml(t,e,n=null){if(0===t.rank)return Ja(t);if(1!==t.rank&&null===n)return Ml(xa(t,[-1]),e,n);if(1===t.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===e)return Xo(Ja(t),n);if(e===1/0)return qo(Ja(t),n);if(e===-1/0)return iu(Ja(t),n);if("euclidean"===e||2===e)return rl(Xo(yu(Ja(t),Fo(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${e}`)}if(Array.isArray(n)&&2===n.length){if(1===e)return qo(Xo(Ja(t),n[0]),n[1]-1);if(e===1/0)return qo(Xo(Ja(t),n[1]),n[0]);if(e===-1/0)return iu(Xo(Ja(t),n[1]),n[0]);if("fro"===e||"euclidean"===e)return rl(Xo(cu(t),n));throw new Error(`Error in norm: invalid ord value: ${e}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const Fl=ws({norm_:function(t,e="euclidean",n=null,r=!1){const s=Ml(t=bs(t,"x","norm"),e,n);let a=s.shape;if(r){const e=x(n,t.shape);a=si(s.shape,e)}return xa(s,a)}});const Ol=ws({scatterND_:function(t,e,n){const r=bs(t,"indices","scatterND","int32"),s=bs(e,"updates","scatterND");Ea(s,r,n);const a={indices:r,updates:s},i={shape:n};return dr.runKernelFunc((t=>t.scatterND(r,s,n)),a,null,"ScatterNd",i)}});const Ll=ws({sparseToDense_:function(t,e,n,r=0){const s=bs(t,"sparseIndices","sparseToDense","int32"),a=bs(e,"sparseValues","sparseToDense"),i=bs(r,"defaultValue","sparseToDense",a.dtype);!function(t,e,n,r){if("int32"!==t.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${t.shape}.`);const s=t.rank>0?t.shape[0]:1,a=t.rank>1?t.shape[1]:1;if(n.length!==a)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${a}.`);const i=e.size;if(0!==e.rank&&(1!==e.rank||i!==s))throw new Error(`sparseValues has incorrect shape ${e.shape}, should be [] or [${s}]`);if(e.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(s,a,n,i);const o={sparseIndices:s,sparseValues:a,defaultValue:i},u={outputShape:n};return dr.runKernelFunc((t=>t.sparseToDense(s,a,n,i)),o,null,"SparseToDense",u)}});const Bl=ws({gatherND_:function(t,e){const n=bs(e,"indices","gatherND","int32"),r=bs(t,"x","gatherND"),s={params:r,indices:n};return dr.runKernelFunc((t=>t.gatherND(r,n)),s,null,"GatherNd")}});const zl=ws({dropout_:function(t,e,n,r){const s=bs(t,"x","dropout");if(u("float32"===s.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${s.dtype} tensor instead.`)),u(e>=0&&e<1,(()=>`rate must be a float in the range [0, 1), but got ${e}.`)),0===e)return t instanceof Hn?s.clone():s;const a=function(t,e){if(null==e)return t.shape.slice();if(d(t.shape,e))return e;if(t.shape.length===e.length){const n=[];for(let r=0;r<t.shape.length;r++)null==e[r]&&null!=t.shape[r]?n.push(t.shape[r]):n.push(e[r]);return n}return e}(s,n),i=1-e,o=oo(No(ti(Ru(a,0,1,"float32",r),i)),i);return Mo(s,o)}});const Pl=ws({conv2DBackpropFilter_:function(t,e,n,r,s,a="NHWC",i){let o=t;3===t.rank&&(o=xa(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let l=e;3===l.rank&&(l=xa(e,[1,e.shape[0],e.shape[1],e.shape[2]])),u(4===o.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`)),u(4===l.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`)),u(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const c="NHWC"===a?o.shape[3]:o.shape[1],h="NHWC"===a?l.shape[3]:l.shape[1];u(c===n[2],(()=>`Error in conv2dDerFilter: depth of input ${c}) must match input depth in filter (${n[2]}.`)),u(h===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${h}) must match output depth for filter (${n[3]}).`)),null!=i&&u(f(s),(()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`));const p={x:o,dy:l},d={strides:r,pad:s,dataFormat:a,dimRoundingMode:i,filterShape:n};return dr.runKernelFunc((t=>{const e=Ai(a),u=vi(o.shape,n,r,1,s,i,!1,e);return t.conv2dDerFilter(o,l,u)}),p,null,Dt,d)}});const Wl=ws({relu6_:function(t){const e=bs(t,"x","relu6"),n={x:e};return dr.runKernelFunc(((t,n)=>(n([e]),"bool"===e.dtype?la(e,"int32"):t.relu6(e))),n,null,We)}});function Vl(t,e,n){if(null==n||"linear"===n)return t;if("relu"===n)return Mo(t,ol(e));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function Ul(t,e){let n=e;const r=lo(t.shape,e.shape);return r.length>0&&(n=Xo(n,r)),xa(n,t.shape)}function Gl(t,e,n){if("linear"===e)return t;if("relu"===e)return Fu(t);if("elu"===e)return go(t);if("relu6"===e)return Wl(t);if("prelu"===e)return bu(t,n);throw new Error(`Unknown fused activation ${e}.`)}const Hl=(t,e)=>!(t>0)||"linear"===e;const jl=ws({fusedConv2d_:function({x:t,filter:e,strides:n,pad:r,dataFormat:s="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:c}){if(l=l||"linear",!1===Hl(dr.state.gradientDepth,l)){let u=Xi(t,e,n,r,s,a,i);return null!=o&&(u=ti(u,o)),Gl(u,l,c)}const h=bs(t,"x","conv2d"),p=bs(e,"filter","conv2d");let d=h,m=!1;3===h.rank&&(m=!0,d=xa(h,[1,h.shape[0],h.shape[1],h.shape[2]])),u(4===d.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${d.rank}.`)),u(4===p.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${p.rank}.`)),null!=i&&u(f(r),(()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`)),u(d.shape[3]===p.shape[2],(()=>`Error in conv2d: depth of input (${d.shape[3]}) must match input depth for filter ${p.shape[2]}.`)),u(Ti(n,a),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),u("NHWC"===s,(()=>`Error in conv2d: got dataFormat of ${s} but only NHWC is currently supported.`));const g=vi(d.shape,p.shape,n,a,r,i);let y,b;null!=o&&(y=bs(o,"bias","fused conv2d"),[y]=ir(y,h),co(g.outShape,y.shape)),null!=c&&(b=bs(c,"prelu weights","fused conv2d"));const x=(t,e)=>{const[s,i,o,c]=e,h=Vl(t,o,l);u($i(a),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`));const p=[Ji(i.shape,h,s,n,r),Pl(i,h,s.shape,n,r)];if(null!=c){const t=Ul(c,h);p.push(t)}return p},w=t=>t.fusedConv2d({input:d,filter:p,convInfo:g,bias:y,activation:l,preluActivationWeights:b}),v={x:d,filter:p,bias:y,preluActivationWeights:b},I={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i,activation:l};if(null==o){return Ya(((t,e,n)=>{let r=dr.runKernelFunc(w,v,null,xn,I);return n([e,t,r]),m&&(r=xa(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:x}}))(d,p)}return Ya(((t,e,n,r)=>{let s=dr.runKernelFunc(w,v,null,xn,I);return r([e,t,s,n]),m&&(s=xa(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:x}}))(d,p,y)}});const ql=ws({depthwiseConv2dNativeBackpropFilter_:function(t,e,n,r,s,a=[1,1],i){let o=t;3===t.rank&&(o=xa(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let u=e;3===u.rank&&(u=xa(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const l={x:o,dy:u},c={strides:r,pad:s,dimRoundingMode:i,dilations:a,filterShape:n};return dr.runKernelFunc((e=>{const l=vi(t.shape,n,r,a,s,i,!0);return e.depthwiseConv2DDerFilter(o,u,l)}),l,null,Vt,c)}});const Kl=ws({depthwiseConv2dNativeBackpropInput_:function(t,e,n,r,s,a=[1,1],i){let o=e,u=!1;3===e.rank&&(u=!0,o=xa(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const l={dy:o,filter:n},c={strides:r,pad:s,dimRoundingMode:i,dilations:a,inputShape:t},h=dr.runKernelFunc((e=>{const u=vi(t,n.shape,r,a,s,i,!0);return e.depthwiseConv2DDerInput(o,n,u)}),l,null,Ut,c);return u?xa(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});const Xl=ws({fusedDepthwiseConv2d_:function({x:t,filter:e,strides:n,pad:r,dataFormat:s="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:c}){if(!1===Hl(dr.state.gradientDepth,l)){let u=so(t,e,n,r,s,a,i);return null!=o&&(u=ti(u,o)),Gl(u,l,c)}const h=bs(t,"x","depthwiseConv2d"),p=bs(e,"filter","depthwiseConv2d");let d=h,m=!1;3===h.rank&&(m=!0,d=xa(h,[1,h.shape[0],h.shape[1],h.shape[2]])),u(4===d.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${d.rank}.`)),u(4===p.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${p.rank}.`)),u(d.shape[3]===p.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${d.shape[3]}) must match the inChannels dimension in filter ${p.shape[2]}.`)),null==a&&(a=[1,1]),u(Ti(n,a),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),null!=i&&u(f(r),(()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${i} but got pad ${r}.`));const g=vi(d.shape,p.shape,n,a,r,i,!0);let y,b;null!=o&&(y=bs(o,"bias","fused conv2d"),[y]=ir(y,h),co(g.outShape,y.shape)),null!=c&&(b=bs(c,"prelu weights","fused depthwiseConv2d"));const x=(t,e)=>{u($i(a),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`));const[s,o,c,h]=e,p=Vl(t,c,l),d=Kl(o.shape,p,s,n,r,a,i),f=ql(o,p,s.shape,n,r,a,i);if(null!=h){return[d,f,Ul(y,p)]}return[d,f]},w=t=>t.fusedDepthwiseConv2D({input:d,filter:p,convInfo:g,bias:y,activation:l,preluActivationWeights:b}),v={x:d,filter:p,bias:y,preluActivationWeights:b},I={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i,activation:l};if(null==o){return Ya(((t,e,n)=>{let r=dr.runKernelFunc(w,v,null,wn,I);return n([e,t,r]),m&&(r=xa(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:x}}))(d,p)}return Ya(((t,e,n,r)=>{let s=dr.runKernelFunc(w,v,null,wn,I);return r([e,t,s,n]),m&&(s=xa(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:x}}))(d,p,y)}});const Yl=ws({fusedMatMul_:function({a:t,b:e,transposeA:n=!1,transposeB:r=!1,bias:s,activation:a="linear",preluActivationWeights:i}){if(!1===Hl(dr.state.gradientDepth,a)){let o=wa(t,e,n,r);return null!=s&&(o=ti(o,s)),Gl(o,a,i)}let o=bs(t,"a","fused matMul"),l=bs(e,"b","fused matMul");[o,l]=ir(o,l);const c=n?o.shape[o.rank-2]:o.shape[o.rank-1],h=r?l.shape[l.rank-1]:l.shape[l.rank-2],f=n?o.shape[o.rank-1]:o.shape[o.rank-2],m=r?l.shape[l.rank-2]:l.shape[l.rank-1],g=o.shape.slice(0,-2),y=l.shape.slice(0,-2),b=p(g),x=p(y);u(o.rank>=2&&l.rank>=2&&o.rank===l.rank,(()=>`Error in fused matMul: inputs must have the same rank of at least 2, got ranks ${o.rank} and ${l.rank}.`)),u(d(g,y),(()=>`Error in fused matMul: outer dimensions (${g}) and (${y}) of Tensors with shapes ${o.shape} and ${l.shape} must match.`)),u(c===h,(()=>`Error in fused matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${o.shape} and ${l.shape} and transposeA=${n} and transposeB=${r} must match.`));const w=o.shape.slice(0,-2).concat([f,m]),v=xa(o,n?[b,c,f]:[b,f,c]),I=xa(l,r?[x,m,h]:[x,h,m]);let k,N;null!=s&&(k=bs(s,"bias","fused matMul"),[k]=ir(k,o),co(w,k.shape)),null!=i&&(N=bs(i,"prelu weights","fused matMul"));const S=(t,e)=>{const[i,o,u,l]=e,c=Vl(xa(t,u.shape),u,a);let h,p;if(n||r?!n&&r?(h=wa(c,o,!1,!1),p=wa(c,i,!0,!1)):n&&!r?(h=wa(o,c,!1,!0),p=wa(i,c,!1,!1)):(h=wa(o,c,!0,!0),p=wa(c,i,!0,!0)):(h=wa(c,o,!1,!0),p=wa(i,c,!0,!1)),null!=s){return[h,p,Ul(l,c)]}return[h,p]},E=t=>t.fusedBatchMatMul({a:v,b:I,transposeA:n,transposeB:r,bias:k,activation:a,preluActivationWeights:N}),C={a:v,b:I,bias:k,preluActivationWeights:N},$={transposeA:n,transposeB:r,activation:a};if(null==s){return Ya(((t,e,n)=>{const r=dr.runKernelFunc(E,C,null,bn,$);return n([t,e,r]),{value:xa(r,w),gradFunc:S}}))(v,I)}return Ya(((t,e,n,r)=>{const s=dr.runKernelFunc(E,C,null,bn,$);return r([t,e,s,n]),{value:xa(s,w),gradFunc:S}}))(v,I,k)}});function Jl(t,e,n){const r=1-t%2,s=new Float32Array(t);for(let a=0;a<t;++a){const i=2*Math.PI*a/(t+r-1);s[a]=e-n*Math.cos(i)}return _u(s,"float32")}ws({hammingWindow_:function(t){return Jl(t,.54,.46)}});const Zl=ws({hannWindow_:function(t){return Jl(t,.5,.5)}});const Ql=ws({frame_:function(t,e,n,r=!1,s=0){let a=0;const i=[];for(;a+e<=t.size;)i.push(Hu(t,a,e)),a+=n;if(r)for(;a<t.size;){const r=a+e-t.size,o=Gi([Hu(t,a,e-r),ko([r],s)]);i.push(o),a+=n}return 0===i.length?hl([],[0,e]):xa(Gi(i),[i.length,e])}});ws({stft_:function(t,e,n,r,s=Zl){var a;null==r&&(a=e,r=Math.floor(Math.pow(2,Math.ceil(Math.log(a)/Math.log(2)))));const i=Ql(t,e,n),o=Mo(i,s(e)),u=[];for(let t=0;t<i.shape[0];t++)u.push(nl(Hu(o,[t,0],[1,e]),r));return Gi(u)}});const tc=ws({cropAndResize_:function(t,e,n,r,s,a){const i=bs(t,"image","cropAndResize"),o=bs(e,"boxes","cropAndResize","float32"),l=bs(n,"boxInd","cropAndResize","int32");s=s||"bilinear",a=a||0;const c=o.shape[0];u(4===i.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`)),u(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${c},4] but had shape ${o.shape}.`)),u(1===l.rank&&l.shape[0]===c,(()=>`Error in cropAndResize: boxInd must be have size [${c}] but had shape ${o.shape}.`)),u(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),u(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),u("bilinear"===s||"nearest"===s,(()=>`method must be bilinear or nearest, but was ${s}`));const h={image:i,boxes:o,boxInd:l},p={method:s,extrapolationValue:a,cropSize:r};return dr.runKernelFunc((t=>t.cropAndResize(i,o,l,r,s,a)),h,null,"CropAndResize",p)}});const ec=ws({flipLeftRight_:function(t){const e=bs(t,"image","flipLeftRight","float32");u(4===e.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${e.rank}.`));const n={image:e};return dr.runKernel(te,n,{})}});const nc=ws({rotateWithOffset_:function(t,e,n=0,r=.5){const s=bs(t,"image","rotateWithOffset","float32");u(4===s.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${s.rank}.`));const a={image:s},i={radians:e,fillValue:n,center:r};return dr.runKernel(yn,a,i)}});function rc(t,e,n,r,s,a){null==r&&(r=.5),null==s&&(s=Number.NEGATIVE_INFINITY),null==a&&(a=0);const i=t.shape[0];return n=Math.min(n,i),u(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),u(2===t.rank,(()=>`boxes must be a 2D tensor, but was of rank '${t.rank}'`)),u(4===t.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${t.shape[1]}`)),u(1===e.rank,(()=>"scores must be a 1D tensor")),u(e.shape[0]===i,(()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${e.shape[0]}`)),u(0<=a&&a<=1,(()=>`softNmsSigma must be in [0, 1], but was '${a}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:s,softNmsSigma:a}}const sc=ws({nonMaxSuppression_:function(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY){const a=bs(t,"boxes","nonMaxSuppression"),i=bs(e,"scores","nonMaxSuppression"),o=rc(a,i,n,r,s);n=o.maxOutputSize,r=o.iouThreshold,s=o.scoreThreshold;const u={maxOutputSize:n,iouThreshold:r,scoreThreshold:s};return dr.runKernelFunc((t=>t.nonMaxSuppression(a,i,n,r,s)),{boxes:a,scores:i},null,$e,u)}});function ac(t,e,n){const r=function(t,e,n){return function(t,e,n){let r=0,s=t.length,a=0,i=!1;for(;r<s;){a=r+(s-r>>>1);const o=n(e,t[a]);o>0?r=a+1:(s=a,i=!o)}return i?r:-r-1}(t,e,n||ic)}(t,e,n),s=r<0?-(r+1):r;t.splice(s,0,e)}function ic(t,e){return t>e?1:t<e?-1:0}function oc(t,e,n,r,s){return cc(t,e,n,r,s,0).selectedIndices}function uc(t,e,n,r,s,a){return cc(t,e,n,r,s,0,!1,a,!0)}function lc(t,e,n,r,s,a){return cc(t,e,n,r,s,a,!0)}function cc(t,e,n,r,s,a,i=!1,o=!1,u=!1){const l=[];for(let t=0;t<e.length;t++)e[t]>s&&l.push({score:e[t],boxIndex:t,suppressBeginIndex:0});l.sort(dc);const c=a>0?-.5/a:0,h=[],p=[];for(;h.length<n&&l.length>0;){const e=l.pop(),{score:n,boxIndex:a,suppressBeginIndex:i}=e;if(n<s)break;let o=!1;for(let n=h.length-1;n>=i;--n){const i=hc(t,a,h[n]);if(i>=r){o=!0;break}if(e.score=e.score*pc(r,c,i),e.score<=s)break}e.suppressBeginIndex=h.length,o||(e.score===n?(h.push(a),p.push(e.score)):e.score>s&&ac(l,e,dc))}const d=h.length,f=n-d;o&&f>0&&(h.push(...new Array(f).fill(0)),p.push(...new Array(f).fill(0)));const m={selectedIndices:_u(h,"int32")};return i&&(m.selectedScores=_u(p,"float32")),u&&(m.validOutputs=Fo(d,"int32")),m}function hc(t,e,n){const r=t.subarray(4*e,4*e+4),s=t.subarray(4*n,4*n+4),a=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),l=Math.min(s[0],s[2]),c=Math.min(s[1],s[3]),h=Math.max(s[0],s[2]),p=Math.max(s[1],s[3]),d=(o-a)*(u-i),f=(h-l)*(p-c);if(d<=0||f<=0)return 0;const m=Math.max(a,l),g=Math.max(i,c),y=Math.min(o,h),b=Math.min(u,p),x=Math.max(y-m,0)*Math.max(b-g,0);return x/(d+f-x)}function pc(t,e,n){const r=Math.exp(e*n*n);return n<=t?r:0}function dc(t,e){return t.score-e.score||t.score===e.score&&e.boxIndex-t.boxIndex}const fc=async function(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY){const a=bs(t,"boxes","nonMaxSuppressionAsync"),i=bs(e,"scores","nonMaxSuppressionAsync"),o=rc(a,i,n,r,s);n=o.maxOutputSize,r=o.iouThreshold,s=o.scoreThreshold;const u=await Promise.all([a.data(),i.data()]),l=oc(u[0],u[1],n,r,s);return a!==t&&a.dispose(),i!==e&&i.dispose(),l};const mc=ws({nonMaxSuppressionWithScore_:function(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY,a=0){const i=bs(t,"boxes","nonMaxSuppression"),o=bs(e,"scores","nonMaxSuppression"),u=rc(i,o,n,r,s,a),l={boxes:i,scores:o},c={maxOutputSize:n=u.maxOutputSize,iouThreshold:r=u.iouThreshold,scoreThreshold:s=u.scoreThreshold,softNmsSigma:a=u.softNmsSigma},h=dr.runKernel(Ae,l,c);return{selectedIndices:h[0],selectedScores:h[1]}}});const gc=async function(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY,a=0){const i=bs(t,"boxes","nonMaxSuppressionAsync"),o=bs(e,"scores","nonMaxSuppressionAsync"),u=rc(i,o,n,r,s,a);n=u.maxOutputSize,r=u.iouThreshold,s=u.scoreThreshold,a=u.softNmsSigma;const l=await Promise.all([i.data(),o.data()]),c=lc(l[0],l[1],n,r,s,a);return i!==t&&i.dispose(),o!==e&&o.dispose(),c};const yc=ws({nonMaxSuppressionPadded_:function(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY,a=!1){const i=bs(t,"boxes","nonMaxSuppression"),o=bs(e,"scores","nonMaxSuppression"),u=rc(i,o,n,r,s,null),l={boxes:i,scores:o},c={maxOutputSize:u.maxOutputSize,iouThreshold:u.iouThreshold,scoreThreshold:u.scoreThreshold,padToMaxOutputSize:a},h=dr.runKernel(Te,l,c);return{selectedIndices:h[0],validOutputs:h[1]}}});const bc=async function(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY,a=!1){const i=bs(t,"boxes","nonMaxSuppressionAsync"),o=bs(e,"scores","nonMaxSuppressionAsync"),u=rc(i,o,n,r,s,null),l=u.maxOutputSize,c=u.iouThreshold,h=u.scoreThreshold,[p,d]=await Promise.all([i.data(),o.data()]),f=uc(p,d,l,c,h,a);return i!==t&&i.dispose(),o!==e&&o.dispose(),f};const xc=ws({resizeBilinear_:function(t,e,n=!1){const r=bs(t,"images","resizeBilinear");u(3===r.rank||4===r.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`)),u(2===e.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${e}.`));let s=r,a=!1;3===r.rank&&(a=!0,s=xa(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const[i,o]=e,l={images:s},c={alignCorners:n,size:e},h=dr.runKernelFunc(((t,e)=>(e([s]),t.resizeBilinear(s,i,o,n))),l,null,Pe,c);return a?xa(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});const wc=ws({resizeNearestNeighbor_:function(t,e,n=!1){const r=bs(t,"images","resizeNearestNeighbor");u(3===r.rank||4===r.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`)),u(2===e.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${e}.`)),u("float32"===r.dtype||"int32"===r.dtype,(()=>"`images` must have `int32` or `float32` as dtype"));let s=r,a=!1;3===r.rank&&(a=!0,s=xa(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const[i,o]=e,l={images:s},c={alignCorners:n,size:e},h=dr.runKernelFunc(((t,e)=>(e([s]),t.resizeNearestNeighbor(s,i,o,n))),l,null,ze,c);return a?xa(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});const vc=ws({bandPart_:function(t,e,n){u(e%1==0,(()=>`bandPart(): numLower must be an integer, got ${e}.`)),u(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));const r=bs(t,"a","bandPart");u(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));const s=r.shape,[a,i]=r.shape.slice(-2);if(!(e<=a))throw new Error(`bandPart(): numLower (${e}) must not be greater than the number of rows (${a}).`);if(!(n<=i))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`);e<0&&(e=a),n<0&&(n=i);const o=xa(Du(0,a,1,"int32"),[-1,1]),l=Du(0,i,1,"int32"),c=Ko(o,l),h=Jo(Bo(c,Fo(+e,"int32")),$o(c,Fo(-n,"int32"))),p=ru([a,i],r.dtype);return xa(il(gl(xa(r,[-1,a,i])).map((t=>po(h,t,p)))),s)}});const Ic=ws({gramSchmidt_:function(t){let e;if(Array.isArray(t)){e=!1,u(null!=t&&t.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=t[0].shape[0];for(let e=1;e<t.length;++e)u(t[e].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${t[e].shape[0]} vs. ${n})`))}else e=!0,t=el(t,t.shape[0],0).map((t=>al(t,[0])));u(t.length<=t[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${t.length}) exceeds number of dimensions (${t[0].shape[0]}).`));const n=[],r=t;for(let e=0;e<t.length;++e)n.push(dr.tidy((()=>{let t=r[e];if(e>0)for(let r=0;r<e;++r){const e=Mo(Xo(Mo(n[r],t)),n[r]);t=Ko(t,e)}return oo(t,Fl(t,"euclidean"))})));return e?il(n,0):n}});function kc(t,e=!1){return dr.tidy((()=>{u(2===t.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${t.shape.length}D Tensor.`));const n=t.shape[0],r=t.shape[1];let s=Io(n),a=ca(t);const i=hl([[1]],[1,1]);let o=ca(i);const l=n>=r?r:n;for(let t=0;t<l;++t){const e=a,u=o,l=s;[o,a,s]=dr.tidy((()=>{const e=Hu(a,[t,t],[n-t,1]),u=Fl(e),l=Hu(a,[t,t],[1,1]),c=po(Co(l,0),hl([[-1]]),hl([[1]])),h=Ko(l,Mo(c,u)),p=oo(e,h);o=1===p.shape[0]?ca(i):Gi([i,Hu(p,[1,0],[p.shape[0]-1,p.shape[1]])],0);const d=Uo(oo(wa(c,h),u)),f=Hu(a,[t,0],[n-t,r]),m=Mo(d,o),g=Ia(o);if(0===t)a=Ko(f,wa(m,wa(g,f)));else{const e=Ko(f,wa(m,wa(g,f)));a=Gi([Hu(a,[0,0],[t,r]),e],0)}const y=Ia(m),b=Hu(s,[0,t],[n,s.shape[1]-t]);if(0===t)s=Ko(b,wa(wa(b,o),y));else{const e=Ko(b,wa(wa(b,o),y));s=Gi([Hu(s,[0,0],[n,t]),e],1)}return[o,a,s]})),qa([e,u,l])}return!e&&n>r&&(s=Hu(s,[0,0],[n,r]),a=Hu(a,[0,0],[r,r])),[s,a]}))}const Nc=ws({qr_:function(t,e=!1){if(u(t.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${t.rank}`)),2===t.rank)return kc(t,e);{const n=t.shape.slice(0,t.shape.length-2).reduce(((t,e)=>t*e)),r=gl(xa(t,[n,t.shape[t.shape.length-2],t.shape[t.shape.length-1]]),0),s=[],a=[];r.forEach((t=>{const[n,r]=kc(t,e);s.push(n),a.push(r)}));return[xa(il(s,0),t.shape),xa(il(a,0),t.shape)]}}});var Sc,Ec;(Ec=Sc||(Sc={}))[Ec.NONE=0]="NONE",Ec[Ec.MEAN=1]="MEAN",Ec[Ec.SUM=2]="SUM",Ec[Ec.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS";const Cc=ws({computeWeightedLoss_:function(t,e,n=Sc.SUM_BY_NONZERO_WEIGHTS){const r=bs(t,"losses","computeWeightedLoss");let s=null;null!=e&&(s=bs(e,"weights","computeWeightedLoss"));const a=null==s?r:Mo(r,s);if(n===Sc.NONE)return a;if(n===Sc.SUM)return Xo(a);if(n===Sc.MEAN){if(null==s)return au(a);{const t=r.size/s.size,e=oo(Xo(a),Xo(s));return t>1?oo(e,Fo(t)):e}}if(n===Sc.SUM_BY_NONZERO_WEIGHTS){if(null==s)return oo(Xo(a),Fo(r.size));{const t=Mo(s,su(r.shape)),e=la(Xo(du(t,Fo(0))),"float32");return oo(Xo(a),e)}}throw Error(`Unknown reduction: ${n}`)}});ws({absoluteDifference_:function(t,e,n,r=Sc.SUM_BY_NONZERO_WEIGHTS){const s=bs(t,"labels","absoluteDifference"),a=bs(e,"predictions","absoluteDifference");let i=null;null!=n&&(i=bs(n,"weights","absoluteDifference")),l(s.shape,a.shape,"Error in absoluteDifference: ");const o=Ja(Ko(s,a));return Cc(o,i,r)}});ws({cosineDistance_:function(t,e,n,r,s=Sc.SUM_BY_NONZERO_WEIGHTS){const a=bs(t,"labels","cosineDistance"),i=bs(e,"predictions","cosineDistance");let o=null;null!=r&&(o=bs(r,"weights","cosineDistance")),l(a.shape,i.shape,"Error in cosineDistance: ");const u=Fo(1),c=Ko(u,Xo(Mo(a,i),n,!0));return Cc(c,o,s)}});ws({hingeLoss_:function(t,e,n,r=Sc.SUM_BY_NONZERO_WEIGHTS){let s=bs(t,"labels","hingeLoss");const a=bs(e,"predictions","hingeLoss");let i=null;null!=n&&(i=bs(n,"weights","hingeLoss")),l(s.shape,a.shape,"Error in hingeLoss: ");const o=Fo(1);s=Ko(Mo(Fo(2),s),o);const u=Fu(Ko(o,Mo(s,a)));return Cc(u,i,r)}});ws({huberLoss_:function(t,e,n,r=1,s=Sc.SUM_BY_NONZERO_WEIGHTS){const a=bs(t,"labels","huberLoss"),i=bs(e,"predictions","huberLoss");let o=null;null!=n&&(o=bs(n,"weights","huberLoss")),l(a.shape,i.shape,"Error in huberLoss: ");const u=Fo(r),c=Ja(Ko(i,a)),h=ou(c,u),p=Ko(c,h),d=ti(Mo(Fo(.5),cu(h)),Mo(u,p));return Cc(d,o,s)}});ws({logLoss_:function(t,e,n,r=1e-7,s=Sc.SUM_BY_NONZERO_WEIGHTS){const a=bs(t,"labels","logLoss"),i=bs(e,"predictions","logLoss");let o=null;null!=n&&(o=bs(n,"weights","logLoss")),l(a.shape,i.shape,"Error in logLoss: ");const u=Fo(1),c=Fo(r),h=Uo(Mo(a,Wo(ti(i,c)))),p=Mo(Ko(u,a),Wo(ti(Ko(u,i),c))),d=Ko(h,p);return Cc(d,o,s)}});ws({meanSquaredError_:function(t,e,n,r=Sc.SUM_BY_NONZERO_WEIGHTS){const s=bs(t,"labels","meanSquaredError"),a=bs(e,"predictions","meanSquaredError");let i=null;null!=n&&(i=bs(n,"weights","meanSquaredError")),l(s.shape,a.shape,"Error in meanSquaredError: ");const o=sl(s,a);return Cc(o,i,r)}});ws({sigmoidCrossEntropy_:function(t,e,n,r=0,s=Sc.SUM_BY_NONZERO_WEIGHTS){let a=bs(t,"multiClassLabels","sigmoidCrossEntropy");const i=bs(e,"logits","sigmoidCrossEntropy");let o=null;if(null!=n&&(o=bs(n,"weights","sigmoidCrossEntropy")),l(a.shape,i.shape,"Error in sigmoidCrossEntropy: "),r>0){const t=Fo(r),e=Fo(1),n=Fo(.5);a=ti(Mo(a,Ko(e,t)),Mo(n,t))}const u=function(t,e){const n=bs(t,"labels","sigmoidCrossEntropyWithLogits"),r=bs(e,"logits","sigmoidCrossEntropyWithLogits");l(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const s=Fu(r),a=Mo(r,n),i=Vo(bo(Uo(Ja(r))));return ti(Ko(s,a),i)}(a,i);return Cc(u,o,s)}});const $c=ws({logSumExp_:function(t,e=null,n=!1){const r=bs(t,"x","logSumExp"),s=x(e,r.shape),a=qo(r,s,!0),i=Ko(r,a),o=bo(i),u=Xo(o,s),l=Wo(u),c=ti(xa(a,l.shape),l);if(n){const t=si(c.shape,s);return xa(c,t)}return c}});ws({softmaxCrossEntropy_:function(t,e,n,r=0,s=Sc.SUM_BY_NONZERO_WEIGHTS){let a=bs(t,"onehotLabels","softmaxCrossEntropy");const i=bs(e,"logits","softmaxCrossEntropy");let o=null;if(null!=n&&(o=bs(n,"weights","softmaxCrossEntropy")),l(a.shape,i.shape,"Error in softmaxCrossEntropy: "),r>0){const t=Fo(r),e=Fo(1),n=Fo(a.shape[1]);a=ti(Mo(a,Ko(e,t)),oo(t,n))}const u=function(t,e,n=-1){if(-1===n&&(n=e.rank-1),n!==e.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${e.rank} and dim was ${n}`);return Ya(((t,e,r)=>{const s=$c(e,[n],!0),a=Ko(la(e,"float32"),s);r([t,a]);const i=Uo(Mo(a,t));return{value:Xo(i,[n]),gradFunc:(t,e)=>{const[r,s]=e,a=si(t.shape,[n]);return[Mo(xa(t,a),Ko(la(r,"float32"),bo(s))),Mo(xa(t,a),Ko(bo(s),la(r,"float32")))]}}}))(t,e)}(a,i);return Cc(u,o,s)}});const Tc={flipLeftRight:ec,resizeNearestNeighbor:wc,resizeBilinear:xc,rotateWithOffset:nc,cropAndResize:tc,nonMaxSuppression:sc,nonMaxSuppressionAsync:fc,nonMaxSuppressionWithScore:mc,nonMaxSuppressionWithScoreAsync:gc,nonMaxSuppressionPadded:yc,nonMaxSuppressionPaddedAsync:bc},Ac={bandPart:vc,gramSchmidt:Ic,qr:Nc};class Rc extends Pa{minimize(t,e=!1,n){const{value:r,grads:s}=this.computeGradients(t,n);if(null!=n){const t=n.map((t=>({name:t.name,tensor:s[t.name]})));this.applyGradients(t)}else this.applyGradients(s);return qa(s),e?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(t,e){return function(t,e){u(T(t),(()=>"The f passed in variableGrads(f) must be a function")),u(null==e||Array.isArray(e)&&e.every((t=>t instanceof jn)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=e;if(!n){e=[];for(const t in dr.registeredVariables)e.push(dr.registeredVariables[t])}const r=n?e.filter((t=>!t.trainable)):null,s=e.length;u((e=e.filter((t=>t.trainable))).length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${s} variables is trainable.`));const{value:a,grads:i}=dr.gradients(t,e,null,!0);u(i.some((t=>null!=t)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),u(0===a.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${a.rank} tensor`));const o={};return e.forEach(((t,e)=>{null!=i[e]&&(o[t.name]=i[e])})),null!=r&&r.forEach((t=>o[t.name]=null)),{value:a,grads:o}}(t,e)}dispose(){null!=this.iterations_&&qa(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:Fo(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(t){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(t){return this.iterations_=(await t[0].tensor.data())[0],t.slice(1)}}Object.defineProperty(Rc,Symbol.hasInstance,{value:t=>null!=t.minimize&&null!=t.computeGradients&&null!=t.applyGradients});class _c extends Rc{constructor(t,e,n=null){super(),this.learningRate=t,this.rho=e,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=dr.backend.epsilon())}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const r=dr.registeredVariables[e];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${e}/accum_grad`,variable:ja((()=>fo(r).variable(false)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${e}/accum_var`,variable:ja((()=>fo(r).variable(false)))});const s=Array.isArray(t)?t[n].tensor:t[e];if(null==s)return;const a=this.accumulatedGrads[n].variable,i=this.accumulatedUpdates[n].variable;ja((()=>{const t=ti(Mo(a,this.rho),Mo(cu(s),1-this.rho)),e=Mo(oo(rl(ti(i,this.epsilon)),rl(ti(a,this.epsilon))),s),n=ti(Mo(i,this.rho),Mo(cu(e),1-this.rho));a.assign(t),i.assign(n);const o=ti(Mo(e,-this.learningRate),r);r.assign(o)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(qa(this.accumulatedGrads.map((t=>t.variable))),qa(this.accumulatedUpdates.map((t=>t.variable))))}async getWeights(){const t=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(t.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){const e=(t=await this.extractIterations(t)).length/2;this.accumulatedGrads=t.slice(0,e).map((t=>({originalName:t.name,variable:t.tensor.variable(false)}))),this.accumulatedUpdates=t.slice(e,2*e).map((t=>({originalName:t.name,variable:t.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.rho,e.epsilon)}}_c.className="Adadelta",Va(_c);class Dc extends Rc{constructor(t,e=.1){super(),this.learningRate=t,this.initialAccumulatorValue=e,this.accumulatedGrads=[]}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const r=dr.registeredVariables[e];if(null==this.accumulatedGrads[n]){const t=!1;this.accumulatedGrads[n]={originalName:`${e}/accumulator`,variable:ja((()=>ko(r.shape,this.initialAccumulatorValue).variable(t)))}}const s=Array.isArray(t)?t[n].tensor:t[e];if(null==s)return;const a=this.accumulatedGrads[n].variable;ja((()=>{const t=ti(a,cu(s));a.assign(t);const e=ti(Mo(oo(s,rl(ti(t,dr.backend.epsilon()))),-this.learningRate),r);r.assign(e)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&qa(this.accumulatedGrads.map((t=>t.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t);this.accumulatedGrads=t.map((t=>({originalName:t.name,variable:t.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(t,e){return new t(e.learningRate,e.initialAccumulatorValue)}}Dc.className="Adagrad",Va(Dc);class Mc extends Rc{constructor(t,e,n,r=null){super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],ja((()=>{this.accBeta1=Fo(e).variable(),this.accBeta2=Fo(n).variable()})),null==r&&(this.epsilon=dr.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map((t=>t.name)):Object.keys(t);ja((()=>{const n=Ko(1,this.accBeta1),r=Ko(1,this.accBeta2);e.forEach(((e,s)=>{const a=dr.registeredVariables[e];null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${e}/m`,variable:ja((()=>fo(a).variable(false)))}),null==this.accumulatedSecondMoment[s]&&(this.accumulatedSecondMoment[s]={originalName:`${e}/v`,variable:ja((()=>fo(a).variable(false)))});const i=Array.isArray(t)?t[s].tensor:t[e];if(null==i)return;const o=this.accumulatedFirstMoment[s].variable,u=this.accumulatedSecondMoment[s].variable,l=ti(Mo(o,this.beta1),Mo(i,1-this.beta1)),c=ti(Mo(u,this.beta2),Mo(cu(i),1-this.beta2)),h=oo(l,n),p=oo(c,r);o.assign(l),u.assign(c);const d=ti(Mo(oo(h,ti(rl(p),this.epsilon)),-this.learningRate),a);a.assign(d)})),this.accBeta1.assign(Mo(this.accBeta1,this.beta1)),this.accBeta2.assign(Mo(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&qa(this.accumulatedFirstMoment.map((t=>t.variable))),null!=this.accumulatedSecondMoment&&qa(this.accumulatedSecondMoment.map((t=>t.variable)))}async getWeights(){const t=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(t.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t),ja((()=>{this.accBeta1.assign(yu(this.beta1,this.iterations_+1)),this.accBeta2.assign(yu(this.beta2,this.iterations_+1))}));const e=t.length/2;this.accumulatedFirstMoment=t.slice(0,e).map((t=>({originalName:t.name,variable:t.tensor.variable(false)}))),this.accumulatedSecondMoment=t.slice(e,2*e).map((t=>({originalName:t.name,variable:t.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon)}}Mc.className="Adam",Va(Mc);class Fc extends Rc{constructor(t,e,n,r=null,s=0){super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=r,this.decay=s,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],ja((()=>{this.iteration=Fo(0).variable(),this.accBeta1=Fo(e).variable()})),null==r&&(this.epsilon=dr.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map((t=>t.name)):Object.keys(t);ja((()=>{const n=Ko(1,this.accBeta1),r=oo(-this.learningRate,ti(Mo(this.iteration,this.decay),1));e.forEach(((e,s)=>{const a=dr.registeredVariables[e];null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${e}/m`,variable:fo(a).variable(false)}),null==this.accumulatedWeightedInfNorm[s]&&(this.accumulatedWeightedInfNorm[s]={originalName:`${e}/v`,variable:fo(a).variable(false)});const i=Array.isArray(t)?t[s].tensor:t[e];if(null==i)return;const o=this.accumulatedFirstMoment[s].variable,u=this.accumulatedWeightedInfNorm[s].variable,l=ti(Mo(o,this.beta1),Mo(i,1-this.beta1)),c=Mo(u,this.beta2),h=Ja(i),p=Do(c,h);o.assign(l),u.assign(p);const d=ti(Mo(oo(r,n),oo(l,ti(p,this.epsilon))),a);a.assign(d)})),this.iteration.assign(ti(this.iteration,1)),this.accBeta1.assign(Mo(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&qa(this.accumulatedFirstMoment.map((t=>t.variable))),null!=this.accumulatedWeightedInfNorm&&qa(this.accumulatedWeightedInfNorm.map((t=>t.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(t){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon,e.decay)}}Fc.className="Adamax",Va(Fc);class Oc extends Rc{constructor(t){super(),this.learningRate=t,this.setLearningRate(t)}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const r=Array.isArray(t)?t[n].tensor:t[e];if(null==r)return;const s=dr.registeredVariables[e];ja((()=>{const t=ti(Mo(this.c,r),s);s.assign(t)}))})),this.incrementIterations()}setLearningRate(t){this.learningRate=t,null!=this.c&&this.c.dispose(),this.c=Ka(Fo(-t))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(t){if(0!==(t=await this.extractIterations(t)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(t,e){return new t(e.learningRate)}}Oc.className="SGD",Va(Oc);class Lc extends Oc{constructor(t,e,n=!1){super(t),this.learningRate=t,this.momentum=e,this.useNesterov=n,this.accumulations=[],this.m=Fo(this.momentum)}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const r=dr.registeredVariables[e];if(null==this.accumulations[n]){const t=!1;this.accumulations[n]={originalName:`${e}/momentum`,variable:ja((()=>fo(r).variable(t)))}}const s=this.accumulations[n].variable,a=Array.isArray(t)?t[n].tensor:t[e];null!=a&&ja((()=>{let t;const e=ti(Mo(this.m,s),a);t=this.useNesterov?ti(Mo(this.c,ti(a,Mo(e,this.m))),r):ti(Mo(this.c,e),r),s.assign(e),r.assign(t)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&qa(this.accumulations.map((t=>t.variable)))}setMomentum(t){this.momentum=t}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t);this.accumulations=t.map((t=>({originalName:t.name,variable:t.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(t,e){return new t(e.learningRate,e.momentum,e.useNesterov)}}Lc.className="Momentum",Va(Lc);class Bc extends Rc{constructor(t,e=.9,n=0,r=null,s=!1){if(super(),this.learningRate=t,this.decay=e,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=s,null==r&&(this.epsilon=dr.backend.epsilon()),null==t)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const r=dr.registeredVariables[e],s=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${e}/rms`,variable:ja((()=>fo(r).variable(s)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${e}/momentum`,variable:ja((()=>fo(r).variable(s)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${e}/mg`,variable:ja((()=>fo(r).variable(s)))});const a=Array.isArray(t)?t[n].tensor:t[e];if(null==a)return;const i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;ja((()=>{const t=ti(Mo(i,this.decay),Mo(cu(a),1-this.decay));if(this.centered){const e=this.accumulatedMeanGrads[n].variable,s=ti(Mo(e,this.decay),Mo(a,1-this.decay)),u=oo(Mo(a,this.learningRate),rl(Ko(t,ti(cu(s),this.epsilon)))),l=ti(Mo(o,this.momentum),u);i.assign(t),e.assign(s),o.assign(l);const c=Ko(r,l);r.assign(c)}else{const t=ti(Mo(i,this.decay),Mo(cu(a),1-this.decay)),e=ti(Mo(o,this.momentum),oo(Mo(a,this.learningRate),rl(ti(t,this.epsilon))));i.assign(t),o.assign(e);const n=Ko(r,e);r.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&qa(this.accumulatedMeanSquares.map((t=>t.variable))),null!=this.accumulatedMeanGrads&&this.centered&&qa(this.accumulatedMeanGrads.map((t=>t.variable))),null!=this.accumulatedMoments&&qa(this.accumulatedMoments.map((t=>t.variable)))}async getWeights(){const t=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&t.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(t.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t);const e=this.centered?t.length/3:t.length/2,n=!1;this.accumulatedMeanSquares=t.slice(0,e).map((t=>({originalName:t.name,variable:t.tensor.variable(n)}))),this.accumulatedMoments=t.slice(e,2*e).map((t=>({originalName:t.name,variable:t.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=t.slice(2*e,3*e).map((t=>({originalName:t.name,variable:t.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(t,e){return new t(e.learningRate,e.decay,e.momentum,e.epsilon,e.centered)}}Bc.className="RMSProp",Va(Bc);class zc{static sgd(t){return new Oc(t)}static momentum(t,e,n=!1){return new Lc(t,e,n)}static rmsprop(t,e=.9,n=0,r=null,s=!1){return new Bc(t,e,n,r,s)}static adam(t=.001,e=.9,n=.999,r=null){return new Mc(t,e,n,r)}static adadelta(t=.001,e=.95,n=null){return new _c(t,e,n)}static adamax(t=.002,e=.9,n=.999,r=null,s=0){return new Fc(t,e,n,r,s)}static adagrad(t,e=.1){return new Dc(t,e)}}const Pc={sgd:zc.sgd,momentum:zc.momentum,adadelta:zc.adadelta,adagrad:zc.adagrad,rmsprop:zc.rmsprop,adamax:zc.adamax,adam:zc.adam},Wc="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:t=>t();function Vc(){return new Promise((t=>Wc((()=>t()))))}function Uc(t,e,n){return[n*("number"==typeof t?t:t[0]),e*("number"==typeof t?t:t[1])]}function Gc(t,e,n,r=!0){let s=[];if(r)s=s.concat(e.slice(0)),s.push(t[0]/n),s=s.concat(t.slice(1));else{s=s.concat(t[0]);const n=e.length;for(let r=0;r<n;++r)s=s.concat([t[r+1]/e[r],e[r]]);s=s.concat(t.slice(n+1))}return s}function Hc(t,e,n=!0){const r=[];if(n){r.push(e);for(let n=e+1;n<t;++n)n<=2*e?(r.push(n),r.push(n-(e+1))):r.push(n)}else{const n=[],s=[];for(let r=1;r<t;++r)r>=2*e+1||r%2==1?s.push(r):n.push(r);r.push(...n),r.push(0),r.push(...s)}return r}function jc(t,e,n,r=!0){const s=[];r?s.push(t[0]/n):s.push(t[0]*n);for(let n=1;n<t.length;++n)n<=e.length?r?s.push(e[n-1]*t[n]):s.push(t[n]/e[n-1]):s.push(t[n]);return s}function qc(t,e){const n=[0];for(let r=0;r<e;++r)n.push(t[r][0]);return n}function Kc(t,e,n){const r=t.slice(0,1);for(let s=0;s<n;++s)r.push(t[s+1]-e[s][0]-e[s][1]);return r}const Xc=1.7580993408473768,Yc=1.0507009873554805;function Jc(...t){U().getBool("IS_TEST")||console.warn(...t)}function Zc(t,e){if(t.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${t.length}, imag: ${e.length}.`);const n=new Float32Array(2*t.length);for(let r=0;r<n.length;r+=2)n[r]=t[r/2],n[r+1]=e[r/2];return n}function Qc(t,e){return{real:t[2*e],imag:t[2*e+1]}}function th(t,e,n,r){t[2*r]=e,t[2*r+1]=n}function eh(t,e,n){const r=(n?2:-2)*Math.PI*(t/e);return{real:Math.cos(r),imag:Math.sin(r)}}function nh(t,e,n){const r=(e-t)/(n-1),s=F(n,"float32");s[0]=t;for(let t=1;t<s.length;t++)s[t]=s[t-1]+r;return _u(s,"float32")}function rh(t,e,n){const r=new Array(t.rank).fill(0),s=t.shape.slice();return e.map((e=>{const a=[...s];a[n]=e;const i=Hu(t,r,a);return r[n]+=e,i}))}function sh(t,e){const n=new Array(t.rank);for(let r=0;r<n.length;r++)n[r]=t.shape[r]*e[r];const r=ua(n,t.dtype);for(let e=0;e<r.values.length;++e){const n=r.indexToLoc(e),s=new Array(t.rank);for(let e=0;e<s.length;e++)s[e]=n[e]%t.shape[e];const a=t.locToIndex(s);r.values[e]=t.values[a]}return r.toTensor()}function ah(t,e,n,r,s){const a=e[e.length-1],[i,o]=[t.length/a,a],u=v(n,i*r),l=v("int32",i*r);for(let e=0;e<i;e++){const n=e*o,s=t.subarray(n,n+o),a=[];for(let t=0;t<s.length;t++)a.push({value:s[t],index:t});a.sort(((t,e)=>e.value-t.value));const i=e*r,c=u.subarray(i,i+r),h=l.subarray(i,i+r);for(let t=0;t<r;t++)c[t]=a[t].value,h[t]=a[t].index}const c=e.slice();return c[c.length-1]=r,[ks(u,c,n),ks(l,c,"int32")]}const ih={kernelName:lt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Mo(t,ol(la(n,"float32"),-1))}}},oh={kernelName:ct,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=cu(la(n,"float32")),r=rl(Ko(Fo(1),e));return Uo(oo(t,r))}}}},uh={kernelName:ht,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=rl(Ko(cu(la(n,"float32")),1));return oo(t,e)}}}},lh={kernelName:pt,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=co(n.shape,r.shape);return{a:()=>{let e=t;const r=lo(n.shape,s);return r.length>0&&(e=Xo(e,r)),xa(e,n.shape)},b:()=>{let e=t;const n=lo(r.shape,s);return n.length>0&&(e=Xo(e,n)),xa(e,r.shape)}}}},ch={kernelName:dt,saveAllInputs:!0,gradFunc:(t,e)=>{const n={};return e.forEach(((e,r)=>{n[r]=()=>t.clone()})),n}},hh={kernelName:ft,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>fo(n)}}},ph={kernelName:mt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>fo(n)}}},dh={kernelName:gt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>oo(t,rl(Ko(Fo(1),cu(la(n,"float32")))))}}},fh={kernelName:yt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=rl(ti(Fo(1),cu(la(n,"float32"))));return oo(t,e)}}}},mh={kernelName:wt,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=co(n.shape,r.shape);return{a:()=>{const e=ti(cu(n),cu(r));let a=Mo(t,oo(r,e));const i=lo(n.shape,s);return i.length>0&&(a=Xo(a,i)),xa(a,n.shape)},b:()=>{const e=ti(cu(n),cu(r));let a=Uo(Mo(t,oo(n,e)));const i=lo(r.shape,s);return i.length>0&&(a=Xo(a,i)),xa(a,r.shape)}}}},gh={kernelName:bt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>oo(t,ti(cu(la(n,"float32")),1))}}},yh={kernelName:xt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>oo(t,Ko(Fo(1),cu(la(n,"float32"))))}}};const bh=ws({avgPool3dBackprop_:function(t,e,n,r,s=[1,1,1],a,i){const o=bs(t,"dy","avgPool3dBackprop"),l=bs(e,"input","avgPool3dBackprop");let c=o,h=l,p=!1;4===l.rank&&(p=!0,c=xa(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),h=xa(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),u(5===c.rank,(()=>`Error in avgPool3dBackprop: dy must be rank 5 but got rank ${c.rank}.`)),u(5===h.rank,(()=>`Error in avgPool3dBackprop: input must be rank 5 but got rank ${h.rank}.`)),u(Ti(r,s),(()=>`Error in avgPool3dBackprop: Either strides or dilations must be 1. Got strides ${r} and dilations '${s}'`)),null!=i&&u(f(a),(()=>`Error in maxPool3dBackprop: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`));const d={dy:c,input:h},m={filterSize:n,strides:r,dilations:s,pad:a,dimRoundingMode:i},g=dr.runKernelFunc((t=>{const e=wi(h.shape,n,r,s,a,i);return t.avgPool3dBackprop(c,h,e)}),d,null,"AvgPool3DBackprop",m);return p?xa(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}}),xh={kernelName:kt,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{filterSize:s,strides:a,dilations:i,pad:o,dimRoundingMode:u}=n,l=null==i?[1,1,1]:i;return{x:()=>bh(t,r,s,a,l,o,u)}}};const wh=ws({avgPoolBackprop_:function(t,e,n,r,s){const a=bs(t,"dy","avgPoolBackprop"),i=bs(e,"input","avgPoolBackprop");u(i.rank===a.rank,(()=>`Rank of input (${i.rank}) does not match rank of dy (${a.rank})`));let o=i,l=a,c=!1;3===i.rank&&(c=!0,o=xa(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=xa(a,[1,a.shape[0],a.shape[1],a.shape[2]])),u(4===l.rank,(()=>`Error in avgPoolBackprop: dy must be rank 4 but got rank ${l.rank}.`)),u(4===o.rank,(()=>`Error in avgPoolBackprop: input must be rank 4 but got rank ${o.rank}.`));const h={dy:l,input:o},p={filterSize:n,strides:r,pad:s},d=dr.runKernelFunc((t=>{const e=xi(o.shape,n,r,1,s);return t.avgPoolBackprop(l,o,e)}),h,null,It,p);return c?xa(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),vh={kernelName:vt,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{filterSize:s,strides:a,pad:i}=n;return{x:()=>wh(t,r,s,a,i)}}},Ih={kernelName:Nt,inputsToSave:["a","b"],gradFunc:(t,e,n)=>{const[r,s]=e,{transposeA:a,transposeB:i}=n;return a||i?!a&&i?{a:()=>wa(t,s,!1,!1),b:()=>wa(t,r,!0,!1)}:a&&!i?{a:()=>wa(s,t,!1,!0),b:()=>wa(r,t,!1,!1)}:{a:()=>wa(s,t,!0,!0),b:()=>wa(t,r,!0,!0)}:{a:()=>wa(t,s,!1,!0),b:()=>wa(r,t,!0,!1)}}},kh={kernelName:St,gradFunc:(t,e,n)=>{const{blockShape:r,crops:s}=n;return{x:()=>Ju(t,r,s)}}},Nh={kernelName:Et,gradFunc:(t,e,n)=>{const r=n,s=r.inputShape,a=r.shape,i=Array.from(a);for(let t=s.length-1;t>=0;t--)if(s[t]===a[t])i[t]=1;else if(1!==s[t])throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${a}].`);const o=[];for(let t=0;t<i.length;t++)i[t]>1&&o.push(t);return{x:()=>Xo(t,o,!0)}}},Sh={kernelName:Ct,gradFunc:t=>({x:()=>t.clone()})},Eh={kernelName:$t,gradFunc:t=>({x:()=>fo(t)})},Ch={kernelName:Tt,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{clipValueMin:s,clipValueMax:a}=n;return{x:()=>po(Jo($o(r,s),Bo(r,a)),t,fo(t))}}},$h={kernelName:Rt,saveAllInputs:!0,gradFunc:(t,e,n)=>{const r=e.map((t=>t.shape)),{axis:s}=n,a=x(s,e[0].shape)[0],i=r.map((t=>t[a]));return el(t,i,a).map((t=>()=>t))}},Th={kernelName:_t,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const[r,s]=e,{dilations:a,strides:i,pad:o,dataFormat:l}=n;return u($i(a),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`)),{x:()=>Ji(r.shape,t,s,i,o,l),filter:()=>Pl(r,t,s.shape,i,o,l)}}},Ah={kernelName:Mt,inputsToSave:["dy","filter"],gradFunc:(t,e,n)=>{const[r,s]=e,{strides:a,pad:i,dataFormat:o,dimRoundingMode:u}=n;return{dy:()=>Xi(t,s,a,i,o,1,u),filter:()=>Pl(t,r,s.shape,a,i,o,u)}}};const Rh=ws({conv3DBackpropFilter_:function(t,e,n,r,s){let a=t;4===t.rank&&(a=xa(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]));let i=e;4===i.rank&&(i=xa(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),u(5===a.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${a.shape}.`)),u(5===i.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`)),u(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),u(a.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${a.shape[4]}) must match input depth in filter (${n[3]}.`)),u(i.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`));const o={x:a,dy:i},l={strides:r,pad:s,filterShape:n};return dr.runKernelFunc((t=>{const e=Ii(a.shape,n,r,1,s);return t.conv3dDerFilter(a,i,e)}),o,null,Ot,l)}});const _h=ws({conv3DBackpropInput_:function(t,e,n,r,s){u(t.length===e.rank,(()=>`Length of inShape (${t.length}) and rank of dy (${e.rank}) must match`));let a=t,i=e,o=!1;4===e.rank&&(o=!0,i=xa(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),a=[1,t[0],t[1],t[2],t[3]]);const l=a[4],c=i.shape[4];u(5===a.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${a.length}.`)),u(5===i.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`)),u(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),u(l===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`)),u(c===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${c}) must match output depth for filter ${n.shape[4]}.`));const h={dy:i,filter:n},p={pad:s,strides:r,inputShape:a},d=dr.runKernelFunc((t=>{const e=Ii(a,n.shape,r,1,s);return t.conv3dDerInput(i,n,e)}),h,null,Lt,p);return o?xa(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),Dh={kernelName:Ft,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:r,strides:s,pad:a}=n;u($i(r),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`));const[i,o]=e;return{x:()=>_h(i.shape,t,o,s,a),filter:()=>Rh(i,t,o.shape,s,a)}}},Mh={kernelName:Bt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Mo(Uo(Uu(la(n,"float32"))),t)}}},Fh={kernelName:zt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Mo(Gu(la(n,"float32")),t)}}},Oh={kernelName:Pt,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{axis:s,exclusive:a,reverse:i}=n;return{x:()=>{const e=ii([s],r.rank);let n=no(t,s,a,!i);return null!=e&&(n=Ia(n,e)),n}}}},Lh={kernelName:Wt,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:r,strides:s,pad:a,dimRoundingMode:i}=n,o=null==r?[1,1]:r;u($i(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));const[l,c]=e;return u(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`)),u(4===c.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${c.rank}.`)),u(l.shape[3]===c.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${c.shape[2]}.`)),u(Ti(s,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${s} and dilations '${o}'.`)),null!=i&&u(f(a),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`)),{x:()=>Kl(l.shape,t,c,s,a,r,i),filter:()=>ql(l,t,c.shape,s,a,r,i)}}},Bh={kernelName:Gt,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const[r,s]=e,a={x:r,filter:s,dy:t},i={x:r,filter:s,dy:t};return{x:()=>dr.runKernel(Ht,a,n),filter:()=>dr.runKernel(jt,i,n)}}},zh={kernelName:qt,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=co(n.shape,r.shape);return{a:()=>{const e=oo(t,la(r,"float32")),a=lo(n.shape,s);return a.length>0?xa(Xo(e,a),n.shape):e},b:()=>{let e=Mo(t,la(n,"float32"));const a=lo(r.shape,s);a.length>0&&(e=xa(Xo(e,a),r.shape));const i=cu(r);return Uo(oo(e,la(i,"float32")))}}}},Ph={kernelName:Kt,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e,r=e=>e.eluDer(t,n),s={dy:t,y:n};return{x:()=>dr.runKernelFunc(r,s,null,"EluGrad")}}},Wh={kernelName:Xt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e,r=Mo(bo(Uo(cu(n))),2/Math.sqrt(Math.PI));return{x:()=>Mo(t,r)}}},Vh={kernelName:Yt,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Mo(t,n)}}},Uh={kernelName:Jt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Mo(t,bo(n))}}},Gh={kernelName:ee,gradFunc:t=>({x:()=>fo(t)})},Hh={kernelName:ne,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=co(n.shape,r.shape);return{a:()=>{const e=oo(t,la(r,"float32")),a=lo(n.shape,s);return a.length>0?xa(Xo(e,a),n.shape):e},b:()=>{let e=Mo(t,la(n,"float32"));const a=lo(r.shape,s);a.length>0&&(e=xa(Xo(e,a),r.shape));const i=cu(r);return Uo(oo(e,la(i,"float32")))}}}},jh={kernelName:re,inputsToSave:["x","mean","variance","scale"],gradFunc:(t,e,n)=>{const{varianceEpsilon:r}=n,[s,a,i,o]=e,u=null==o?Fo(1):o,l=lo(a.shape,s.shape),c=[];if(1===a.rank){for(let t=0;t<s.shape.length-1;++t)c.push(s.shape[t]);c.push(1)}const h=Ko(s,a),p=Mo(t,u),d=Bu(ti(i,Fo(r))),f=Mo(Mo(Mo(d,d),d),Fo(-.5));return{x:()=>1===a.rank?xa(Mo(Mo(t,vo(xa(d,[1,1,1,a.shape[0]]),c)),u),s.shape):xa(Mo(Mo(t,d),u),s.shape),mean:()=>{let t=Mo(Mo(d,Fo(-1)),p);return 1===a.rank&&(t=Xo(t,l)),xa(t,a.shape)},variance:()=>{let t=Mo(Mo(f,h),p);return 1===a.rank&&(t=Xo(t,l)),xa(t,a.shape)},scale:()=>{const e=Mo(h,d);let n=Mo(t,e);return 1===a.rank&&(n=Xo(n,l)),xa(n,a.shape)},offset:()=>{let e=t;return 1===a.rank&&(e=Xo(e,l)),xa(e,a.shape)}}}};const qh=ws({unsortedSegmentSum_:function(t,e,n){const r=bs(t,"x","unsortedSegmentSum"),s=bs(e,"segmentIds","unsortedSegmentSum","int32");u(f(n),(()=>"numSegments must be of dtype int"));const a={x:r,segmentIds:s},i={numSegments:n};return dr.runKernelFunc(((t,e)=>{const a=t.unsortedSegmentSum(r,s,n);return e([s]),a}),a,null,dn,i)}}),Kh={kernelName:se,inputsToSave:["x","indices"],gradFunc:(t,e,n)=>{const[r,s]=e,{axis:a}=n,i=x(a,r.shape)[0];return{x:()=>{const e=r.shape,n=s.size,o=e.slice(0,i),u=o.length,l=e.slice(a,e.length).slice(1),c=l.length,h=Xh(0,u),p=Xh(u+1,u+1+c),d=Yh([o,[n],l]),f=xa(t,d),m=xa(s,[n]),g=Yh([[u],h,p]),y=Ia(f,g);let b=qh(y,m,r.shape[i]);const x=oi(g);return b=Ia(b,x),b},indices:()=>s}}};function Xh(t,e){const n=[];for(let r=t;r<e;++r)n.push(r);return n}function Yh(t){const e=[];for(let n=0;n<t.length;++n)for(let r=0;r<t[n].length;++r)e.push(t[n][r]);return e}const Jh={kernelName:ae,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e;return{a:()=>fo(n),b:()=>fo(r)}}},Zh={kernelName:ie,gradFunc:t=>({x:()=>la(t,"float32")})},Qh={kernelName:le,gradFunc:t=>({x:()=>fo(t)})},tp={kernelName:ce,gradFunc:t=>({x:()=>fo(t)})},ep={kernelName:he,gradFunc:t=>({x:()=>fo(t)})},np={kernelName:de,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>oo(t,ti(n,1))}}},rp={kernelName:pe,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>oo(t,la(n,"float32"))}}},sp={kernelName:me,inputsToSave:[],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r]=e,{axis:s}=n;return{logits:()=>{const e=bo(r);return Ko(t,Mo(Xo(t,s,!0),e))}}}};const ap=ws({localResponseNormalizationBackprop_:function(t,e,n,r=5,s=1,a=1,i=.5){const o={x:t,y:e,dy:n},u={depthRadius:r,bias:s,alpha:a,beta:i};return dr.runKernelFunc((o=>o.LRNGrad(n,t,e,r,s,a,i)),o,null,"LRNBackprop",u)}}),ip={kernelName:"LRN",inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r,s]=e,{depthRadius:a,bias:i,alpha:o,beta:u}=n;return{x:()=>ap(r,s,t,a,i,o,u)}}};function op(t,e,n,r){return e.rank<n.rank&&(e=xa(e,si(e.shape,r))),t.rank<n.rank&&(t=xa(t,si(t.shape,r))),{x:()=>Mo(t,la(ho(n,e),t.dtype))}}const up={kernelName:ge,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const r=n,{reductionIndices:s}=r,a=e[0],i=op(t,e[1],a,x(s,a.shape));return{x:()=>i.x()}}},lp={kernelName:ye,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e;return{a:()=>Mo(t,la($o(n,r),"float32")),b:()=>Mo(t,la(Lo(n,r),"float32"))}}};const cp=ws({maxPool3dBackprop_:function(t,e,n,r,s,a=[1,1,1],i,o){const l=bs(t,"dy","maxPool3dBackprop"),c=bs(e,"input","maxPool3dBackprop"),h=bs(n,"output","maxPool3dBackprop");let p=l,d=c,m=h,g=!1;4===c.rank&&(g=!0,p=xa(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),d=xa(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]]),m=xa(h,[1,h.shape[0],h.shape[1],h.shape[2],h.shape[3]])),u(5===p.rank,(()=>`Error in maxPool3dBackprop: dy must be rank 5 but got rank ${p.rank}.`)),u(5===d.rank,(()=>`Error in maxPool3dBackprop: input must be rank 5 but got rank ${d.rank}.`)),u(5===m.rank,(()=>`Error in maxPool3dBackprop: output must be rank 5 but got rank ${m.rank}.`)),u(Ti(s,a),(()=>`Error in maxPool3dBackprop: Either strides or dilations must be 1. Got strides ${s} and dilations '${a}'`)),null!=o&&u(f(i),(()=>`Error in maxPool3dBackprop: pad must be an integer when using, dimRoundingMode ${o} but got pad ${i}.`));const y={dy:p,input:d,output:m},b={filterSize:r,strides:s,dilations:a,pad:i,dimRoundingMode:o},x=dr.runKernelFunc((t=>{const e=wi(d.shape,r,s,a,i,o);return t.maxPool3dBackprop(p,d,m,e)}),y,null,"MaxPool3DBackprop",b);return g?xa(x,[x.shape[1],x.shape[2],x.shape[3],x.shape[4]]):x}}),hp={kernelName:we,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r,s]=e,{filterSize:a,strides:i,dilations:o,pad:u,dimRoundingMode:l}=n,c=null==o?[1,1,1]:o;return{x:()=>cp(t,r,s,a,i,c,u,l)}}};const pp=ws({maxPoolBackprop_:function(t,e,n,r,s,a,i){const o=bs(t,"dy","maxPoolBackprop"),l=bs(e,"input","maxPoolBackprop"),c=bs(n,"output","maxPoolBackprop");u(l.rank===o.rank,(()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`)),u(4===o.rank,(()=>`Error in maxPoolBackprop: dy must be rank 4 but got rank ${o.rank}.`)),u(4===l.rank,(()=>`Error in maxPoolBackprop: input must be rank 4 but got rank ${l.rank}.`)),null!=i&&u(f(a),(()=>`Error in maxPoolBackprop: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`));const h={dy:o,input:l,output:c},p={filterSize:r,strides:s,pad:a,dimRoundingMode:i};return dr.runKernelFunc((t=>{const e=xi(l.shape,r,s,1,a,i);return t.maxPoolBackprop(o,l,c,e)}),h,null,xe,p)}}),dp={kernelName:De,inputsToSave:["x"],gradFunc:(t,e,n)=>{const r=e[0],{paddings:s}=n,a=s.map((t=>t[0]));return{x:()=>Hu(t,a,r.shape)}}},fp={kernelName:tn,gradFunc:(t,e,n)=>{const{blockShape:r,paddings:s}=n;return{x:()=>Di(t,r,s)}}},mp={kernelName:en,gradFunc:(t,e,n)=>{const{axis:r}=n;return{x:()=>Gi(t,r)}}};const gp=[ih,oh,uh,lh,ch,hh,ph,dh,fh,mh,gh,yh,xh,vh,Ih,kh,Nh,Sh,Eh,Ch,$h,Ah,Th,Dh,Mh,Fh,Oh,Lh,Bh,zh,Ph,Wh,Vh,Uh,Hh,Gh,jh,Kh,Jh,Zh,Qh,tp,ep,np,rp,sp,ip,up,up,lp,hp,{kernelName:be,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r,s]=e,{filterSize:a,strides:i,pad:o}=n;return{x:()=>pp(t,r,s,a,i,o)}}},{kernelName:"Min",inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const r=n,{axis:s}=r,[a,i]=e,o=op(t,i,a,x(s,a.shape));return{x:()=>o.x()}}},{kernelName:ke,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e;return{a:()=>Mo(t,la(Bo(n,r),"float32")),b:()=>Mo(t,la(Co(n,r),"float32"))}}},{kernelName:Ne,inputsToSave:["x"],gradFunc:(t,e,n)=>{const r=e[0],{paddings:s}=n,a=s.map((t=>t[0]));return{x:()=>Hu(t,a,r.shape)}}},{kernelName:"Mod",inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=co(n.shape,r.shape);return{a:()=>{const e=lo(n.shape,s);return e.length>0?xa(Xo(t,e),n.shape):t},b:()=>{const e=Mo(t,Uo(No(oo(n,r)))),a=lo(r.shape,s);return a.length>0?xa(Xo(e,a),r.shape):e}}}},{kernelName:Se,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=co(n.shape,r.shape);return{a:()=>{const e=Mo(t,la(r,"float32")),a=lo(n.shape,s);return a.length>0?xa(Xo(e,a),n.shape):e},b:()=>{const e=Mo(t,la(n,"float32")),a=lo(r.shape,s);return a.length>0?xa(Xo(e,a),r.shape):e}}}},{kernelName:Ee,gradFunc:t=>({x:()=>Uo(t)})},{kernelName:_e,inputsToSave:["indices"],gradFunc:(t,e)=>{const n=e[0];return{indices:()=>ru(n.shape,"float32")}}},{kernelName:Re,gradFunc:t=>({x:()=>fo(t)})},dp,dp,{kernelName:"Pow",inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(t,e)=>{const[n,r,s]=e,a=n,i=r,o=co(a.shape,i.shape);return{a:()=>{const e=la(i,"float32");let n=Mo(t,Mo(e,yu(a,Ko(e,Fo(1)))));const r=lo(a.shape,o);return r.length>0&&(n=Xo(n,r)),xa(n,a.shape)},b:()=>{const e=Co(a,0),n=po(e,Wo(a),fo(a));let r=Mo(t,Mo(s,n));const u=lo(i.shape,o);return u.length>0&&(r=Xo(r,u)),xa(r,i.shape)}}}},{kernelName:Me,inputsToSave:["x","alpha"],gradFunc:(t,e)=>{const[n,r]=e,s=Co(n,0);return{x:()=>po(s,t,Mo(t,r)),alpha:()=>{let e=po(s,fo(t),Mo(t,n));const a=lo(r.shape,t.shape);return a.length>0&&(e=Xo(e,a)),xa(e,r.shape)}}}},{kernelName:Oe,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>oo(t,Uo(cu(n)))}}},{kernelName:We,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e,r=Mo(Bo(n,6),ol(n));return{x:()=>Mo(t,la(r,"float32"))}}},{kernelName:Le,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Mo(t,la(ol(n),"float32"))}}},{kernelName:Be,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>xa(t,n.shape)}}},{kernelName:Pe,inputsToSave:["images"],gradFunc:(t,e,n)=>{const[r]=e,s=e=>{const{alignCorners:s}=n;return e.resizeBilinearBackprop(t,r,s)},a={images:r};return{images:()=>dr.runKernelFunc(s,a,null,"ResizeBilinearGrad",n)}}},{kernelName:ze,inputsToSave:["images"],gradFunc:(t,e,n)=>{const[r]=e,s=e=>{const{alignCorners:s}=n;return e.resizeNearestNeighborBackprop(t,r,s)},a={images:r};return{images:()=>dr.runKernelFunc(s,a,null,"ResizeNearestNeighborGrad",n)}}},{kernelName:Ve,gradFunc:(t,e,n)=>{const{dims:r}=n,s=x(r,t.shape);return{x:()=>Ou(t,s)}}},{kernelName:Ue,gradFunc:t=>({x:()=>fo(t)})},{kernelName:Ge,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Uo(oo(t,Mo(yu(n,1.5),2)))}}},{kernelName:He,inputsToSave:["condition"],gradFunc:(t,e)=>{const[n]=e;return{condition:()=>la(fo(n),"float32"),t:()=>Mo(t,la(n,t.dtype)),e:()=>Mo(t,la(Zo(n),t.dtype))}}},{kernelName:je,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=Co(n,Fo(0)),r=Fo(Xc),s=Fo(Yc),a=Mo(t,s),i=Mo(Mo(t,r),bo(la(n,"float32")));return po(e,a,i)}}}},{kernelName:Je,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Mo(t,Mo(n,Ko(Fo(1),n)))}}},{kernelName:Ye,gradFunc:t=>({x:()=>fo(t)})},{kernelName:Ke,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Mo(to(la(n,"float32")),t)}}},{kernelName:Xe,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Mo(eo(la(n,"float32")),t)}}},{kernelName:qe,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{begin:s,size:a}=n,i=r.shape,[o,u]=za(r,s,a),l=[];for(let e=0;e<t.rank;e++)l.push([o[e],i[e]-o[e]-u[e]]);return{x:()=>gu(t,l)}}},{kernelName:nn,outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r]=e,{dim:s}=n,a=Mo(t,r);return{logits:()=>Ko(a,Mo(Xo(a,[s],true),r))}}},{kernelName:Ze,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Mo(t,Go(n))}}},fp,fp,mp,mp,{kernelName:Qe,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>oo(t,Mo(rl(la(n,"float32")),2))}}},{kernelName:rn,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=Fo(2);return{a:()=>Mo(t,Mo(s,Ko(n,r))),b:()=>Mo(t,Mo(s,Ko(r,n)))}}},{kernelName:sn,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Mo(t,Mo(la(n,"float32"),2))}}},{kernelName:mn,gradFunc:t=>({x:()=>fo(t)})},{kernelName:an,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=co(n.shape,r.shape);return{a:()=>{let e=t;const r=lo(n.shape,s);return r.length>0&&(e=Xo(e,r)),xa(e,n.shape)},b:()=>{let e=t;const n=lo(r.shape,s);return n.length>0&&(e=Xo(e,n)),xa(Uo(e),r.shape)}}}},{kernelName:"Sum",inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,s=r.shape.slice(),{axis:a}=n;x(a,r.shape).forEach((t=>{s[t]=1}));const i=xa(t,s),o=Mo(i,su(r.shape,"float32"));return{x:()=>o}}},{kernelName:on,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>oo(t,cu(to(n)))}}},{kernelName:un,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Mo(Ko(Fo(1),cu(n)),t)}}},{kernelName:ln,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{reps:s}=n;return{x:()=>{let e=fo(r);if(1===r.rank)for(let n=0;n<s[0];++n)e=ti(e,Hu(t,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)e=ti(e,Hu(t,[n*r.shape[0],a*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)for(let i=0;i<s[2];++i)e=ti(e,Hu(t,[n*r.shape[0],a*r.shape[1],i*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)for(let i=0;i<s[2];++i)for(let o=0;o<s[3];++o)e=ti(e,Hu(t,[n*r.shape[0],a*r.shape[1],i*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return e}}}},{kernelName:cn,gradFunc:(t,e,n)=>{const r=n,{perm:s}=r,a=oi(s);return{x:()=>Ia(t,a)}}},{kernelName:pn,gradFunc:(t,e,n)=>{const r=n,{axis:s}=r;return{value:()=>il(t,s)}}},{kernelName:dn,inputsToSave:["segmentIds"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>function(t,e){const n=Do(e,fo(e)),r=Eo(t,n);let s=$o(e,Fo(0,"int32"));const a=r.rank-s.rank;for(let t=0;t<a;++t)s=xo(s,t+1);s=Jo(s,su(r.shape,"bool"));const i=fo(r);return po(s,r,i)}(t,n)}}},{kernelName:fn,gradFunc:t=>({x:()=>fo(t)})}];for(const t of gp)Cn(t);Hn.prototype.abs=function(){return this.throwIfDisposed(),Ja(this)},Hn.prototype.acos=function(){return this.throwIfDisposed(),Za(this)},Hn.prototype.acosh=function(){return this.throwIfDisposed(),Qa(this)},Hn.prototype.addStrict=function(t){return this.throwIfDisposed(),Sl(this,t)},Hn.prototype.add=function(t){return this.throwIfDisposed(),ti(this,t)},Hn.prototype.all=function(t,e){return this.throwIfDisposed(),li(this,t,e)},Hn.prototype.any=function(t,e){return this.throwIfDisposed(),ci(this,t,e)},Hn.prototype.argMax=function(t){return this.throwIfDisposed(),hi(this,t)},Hn.prototype.argMin=function(t){return this.throwIfDisposed(),pi(this,t)},Hn.prototype.asScalar=function(){return this.throwIfDisposed(),u(1===this.size,(()=>"The array must have only 1 element.")),xa(this,[])},Hn.prototype.asType=function(t){return this.throwIfDisposed(),la(this,t)},Hn.prototype.as1D=function(){return this.throwIfDisposed(),xa(this,[this.size])},Hn.prototype.as2D=function(t,e){return this.throwIfDisposed(),xa(this,[t,e])},Hn.prototype.as3D=function(t,e,n){return this.throwIfDisposed(),xa(this,[t,e,n])},Hn.prototype.as4D=function(t,e,n,r){return this.throwIfDisposed(),xa(this,[t,e,n,r])},Hn.prototype.as5D=function(t,e,n,r,s){return this.throwIfDisposed(),xa(this,[t,e,n,r,s])},Hn.prototype.asin=function(){return this.throwIfDisposed(),di(this)},Hn.prototype.asinh=function(){return this.throwIfDisposed(),fi(this)},Hn.prototype.atan=function(){return this.throwIfDisposed(),mi(this)},Hn.prototype.atan2=function(t){return this.throwIfDisposed(),gi(this,t)},Hn.prototype.atanh=function(){return this.throwIfDisposed(),yi(this)},Hn.prototype.avgPool=function(t,e,n,r){return this.throwIfDisposed(),Ri(this,t,e,n,r)},Hn.prototype.batchToSpaceND=function(t,e){return this.throwIfDisposed(),Di(this,t,e)},Hn.prototype.batchNorm=function(t,e,n,r,s){return this.throwIfDisposed(),Fi(this,t,e,n,r,s)},Hn.prototype.broadcastTo=function(t){return this.throwIfDisposed(),zi(this,t)},Hn.prototype.cast=function(t){return this.throwIfDisposed(),la(this,t)},Hn.prototype.ceil=function(){return this.throwIfDisposed(),Pi(this)},Hn.prototype.clipByValue=function(t,e){return this.throwIfDisposed(),Wi(this,t,e)},Hn.prototype.concat=function(t,e){return this.throwIfDisposed(),t instanceof Hn&&(t=[t]),Gi([this,...t],e)},Hn.prototype.conv1d=function(t,e,n,r,s,a){return this.throwIfDisposed(),Yi(this,t,e,n,r,s,a)},Hn.prototype.conv2dTranspose=function(t,e,n,r,s){return this.throwIfDisposed(),Zi(this,t,e,n,r,s)},Hn.prototype.conv2d=function(t,e,n,r,s,a){return this.throwIfDisposed(),Xi(this,t,e,n,r,s,a)},Hn.prototype.cos=function(){return this.throwIfDisposed(),to(this)},Hn.prototype.cosh=function(){return this.throwIfDisposed(),eo(this)},Hn.prototype.cumsum=function(t,e,n){return this.throwIfDisposed(),no(this,t,e,n)},Hn.prototype.depthToSpace=function(t,e){return this.throwIfDisposed(),ro(this,t,e)},Hn.prototype.depthwiseConv2D=function(t,e,n,r,s,a){return Ua("depthwiseConv2D is deprecated, use depthwiseConv2d instead"),this.throwIfDisposed(),so(this,t,e,n,r,s,a)},Hn.prototype.depthwiseConv2d=function(t,e,n,r,s,a){return this.throwIfDisposed(),so(this,t,e,n,r,s,a)},Hn.prototype.dilation2d=function(t,e,n,r,s){return this.throwIfDisposed(),ao(this,t,e,n,r,s)},Hn.prototype.divNoNan=function(t){return this.throwIfDisposed(),mo(this,t)},Hn.prototype.divStrict=function(t){return this.throwIfDisposed(),El(this,t)},Hn.prototype.div=function(t){return this.throwIfDisposed(),oo(this,t)};const yp=ws({dot_:function(t,e){const n=bs(t,"t1","dot"),r=bs(e,"t2","dot");u(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`));const s=1===n.rank?n.size:n.shape[1],a=1===r.rank?r.size:r.shape[0];if(u(s===a,(()=>`Error in dot: inner dimensions of inputs must match, but got ${s} and ${a}.`)),1===n.rank&&1===r.rank){const t=xa(n,[1,-1]),e=xa(r,[-1,1]),s=wa(t,e);return xa(s,[])}if(1===n.rank&&2===r.rank){const t=xa(n,[1,-1]),e=xa(r,[r.shape[0],r.shape[1]]),s=wa(t,e);return xa(s,[s.size])}if(2===n.rank&&1===r.rank){const t=xa(r,[-1,1]),e=wa(n,t);return xa(e,[e.size])}{const t=xa(r,[r.shape[0],r.shape[1]]);return wa(n,t)}}});Hn.prototype.dot=function(t){return this.throwIfDisposed(),yp(this,t)},Hn.prototype.elu=function(){return this.throwIfDisposed(),go(this)},Hn.prototype.equalStrict=function(t){return this.throwIfDisposed(),xl(this,t)},Hn.prototype.equal=function(t){return this.throwIfDisposed(),ho(this,t)},Hn.prototype.erf=function(){return this.throwIfDisposed(),yo(this)},Hn.prototype.exp=function(){return this.throwIfDisposed(),bo(this)},Hn.prototype.expandDims=function(t){return this.throwIfDisposed(),xo(this,t)},Hn.prototype.expm1=function(){return this.throwIfDisposed(),wo(this)},Hn.prototype.fft=function(){return this.throwIfDisposed(),Zu(this)},Hn.prototype.flatten=function(){return this.throwIfDisposed(),xa(this,[this.size])},Hn.prototype.floor=function(){return this.throwIfDisposed(),No(this)},Hn.prototype.floorDiv=function(t){return this.throwIfDisposed(),io(this,t)},Hn.prototype.gather=function(t,e){return this.throwIfDisposed(),Eo(this,t,e)},Hn.prototype.greaterEqualStrict=function(t){return this.throwIfDisposed(),wl(this,t)},Hn.prototype.greaterEqual=function(t){return this.throwIfDisposed(),$o(this,t)},Hn.prototype.greaterStrict=function(t){return this.throwIfDisposed(),vl(this,t)},Hn.prototype.greater=function(t){return this.throwIfDisposed(),Co(this,t)},Hn.prototype.ifft=function(){return this.throwIfDisposed(),Qu(this)},Hn.prototype.irfft=function(){return this.throwIfDisposed(),tl(this)},Hn.prototype.isFinite=function(){return this.throwIfDisposed(),Ao(this)},Hn.prototype.isInf=function(){return this.throwIfDisposed(),Ro(this)},Hn.prototype.isNaN=function(){return this.throwIfDisposed(),_o(this)},Hn.prototype.leakyRelu=function(t){return this.throwIfDisposed(),Oo(this,t)},Hn.prototype.lessEqualStrict=function(t){return this.throwIfDisposed(),Il(this,t)},Hn.prototype.lessEqual=function(t){return this.throwIfDisposed(),Bo(this,t)},Hn.prototype.lessStrict=function(t){return this.throwIfDisposed(),kl(this,t)},Hn.prototype.less=function(t){return this.throwIfDisposed(),Lo(this,t)},Hn.prototype.localResponseNormalization=function(t,e,n,r){return this.throwIfDisposed(),Po(this,t,e,n,r)},Hn.prototype.logSigmoid=function(){return this.throwIfDisposed(),jo(this)},Hn.prototype.logSoftmax=function(t){return this.throwIfDisposed(),Yo(this,t)},Hn.prototype.logSumExp=function(t,e){return this.throwIfDisposed(),$c(this,t,e)},Hn.prototype.log=function(){return this.throwIfDisposed(),Wo(this)},Hn.prototype.log1p=function(){return this.throwIfDisposed(),Vo(this)},Hn.prototype.logicalAnd=function(t){return this.throwIfDisposed(),Jo(this,t)},Hn.prototype.logicalNot=function(){return this.throwIfDisposed(),Zo(this)},Hn.prototype.logicalOr=function(t){return this.throwIfDisposed(),Qo(this,t)};const bp=ws({logicalXor_:function(t,e){const n=bs(t,"a","logicalXor","bool"),r=bs(e,"b","logicalXor","bool");return co(n.shape,r.shape),Jo(Qo(t,e),Zo(Jo(t,e)))}});Hn.prototype.logicalXor=function(t){return this.throwIfDisposed(),bp(this,t)},Hn.prototype.matMul=function(t,e,n){return this.throwIfDisposed(),wa(this,t,e,n)},Hn.prototype.maxPool=function(t,e,n,r){return this.throwIfDisposed(),tu(this,t,e,n,r)},Hn.prototype.max=function(t,e){return this.throwIfDisposed(),qo(this,t,e)},Hn.prototype.maximumStrict=function(t){return this.throwIfDisposed(),Cl(this,t)},Hn.prototype.maximum=function(t){return this.throwIfDisposed(),Do(this,t)},Hn.prototype.mean=function(t,e){return this.throwIfDisposed(),au(this,t,e)},Hn.prototype.min=function(t,e){return this.throwIfDisposed(),iu(this,t,e)},Hn.prototype.minimumStrict=function(t){return this.throwIfDisposed(),$l(this,t)},Hn.prototype.minimum=function(t){return this.throwIfDisposed(),ou(this,t)},Hn.prototype.mirrorPad=function(t,e){return this.throwIfDisposed(),uu(this,t,e)},Hn.prototype.modStrict=function(t){return this.throwIfDisposed(),Tl(this,t)},Hn.prototype.mod=function(t){return this.throwIfDisposed(),lu(this,t)},Hn.prototype.mulStrict=function(t){return this.throwIfDisposed(),Al(this,t)},Hn.prototype.mul=function(t){return this.throwIfDisposed(),Mo(this,t)},Hn.prototype.neg=function(){return this.throwIfDisposed(),Uo(this)},Hn.prototype.norm=function(t,e,n){return this.throwIfDisposed(),Fl(this,t,e,n)},Hn.prototype.notEqualStrict=function(t){return this.throwIfDisposed(),Nl(this,t)},Hn.prototype.notEqual=function(t){return this.throwIfDisposed(),du(this,t)},Hn.prototype.oneHot=function(t,e=1,n=0){return this.throwIfDisposed(),va(this,t,e,n)},Hn.prototype.onesLike=function(){return this.throwIfDisposed(),mu(this)},Hn.prototype.pad=function(t,e){return this.throwIfDisposed(),gu(this,t,e)};const xp=ws({pool_:function(t,e,n,r,s,a){null==s&&(s=[1,1]),null==a&&(a=1),0===r&&(r="valid");const i=bs(t,"x","maxPool");let o=i,l=!1;3===i.rank&&(l=!0,o=xa(i,[1,i.shape[0],i.shape[1],i.shape[2]])),u(Ti(a,s),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${a} and dilations '${s}'`));const c=xi(o.shape,e,a,s,r),h=[c.dilationHeight,c.dilationWidth];let p;p="same"===r?function(t,e){const n=t.map(((t,n)=>t+(t-1)*(e[n]-1))).map((t=>t-1)),r=n.map((t=>Math.floor(t/2))),s=n.map(((t,e)=>t-r[e]));return n.map(((t,e)=>[r[e],s[e]]))}([c.filterHeight,c.filterWidth],h):[[0,0],[0,0]];const d=1===h[0]&&1===h[1],[f,m]=function(t,e,n){const r=n.map((t=>t[0])),s=n.map((t=>t[1])),a=t.concat(r,s),i=e.map(((t,e)=>(t-a[e]%t)%t)),o=s.map(((t,e)=>t+i[e])),u=e.map(((t,e)=>[r[e],o[e]])),l=e.map(((t,e)=>[0,i[e]]));return[u,l]}([c.inHeight,c.inWidth],h,p),g=d?r:"valid",y=d?o:Ju(o,h,f),b=("avg"===n?()=>Ri(y,e,a,g):()=>tu(y,e,a,g))(),x=d?b:Di(b,h,m);return l?xa(x,[x.shape[1],x.shape[2],x.shape[3]]):x}});var wp,vp,Ip;Hn.prototype.pool=function(t,e,n,r,s){return this.throwIfDisposed(),xp(this,t,e,n,r,s)},Hn.prototype.powStrict=function(t){return this.throwIfDisposed(),Rl(this,t)},Hn.prototype.pow=function(t){return this.throwIfDisposed(),yu(this,t)},Hn.prototype.prelu=function(t){return this.throwIfDisposed(),bu(this,t)},Hn.prototype.prod=function(t,e){return this.throwIfDisposed(),xu(this,t,e)},Hn.prototype.reciprocal=function(){return this.throwIfDisposed(),Mu(this)},Hn.prototype.relu=function(){return this.throwIfDisposed(),Fu(this)},Hn.prototype.relu6=function(){return this.throwIfDisposed(),Wl(this)},Hn.prototype.reshapeAs=function(t){return this.throwIfDisposed(),xa(this,t.shape)},Hn.prototype.reshape=function(t){return this.throwIfDisposed(),xa(this,t)},Hn.prototype.resizeBilinear=function(t,e){return this.throwIfDisposed(),xc(this,t,e)},Hn.prototype.resizeNearestNeighbor=function(t,e){return this.throwIfDisposed(),wc(this,t,e)},Hn.prototype.reverse=function(t){return this.throwIfDisposed(),Ou(this,t)},Hn.prototype.rfft=function(){return this.throwIfDisposed(),nl(this)},Hn.prototype.round=function(){return this.throwIfDisposed(),Lu(this)},Hn.prototype.rsqrt=function(){return this.throwIfDisposed(),Bu(this)},Hn.prototype.selu=function(){return this.throwIfDisposed(),zu(this)},Hn.prototype.separableConv2d=function(t,e,n,r,s,a){return this.throwIfDisposed(),Pu(this,t,e,n,r,s,a)},Hn.prototype.sigmoid=function(){return this.throwIfDisposed(),Go(this)},Hn.prototype.sign=function(){return this.throwIfDisposed(),Vu(this)},Hn.prototype.sin=function(){return this.throwIfDisposed(),Uu(this)},Hn.prototype.sinh=function(){return this.throwIfDisposed(),Gu(this)},Hn.prototype.slice=function(t,e){return this.throwIfDisposed(),Hu(this,t,e)},Hn.prototype.softmax=function(t){return this.throwIfDisposed(),Yu(this,t)},Hn.prototype.softplus=function(){return this.throwIfDisposed(),Ho(this)},Hn.prototype.spaceToBatchND=function(t,e){return this.throwIfDisposed(),Ju(this,t,e)},Hn.prototype.split=function(t,e){return this.throwIfDisposed(),el(this,t,e)},Hn.prototype.sqrt=function(){return this.throwIfDisposed(),rl(this)},Hn.prototype.square=function(){return this.throwIfDisposed(),cu(this)},Hn.prototype.squaredDifference=function(t){return this.throwIfDisposed(),sl(this,t)},Hn.prototype.squaredDifferenceStrict=function(t){return this.throwIfDisposed(),_l(this,t)},Hn.prototype.squeeze=function(t){return this.throwIfDisposed(),al(this,t)},Hn.prototype.stack=function(t,e){this.throwIfDisposed();const n=t instanceof Hn?[this,t]:[this,...t];return il(n,e)},Hn.prototype.step=function(t){return this.throwIfDisposed(),ol(this,t)},Hn.prototype.stridedSlice=function(t,e,n,r,s,a,i,o){return this.throwIfDisposed(),ul(this,t,e,n,r,s,a,i,o)},Hn.prototype.subStrict=function(t){return this.throwIfDisposed(),Dl(this,t)},Hn.prototype.sub=function(t){return this.throwIfDisposed(),Ko(this,t)},Hn.prototype.sum=function(t,e){return this.throwIfDisposed(),Xo(this,t,e)},Hn.prototype.tan=function(){return this.throwIfDisposed(),ll(this)},Hn.prototype.tanh=function(){return this.throwIfDisposed(),cl(this)},Hn.prototype.tile=function(t){return this.throwIfDisposed(),vo(this,t)},Hn.prototype.toBool=function(){return this.throwIfDisposed(),la(this,"bool")},Hn.prototype.toFloat=function(){return this.throwIfDisposed(),la(this,"float32")},Hn.prototype.toInt=function(){return this.throwIfDisposed(),la(this,"int32")},Hn.prototype.topk=function(t,e){return this.throwIfDisposed(),dl(this,t,e)},Hn.prototype.transpose=function(t){return this.throwIfDisposed(),Ia(this,t)},Hn.prototype.unique=function(t){return this.throwIfDisposed(),ml(this,t)},Hn.prototype.unsortedSegmentSum=function(t,e){return this.throwIfDisposed(),qh(this,t,e)},Hn.prototype.unstack=function(t){return this.throwIfDisposed(),gl(this,t)},Hn.prototype.where=function(t,e){return this.throwIfDisposed(),po(t,this,e)},Hn.prototype.zerosLike=function(){return this.throwIfDisposed(),fo(this)},(vp=wp||(wp={}))[vp.DT_INVALID=0]="DT_INVALID",vp[vp.DT_FLOAT=1]="DT_FLOAT",vp[vp.DT_DOUBLE=2]="DT_DOUBLE",vp[vp.DT_INT32=3]="DT_INT32",vp[vp.DT_UINT8=4]="DT_UINT8",vp[vp.DT_INT16=5]="DT_INT16",vp[vp.DT_INT8=6]="DT_INT8",vp[vp.DT_STRING=7]="DT_STRING",vp[vp.DT_COMPLEX64=8]="DT_COMPLEX64",vp[vp.DT_INT64=9]="DT_INT64",vp[vp.DT_BOOL=10]="DT_BOOL",vp[vp.DT_QINT8=11]="DT_QINT8",vp[vp.DT_QUINT8=12]="DT_QUINT8",vp[vp.DT_QINT32=13]="DT_QINT32",vp[vp.DT_BFLOAT16=14]="DT_BFLOAT16",vp[vp.DT_FLOAT_REF=101]="DT_FLOAT_REF",vp[vp.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",vp[vp.DT_INT32_REF=103]="DT_INT32_REF",vp[vp.DT_UINT8_REF=104]="DT_UINT8_REF",vp[vp.DT_INT16_REF=105]="DT_INT16_REF",vp[vp.DT_INT8_REF=106]="DT_INT8_REF",vp[vp.DT_STRING_REF=107]="DT_STRING_REF",vp[vp.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",vp[vp.DT_INT64_REF=109]="DT_INT64_REF",vp[vp.DT_BOOL_REF=110]="DT_BOOL_REF",vp[vp.DT_QINT8_REF=111]="DT_QINT8_REF",vp[vp.DT_QUINT8_REF=112]="DT_QUINT8_REF",vp[vp.DT_QINT32_REF=113]="DT_QINT32_REF",vp[vp.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",function(t){let e;!function(t){t[t.LEGACY=0]="LEGACY",t[t.V1=1]="V1",t[t.V2=2]="V2"}(e=t.CheckpointFormatVersion||(t.CheckpointFormatVersion={}))}(Ip||(Ip={}));const kp={};function Np(t){return kp[t]}function Sp(t,e,n,r,s){const a=e.inputParams[t];if(a&&void 0!==a.inputIndexStart){const t=a.inputIndexStart,i=0===a.inputIndexEnd?void 0:void 0===a.inputIndexEnd?t+1:a.inputIndexEnd;if("tensor"===a.type)return Ep(e.inputNames[a.inputIndexStart],n,r,s);if("tensors"===a.type){return e.inputNames.slice(t,i).map((t=>Ep(t,n,r,s)))}const o=Ep(e.inputNames.slice(t)[0],n,r,s),u=o.dataSync();return"number"===a.type?u[0]:D(o.shape,u)}const i=e.attrParams[t];return i&&i.value}function Ep(t,e,n,r){const[s,a]=Tp(t);if(null!=r){const t=r.getHashTableHandleByName(s);if(null!=t)return t}const i=n.currentContextIds.find((t=>!!e[$p(s,t)]));return void 0!==i?e[$p(s,i)][a]:void 0}function Cp(t,e){const[n,r]=Tp(t);return[$p(n,e&&e.currentContextId),r]}function $p(t,e){return e?`${t}-${e}`:t}function Tp(t){const e=t.split(":");if(1===e.length)return[t,0];return[e[0],Number(e[e.length-1])]}function Ap(t,e,n){let r=Sp("pad",t,e,n);if("explicit"===r){r=Sp("explicitPaddings",t,e,n);const s=[[0,0],[0,0],[0,0],[0,0]];for(let t=0;t<4;t++)s[t][0]=r[2*t],s[t][1]=r[2*t+1];return s}return r}function Rp(t){return t.kept?t:ca(t)}var _p={};const Dp=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];t(_p,"json",(function(){return Dp}));var Mp={};const Fp=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"clip_value_min",name:"clipValueMin",type:"number"},{tfName:"clip_value_max",name:"clipValueMax",type:"number"}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"clipValueMin",name:"clipValueMin",type:"number",defaultValue:0},{tfName:"clipValueMax",name:"clipValueMax",type:"number",defaultValue:6}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];t(Mp,"json",(function(){return Fp}));var Op={};const Lp=[{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}];t(Op,"json",(function(){return Lp}));var Bp={};const zp=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}];t(Bp,"json",(function(){return zp}));var Pp={};const Wp=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}];t(Pp,"json",(function(){return Wp}));var Vp={};const Up=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];t(Vp,"json",(function(){return Up}));var Gp={};const Hp=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}];t(Gp,"json",(function(){return Hp}));var jp={};const qp=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}];t(jp,"json",(function(){return qp}));var Kp={};const Xp=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]}];t(Kp,"json",(function(){return Xp}));var Yp={};const Jp=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}];t(Yp,"json",(function(){return Jp}));var Zp={};const Qp=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];t(Zp,"json",(function(){return Qp}));var td={};const ed=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];t(td,"json",(function(){return ed}));var nd={};const rd=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}];t(nd,"json",(function(){return rd}));var sd={};const ad=[{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}];t(sd,"json",(function(){return ad}));var id={};const od=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool",notSupported:!0}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}];t(id,"json",(function(){return od}));var ud={};const ld=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}];t(ud,"json",(function(){return ld}));var cd={};const hd=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]}];t(cd,"json",(function(){return hd}));var pd=Ar;class dd{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const t=[].concat(...[_p,Mp,Op,Bp,Pp,Vp,Gp,Zp,Yp,jp,td,nd,sd,id,ud,cd,Kp].map((t=>t.json)));this.opMappers=t.reduce(((t,e)=>(t[e.tfOpName]=e,t)),{})}transformGraph(t,e={}){const n=t.node,r=[],s=[],a=[],i=n.reduce(((t,e)=>(t[e.name]=this.mapNode(e),e.op.startsWith("Placeholder")?r.push(t[e.name]):"Const"===e.op?s.push(t[e.name]):null!=e.input&&0!==e.input.length||a.push(t[e.name]),t)),{});let o=[];const u=[];let l={},c={};null!=e&&(l=this.mapSignatureEntries(e.inputs),c=this.mapSignatureEntries(e.outputs));const h=Object.keys(i);h.forEach((t=>{const e=i[t];e.inputNames.forEach((t=>{const[n]=Cp(t);e.inputs.push(i[n]),i[n].children.push(e)}))})),0===Object.keys(c).length?h.forEach((t=>{const e=i[t];0===e.children.length&&u.push(e)})):Object.keys(c).forEach((t=>{const[e]=Cp(t),n=i[e];null!=n&&(n.signatureKey=c[t],u.push(n))})),Object.keys(l).length>0?Object.keys(l).forEach((t=>{const[e]=Cp(t),n=i[e];n&&(n.signatureKey=l[t],o.push(n))})):o=r;let p={};null!=t.library&&null!=t.library.function&&(p=t.library.function.reduce(((t,e)=>(t[e.signature.name]=this.mapFunction(e),t)),{}));const d={nodes:i,inputs:o,outputs:u,weights:s,placeholders:r,signature:e,functions:p};return a.length>0&&(d.initNodes=a),d}mapSignatureEntries(t){return Object.keys(t||{}).reduce(((e,n)=>(e[t[n].name]=n,e)),{})}mapNode(t){const e=Np(t.op)||this.opMappers[t.op]||{};null==t.attr&&(t.attr={});const n={name:t.name,op:t.op,category:e.category,inputNames:(t.input||[]).map((t=>t.startsWith("^")?t.substr(1):t)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:t.attr};return null!=e.inputs&&(n.inputParams=e.inputs.reduce(((t,e)=>(t[e.name]={type:e.type,inputIndexStart:e.start,inputIndexEnd:e.end},t)),{})),null!=e.attrs&&(n.attrParams=e.attrs.reduce(((e,n)=>{const r=n.type;let s;switch(n.type){case"string":s=md(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=md(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":s=Sd(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=Sd(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":s=yd(t.attr,n.tfName,n.defaultValue||0),void 0===s&&n.tfDeprecatedName&&(s=yd(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":s=Nd(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=Nd(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":s=gd(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=gd(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":s=Cd(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=Cd(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":s=kd(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=kd(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":s=Ed(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=Ed(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":s=wd(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=wd(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":s=vd(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=vd(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":s=xd(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=xd(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${t.op}`)}return e[n.name]={value:s,type:r},e}),{})),n}mapFunction(t){const e=t.nodeDef,n=[];let r={};null!=e&&(r=e.reduce(((t,e)=>(t[e.name]=this.mapNode(e),"Const"===e.op&&n.push(t[e.name]),t)),{}));const s=[],a=[];t.signature.inputArg.forEach((t=>{const[e]=Cp(t.name),n={name:e,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:bd(t.type),type:"dtype"}},children:[]};n.signatureKey=t.name,s.push(n),r[e]=n}));Object.keys(r).forEach((t=>{const e=r[t];e.inputNames.forEach((t=>{const[n]=Cp(t);e.inputs.push(r[n]),r[n].children.push(e)}))}));const i=t.ret;t.signature.outputArg.forEach((t=>{const[e,n]=Cp(i[t.name]),s=r[e];null!=s&&(s.defaultOutput=n,a.push(s))}));const o=this.mapArgsToSignature(t);return{nodes:r,inputs:s,outputs:a,weights:n,placeholders:[],signature:o}}mapArgsToSignature(t){return{methodName:t.signature.name,inputs:t.signature.inputArg.reduce(((t,e)=>(t[e.name]=this.mapArgToTensorInfo(e),t)),{}),outputs:t.signature.outputArg.reduce(((e,n)=>(e[n.name]=this.mapArgToTensorInfo(n,t.ret),e)),{})}}mapArgToTensorInfo(t,e){let n=t.name;return null!=e&&(n=e[n]),{name:n,dtype:t.type}}}function fd(t,e){const n=Array.isArray(t)?String.fromCharCode.apply(null,t):function(t){const e=U().global;if(void 0!==e.atob)return e.atob(t);if(void 0!==pd)return new pd(t,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(t);return e?n:n.toLowerCase()}function md(t,e,n,r=!1){const s=t[e];return null!=s?fd(s.s,r):n}function gd(t,e,n){const r=t[e];return r?r.b:n}function yd(t,e,n){const r=t[e]||{},s=null!=r.i?r.i:null!=r.f?r.f:n;return"number"==typeof s?s:parseInt(s,10)}function bd(t){switch("string"==typeof t&&(t=wp[t]),t){case wp.DT_FLOAT:return"float32";case wp.DT_INT32:case wp.DT_INT64:case wp.DT_INT8:case wp.DT_UINT8:return"int32";case wp.DT_BOOL:return"bool";case wp.DT_DOUBLE:return"float32";case wp.DT_STRING:return"string";default:return null}}function xd(t,e,n){const r=t[e];return r&&r.func?r.func.name:n}function wd(t,e,n){const r=t[e];return r&&r.type?bd(r.type):n}function vd(t,e,n){const r=t[e];return r&&r.list&&r.list.type?r.list.type.map((t=>bd(t))):n}function Id(t){if(!t.unknownRank)return null!=t.dim?t.dim.map((t=>"number"==typeof t.size?t.size:parseInt(t.size,10))):[]}function kd(t,e,n){const r=t[e];return r&&r.shape?Id(r.shape):n}function Nd(t,e,n){const r=t[e];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map((t=>"number"==typeof t?t:parseInt(t,10))):n}function Sd(t,e,n,r=!1){const s=t[e];return s&&s.list&&s.list.s?s.list.s.map((t=>fd(t,r))):n}function Ed(t,e,n){const r=t[e];return r&&r.list&&r.list.shape?r.list.shape.map((t=>Id(t))):n}function Cd(t,e,n){const r=t[e];return r&&r.list&&r.list.b?r.list.b:n}class $d{constructor(t,e,n){this.node=t,this.tensorMap=e,this.context=n,this.inputs=[],this.attrs={},this.inputs=t.inputNames.map((t=>this.getInput(t))),null!=t.rawAttrs&&(this.attrs=Object.keys(t.rawAttrs).reduce(((t,e)=>(t[e]=this.getAttr(e),t)),{}))}getInput(t){return Ep(t,this.tensorMap,this.context)}getAttr(t,e){const n=this.node.rawAttrs[t];if(null!=n.tensor)return Ep(t,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return yd(this.node.rawAttrs,t,e);if(null!=n.s)return md(this.node.rawAttrs,t,e);if(null!=n.b)return gd(this.node.rawAttrs,t,e);if(null!=n.shape)return kd(this.node.rawAttrs,t,e);if(null!=n.type)return wd(this.node.rawAttrs,t,e);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return Nd(this.node.rawAttrs,t,e);if(null!=n.list.s)return Sd(this.node.rawAttrs,t,e);if(null!=n.list.shape)return Ed(this.node.rawAttrs,t,e);if(null!=n.list.b)return Cd(this.node.rawAttrs,t,e);if(null!=n.list.type)return vd(this.node.rawAttrs,t,e)}return e}}function Td(t,e,n=""){u(function(t,e){if(t.length!==e.length)return!1;for(let n=0;n<t.length;n++)if(-1!==t[n]&&-1!==e[n]&&t[n]!==e[n])return!1;return!0}(t,e),(()=>n+` Shapes ${t} and ${e} must match`))}class Ad{constructor(t,e,n,r,s,a,i){this.name=t,this.dtype=e,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=s,this.dynamicSize=a,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=Fo(0),Ka(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(t){this.tensors.forEach((e=>{null!=t&&t.has(e.tensor.id)||e.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(t<0||t>=this.size())throw new Error(`Tried to read from index ${t}, but array size is: ${this.size()}`);const e=this.tensors[t];if(e.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${t} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(e.cleared=!0),e.read=!0,e.tensor}readMany(t){return t.map((t=>this.read(t)))}write(t,e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(t<0||!this.dynamicSize&&t>=this.maxSize)throw new Error(`Tried to write to index ${t}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[t]||{};if(e.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t},\n          because the value dtype is ${e.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=e.shape),Td(this.elementShape,e.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${t}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t}, because it has already been written.`);n.tensor=e,Ka(e),n.written=!0,this.tensors[t]=n}writeMany(t,e){if(t.length!==e.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${t.length} is not the same as tensors size: ${e.length}.`);t.forEach(((t,n)=>this.write(t,e[n])))}gather(t,e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${e}`);if(t)t=t.slice(0,this.size());else{t=[];for(let e=0;e<this.size();e++)t.push(e)}if(0===t.length)return ks([],[0].concat(this.elementShape));const n=this.readMany(t);return Td(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),il(n,0)}concat(t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${t}`);if(0===this.size())return ks([],[0].concat(this.elementShape));const e=[];for(let t=0;t<this.size();t++)e.push(t);const n=this.readMany(e);return Td(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),Gi(n,0)}scatter(t,e){if(e.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${e.dtype}`);if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const n=Math.max(...t);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(t,gl(e,0))}split(t,e){if(e.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${e.dtype}`);let n=0;const r=t.map((t=>(n+=t,n)));if(n!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${e.shape}`);if(!this.dynamicSize&&t.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${t.length}), and the TensorArray is not marked as dynamically resizeable`);const s=0===n?0:e.size/n,a=[];ja((()=>{e=xa(e,[1,n,s]);for(let n=0;n<t.length;++n){const i=[0,0===n?0:r[n-1],0],o=[1,t[n],s];a[n]=xa(Hu(e,i,o),this.elementShape)}return a}));const i=[];for(let e=0;e<t.length;e++)i[e]=e;this.writeMany(i,a)}}class Rd{constructor(t,e,n,r=-1){this.tensors=t,this.elementShape=e,this.elementDtype=n,null!=t&&t.forEach((t=>{if(n!==t.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${t.dtype}`);Td(e,t.shape,"TensorList shape mismatch: "),Ka(t)})),this.idTensor=Fo(0),this.maxNumElements=r,Ka(this.idTensor)}get id(){return this.idTensor.id}copy(){return new Rd([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(t){this.tensors.forEach((e=>{null!=t&&t.has(e.id)||e.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(t,e,n=-1){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);return Td(t,this.elementShape,"TensorList shape mismatch: "),ja((()=>{const e=this.tensors.map((e=>xa(e,t)));return il(e,0)}))}popBack(t,e){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=this.tensors.pop();return Td(n.shape,t,"TensorList shape mismatch: "),xa(n,t)}pushBack(t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(Td(t.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Ka(t),this.tensors.push(t)}resize(t){if(t<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${t}`);if(-1!==this.maxNumElements&&t>this.maxNumElements)throw new Error(`TensorListResize input size ${t} is greater maxNumElement ${this.maxNumElements}.`);this.tensors.length=t}getItem(t,e,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(t<0||t>this.tensors.length)throw new Error(`Trying to access element ${t} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[t])throw new Error(`element at index ${t} is null.`);return Td(this.tensors[t].shape,e,"TensorList shape mismatch: "),this.tensors[t]}setItem(t,e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(t<0||-1!==this.maxNumElements&&t>=this.maxNumElements)throw new Error(`Trying to set element ${t} in a list with max ${this.maxNumElements} elements.`);Td(this.elementShape,e.shape,"TensorList shape mismatch: "),Ka(e),this.tensors[t]=e}gather(t,e,n){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);return Td(this.elementShape,n,"TensorList shape mismatch: "),0===(t=t.slice(0,this.size())).length?ks([],[0].concat(this.elementShape)):ja((()=>{const e=t.map((t=>xa(this.tensors[t],n)));return il(e,0)}))}concat(t,e){if(t&&t!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${t}`);return Td(this.elementShape,e,"TensorList shape mismatch: "),0===this.size()?ks([],[0].concat(this.elementShape)):ja((()=>{const t=this.tensors.map((t=>xa(t,e)));return Gi(t,0)}))}}const _d=async(t,e,n)=>{switch(t.op){case"If":case"StatelessIf":{const r=Sp("thenBranch",t,e,n),s=Sp("elseBranch",t,e,n),a=Sp("cond",t,e,n),i=Sp("args",t,e,n);return(await a.data())[0]?n.functionMap[r].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap):n.functionMap[s].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const r=Sp("body",t,e,n),s=Sp("cond",t,e,n),a=Sp("args",t,e,n),i=await n.functionMap[s].executeFunctionAsync(a,n.tensorArrayMap,n.tensorListMap),o=a.map((t=>t.id));let u=await i[0].data();i.forEach((t=>{t.kept||-1!==o.indexOf(t.id)||t.dispose()}));let l=a;for(;u[0];){const t=l;l=await n.functionMap[r].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);const e=l.map((t=>t.id));t.forEach((t=>{t.kept||-1!==o.indexOf(t.id)||-1!==e.indexOf(t.id)||t.dispose()}));const a=await n.functionMap[s].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);u=await a[0].data(),a.forEach((t=>{t.kept||-1!==o.indexOf(t.id)||-1!==e.indexOf(t.id)||t.dispose()}))}return l}case"LoopCond":return[Rp(Sp("pred",t,e,n))];case"Switch":{const r=Sp("pred",t,e,n);let s=Sp("data",t,e,n);return s.kept||(s=Rp(s)),(await r.data())[0]?[void 0,s]:[s,void 0]}case"Merge":{const r=t.inputNames.find((t=>void 0!==Ep(t,e,n)));if(r){return[Rp(Ep(r,e,n))]}return}case"Enter":{const r=Sp("frameName",t,e,n),s=Sp("tensor",t,e,n);return n.enterFrame(r),[Rp(s)]}case"Exit":{const r=Sp("tensor",t,e,n);return n.exitFrame(),[Rp(r)]}case"NextIteration":{const r=Sp("tensor",t,e,n);return n.nextIteration(),[Rp(r)]}case"TensorArrayV3":{const r=Sp("size",t,e,n),s=Sp("dtype",t,e,n),a=Sp("elementShape",t,e,n),i=Sp("dynamicSize",t,e,n),o=Sp("clearAfterRead",t,e,n),u=Sp("identicalElementShapes",t,e,n),l=Sp("name",t,e,n),c=new Ad(l,s,r,a,u,i,o);return n.addTensorArray(c),[c.idTensor,Fo(1)]}case"TensorArrayWriteV3":{const r=Sp("tensorArrayId",t,e,n),s=Sp("index",t,e,n),a=Sp("tensor",t,e,n),i=n.getTensorArray(r.id);return i.write(s,a),[i.idTensor]}case"TensorArrayReadV3":{const r=Sp("tensorArrayId",t,e,n),s=Sp("index",t,e,n);return[n.getTensorArray(r.id).read(s)]}case"TensorArrayGatherV3":{const r=Sp("tensorArrayId",t,e,n),s=Sp("indices",t,e,n),a=Sp("dtype",t,e,n);return[n.getTensorArray(r.id).gather(s,a)]}case"TensorArrayScatterV3":{const r=Sp("tensorArrayId",t,e,n),s=Sp("indices",t,e,n),a=Sp("tensor",t,e,n),i=n.getTensorArray(r.id);return i.scatter(s,a),[i.idTensor]}case"TensorArrayConcatV3":{const r=Sp("tensorArrayId",t,e,n),s=n.getTensorArray(r.id),a=Sp("dtype",t,e,n);return[s.concat(a)]}case"TensorArraySplitV3":{const r=Sp("tensorArrayId",t,e,n),s=Sp("tensor",t,e,n),a=Sp("lengths",t,e,n),i=n.getTensorArray(r.id);return i.split(a,s),[i.idTensor]}case"TensorArraySizeV3":{const r=Sp("tensorArrayId",t,e,n);return[Fo(n.getTensorArray(r.id).size(),"int32")]}case"TensorArrayCloseV3":{const r=Sp("tensorArrayId",t,e,n),s=n.getTensorArray(r.id);return s.clearAndClose(),[s.idTensor]}case"TensorListSetItem":{const r=Sp("tensorListId",t,e,n),s=Sp("index",t,e,n),a=Sp("tensor",t,e,n),i=n.getTensorList(r.id);return i.setItem(s,a),[i.idTensor]}case"TensorListGetItem":{const r=Sp("tensorListId",t,e,n),s=Sp("index",t,e,n),a=Sp("elementShape",t,e,n),i=Sp("elementDType",t,e,n);return[n.getTensorList(r.id).getItem(s,a,i)]}case"TensorListScatterV2":case"TensorListScatter":{const r=Sp("indices",t,e,n),s=function(t,e,n,r){if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const s=Math.max(...e);if(null!=r&&-1!==r&&s>=r)throw new Error(`Max index must be < array size (${s}  vs. ${r})`);const a=new Rd([],n,t.dtype,r),i=gl(t,0);return e.forEach(((t,e)=>{a.setItem(t,i[e])})),a}(Sp("tensor",t,e,n),r,Sp("elementShape",t,e,n),Sp("numElements",t,e,n));return n.addTensorList(s),[s.idTensor]}case"TensorListReserve":{const r=function(t,e,n){return new Rd([],t,e,n)}(Sp("elementShape",t,e,n),Sp("elementDType",t,e,n),Sp("numElements",t,e,n));return n.addTensorList(r),[r.idTensor]}case"TensorListGather":{const r=Sp("tensorListId",t,e,n),s=Sp("indices",t,e,n),a=Sp("elementShape",t,e,n),i=Sp("elementDType",t,e,n);return[n.getTensorList(r.id).gather(s,i,a)]}case"TensorListStack":{const r=Sp("tensorListId",t,e,n),s=Sp("elementShape",t,e,n),a=Sp("elementDType",t,e,n),i=Sp("numElements",t,e,n);return[n.getTensorList(r.id).stack(s,a,i)]}case"TensorListFromTensor":{const r=function(t,e,n){const r=t.dtype;if(t.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${t.shape}`);if(t.dtype!==n)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${n}`);Td(t.shape.slice(1),e,"TensorList shape mismatch: ");const s=gl(t);return new Rd(s,e,r)}(Sp("tensor",t,e,n),Sp("elementShape",t,e,n),Sp("elementDType",t,e,n));return n.addTensorList(r),[r.idTensor]}case"TensorListConcat":{const r=Sp("tensorListId",t,e,n),s=n.getTensorList(r.id),a=Sp("dtype",t,e,n),i=Sp("elementShape",t,e,n);return[s.concat(a,i)]}case"TensorListPushBack":{const r=Sp("tensorListId",t,e,n),s=Sp("tensor",t,e,n),a=n.getTensorList(r.id);return a.pushBack(s),[a.idTensor]}case"TensorListPopBack":{const r=Sp("tensorListId",t,e,n),s=Sp("elementShape",t,e,n),a=Sp("elementDType",t,e,n);return[n.getTensorList(r.id).popBack(s,a)]}case"TensorListSplit":{const r=Sp("tensor",t,e,n),s=Sp("elementShape",t,e,n),a=function(t,e,n){let r=0;const s=e.map((t=>(r+=t,r)));if(r!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${r}, and tensor's shape is: ${t.shape}`);const a=0===r?0:t.size/r,i=ja((()=>{const i=[];t=xa(t,[1,r,a]);for(let r=0;r<e.length;++r){const o=[0,0===r?0:s[r-1],0],u=[1,e[r],a];i[r]=xa(Hu(t,o,u),n)}return t.dispose(),i})),o=new Rd([],n,t.dtype,e.length);for(let t=0;t<i.length;t++)o.setItem(t,i[t]);return o}(r,Sp("lengths",t,e,n),s);return n.addTensorList(a),[a.idTensor]}default:throw TypeError(`Node type ${t.op} is not implemented`)}};function Dd(t,e,n){const[r,s]=Sp("fusedOps",t,e,n),a="biasadd"===r,i="prelu"===s,o="fusedbatchnorm"===r,u=Sp("numArgs",t,e,n);if(a){if(i&&2!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&1!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(o)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported.");const l=Sp("strides",t,e,n),c=Ap(t,e,n),h=Sp("dataFormat",t,e,n).toUpperCase(),p=Sp("dilations",t,e,n),[d,f]=Sp("args",t,e,n);return{stride:l,pad:c,dataFormat:h,dilations:p,biasArg:d,preluArg:f,activationFunc:s}}function Md(t,e,n){return{boxes:Sp("boxes",t,e,n),scores:Sp("scores",t,e,n),maxOutputSize:Sp("maxOutputSize",t,e,n),iouThreshold:Sp("iouThreshold",t,e,n),scoreThreshold:Sp("scoreThreshold",t,e,n),softNmsSigma:Sp("softNmsSigma",t,e,n)}}class Fd{constructor(t,e){this.keyDType=t,this.valueDType=e,this.handle=Fo(0),this.tensorMap=new Map,Ka(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach((t=>t.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}async import(t,e){this.checkKeyAndValueTensor(t,e);const n=await t.data();return this.tensorMap.forEach((t=>t.dispose())),this.tensorMap.clear(),ja((()=>{const t=gl(e),r=n.length,s=t.length;u(r===s,(()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${s} elements.`));for(let e=0;e<r;e++){const r=n[e],s=t[e];Ka(s),this.tensorMap.set(r,s)}return this.handle}))}async find(t,e){this.checkKeyAndValueTensor(t,e);const n=await t.data();return ja((()=>{const t=[];for(let r=0;r<n.length;r++){const s=n[r],a=this.findWithDefault(s,e);t.push(a)}return il(t)}))}findWithDefault(t,e){const n=this.tensorMap.get(t);return null!=n?n:e}checkKeyAndValueTensor(t,e){if(t.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${t.dtype}`);if(e.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${e.dtype}`)}}function Od(t,e,n,r){const s=((t,e,n)=>{switch(t.category){case"arithmetic":return ja((()=>((t,e,n)=>{switch(t.op){case"BiasAdd":case"AddV2":case"Add":return[ti(Sp("a",t,e,n),Sp("b",t,e,n))];case"AddN":return[ei(Sp("tensors",t,e,n))];case"FloorMod":case"Mod":return[lu(Sp("a",t,e,n),Sp("b",t,e,n))];case"Mul":return[Mo(Sp("a",t,e,n),Sp("b",t,e,n))];case"RealDiv":case"Div":return[oo(Sp("a",t,e,n),Sp("b",t,e,n))];case"DivNoNan":return[mo(Sp("a",t,e,n),Sp("b",t,e,n))];case"FloorDiv":return[io(Sp("a",t,e,n),Sp("b",t,e,n))];case"Sub":return[Ko(Sp("a",t,e,n),Sp("b",t,e,n))];case"Minimum":return[ou(Sp("a",t,e,n),Sp("b",t,e,n))];case"Maximum":return[Do(Sp("a",t,e,n),Sp("b",t,e,n))];case"Pow":return[yu(Sp("a",t,e,n),Sp("b",t,e,n))];case"SquaredDifference":return[sl(Sp("a",t,e,n),Sp("b",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"basic_math":return ja((()=>((t,e,n)=>{switch(t.op){case"Abs":case"ComplexAbs":return[Ja(Sp("x",t,e,n))];case"Acos":return[Za(Sp("x",t,e,n))];case"Acosh":return[Qa(Sp("x",t,e,n))];case"Asin":return[di(Sp("x",t,e,n))];case"Asinh":return[fi(Sp("x",t,e,n))];case"Atan":return[mi(Sp("x",t,e,n))];case"Atan2":return[gi(Sp("x",t,e,n),Sp("y",t,e,n))];case"Atanh":return[yi(Sp("x",t,e,n))];case"Ceil":return[Pi(Sp("x",t,e,n))];case"Complex":return[vs(Sp("real",t,e,n),Sp("imag",t,e,n))];case"Cos":return[to(Sp("x",t,e,n))];case"Cosh":return[eo(Sp("x",t,e,n))];case"Elu":return[go(Sp("x",t,e,n))];case"Erf":return[yo(Sp("x",t,e,n))];case"Exp":return[bo(Sp("x",t,e,n))];case"Expm1":return[wo(Sp("x",t,e,n))];case"Floor":return[No(Sp("x",t,e,n))];case"Log":return[Wo(Sp("x",t,e,n))];case"Log1p":return[Vo(Sp("x",t,e,n))];case"Imag":return[To(Sp("x",t,e,n))];case"Neg":return[Uo(Sp("x",t,e,n))];case"Reciprocal":return[Mu(Sp("x",t,e,n))];case"Real":return[fu(Sp("x",t,e,n))];case"Relu":return[Fu(Sp("x",t,e,n))];case"Round":return[Lu(Sp("x",t,e,n))];case"Selu":return[zu(Sp("x",t,e,n))];case"Sigmoid":return[Go(Sp("x",t,e,n))];case"Sin":return[Uu(Sp("x",t,e,n))];case"Sign":return[Vu(Sp("x",t,e,n))];case"Sinh":return[Gu(Sp("x",t,e,n))];case"Softplus":return[Ho(Sp("x",t,e,n))];case"Sqrt":return[rl(Sp("x",t,e,n))];case"Square":return[cu(Sp("x",t,e,n))];case"Tanh":return[cl(Sp("x",t,e,n))];case"Tan":return[ll(Sp("x",t,e,n))];case"Relu6":case"ClipByValue":return[Wi(Sp("x",t,e,n),Sp("clipValueMin",t,e,n),Sp("clipValueMax",t,e,n))];case"Rsqrt":return[Bu(Ep(t.inputNames[0],e,n))];case"Prod":return[xu(Sp("x",t,e,n),Sp("axes",t,e,n))];case"LeakyRelu":return[Oo(Sp("x",t,e,n),Sp("alpha",t,e,n))];case"Prelu":return[bu(Sp("x",t,e,n),Sp("alpha",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"control":return _d(t,e,n);case"convolution":return ja((()=>((t,e,n)=>{switch(t.op){case"Conv1D":{const r=Sp("stride",t,e,n),s=Sp("pad",t,e,n),a=Sp("dataFormat",t,e,n).toUpperCase(),i=Sp("dilation",t,e,n);return[Yi(Sp("x",t,e,n),Sp("filter",t,e,n),r,s,a,i)]}case"Conv2D":{const r=Sp("strides",t,e,n),s=Ap(t,e,n),a=Sp("dataFormat",t,e,n).toUpperCase(),i=Sp("dilations",t,e,n);return[Xi(Sp("x",t,e,n),Sp("filter",t,e,n),[r[1],r[2]],s,a,[i[1],i[2]])]}case"_FusedConv2D":{const{stride:r,pad:s,dataFormat:a,dilations:i,biasArg:o,preluArg:u,activationFunc:l}=Dd(t,e,n);return[jl({x:Sp("x",t,e,n),filter:Sp("filter",t,e,n),strides:[r[1],r[2]],pad:s,dataFormat:a,dilations:[i[1],i[2]],bias:o,activation:l,preluActivationWeights:u})]}case"FusedDepthwiseConv2dNative":{const{stride:r,pad:s,dataFormat:a,dilations:i,biasArg:o,preluArg:u,activationFunc:l}=Dd(t,e,n);return[Xl({x:Sp("x",t,e,n),filter:Sp("filter",t,e,n),strides:[r[1],r[2]],pad:s,dataFormat:a,dilations:[i[1],i[2]],bias:o,activation:l,preluActivationWeights:u})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const r=Sp("outputShape",t,e,n),s=Sp("strides",t,e,n),a=Ap(t,e,n);return[Zi(Sp("x",t,e,n),Sp("filter",t,e,n),r,[s[1],s[2]],a)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const r=Sp("strides",t,e,n),s=Ap(t,e,n),a=Sp("dilations",t,e,n),i=Sp("dataFormat",t,e,n).toUpperCase();return[so(Sp("input",t,e,n),Sp("filter",t,e,n),[r[1],r[2]],s,i,[a[1],a[2]])]}case"Conv3D":{const r=Sp("strides",t,e,n),s=Sp("pad",t,e,n),a=Sp("dataFormat",t,e,n).toUpperCase(),i=Sp("dilations",t,e,n);return[Qi(Sp("x",t,e,n),Sp("filter",t,e,n),[r[1],r[2],r[3]],s,a,[i[1],i[2],i[3]])]}case"AvgPool":{const r=Sp("strides",t,e,n),s=Sp("pad",t,e,n),a=Sp("kernelSize",t,e,n);return[Ri(Sp("x",t,e,n),[a[1],a[2]],[r[1],r[2]],s)]}case"MaxPool":{const r=Sp("strides",t,e,n),s=Sp("pad",t,e,n),a=Sp("kernelSize",t,e,n);return[tu(Sp("x",t,e,n),[a[1],a[2]],[r[1],r[2]],s)]}case"MaxPoolWithArgmax":{const r=Sp("strides",t,e,n),s=Sp("pad",t,e,n),a=Sp("kernelSize",t,e,n),i=Sp("includeBatchInIndex",t,e,n),{result:o,indexes:u}=nu(Sp("x",t,e,n),[a[1],a[2]],[r[1],r[2]],s,i);return[o,u]}case"AvgPool3D":{const r=Sp("strides",t,e,n),s=Sp("pad",t,e,n),a=Sp("kernelSize",t,e,n);return[_i(Sp("x",t,e,n),[a[1],a[2],a[3]],[r[1],r[2],r[3]],s)]}case"MaxPool3D":{const r=Sp("strides",t,e,n),s=Sp("pad",t,e,n),a=Sp("kernelSize",t,e,n);return[eu(Sp("x",t,e,n),[a[1],a[2],a[3]],[r[1],r[2],r[3]],s)]}case"Dilation2D":{const r=Sp("strides",t,e,n),s=Sp("pad",t,e,n),a=Sp("dilations",t,e,n),i=r[1],o=r[2],u=a[1],l=a[2];return[ao(Sp("x",t,e,n),Sp("filter",t,e,n),[i,o],s,[u,l],"NHWC")]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"creation":return ja((()=>((t,e,n)=>{switch(t.op){case"Fill":{const r=Sp("shape",t,e,n),s=Sp("dtype",t,e,n);return[ko(r,Sp("value",t,e,n),s)]}case"LinSpace":return[zo(Sp("start",t,e,n),Sp("stop",t,e,n),Sp("num",t,e,n))];case"Multinomial":{const r=Sp("logits",t,e,n),s=Sp("numSamples",t,e,n),a=Sp("seed",t,e,n);return[pu(r,s,a)]}case"OneHot":{const r=Sp("indices",t,e,n),s=Sp("depth",t,e,n),a=Sp("onValue",t,e,n),i=Sp("offValue",t,e,n);return[va(r,s,a,i)]}case"Ones":return[su(Sp("shape",t,e,n),Sp("dtype",t,e,n))];case"OnesLike":return[mu(Sp("x",t,e,n))];case"RandomUniform":return[Ru(Sp("shape",t,e,n),Sp("minval",t,e,n),Sp("maxval",t,e,n),Sp("dtype",t,e,n))];case"Range":return[Du(Sp("start",t,e,n),Sp("stop",t,e,n),Sp("step",t,e,n),Sp("dtype",t,e,n))];case"TruncatedNormal":{const r=Sp("shape",t,e,n),s=Sp("mean",t,e,n),a=Sp("stdDev",t,e,n),i=Sp("seed",t,e,n);return[fl(r,s,a,Sp("dtype",t,e,n),i)]}case"Zeros":return[ru(Sp("shape",t,e,n),Sp("dtype",t,e,n))];case"ZerosLike":return[fo(Sp("x",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"dynamic":return(async(t,e,n)=>{switch(t.op){case"NonMaxSuppressionV5":{const{boxes:r,scores:s,maxOutputSize:a,iouThreshold:i,scoreThreshold:o,softNmsSigma:u}=Md(t,e,n),l=await Tc.nonMaxSuppressionWithScoreAsync(r,s,a,i,o,u);return[l.selectedIndices,l.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:r,scores:s,maxOutputSize:a,iouThreshold:i,scoreThreshold:o}=Md(t,e,n),u=Sp("padToMaxOutputSize",t,e,n),l=await Tc.nonMaxSuppressionPaddedAsync(r,s,a,i,o,u);return[l.selectedIndices,l.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:r,scores:s,maxOutputSize:a,iouThreshold:i,scoreThreshold:o}=Md(t,e,n);return[await Tc.nonMaxSuppressionAsync(r,s,a,i,o)]}case"Where":{const r=la(Sp("condition",t,e,n),"bool"),s=[await bl(r)];return r.dispose(),s}case"ListDiff":return Wu(Sp("x",t,e,n),Sp("y",t,e,n));default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n);case"evaluation":return ja((()=>((t,e,n)=>{switch(t.op){case"TopKV2":{const r=Sp("x",t,e,n),s=Sp("k",t,e,n),a=Sp("sorted",t,e,n),i=dl(r,s,a);return[i.values,i.indices]}case"Unique":{const r=Sp("x",t,e,n),s=ml(r);return[s.values,s.indices]}case"UniqueV2":{const r=Sp("x",t,e,n),s=Sp("axis",t,e,n),a=ml(r,s);return[a.values,a.indices]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"image":return ja((()=>((t,e,n)=>{switch(t.op){case"ResizeBilinear":{const r=Sp("images",t,e,n),s=Sp("size",t,e,n),a=Sp("alignCorners",t,e,n);return[Tc.resizeBilinear(r,[s[0],s[1]],a)]}case"ResizeNearestNeighbor":{const r=Sp("images",t,e,n),s=Sp("size",t,e,n),a=Sp("alignCorners",t,e,n);return[Tc.resizeNearestNeighbor(r,[s[0],s[1]],a)]}case"CropAndResize":{const r=Sp("image",t,e,n),s=Sp("boxes",t,e,n),a=Sp("boxInd",t,e,n),i=Sp("cropSize",t,e,n),o=Sp("method",t,e,n),u=Sp("extrapolationValue",t,e,n);return[Tc.cropAndResize(r,s,a,i,o,u)]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"graph":return ja((()=>((t,e,n)=>{switch(t.op){case"Const":return e[t.name];case"PlaceholderWithDefault":const r=Sp("default",t,e,n);return[Ep(t.name,e,n)||r];case"Placeholder":return[Ep(t.name,e,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":return[Rp(Sp("x",t,e,n))];case"IdentityN":return Sp("x",t,e,n).map((t=>Rp(t)));case"Snapshot":return[Rp(Sp("x",t,e,n))];case"Shape":return[_u(Sp("x",t,e,n).shape,"int32")];case"ShapeN":return Sp("x",t,e,n).map((t=>_u(t.shape)));case"Size":return[Fo(Sp("x",t,e,n).size,"int32")];case"Rank":return[Fo(Sp("x",t,e,n).rank,"int32")];case"NoOp":return[Fo(1)];case"Print":const s=Sp("x",t,e,n),a=Sp("data",t,e,n),i=Sp("message",t,e,n),o=Sp("summarize",t,e,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(i);for(let t=0;t<a.length;t++)console.log(Array.prototype.slice.call(a[t].dataSync()).slice(0,o));return[s];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"logical":return ja((()=>((t,e,n)=>{switch(t.op){case"Equal":return[ho(Sp("a",t,e,n),Sp("b",t,e,n))];case"NotEqual":return[du(Sp("a",t,e,n),Sp("b",t,e,n))];case"Greater":return[Co(Sp("a",t,e,n),Sp("b",t,e,n))];case"GreaterEqual":return[$o(Sp("a",t,e,n),Sp("b",t,e,n))];case"Less":return[Lo(Sp("a",t,e,n),Sp("b",t,e,n))];case"LessEqual":return[Bo(Sp("a",t,e,n),Sp("b",t,e,n))];case"LogicalAnd":return[Jo(Sp("a",t,e,n),Sp("b",t,e,n))];case"LogicalNot":return[Zo(Sp("a",t,e,n))];case"LogicalOr":return[Qo(Sp("a",t,e,n),Sp("b",t,e,n))];case"Select":case"SelectV2":return[po(Sp("condition",t,e,n),Sp("a",t,e,n),Sp("b",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"matrices":return ja((()=>((t,e,n)=>{switch(t.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[wa(Sp("a",t,e,n),Sp("b",t,e,n),Sp("transposeA",t,e,n),Sp("transposeB",t,e,n))];case"Transpose":return[Ia(Sp("x",t,e,n),Sp("perm",t,e,n))];case"_FusedMatMul":const[r,s]=Sp("fusedOps",t,e,n),a="biasadd"===r,i="prelu"===s,o=Sp("numArgs",t,e,n);if(a){if(i&&2!==o)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&1!==o)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[u,l]=Sp("args",t,e,n);return[Yl({a:Sp("a",t,e,n),b:Sp("b",t,e,n),transposeA:Sp("transposeA",t,e,n),transposeB:Sp("transposeB",t,e,n),bias:u,activation:s,preluActivationWeights:l})];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"normalization":return ja((()=>((t,e,n)=>{switch(t.op){case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[Fi(Sp("x",t,e,n),Sp("mean",t,e,n),Sp("variance",t,e,n),Sp("offset",t,e,n),Sp("scale",t,e,n),Sp("epsilon",t,e,n))];case"LRN":return[Po(Sp("x",t,e,n),Sp("radius",t,e,n),Sp("bias",t,e,n),Sp("alpha",t,e,n),Sp("beta",t,e,n))];case"Softmax":return[Yu(Sp("x",t,e,n))];case"LogSoftmax":return[Yo(Sp("x",t,e,n))];case"SparseToDense":return[Ll(Sp("sparseIndices",t,e,n),Sp("outputShape",t,e,n),Sp("sparseValues",t,e,n),Sp("defaultValue",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"reduction":return ja((()=>((t,e,n)=>{switch(t.op){case"Max":{const r=Sp("axis",t,e,n),s=Sp("keepDims",t,e,n);return[qo(Sp("x",t,e,n),r,s)]}case"Mean":{const r=Sp("axis",t,e,n),s=Sp("keepDims",t,e,n);return[au(Sp("x",t,e,n),r,s)]}case"Min":{const r=Sp("axis",t,e,n),s=Sp("keepDims",t,e,n);return[iu(Sp("x",t,e,n),r,s)]}case"Sum":{const r=Sp("axis",t,e,n),s=Sp("keepDims",t,e,n);return[Xo(Sp("x",t,e,n),r,s)]}case"All":{const r=Sp("axis",t,e,n),s=Sp("keepDims",t,e,n);return[li(Sp("x",t,e,n),r,s)]}case"Any":{const r=Sp("axis",t,e,n),s=Sp("keepDims",t,e,n);return[ci(Sp("x",t,e,n),r,s)]}case"ArgMax":{const r=Sp("axis",t,e,n);return[hi(Sp("x",t,e,n),r)]}case"ArgMin":{const r=Sp("axis",t,e,n);return[pi(Sp("x",t,e,n),r)]}case"Prod":{const r=Sp("axis",t,e,n),s=Sp("keepDims",t,e,n);return[xu(Sp("x",t,e,n),r,s)]}case"Cumsum":{const r=Sp("axis",t,e,n),s=Sp("exclusive",t,e,n),a=Sp("reverse",t,e,n);return[no(Sp("x",t,e,n),r,s,a)]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"slice_join":return ja((()=>((t,e,n)=>{switch(t.op){case"ConcatV2":case"Concat":{const r=Sp("n",t,e,n),s=Sp("axis",t,e,n);let a=Sp("tensors",t,e,n);return a=a.slice(0,r),[Gi(a,s)]}case"GatherV2":case"Gather":{const r=Sp("axis",t,e,n),s=Sp("x",t,e,n),a=Sp("indices",t,e,n);return[Eo(s,la(a,"int32"),r)]}case"ReverseV2":case"Reverse":{const r=Sp("axis",t,e,n),s=Sp("x",t,e,n);return[Ou(s,r)]}case"Slice":{const r=Sp("begin",t,e,n),s=Sp("size",t,e,n);return[Hu(Sp("x",t,e,n),r,s)]}case"StridedSlice":{const r=Sp("begin",t,e,n),s=Sp("end",t,e,n),a=Sp("strides",t,e,n),i=Sp("beginMask",t,e,n),o=Sp("endMask",t,e,n),u=Sp("ellipsisMask",t,e,n),l=Sp("newAxisMask",t,e,n),c=Sp("shrinkAxisMask",t,e,n),h=Sp("x",t,e,n);return[ul(h,r,s,a,i,o,u,l,c)]}case"Pack":return ja((()=>{const r=Sp("axis",t,e,n),s=Sp("tensors",t,e,n),a=s[0].shape,i=al(s[0]).shape,o=s.map((t=>{const e=d(t.shape,a);if(!e&&!d(al(t).shape,i))throw new Error("the input tensors shape does not match");return e?t:xa(t,a)}));return[il(o,r)]}));case"Unpack":{const r=Sp("axis",t,e,n),s=Sp("tensor",t,e,n);return gl(s,r)}case"Tile":{const r=Sp("reps",t,e,n);return[vo(Sp("x",t,e,n),r)]}case"Split":case"SplitV":{const r=Sp("axis",t,e,n),s=Sp("numOrSizeSplits",t,e,n),a=Sp("x",t,e,n);return el(a,s,r)}case"ScatterNd":{const r=Sp("indices",t,e,n),s=Sp("values",t,e,n),a=Sp("shape",t,e,n);return[Ol(r,s,a)]}case"GatherNd":{const r=Sp("x",t,e,n),s=Sp("indices",t,e,n);return[Bl(r,s)]}case"SparseToDense":{const r=Sp("sparseIndices",t,e,n),s=Sp("outputShape",t,e,n),a=Sp("sparseValues",t,e,n),i=Sp("defaultValue",t,e,n);return[Ll(r,a,s,a.dtype===i.dtype?i:la(i,a.dtype))]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"spectral":return ja((()=>((t,e,n)=>{switch(t.op){case"FFT":return[Zu(Sp("x",t,e,n))];case"IFFT":return[Qu(Sp("x",t,e,n))];case"RFFT":return[nl(Sp("x",t,e,n))];case"IRFFT":return[tl(Sp("x",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"transformation":return ja((()=>((t,e,n)=>{switch(t.op){case"Cast":return[la(Sp("x",t,e,n),Sp("dtype",t,e,n))];case"ExpandDims":{const r=Sp("axis",t,e,n);return[xo(Sp("x",t,e,n),r)]}case"Squeeze":{const r=Sp("axis",t,e,n);return[al(Sp("x",t,e,n),r)]}case"Reshape":return[xa(Sp("x",t,e,n),Sp("shape",t,e,n))];case"MirrorPad":return[uu(Sp("x",t,e,n),Sp("padding",t,e,n),Sp("mode",t,e,n))];case"PadV2":case"Pad":return[gu(Sp("x",t,e,n),Sp("padding",t,e,n),Sp("constantValue",t,e,n))];case"SpaceToBatchND":{const r=Sp("blockShape",t,e,n),s=Sp("paddings",t,e,n);return[Ju(Sp("x",t,e,n),r,s)]}case"BatchToSpaceND":{const r=Sp("blockShape",t,e,n),s=Sp("crops",t,e,n);return[Di(Sp("x",t,e,n),r,s)]}case"DepthToSpace":{const r=Sp("blockSize",t,e,n),s=Sp("dataFormat",t,e,n).toUpperCase();return[ro(Sp("x",t,e,n),r,s)]}case"BroadcastTo":return[zi(Sp("x",t,e,n),Sp("shape",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"hash_table":return(async(t,e,n,r)=>{switch(t.op){case"HashTable":case"HashTableV2":{const s=Sp("keyDType",t,e,n),a=Sp("valueDType",t,e,n),i=new Fd(s,a);return r.addHashTable(t.name,i),[i.handle]}case"LookupTableImport":case"LookupTableImportV2":{const s=Sp("tableHandle",t,e,n,r),a=Sp("keys",t,e,n),i=Sp("values",t,e,n),o=r.getHashTableById(s.id);return[await o.import(a,i)]}case"LookupTableFind":case"LookupTableFindV2":{const s=Sp("tableHandle",t,e,n,r),a=Sp("keys",t,e,n),i=Sp("defaultValue",t,e,n),o=r.getHashTableById(s.id);return[await o.find(a,i)]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n,r);case"custom":const s=Np(t.op);if(s&&s.customExecutor)return s.customExecutor(new $d(t,e,n));throw TypeError(`Custom op ${t.op} is not registered.`);default:throw TypeError(`Unknown op '${t.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(t,e,n);return P(s)?s.then((t=>[].concat(t))):[].concat(s)}class Ld{constructor(t={},e={},n={},r={}){this.weightMap=t,this.tensorArrayMap=e,this.tensorListMap=n,this.functionMap=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(t,e){return{id:t,frameName:e,iterationId:0}}set currentContext(t){this.contexts!==t&&(this.contexts=t,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const t=[];for(let e=0;e<this.contexts.length-1;e++){const n=this.contexts.slice(0,this.contexts.length-e);t.push(this.contextIdforContexts(n))}t.push(""),this._currentContextIds=t}contextIdforContexts(t){return t?t.map((t=>0===t.id&&0===t.iterationId?"":`${t.frameName}-${t.iterationId}`)).join("/"):""}enterFrame(t){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,t)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const t=Object.assign({},this.contexts[this.contexts.length-1]);t.iterationId+=1,t.id=this.lastId,this.contexts.splice(-1,1,t),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(t){return this.weightMap[t]}addTensorArray(t){this.tensorArrayMap[t.id]=t}getTensorArray(t){return this.tensorArrayMap[t]}addTensorList(t){this.tensorListMap[t.id]=t}getTensorList(t){return this.tensorListMap[t]}dispose(t){for(const e in this.tensorArrayMap)this.tensorArrayMap[e].clearAndClose(t);for(const e in this.tensorListMap)this.tensorListMap[e].clearAndClose(t)}}function Bd(t,e,n,r){const s=new Set,a=[];let i=null,o=null;const u=new Set,l=Object.keys(t).map((t=>Tp(t)[0]));let c=[];null!=r&&(c=r.map((t=>Tp(t.name)[0])));const h=[...e];for(;h.length>0;){const t=h.pop();(Vd(t)||Ud(t)||Gd(t))&&null==i&&(i=t,o=i.children.map((t=>t.name)).filter((t=>s.has(t)))),s.add(t.name),null==n[t.name]&&(-1===l.indexOf(t.name)&&-1===c.indexOf(t.name)&&(0!==t.inputs.length?t.inputs.forEach((t=>{u.has(t.name)||(u.add(t.name),h.push(t))})):a.push(t.name)))}return{inputs:t,outputs:e,usedNodes:s,missingInputs:a,dynamicNode:i,syncInputs:o}}const zd=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],Pd=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],Wd=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2"];function Vd(t){return zd.indexOf(t.op)>=0}function Ud(t){return Pd.indexOf(t.op)>=0}function Gd(t){return Wd.indexOf(t.op)>=0}class Hd{constructor(t,e){this.graph=t,this.parent=e,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this._outputs=t.outputs,this._inputs=t.inputs,this._initNodes=t.initNodes,this._signature=t.signature,this._functions=t.functions,null!=t.functions&&Object.keys(t.functions).forEach((e=>{this._functionExecutorMap[e]=new Hd(t.functions[e],this)}))}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(t){const e=Object.keys(t).map((e=>t[e].map((t=>t.id))));this._weightIds=[].concat(...e),this._weightMap=t}set resourceManager(t){this._resourceManager=t}get inputs(){return this._inputs.map((t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((t=>t.signatureKey||t.name))}get outputNodes(){return this._outputs.map((t=>{const e=t.signatureKey||t.name;return t.defaultOutput?`${e}:${t.defaultOutput}`:e}))}get functions(){return Object.keys(this._functions).reduce(((t,e)=>(t[e]=this._functions[e].signature,t)),{})}getCompilationKey(t,e){const n=t.map((t=>t.name)).sort(),r=e.map((t=>t.name)).sort();return n.join(this.SEPERATOR)+"--"+r.join(this.SEPERATOR)}compile(t,e){const n=Bd(t,e,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:s,syncInputs:a}=n;if(null!=s)throw new Error(`This execution contains the node '${s.name}', which has the dynamic op '${s.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${a}]`);if(r.length>0){const n=e.map((t=>t.name)),s=Object.keys(t);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${s}]. Missing the following inputs: [${r}]`)}return function(t,e,n){const{usedNodes:r,inputs:s}=n,a=[],i=Object.keys(s).map((t=>Tp(t)[0])).map((e=>t.nodes[e])),o=t.initNodes;i.forEach((t=>{r.has(t.name)&&a.push(t)})),t.weights.forEach((t=>{r.has(t.name)&&a.push(t)})),null!=o&&o.forEach((t=>{r.has(t.name)&&a.push(t)}));const u=new Set,l=[];for(;a.length>0;){const t=a.pop();u.add(t.name),e[t.name]||l.push(t),t.children.forEach((t=>{!u.has(t.name)&&r.has(t.name)&&t.inputs.every((t=>u.has(t.name)))&&a.push(t)}))}return l}(this.graph,this.weightMap,n)}execute(t,e){t=this.mapInputs(t);const n=Object.keys(t).sort();this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e);const r=n.map((t=>this.graph.nodes[Tp(t)[0]])),s=e.map((t=>Tp(t)[0]));let a=s.map((t=>this.graph.nodes[t]));0===a.length&&(a=this._outputs);const i=this.getCompilationKey(r,a);let o=this.compiledMap.get(i);null==o&&(o=this.compile(t,a),this.compiledMap.set(i,o));const u={},l={};return ja((()=>{const n=new Ld(this.weightMap,u,l,this.functionExecutorMap),r=Object.assign({},this.weightMap);Object.keys(t).forEach((e=>{const[n,s]=Tp(e),a=[];a[s]=t[e],r[n]=a}));const a=this.getFrozenTensorIds(r),i={};for(let t=0;t<o.length;t++){const e=o[t];if(!r[e.name]){const t=Od(e,r,n,this._resourceManager);if(P(t))throw new Error(`The execution of the op '${e.op}' returned a promise. Please use model.executeAsync() instead.`);r[e.name]=t,this.checkTensorForDisposal(e.name,e,r,n,a,s,i)}}return null==this.parent&&n.dispose(a),e.map((t=>Ep(t,r,n)))}))}getFrozenTensorIds(t){const e=[].concat.apply([],Object.keys(t).map((e=>t[e])).map((t=>t.map((t=>t.id)))));return new Set(e)}checkTensorForDisposal(t,e,n,r,s,a,i){"control"!==e.category&&-1===a.indexOf(t)&&(n[t].forEach((t=>{null!=t&&(i[t.id]=(i[t.id]||0)+e.children.length)})),e.inputs.forEach((t=>{if("control"!==t.category){const e=function(t,e,n){return e[$p(t,n.currentContextId)]}(t.name,n,r);null!=e&&e.forEach((t=>{if(t&&!s.has(t.id)){const e=i[t.id];1===e?(t.dispose(),delete i[t.id]):null!=e&&i[t.id]--}}))}})))}async executeAsync(t,e){return this._executeAsync(t,e)}async _executeAsync(t,e,n=!1,r={},s={}){n||(t=this.mapInputs(t),this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e));const a=new Ld(this.weightMap,r,s,this.functionExecutorMap),i=await this.executeWithControlFlow(t,a,e,n),o=e.map((t=>Ep(t,i,a))),u=o.map((t=>t.id)),l=Object.keys(t).map((e=>t[e].id)),c=new Set([...u,...l,...this.weightIds]);return Object.keys(i).forEach((t=>{i[t].forEach((t=>{!t||t.isDisposed||c.has(t.id)||t.dispose()}))})),null==this.parent&&a.dispose(c),o}async executeFunctionAsync(t,e,n){const r=t.reduce(((t,e,n)=>(t[this.inputs[n].name]=e,t)),{});return this._executeAsync(r,this.outputNodes,!0,e,n)}async executeWithControlFlow(t,e,n,r){const s=Object.keys(t),a=s.map((t=>this.graph.nodes[Tp(t)[0]])),i=n.map((t=>Tp(t)[0]));let o=i.map((t=>this.graph.nodes[t]));0===o.length&&(o=this._outputs);const{usedNodes:u,missingInputs:l,dynamicNode:c,syncInputs:h}=Bd(t,o,this.weightMap,this._initNodes),p=[...a,...this.graph.weights,...this._initNodes||[]].map((t=>({node:t,contexts:e.currentContext}))),d=Object.assign({},this.weightMap);Object.keys(t).forEach((e=>{const[n,r]=Tp(e),s=[];s[r]=t[e],d[n]=s}));const f={},m=this.getFrozenTensorIds(d),g={};for(;p.length>0;){const t=this.processStack(a,p,e,d,g,m,i,f,u);await Promise.all(t)}null!=c||r||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const y=o.filter((t=>!Vd(t)&&!Ep(t.name,d,e))).map((t=>t.name));if(y.length>0){let t="";throw null!=c&&(t=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${h}]`),new Error(`Cannot compute the outputs [${y}] from the provided inputs [${s}]. Consider providing the following inputs: [${l}]. ${t}`)}return d}processStack(t,e,n,r,s,a,i,o,u){const l=[];for(;e.length>0;){const t=e.pop();n.currentContext=t.contexts;let c="";if("Enter"===t.node.op&&Sp("isConstant",t.node,r,n)&&([c]=Cp(t.node.name,n)),null==r[t.node.name]){const h=Od(t.node,r,n,this._resourceManager);c||([c]=Cp(t.node.name,n));const p=n.currentContext;P(h)?l.push(h.then((l=>(r[c]=l,n.currentContext=p,this.checkTensorForDisposal(c,t.node,r,n,a,i,o),this.processChildNodes(t.node,e,n,r,s,u),l)))):(r[c]=h,this.checkTensorForDisposal(c,t.node,r,n,a,i,o),this.processChildNodes(t.node,e,n,r,s,u))}else this.processChildNodes(t.node,e,n,r,s,u)}return l}processChildNodes(t,e,n,r,s,a){t.children.forEach((t=>{const[i]=Cp(t.name,n);!s[i]&&a.has(t.name)&&("Merge"===t.op?t.inputNames.some((t=>!!Ep(t,r,n)))&&(s[i]=!0,e.push({contexts:n.currentContext,node:t})):t.inputNames.every((t=>!!Ep(t,r,n)))&&(s[i]=!0,e.push({contexts:n.currentContext,node:t})))}))}dispose(){Object.keys(this.weightMap).forEach((t=>this.weightMap[t].forEach((t=>t.dispose()))))}checkInputShapeAndType(t){Object.keys(t).forEach((e=>{const n=t[e],[r]=Tp(e),s=this.graph.nodes[r];if(s.attrParams.shape&&s.attrParams.shape.value){const t=s.attrParams.shape.value;u(t.length===n.shape.length&&n.shape.every(((e,n)=>-1===t[n]||t[n]===e)),(()=>`The shape of dict['${s.name}'] provided in model.execute(dict) must be [${t}], but was [${n.shape}]`))}s.attrParams.dtype&&s.attrParams.dtype.value&&u(n.dtype===s.attrParams.dtype.value,(()=>`The dtype of dict['${s.name}'] provided in model.execute(dict) must be ${s.attrParams.dtype.value}, but was ${n.dtype}`))}))}mapInputs(t){const e={};for(const n in t)if(null!=this._signature&&null!=this._signature.inputs&&null!=this._signature.inputs[n]){e[this._signature.inputs[n].name]=t[n]}else e[n]=t[n];return e}checkInputs(t){const e=Object.keys(t).filter((t=>{const[e]=Tp(t);return null==this.graph.nodes[e]}));if(e.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${e}] that are not part of graph`)}mapOutputs(t){return t.map((t=>{if(null!=this._signature&&null!=this._signature.outputs&&null!=this._signature.outputs[t]){return this._signature.outputs[t].name}return t}),{})}checkOutputs(t){t.forEach((t=>{const[e]=Tp(t);if(!this.graph.nodes[e])throw new Error(`The output '${t}' is not found in the graph`)}))}}class jd{constructor(t={},e={}){this.hashTableNameToHandle=t,this.hashTableMap=e}addHashTable(t,e){this.hashTableNameToHandle[t]=e.handle,this.hashTableMap[e.id]=e}getHashTableHandleByName(t){return this.hashTableNameToHandle[t]}getHashTableById(t){return this.hashTableMap[t]}dispose(){for(const t in this.hashTableMap)this.hashTableMap[t].clearAndClose(),delete this.hashTableMap[t];for(const t in this.hashTableNameToHandle)this.hashTableNameToHandle[t].dispose(),delete this.hashTableNameToHandle[t]}}class qd{constructor(t,e={}){this.modelUrl=t,this.loadOptions=e,this.version="n/a",null==e&&(this.loadOptions={}),this.resourceManager=new jd}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}findIOHandler(){const t=this.modelUrl;if(null!=t.load)this.handler=t;else if(null!=this.loadOptions.requestInit)this.handler=ba(t,this.loadOptions);else{const r=(e=t,n=this.loadOptions,Ds.getLoadHandlers(e,n));if(0===r.length)r.push(ba(t,this.loadOptions));else if(r.length>1)throw new Error(`Found more than one (${r.length}) load handlers for URL '${[t]}'`);this.handler=r[0]}var e,n}async load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const t=await this.handler.load();return this.loadSync(t)}loadSync(t){this.artifacts=t;const e=this.artifacts.modelTopology;let n={};null!=this.artifacts.userDefinedMetadata&&(n=this.artifacts.userDefinedMetadata.signature),this.version=`${e.versions.producer}.${e.versions.minConsumer}`;const r=function(t,e){const n={};let r,s=0;for(const a of e){const e=a.name,i=a.dtype,o=a.shape,u=p(o);let l;if("quantization"in a){const n=a.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${a.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${a.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==i)throw new Error(`Weight ${a.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${i}.`)}const o=Ns[n.dtype],c=t.slice(s,s+u*o),h="uint8"===n.dtype?new Uint8Array(c):new Uint16Array(c);if("float32"===i)if("uint8"===n.dtype||"uint16"===n.dtype){l=new Float32Array(h.length);for(let t=0;t<h.length;t++){const e=h[t];l[t]=e*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===r&&(r=_s()),l=r(h)}else{if("int32"!==i)throw new Error(`Unsupported dtype in weight '${e}': ${i}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);l=new Int32Array(h.length);for(let t=0;t<h.length;t++){const e=h[t];l[t]=Math.round(e*n.scale+n.min)}}s+=u*o}else if("string"===i){const e=p(a.shape);l=[];for(let n=0;n<e;n++){const e=new Uint32Array(t.slice(s,s+4))[0];s+=4;const n=new Uint8Array(t.slice(s,s+e));l.push(n),s+=e}}else{const r=Ns[i],a=t.slice(s,s+u*r);if("float32"===i)l=new Float32Array(a);else if("int32"===i)l=new Int32Array(a);else if("bool"===i)l=new Uint8Array(a);else{if("complex64"!==i)throw new Error(`Unsupported dtype in weight '${e}': ${i}`);{l=new Float32Array(a);const t=new Float32Array(l.length/2),r=new Float32Array(l.length/2);for(let e=0;e<t.length;e++)t[e]=l[2*e],r[e]=l[2*e+1];const s=ks(t,o,"float32"),i=ks(r,o,"float32");n[e]=vs(s,i),s.dispose(),i.dispose()}}s+=u*r}"complex64"!==i&&(n[e]=ks(l,o,i))}return n}(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new Hd(dd.Instance.transformGraph(e,n)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),this.executor.resourceManager=this.resourceManager,null!=t.modelInitializer){const e=dd.Instance.transformGraph(t.modelInitializer);this.initializer=new Hd(e),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(t,e){if("string"==typeof t){const e=Ms(t);if(0===e.length)throw new Error(`Cannot find any save handlers for URL '${t}'`);if(e.length>1)throw new Error(`Found more than one (${e.length}) save handlers for URL '${t}'`);t=e[0]}if(null==t.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return t.save(this.artifacts)}predict(t,e){return this.execute(t,this.outputNodes)}normalizeInputs(t){if(!(t instanceof Hn||Array.isArray(t)))return t;if((t=Array.isArray(t)?t:[t]).length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${t.length} input tensors.`);return this.inputNodes.reduce(((e,n,r)=>(e[n]=t[r],e)),{})}normalizeOutputs(t){return t=t||this.outputNodes,Array.isArray(t)?t:[t]}execute(t,e){t=this.normalizeInputs(t),e=this.normalizeOutputs(e);const n=this.executor.execute(t,e);return n.length>1?n:n[0]}async executeAsync(t,e){t=this.normalizeInputs(t),e=this.normalizeOutputs(e);const n=await this.executor.executeAsync(t,e);return n.length>1?n:n[0]}convertTensorMapToTensorsMap(t){return Object.keys(t).reduce(((e,n)=>(e[n]=[t[n]],e)),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}}async function Kd(t,e={}){if(null==t)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==e&&(e={}),e.fromTFHub&&null==t.load&&(t.endsWith("/")||(t+="/"),t=`${t}model.json?tfjs-format=file`);const n=new qd(t,e);return await n.load(),n}var Xd=function(){return(Xd=Object.assign||function(t){for(var e,n=1,r=arguments.length;n<r;n++)for(var s in e=arguments[n])Object.prototype.hasOwnProperty.call(e,s)&&(t[s]=e[s]);return t}).apply(this,arguments)};function Yd(t,e,n,r){return new(n||(n=Promise))((function(s,a){function i(t){try{u(r.next(t))}catch(t){a(t)}}function o(t){try{u(r.throw(t))}catch(t){a(t)}}function u(t){var e;t.done?s(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(i,o)}u((r=r.apply(t,e||[])).next())}))}function Jd(t,e){var n,r,s,a,i={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return a={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function o(a){return function(o){return function(a){if(n)throw new TypeError("Generator is already executing.");for(;i;)try{if(n=1,r&&(s=2&a[0]?r.return:a[0]?r.throw||((s=r.return)&&s.call(r),0):r.next)&&!(s=s.call(r,a[1])).done)return s;switch(r=0,s&&(a=[2&a[0],s.value]),a[0]){case 0:case 1:s=a;break;case 4:return i.label++,{value:a[1],done:!1};case 5:i.label++,r=a[1],a=[0];continue;case 7:a=i.ops.pop(),i.trys.pop();continue;default:if(!((s=(s=i.trys).length>0&&s[s.length-1])||6!==a[0]&&2!==a[0])){i=0;continue}if(3===a[0]&&(!s||a[1]>s[0]&&a[1]<s[3])){i.label=a[1];break}if(6===a[0]&&i.label<s[1]){i.label=s[1],s=a;break}if(s&&i.label<s[2]){i.label=s[2],i.ops.push(a);break}s[2]&&i.ops.pop(),i.trys.pop();continue}a=e.call(t,i)}catch(t){a=[6,t],r=0}finally{n=s=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,o])}}}const Zd=t=>({startEndTensor:t,startPoint:Hu(t,[0,0],[-1,2]),endPoint:Hu(t,[0,2],[-1,2])}),Qd={strides:[8,16],anchors:[2,6]};function tf(t,e){let n,r,s;if(t.topLeft instanceof Hn&&t.bottomRight instanceof Hn){const[a,i]=ja((()=>[Gi([Ko(e-1,t.topLeft.slice(0,1)),t.topLeft.slice(1,1)]),Gi([Ko(e-1,t.bottomRight.slice(0,1)),t.bottomRight.slice(1,1)])]));n=a,r=i,null!=t.landmarks&&(s=ja((()=>{const n=Ko(_u([e-1,0]),t.landmarks),r=_u([1,-1]);return Mo(n,r)})))}else{const[a,i]=t.topLeft,[o,u]=t.bottomRight;n=[e-1-a,i],r=[e-1-o,u],null!=t.landmarks&&(s=t.landmarks.map((t=>[e-1-t[0],t[1]])))}const a={topLeft:n,bottomRight:r};return null!=s&&(a.landmarks=s),null!=t.probability&&(a.probability=t.probability instanceof Hn?t.probability.clone():t.probability),a}function ef(t,e){return ja((()=>{let n;return n=t.hasOwnProperty("box")?t.box:t,((t,e)=>{const n=Mo(t.startPoint,e),r=Mo(t.endPoint,e),s=ji([n,r],1);return Zd(s)})(n,e).startEndTensor.squeeze()}))}class nf{constructor(t,e,n,r,s,a){this.blazeFaceModel=t,this.width=e,this.height=n,this.maxFaces=r,this.anchorsData=function(t,e,n){const r=[];for(let s=0;s<n.strides.length;s++){const a=n.strides[s],i=Math.floor((e+a-1)/a),o=Math.floor((t+a-1)/a),u=n.anchors[s];for(let t=0;t<i;t++){const e=a*(t+.5);for(let t=0;t<o;t++){const n=a*(t+.5);for(let t=0;t<u;t++)r.push([n,e])}}}return r}(e,n,Qd),this.anchors=hl(this.anchorsData),this.inputSizeData=[e,n],this.inputSize=_u([e,n]),this.iouThreshold=s,this.scoreThreshold=a}async getBoundingBoxes(t,e,n=!0){const[r,s,a]=ja((()=>{const e=t.resizeBilinear([this.width,this.height]),n=Mo(Ko(e.div(255),.5),2),r=this.blazeFaceModel.predict(n).squeeze(),s=function(t,e,n){const r=Hu(t,[0,1],[-1,2]),s=ti(r,e),a=Hu(t,[0,3],[-1,2]),i=oo(a,n),o=oo(s,n),u=oo(i,2),l=Ko(o,u),c=ti(o,u),h=Mo(l,n),p=Mo(c,n);return ji([h,p],1)}(r,this.anchors,this.inputSize),a=Hu(r,[0,0],[-1,1]);return[r,s,Go(a).squeeze()]})),i=console.warn;console.warn=()=>{};const o=Tc.nonMaxSuppression(s,a,this.maxFaces,this.iouThreshold,this.scoreThreshold);console.warn=i;const u=await o.array();o.dispose();let l=u.map((t=>Hu(s,[t,0],[1,-1])));e||(l=await Promise.all(l.map((async t=>{const e=await t.array();return t.dispose(),e}))));const c=t.shape[1],h=t.shape[2];let p;p=e?oo([h,c],this.inputSize):[h/this.inputSizeData[0],c/this.inputSizeData[1]];const d=[];for(let t=0;t<l.length;t++){const s=l[t],i=ja((()=>{const i=Zd(s instanceof Hn?s:hl(s));if(!n)return i;const o=u[t];let l;return l=e?this.anchors.slice([o,0],[1,2]):this.anchorsData[o],{box:i,landmarks:Hu(r,[o,5],[1,-1]).squeeze().reshape([6,-1]),probability:Hu(a,[o],[1]),anchor:l}}));d.push(i)}return s.dispose(),a.dispose(),r.dispose(),{boxes:d,scaleFactor:p}}async estimateFaces(t,e=!1,n=!1,r=!0){const[,s]=function(t){return t instanceof Hn?[t.shape[0],t.shape[1]]:[t.height,t.width]}(t),a=ja((()=>(t instanceof Hn||(t=Na(t)),t.toFloat().expandDims(0)))),{boxes:i,scaleFactor:o}=await this.getBoundingBoxes(a,e,r);return a.dispose(),e?i.map((t=>{const e=ef(t,o);let a={topLeft:e.slice([0],[2]),bottomRight:e.slice([2],[2])};if(r){const{landmarks:e,probability:n,anchor:r}=t,s=e.add(r).mul(o);a.landmarks=s,a.probability=n}return n&&(a=tf(a,s)),a})):Promise.all(i.map((async t=>{const e=ef(t,o);let a;if(r){const[n,r,s]=await Promise.all([t.landmarks,e,t.probability].map((async t=>t.array()))),i=t.anchor,[u,l]=o,c=n.map((t=>[(t[0]+i[0])*u,(t[1]+i[1])*l]));a={topLeft:r.slice(0,2),bottomRight:r.slice(2),landmarks:c,probability:s},(t=>{t.startEndTensor.dispose(),t.startPoint.dispose(),t.endPoint.dispose()})(t.box),t.landmarks.dispose(),t.probability.dispose()}else{const t=await e.array();a={topLeft:t.slice(0,2),bottomRight:t.slice(2)}}return e.dispose(),n&&(a=tf(a,s)),a})))}}async function rf({maxFaces:t=10,inputWidth:e=128,inputHeight:n=128,iouThreshold:r=.3,scoreThreshold:s=.75}={}){const a=await Kd("https://tfhub.dev/tensorflow/tfjs-model/blazeface/1/default/1",{fromTFHub:!0});return new nf(a,e,n,t,r,s)}var sf={silhouette:[10,338,297,332,284,251,389,356,454,323,361,288,397,365,379,378,400,377,152,148,176,149,150,136,172,58,132,93,234,127,162,21,54,103,67,109],lipsUpperOuter:[61,185,40,39,37,0,267,269,270,409,291],lipsLowerOuter:[146,91,181,84,17,314,405,321,375,291],lipsUpperInner:[78,191,80,81,82,13,312,311,310,415,308],lipsLowerInner:[78,95,88,178,87,14,317,402,318,324,308],rightEyeUpper0:[246,161,160,159,158,157,173],rightEyeLower0:[33,7,163,144,145,153,154,155,133],rightEyeUpper1:[247,30,29,27,28,56,190],rightEyeLower1:[130,25,110,24,23,22,26,112,243],rightEyeUpper2:[113,225,224,223,222,221,189],rightEyeLower2:[226,31,228,229,230,231,232,233,244],rightEyeLower3:[143,111,117,118,119,120,121,128,245],rightEyebrowUpper:[156,70,63,105,66,107,55,193],rightEyebrowLower:[35,124,46,53,52,65],rightEyeIris:[473,474,475,476,477],leftEyeUpper0:[466,388,387,386,385,384,398],leftEyeLower0:[263,249,390,373,374,380,381,382,362],leftEyeUpper1:[467,260,259,257,258,286,414],leftEyeLower1:[359,255,339,254,253,252,256,341,463],leftEyeUpper2:[342,445,444,443,442,441,413],leftEyeLower2:[446,261,448,449,450,451,452,453,464],leftEyeLower3:[372,340,346,347,348,349,350,357,465],leftEyebrowUpper:[383,300,293,334,296,336,285,417],leftEyebrowLower:[265,353,276,283,282,295],leftEyeIris:[468,469,470,471,472],midwayBetweenEyes:[168],noseTip:[1],noseBottom:[2],noseRightCorner:[98],noseLeftCorner:[327],rightCheek:[205],leftCheek:[425]};function af(t){return[Math.abs(t.endPoint[0]-t.startPoint[0]),Math.abs(t.endPoint[1]-t.startPoint[1])]}function of(t){return[t.startPoint[0]+(t.endPoint[0]-t.startPoint[0])/2,t.startPoint[1]+(t.endPoint[1]-t.startPoint[1])/2]}function uf(t,e){void 0===e&&(e=1.5);var n=of(t),r=af(t),s=[e*r[0]/2,e*r[1]/2];return{startPoint:[n[0]-s[0],n[1]-s[1]],endPoint:[n[0]+s[0],n[1]+s[1]],landmarks:t.landmarks}}var lf=[[1,0,0],[0,1,0],[0,0,1]];function cf(t,e){return[[1,0,t],[0,1,e],[0,0,1]]}function hf(t,e){for(var n=0,r=0;r<t.length;r++)n+=t[r]*e[r];return n}function pf(t,e){for(var n=[],r=0;r<t.length;r++)n.push(t[r][e]);return n}function df(t,e){for(var n=[],r=t.length,s=0;s<r;s++){n.push([]);for(var a=0;a<r;a++)n[s].push(hf(t[s],pf(e,a)))}return n}function ff(t,e){var n=Math.cos(t),r=Math.sin(t),s=[[n,-r,0],[r,n,0],[0,0,1]],a=df(cf(e[0],e[1]),s);return df(a,cf(-e[0],-e[1]))}var mf=[13,sf.midwayBetweenEyes[0]],gf=[3,2],yf=sf.leftEyeLower0,bf=[yf[0],yf[yf.length-1]],xf=sf.rightEyeLower0,wf=[xf[0],xf[xf.length-1]],vf=[{key:"EyeUpper0",indices:[9,10,11,12,13,14,15]},{key:"EyeUpper1",indices:[25,26,27,28,29,30,31]},{key:"EyeUpper2",indices:[41,42,43,44,45,46,47]},{key:"EyeLower0",indices:[0,1,2,3,4,5,6,7,8]},{key:"EyeLower1",indices:[16,17,18,19,20,21,22,23,24]},{key:"EyeLower2",indices:[32,33,34,35,36,37,38,39,40]},{key:"EyeLower3",indices:[54,55,56,57,58,59,60,61,62]},{key:"EyebrowUpper",indices:[63,64,65,66,67,68,69,70]},{key:"EyebrowLower",indices:[48,49,50,51,52,53]}];function If(t,e,n,r){for(var s=0;s<vf.length;s++){var a=vf[s],i=a.key,o=a.indices,u=sf[""+n+i];if(null==r||r.includes(i))for(var l=0;l<o.length;l++){var c=o[l];t[u[l]]=[e[c][0],e[c][1],(e[c][2]+t[u[l]][2])/2]}}}var kf=function(){function t(t,e,n,r,s,a,i){this.regionsOfInterest=[],this.runsWithoutFaceDetector=0,this.boundingBoxDetector=t,this.meshDetector=e,this.irisModel=i,this.meshWidth=n,this.meshHeight=r,this.maxContinuousChecks=s,this.maxFaces=a}return t.prototype.transformRawCoords=function(t,e,n,r){var s,a,i,o,u=this,l=af({startPoint:e.startPoint,endPoint:e.endPoint}),c=[l[0]/this.meshWidth,l[1]/this.meshHeight],h=t.map((function(t){return[c[0]*(t[0]-u.meshWidth/2),c[1]*(t[1]-u.meshHeight/2),t[2]]})),p=ff(n,[0,0]),d=h.map((function(t){return function(t,e){return[hf(t,e[0]),hf(t,e[1])]}(t,p).concat([t[2]])})),f=(a=[[(s=r)[0][0],s[1][0]],[s[0][1],s[1][1]]],i=[s[0][2],s[1][2]],o=[-hf(a[0],i),-hf(a[1],i)],[a[0].concat(o[0]),a[1].concat(o[1]),[0,0,1]]),m=of({startPoint:e.startPoint,endPoint:e.endPoint}).concat([1]),g=[hf(m,f[0]),hf(m,f[1])];return d.map((function(t){return[t[0]+g[0],t[1]+g[1],t[2]]}))},t.prototype.getLeftToRightEyeDepthDifference=function(t){return t[bf[0]][2]-t[wf[0]][2]},t.prototype.getEyeBox=function(t,e,n,r,s){void 0===s&&(s=!1);var a=function(t){var e=of(t),n=af(t),r=Math.max.apply(Math,n)/2;return{startPoint:[e[0]-r,e[1]-r],endPoint:[e[0]+r,e[1]+r],landmarks:t.landmarks}}(uf(this.calculateLandmarksBoundingBox([t[n],t[r]]),2.3)),i=af(a),o=Tc.cropAndResize(e,[[a.startPoint[1]/this.meshHeight,a.startPoint[0]/this.meshWidth,a.endPoint[1]/this.meshHeight,a.endPoint[0]/this.meshWidth]],[0],[64,64]);return s&&(o=Tc.flipLeftRight(o)),{box:a,boxSize:i,crop:o}},t.prototype.getEyeCoords=function(t,e,n,r){void 0===r&&(r=!1);for(var s=[],a=0;a<76;a++){var i=t[3*a],o=t[3*a+1],u=t[3*a+2];s.push([(r?1-i/64:i/64)*n[0]+e.startPoint[0],o/64*n[1]+e.startPoint[1],u])}return{rawCoords:s,iris:s.slice(71)}},t.prototype.getAdjustedIrisCoords=function(t,e,n){var r=t[sf[n+"EyeUpper0"][3]][2],s=t[sf[n+"EyeLower0"][4]][2],a=(r+s)/2;return e.map((function(t,e){var n=a;return 2===e?n=r:4===e&&(n=s),[t[0],t[1],n]}))},t.prototype.predict=function(t,e){return Yd(this,void 0,void 0,(function(){var n,r,s,a,i=this;return Jd(this,(function(o){switch(o.label){case 0:return this.shouldUpdateRegionsOfInterest()?[4,this.boundingBoxDetector.getBoundingBoxes(t,!1,!0)]:[3,2];case 1:return n=o.sent(),r=n.boxes,s=n.scaleFactor,0===r.length?(this.regionsOfInterest=[],[2,null]):(a=r.map((function(t){var e,n,r={startPoint:t.box.startPoint.squeeze().arraySync(),endPoint:t.box.endPoint.squeeze().arraySync()},a=uf((n=s,{startPoint:[(e=r).startPoint[0]*n[0],e.startPoint[1]*n[1]],endPoint:[e.endPoint[0]*n[0],e.endPoint[1]*n[1]]}));return Xd({},a,{landmarks:t.landmarks.arraySync()})})),r.forEach((function(t){null!=t&&null!=t.startPoint&&(t.startEndTensor.dispose(),t.startPoint.dispose(),t.endPoint.dispose())})),this.updateRegionsOfInterest(a),this.runsWithoutFaceDetector=0,[3,3]);case 2:this.runsWithoutFaceDetector++,o.label=3;case 3:return[2,ja((function(){return i.regionsOfInterest.map((function(n,r){var s,a=n.landmarks.length>=468,o=mf[0],u=mf[1];!1===a&&(o=gf[0],u=gf[1]),s=function(t,e){var n;return(n=Math.PI/2-Math.atan2(-(e[1]-t[1]),e[0]-t[0]))-2*Math.PI*Math.floor((n+Math.PI)/(2*Math.PI))}(n.landmarks[o],n.landmarks[u]);var l=of({startPoint:n.startPoint,endPoint:n.endPoint}),c=[l[0]/t.shape[2],l[1]/t.shape[1]],h=t,p=lf;0!==s&&(h=Tc.rotateWithOffset(t,s,0,c),p=ff(-s,l));var d=function(t,e,n){var r=e.shape[1],s=e.shape[2],a=[[t.startPoint[1]/r,t.startPoint[0]/s,t.endPoint[1]/r,t.endPoint[0]/s]];return Tc.cropAndResize(e,a,[0],n)}({startPoint:n.startPoint,endPoint:n.endPoint},h,[i.meshHeight,i.meshWidth]).div(255),f=i.meshDetector.predict(d),m=f[1],g=f[2],y=xa(g,[-1,3]).arraySync();if(e){var b=i.getEyeBox(y,d,bf[0],bf[1],!0),x=b.box,w=b.boxSize,v=b.crop,I=i.getEyeBox(y,d,wf[0],wf[1]),k=I.box,N=I.boxSize,S=I.crop,E=i.irisModel.predict(Gi([v,S])).dataSync(),C=E.slice(0,228),$=i.getEyeCoords(C,x,w,!0),T=$.rawCoords,A=$.iris,R=E.slice(228),_=i.getEyeCoords(R,k,N),D=_.rawCoords,M=_.iris,F=i.getLeftToRightEyeDepthDifference(y);Math.abs(F)<30?(If(y,T,"left"),If(y,D,"right")):F<1?If(y,T,"left",["EyeUpper0","EyeLower0"]):If(y,D,"right",["EyeUpper0","EyeLower0"]);var O=i.getAdjustedIrisCoords(y,A,"left"),L=i.getAdjustedIrisCoords(y,M,"right");y=y.concat(O).concat(L)}var B=i.transformRawCoords(y,n,s,p),z=hl(B),P=uf(i.calculateLandmarksBoundingBox(B));return i.regionsOfInterest[r]=Xd({},P,{landmarks:z.arraySync()}),{coords:hl(y,[y.length,3]),scaledCoords:z,box:P,flag:m.squeeze()}}))}))]}}))}))},t.prototype.updateRegionsOfInterest=function(t){for(var e=0;e<t.length;e++){var n=t[e],r=this.regionsOfInterest[e],s=0;if(r&&r.startPoint){var a=n.startPoint,i=a[0],o=a[1],u=n.endPoint,l=u[0],c=u[1],h=r.startPoint,p=h[0],d=h[1],f=r.endPoint,m=f[0],g=f[1],y=Math.max(i,p),b=Math.max(o,d),x=(Math.min(l,m)-y)*(Math.min(c,g)-b);s=x/((l-i)*(c-o)+(m-p)*(g-o)-x)}s<.25&&(this.regionsOfInterest[e]=n)}this.regionsOfInterest=this.regionsOfInterest.slice(0,t.length)},t.prototype.clearRegionOfInterest=function(t){null!=this.regionsOfInterest[t]&&(this.regionsOfInterest=this.regionsOfInterest.slice(0,t).concat(this.regionsOfInterest.slice(t+1)))},t.prototype.shouldUpdateRegionsOfInterest=function(){var t=this.regionsOfInterest.length,e=0===t;return 1===this.maxFaces||e?e:t!==this.maxFaces&&this.runsWithoutFaceDetector>=this.maxContinuousChecks},t.prototype.calculateLandmarksBoundingBox=function(t){var e=t.map((function(t){return t[0]})),n=t.map((function(t){return t[1]}));return{startPoint:[Math.min.apply(Math,e),Math.min.apply(Math,n)],endPoint:[Math.max.apply(Math,e),Math.max.apply(Math,n)]}},t}(),Nf=[[.499976992607117,.652534008026123],[.500025987625122,.547487020492554],[.499974012374878,.602371990680695],[.482113003730774,.471979022026062],[.500150978565216,.527155995368958],[.499909996986389,.498252987861633],[.499523013830185,.40106201171875],[.289712011814117,.380764007568359],[.499954998493195,.312398016452789],[.499987006187439,.269918978214264],[.500023007392883,.107050001621246],[.500023007392883,.666234016418457],[.5000159740448,.679224014282227],[.500023007392883,.692348003387451],[.499976992607117,.695277988910675],[.499976992607117,.70593398809433],[.499976992607117,.719385027885437],[.499976992607117,.737019002437592],[.499967992305756,.781370997428894],[.499816000461578,.562981009483337],[.473773002624512,.573909997940063],[.104906998574734,.254140973091125],[.365929991006851,.409575998783112],[.338757991790771,.41302502155304],[.311120003461838,.409460008144379],[.274657994508743,.389131009578705],[.393361985683441,.403706014156342],[.345234006643295,.344011008739471],[.370094001293182,.346076011657715],[.319321990013123,.347265005111694],[.297903001308441,.353591024875641],[.24779200553894,.410809993743896],[.396889001131058,.842755019664764],[.280097991228104,.375599980354309],[.106310002505779,.399955987930298],[.2099249958992,.391353011131287],[.355807989835739,.534406006336212],[.471751004457474,.65040397644043],[.474155008792877,.680191993713379],[.439785003662109,.657229006290436],[.414617002010345,.66654098033905],[.450374007225037,.680860996246338],[.428770989179611,.682690978050232],[.374971002340317,.727805018424988],[.486716985702515,.547628998756409],[.485300987958908,.527395009994507],[.257764995098114,.314490020275116],[.401223003864288,.455172002315521],[.429818987846375,.548614978790283],[.421351999044418,.533740997314453],[.276895999908447,.532056987285614],[.483370006084442,.499586999416351],[.33721199631691,.282882988452911],[.296391993761063,.293242990970612],[.169294998049736,.193813979625702],[.447580009698868,.302609980106354],[.392390012741089,.353887975215912],[.354490011930466,.696784019470215],[.067304998636246,.730105042457581],[.442739009857178,.572826027870178],[.457098007202148,.584792017936707],[.381974011659622,.694710969924927],[.392388999462128,.694203019142151],[.277076005935669,.271932005882263],[.422551989555359,.563233017921448],[.385919004678726,.281364023685455],[.383103013038635,.255840003490448],[.331431001424789,.119714021682739],[.229923993349075,.232002973556519],[.364500999450684,.189113974571228],[.229622006416321,.299540996551514],[.173287004232407,.278747975826263],[.472878992557526,.666198015213013],[.446828007698059,.668527007102966],[.422762006521225,.673889994621277],[.445307999849319,.580065965652466],[.388103008270264,.693961024284363],[.403039008378983,.706539988517761],[.403629004955292,.693953037261963],[.460041999816895,.557139039039612],[.431158006191254,.692366003990173],[.452181994915009,.692366003990173],[.475387006998062,.692366003990173],[.465828001499176,.779190003871918],[.472328990697861,.736225962638855],[.473087012767792,.717857003211975],[.473122000694275,.704625964164734],[.473033010959625,.695277988910675],[.427942007780075,.695277988910675],[.426479011774063,.703539967536926],[.423162013292313,.711845993995667],[.4183090031147,.720062971115112],[.390094995498657,.639572978019714],[.013953999616206,.560034036636353],[.499913990497589,.58014702796936],[.413199990987778,.69539999961853],[.409626007080078,.701822996139526],[.468080013990402,.601534962654114],[.422728985548019,.585985004901886],[.463079988956451,.593783974647522],[.37211999297142,.47341400384903],[.334562003612518,.496073007583618],[.411671012639999,.546965003013611],[.242175996303558,.14767599105835],[.290776997804642,.201445996761322],[.327338010072708,.256527006626129],[.399509996175766,.748921036720276],[.441727995872498,.261676013469696],[.429764986038208,.187834024429321],[.412198007106781,.108901023864746],[.288955003023148,.398952007293701],[.218936994671822,.435410976409912],[.41278201341629,.398970007896423],[.257135003805161,.355440020561218],[.427684992551804,.437960982322693],[.448339998722076,.536936044692993],[.178560003638268,.45755398273468],[.247308000922203,.457193970680237],[.286267012357712,.467674970626831],[.332827985286713,.460712015628815],[.368755996227264,.447206974029541],[.398963987827301,.432654976844788],[.476410001516342,.405806005001068],[.189241006970406,.523923993110657],[.228962004184723,.348950982093811],[.490725994110107,.562400996685028],[.404670000076294,.485132992267609],[.019469000399113,.401564002037048],[.426243007183075,.420431017875671],[.396993011236191,.548797011375427],[.266469985246658,.376977026462555],[.439121007919312,.51895797252655],[.032313998788595,.644356966018677],[.419054001569748,.387154996395111],[.462783008813858,.505746960639954],[.238978996872902,.779744982719421],[.198220998048782,.831938028335571],[.107550002634525,.540755033493042],[.183610007166862,.740257024765015],[.134409993886948,.333683013916016],[.385764002799988,.883153975009918],[.490967005491257,.579378008842468],[.382384985685349,.508572995662689],[.174399003386497,.397670984268188],[.318785011768341,.39623498916626],[.343364000320435,.400596976280212],[.396100014448166,.710216999053955],[.187885001301765,.588537991046906],[.430987000465393,.944064974784851],[.318993002176285,.898285031318665],[.266247987747192,.869701027870178],[.500023007392883,.190576016902924],[.499976992607117,.954452991485596],[.366169989109039,.398822009563446],[.393207013607025,.39553701877594],[.410373002290726,.391080021858215],[.194993004202843,.342101991176605],[.388664990663528,.362284004688263],[.365961998701096,.355970978736877],[.343364000320435,.355356991291046],[.318785011768341,.35834002494812],[.301414996385574,.363156020641327],[.058132998645306,.319076001644135],[.301414996385574,.387449026107788],[.499987989664078,.618434011936188],[.415838003158569,.624195992946625],[.445681989192963,.566076993942261],[.465844005346298,.620640993118286],[.49992299079895,.351523995399475],[.288718998432159,.819945991039276],[.335278987884521,.852819979190826],[.440512001514435,.902418971061707],[.128294005990028,.791940987110138],[.408771991729736,.373893976211548],[.455606997013092,.451801002025604],[.499877005815506,.908990025520325],[.375436991453171,.924192011356354],[.11421000212431,.615022003650665],[.448662012815475,.695277988910675],[.4480200111866,.704632043838501],[.447111994028091,.715808033943176],[.444831997156143,.730794012546539],[.430011987686157,.766808986663818],[.406787008047104,.685672998428345],[.400738000869751,.681069016456604],[.392399996519089,.677703022956848],[.367855995893478,.663918972015381],[.247923001646996,.601333022117615],[.452769994735718,.420849978923798],[.43639200925827,.359887003898621],[.416164010763168,.368713974952698],[.413385987281799,.692366003990173],[.228018000721931,.683571994304657],[.468268007040024,.352671027183533],[.411361992359161,.804327011108398],[.499989002943039,.469825029373169],[.479153990745544,.442654013633728],[.499974012374878,.439637005329132],[.432112008333206,.493588984012604],[.499886006116867,.866917014122009],[.49991300702095,.821729004383087],[.456548988819122,.819200992584229],[.344549000263214,.745438992977142],[.37890899181366,.574010014533997],[.374292999505997,.780184984207153],[.319687992334366,.570737957954407],[.357154995203018,.604269981384277],[.295284003019333,.621580958366394],[.447750002145767,.862477004528046],[.410986006259918,.508723020553589],[.31395098567009,.775308012962341],[.354128003120422,.812552988529205],[.324548006057739,.703992962837219],[.189096003770828,.646299958229065],[.279776990413666,.71465802192688],[.1338230073452,.682700991630554],[.336768001317978,.644733011722565],[.429883986711502,.466521978378296],[.455527991056442,.548622965812683],[.437114000320435,.558896005153656],[.467287987470627,.529924988746643],[.414712011814117,.335219979286194],[.37704598903656,.322777986526489],[.344107985496521,.320150971412659],[.312875986099243,.32233202457428],[.283526003360748,.333190023899078],[.241245999932289,.382785975933075],[.102986000478268,.468762993812561],[.267612010240555,.424560010433197],[.297879010438919,.433175981044769],[.333433985710144,.433878004550934],[.366427004337311,.426115989685059],[.396012008190155,.416696012020111],[.420121014118195,.41022801399231],[.007561000064015,.480777025222778],[.432949006557465,.569517970085144],[.458638995885849,.479089021682739],[.473466008901596,.545744001865387],[.476087987422943,.563830018043518],[.468472003936768,.555056989192963],[.433990985155106,.582361996173859],[.483518004417419,.562983989715576],[.482482999563217,.57784903049469],[.42645001411438,.389798998832703],[.438998997211456,.39649498462677],[.450067013502121,.400434017181396],[.289712011814117,.368252992630005],[.276670008897781,.363372981548309],[.517862021923065,.471948027610779],[.710287988185883,.380764007568359],[.526226997375488,.573909997940063],[.895093023777008,.254140973091125],[.634069979190826,.409575998783112],[.661242008209229,.41302502155304],[.688880026340485,.409460008144379],[.725341975688934,.389131009578705],[.606630027294159,.40370500087738],[.654766023159027,.344011008739471],[.629905998706818,.346076011657715],[.680678009986877,.347265005111694],[.702096998691559,.353591024875641],[.75221198797226,.410804986953735],[.602918028831482,.842862963676453],[.719901978969574,.375599980354309],[.893692970275879,.399959981441498],[.790081977844238,.391354024410248],[.643998026847839,.534487962722778],[.528249025344849,.65040397644043],[.525849997997284,.680191040039062],[.560214996337891,.657229006290436],[.585384011268616,.66654098033905],[.549625992774963,.680860996246338],[.57122802734375,.682691991329193],[.624852001667023,.72809898853302],[.513050019741058,.547281980514526],[.51509702205658,.527251958847046],[.742246985435486,.314507007598877],[.598631024360657,.454979002475739],[.570338010787964,.548575043678284],[.578631997108459,.533622980117798],[.723087012767792,.532054007053375],[.516445994377136,.499638974666595],[.662801027297974,.282917976379395],[.70362401008606,.293271005153656],[.830704987049103,.193813979625702],[.552385985851288,.302568018436432],[.607609987258911,.353887975215912],[.645429015159607,.696707010269165],[.932694971561432,.730105042457581],[.557260990142822,.572826027870178],[.542901992797852,.584792017936707],[.6180260181427,.694710969924927],[.607590973377228,.694203019142151],[.722943007946014,.271963000297546],[.577413976192474,.563166975975037],[.614082992076874,.281386971473694],[.616907000541687,.255886018276215],[.668509006500244,.119913995265961],[.770092010498047,.232020974159241],[.635536015033722,.189248979091644],[.77039098739624,.299556016921997],[.826722025871277,.278755009174347],[.527121007442474,.666198015213013],[.553171992301941,.668527007102966],[.577238023281097,.673889994621277],[.554691970348358,.580065965652466],[.611896991729736,.693961024284363],[.59696102142334,.706539988517761],[.596370995044708,.693953037261963],[.539958000183105,.557139039039612],[.568841993808746,.692366003990173],[.547818005084991,.692366003990173],[.52461302280426,.692366003990173],[.534089982509613,.779141008853912],[.527670979499817,.736225962638855],[.526912987232208,.717857003211975],[.526877999305725,.704625964164734],[.526966989040375,.695277988910675],[.572058022022247,.695277988910675],[.573521018028259,.703539967536926],[.57683801651001,.711845993995667],[.581691026687622,.720062971115112],[.609944999217987,.639909982681274],[.986046016216278,.560034036636353],[.5867999792099,.69539999961853],[.590372025966644,.701822996139526],[.531915009021759,.601536989212036],[.577268004417419,.585934996604919],[.536915004253387,.593786001205444],[.627542972564697,.473352015018463],[.665585994720459,.495950996875763],[.588353991508484,.546862006187439],[.757824003696442,.14767599105835],[.709249973297119,.201507985591888],[.672684013843536,.256581008434296],[.600408971309662,.74900496006012],[.55826598405838,.261672019958496],[.570303976535797,.187870979309082],[.588165998458862,.109044015407562],[.711045026779175,.398952007293701],[.781069993972778,.435405015945435],[.587247014045715,.398931980133057],[.742869973182678,.355445981025696],[.572156012058258,.437651991844177],[.55186802148819,.536570012569427],[.821442008018494,.457556009292603],[.752701997756958,.457181990146637],[.71375697851181,.467626988887787],[.66711300611496,.460672974586487],[.631101012229919,.447153985500336],[.6008620262146,.432473003864288],[.523481011390686,.405627012252808],[.810747981071472,.523926019668579],[.771045982837677,.348959028720856],[.509127020835876,.562718033790588],[.595292985439301,.485023975372314],[.980530977249146,.401564002037048],[.573499977588654,.420000016689301],[.602994978427887,.548687994480133],[.733529984951019,.376977026462555],[.560611009597778,.519016981124878],[.967685997486115,.644356966018677],[.580985009670258,.387160003185272],[.537728011608124,.505385041236877],[.760966002941132,.779752969741821],[.801778972148895,.831938028335571],[.892440974712372,.54076099395752],[.816350996494293,.740260004997253],[.865594983100891,.333687007427216],[.614073991775513,.883246004581451],[.508952975273132,.579437971115112],[.617941975593567,.508316040039062],[.825608015060425,.397674977779388],[.681214988231659,.39623498916626],[.656635999679565,.400596976280212],[.603900015354156,.710216999053955],[.81208598613739,.588539004325867],[.56801301240921,.944564998149872],[.681007981300354,.898285031318665],[.733752012252808,.869701027870178],[.633830010890961,.398822009563446],[.606792986392975,.39553701877594],[.589659988880157,.391062021255493],[.805015981197357,.342108011245728],[.611334979534149,.362284004688263],[.634037971496582,.355970978736877],[.656635999679565,.355356991291046],[.681214988231659,.35834002494812],[.698584973812103,.363156020641327],[.941866993904114,.319076001644135],[.698584973812103,.387449026107788],[.584177017211914,.624107003211975],[.554318010807037,.566076993942261],[.534153997898102,.62064003944397],[.711217999458313,.819975018501282],[.664629995822906,.852871000766754],[.559099972248077,.902631998062134],[.871706008911133,.791940987110138],[.591234028339386,.373893976211548],[.544341027736664,.451583981513977],[.624562978744507,.924192011356354],[.88577002286911,.615028977394104],[.551338016986847,.695277988910675],[.551980018615723,.704632043838501],[.552887976169586,.715808033943176],[.555167973041534,.730794012546539],[.569944024085999,.767035007476807],[.593203008174896,.685675978660583],[.599261999130249,.681069016456604],[.607599973678589,.677703022956848],[.631937980651855,.663500010967255],[.752032995223999,.601315021514893],[.547226011753082,.420395016670227],[.563543975353241,.359827995300293],[.583841025829315,.368713974952698],[.586614012718201,.692366003990173],[.771915018558502,.683578014373779],[.531597018241882,.352482974529266],[.588370978832245,.804440975189209],[.52079701423645,.442565023899078],[.567984998226166,.493479013442993],[.543282985687256,.819254994392395],[.655317008495331,.745514988899231],[.621008992195129,.574018001556396],[.625559985637665,.78031200170517],[.680198013782501,.570719003677368],[.64276397228241,.604337990283966],[.704662978649139,.621529996395111],[.552012026309967,.862591981887817],[.589071989059448,.508637011051178],[.685944974422455,.775357007980347],[.645735025405884,.812640011310577],[.675342977046967,.703978002071381],[.810858011245728,.646304965019226],[.72012197971344,.714666962623596],[.866151988506317,.682704985141754],[.663187026977539,.644596993923187],[.570082008838654,.466325998306274],[.544561982154846,.548375964164734],[.562758982181549,.558784961700439],[.531987011432648,.530140042304993],[.585271000862122,.335177004337311],[.622952997684479,.32277899980545],[.655896008014679,.320163011550903],[.687132000923157,.322345972061157],[.716481983661652,.333200991153717],[.758756995201111,.382786989212036],[.897013008594513,.468769013881683],[.732392013072968,.424547016620636],[.70211398601532,.433162987232208],[.66652500629425,.433866024017334],[.633504986763,.426087975502014],[.603875994682312,.416586995124817],[.579657971858978,.409945011138916],[.992439985275269,.480777025222778],[.567192018032074,.569419980049133],[.54136598110199,.478899002075195],[.526564002037048,.546118021011353],[.523913025856018,.563830018043518],[.531529009342194,.555056989192963],[.566035985946655,.582329034805298],[.51631098985672,.563053965568542],[.5174720287323,.577877044677734],[.573594987392426,.389806985855103],[.560697972774506,.395331978797913],[.549755990505219,.399751007556915],[.710287988185883,.368252992630005],[.723330020904541,.363372981548309]];function Sf(t){return Yd(this,void 0,void 0,(function(){var e,n,r,s,a,i,o,u,l,c,h,p,d,f,m;return Jd(this,(function(g){switch(g.label){case 0:return e=t.maxContinuousChecks,n=void 0===e?5:e,r=t.detectionConfidence,s=void 0===r?.9:r,a=t.maxFaces,i=void 0===a?10:a,o=t.iouThreshold,u=void 0===o?.3:o,l=t.scoreThreshold,c=void 0===l?.75:l,h=t.shouldLoadIrisModel,p=void 0===h||h,d=t.modelUrl,f=t.irisModelUrl,p?[4,Promise.all([Ef(i,u,c),Cf(d),$f(f)])]:[3,2];case 1:return m=g.sent(),[3,4];case 2:return[4,Promise.all([Ef(i,u,c),Cf(d)])];case 3:m=g.sent(),g.label=4;case 4:return[2,new Rf(m[0],m[1],n,s,i,p?m[2]:null)]}}))}))}function Ef(t,e,n){return Yd(this,void 0,void 0,(function(){return Jd(this,(function(r){return[2,rf({maxFaces:t,iouThreshold:e,scoreThreshold:n})]}))}))}function Cf(t){return Yd(this,void 0,void 0,(function(){return Jd(this,(function(e){return null!=t?[2,Kd(t)]:[2,Kd("https://tfhub.dev/mediapipe/tfjs-model/facemesh/1/default/1",{fromTFHub:!0})]}))}))}function $f(t){return Yd(this,void 0,void 0,(function(){return Jd(this,(function(e){return null!=t?[2,Kd(t)]:[2,Kd("https://tfhub.dev/mediapipe/tfjs-model/iris/1/default/2",{fromTFHub:!0})]}))}))}function Tf(t,e){if(t.mesh instanceof Hn){var n=ja((function(){var n=_u([e-1,0,0]),r=_u([1,-1,1]);return ja((function(){return[Gi([Ko(e-1,t.boundingBox.topLeft.slice(0,1)),t.boundingBox.topLeft.slice(1,1)]),Gi([Ko(e-1,t.boundingBox.bottomRight.slice(0,1)),t.boundingBox.bottomRight.slice(1,1)]),Ko(n,t.mesh).mul(r),Ko(n,t.scaledMesh).mul(r)]}))})),r=n[0],s=n[1],a=n[2],i=n[3];return Object.assign({},t,{boundingBox:{topLeft:r,bottomRight:s},mesh:a,scaledMesh:i})}return Object.assign({},t,{boundingBox:{topLeft:[e-1-t.boundingBox.topLeft[0],t.boundingBox.topLeft[1]],bottomRight:[e-1-t.boundingBox.bottomRight[0],t.boundingBox.bottomRight[1]]},mesh:t.mesh.map((function(t){var n=t.slice(0);return n[0]=e-1-t[0],n})),scaledMesh:t.scaledMesh.map((function(t){var n=t.slice(0);return n[0]=e-1-t[0],n}))})}var Af,Rf=function(){function t(t,e,n,r,s,a){this.kind="MediaPipeFaceMesh",this.pipeline=new kf(t,e,192,192,n,s,a),this.detectionConfidence=r}return t.getAnnotations=function(){return sf},t.getUVCoords=function(){return Nf},t.prototype.estimateFaces=function(t){return Yd(this,void 0,void 0,(function(){var e,n,r,s,a,i,o,u,l,c,h,p,d=this;return Jd(this,(function(f){switch(f.label){case 0:if(e=t.returnTensors,n=void 0!==e&&e,r=t.flipHorizontal,s=void 0!==r&&r,a=t.predictIrises,i=void 0===a||a,o=t.input,i&&null==this.pipeline.irisModel)throw new Error("The iris model was not loaded as part of facemesh. Please initialize the model with facemesh.load({shouldLoadIrisModel: true}).");return u=function(t){return t instanceof Hn?[t.shape[0],t.shape[1]]:[t.height,t.width]}(o),l=u[1],c=ja((function(){return o instanceof Hn||(o=Na(o)),o.toFloat().expandDims(0)})),"webgl"!==dr.backendName?[3,2]:(p=U().get("WEBGL_PACK_DEPTHWISECONV"),U().set("WEBGL_PACK_DEPTHWISECONV",!0),[4,this.pipeline.predict(c,i)]);case 1:return h=f.sent(),U().set("WEBGL_PACK_DEPTHWISECONV",p),[3,4];case 2:return[4,this.pipeline.predict(c,i)];case 3:h=f.sent(),f.label=4;case 4:return c.dispose(),null!=h&&h.length>0?[2,Promise.all(h.map((function(t,e){return Yd(d,void 0,void 0,(function(){var r,a,o,u,c,h,p,d,f,m,g,y,b,x,w=this;return Jd(this,(function(v){switch(v.label){case 0:return r=t.coords,a=t.scaledCoords,o=t.box,u=t.flag,c=[u],n||(c=c.concat([r,a])),[4,Promise.all(c.map((function(t){return Yd(w,void 0,void 0,(function(){return Jd(this,(function(e){return[2,t.array()]}))}))})))];case 1:if(h=v.sent(),p=h[0],u.dispose(),p<this.detectionConfidence&&this.pipeline.clearRegionOfInterest(e),n)return d={kind:"MediaPipePredictionTensors",faceInViewConfidence:p,mesh:r,scaledMesh:a,boundingBox:{topLeft:_u(o.startPoint),bottomRight:_u(o.endPoint)}},s?[2,Tf(d,l)]:[2,d];for(x in f=h.slice(1),m=f[0],g=f[1],a.dispose(),r.dispose(),y={kind:"MediaPipePredictionValues",faceInViewConfidence:p,boundingBox:{topLeft:o.startPoint,bottomRight:o.endPoint},mesh:m,scaledMesh:g},s&&(y=Tf(y,l)),b={},sf)(i||!1===x.includes("Iris"))&&(b[x]=sf[x].map((function(t){return y.scaledMesh[t]})));return y.annotations=b,[2,y]}}))}))})))]:[2,[]]}}))}))},t}();let _f;function Df(){return null==_f&&(_f=dr.backend.epsilon()),_f}(Af||(Af={})).mediapipeFacemesh="mediapipe-facemesh";class Mf extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Mf.prototype)}}class Ff extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Ff.prototype)}}class Of extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Of.prototype)}}class Lf extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Lf.prototype)}}class Bf extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Bf.prototype)}}Error;function zf(t,e){if(Array.isArray(t)){let n=[];for(let r=0;r<e;r++)n=n.concat(t);return n}{const n=new Array(e);return n.fill(t),n}}function Pf(t,e){if(!t)throw new Bf(e)}function Wf(t,e){let n=0;for(const r of t)r===e&&n++;return n}function Vf(t){return 1===t.length?t[0]:t}function Uf(t){return Array.isArray(t)?t:[t]}function Gf(t){const e=t.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==e[0]?e:"private"+e}function Hf(t){return t.length<=1||-1===t.indexOf("_")?t:t.replace(/[_]+(\w|$)/g,((t,e)=>e.toUpperCase()))}let jf={};function qf(t){if(null==t)return null;const e={};return e.className=t.getClassName(),e.config=t.getConfig(),e}function Kf(t){if(null!=t&&"object"==typeof t)if(Array.isArray(t))t.forEach((t=>Kf(t)));else{const e=Object.keys(t);for(const n of e){const e=t[n];null!=e&&"object"==typeof e&&(Array.isArray(e)||"ndarray"!==e.type||"number"!=typeof e.value?Kf(e):t[n]=e.value)}}}function Xf(t,e={},n={},r="object",s=!1){if("string"==typeof t){const s=t;let a;if(s in n)a=n[s];else if(s in jf)a=jf[s];else if(a=e[s],null==a)throw new Of(`Unknown ${r}: ${t}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}{const a=t;if(null==a.className||null==a.config)throw new Of(`${r}: Improper config format: ${JSON.stringify(a)}.\n'className' and 'config' must set.`);const i=a.className;let o,u;if(i in n?[o,u]=n[i]:i in jf?[o,u]=jf.className:i in e&&([o,u]=e[i]),null==o)throw new Of(`Unknown ${r}: ${i}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=u){const t={};for(const e of Object.keys(jf))t[e]=jf[e];for(const e of Object.keys(n))t[e]=n[e];a.config.customObjects=t;const e=Object.assign({},jf);for(const t of Object.keys(n))jf[t]=n[t];Kf(a.config);const r=u(o,a.config,n,s);return jf=Object.assign({},e),r}{const t=Object.assign({},jf);for(const t of Object.keys(n))jf[t]=n[t];const e=new o(a.config);return jf=Object.assign({},t),e}}}function Yf(t,e){return-1*function(t,e){return t<e?-1:t>e?1:0}(t,e)}function Jf(t){if(null==t)return t;const e=[];for(const n of t)-1===e.indexOf(n)&&e.push(n);return e}function Zf(t){if(null==t)throw new Of(`Invalid value in obj: ${JSON.stringify(t)}`);for(const e in t)if(t.hasOwnProperty(e))return!1;return!0}function Qf(t,e,n){if(null!=n&&t.indexOf(n)<0)throw new Of(`${n} is not a valid ${e}.  Valid values are ${t} or null/undefined.`)}function tm(t,e,n=0,r=1/0){return Pf(n>=0),Pf(r>=n),Array.isArray(t)&&t.length>=n&&t.length<=r&&t.every((t=>typeof t===e))}function em(t,e){Array.isArray(t)?(u(t.length>0,(()=>`${e} is unexpectedly an empty array.`)),t.forEach(((t,n)=>em(t,`element ${n+1} of ${e}`)))):u(Number.isInteger(t)&&t>0,(()=>`Expected ${e} to be a positive integer, but got ${nm(t)}.`))}function nm(t){return null===t?"null":Array.isArray(t)?"["+t.map((t=>nm(t))).join(",")+"]":"string"==typeof t?`"${t}"`:`${t}`}function rm(t){return"relu"===t?"relu":"linear"===t?"linear":"elu"===t?"elu":null}function sm(t,e){return ja((()=>rl(Xo(Mo(t,t),e,!0))))}class am extends Pa{getConfig(){return{}}}class im extends am{constructor(t){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=t.maxValue?t.maxValue:this.defaultMaxValue,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return ja((()=>{const e=sm(t,this.axis),n=Wi(e,0,this.maxValue);return Mo(t,oo(n,ti(Df(),e)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}im.className="MaxNorm",Va(im);class om extends am{constructor(t){super(),this.defaultAxis=0,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return ja((()=>oo(t,ti(Df(),sm(t,this.axis)))))}getConfig(){return{axis:this.axis}}}om.className="UnitNorm",Va(om);class um extends am{apply(t){return Fu(t)}}um.className="NonNeg",Va(um);class lm extends am{constructor(t){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=t.minValue?t.minValue:this.defaultMinValue,this.maxValue=null!=t.maxValue?t.maxValue:this.defaultMaxValue,this.rate=null!=t.rate?t.rate:this.defaultRate,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return ja((()=>{const e=sm(t,this.axis),n=ti(Mo(this.rate,Wi(e,this.minValue,this.maxValue)),Mo(1-this.rate,e));return Mo(t,oo(n,ti(Df(),e)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}lm.className="MinMaxNorm",Va(lm);const cm={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function hm(t){return qf(t)}function pm(t,e={}){return Xf(t,Wa.getMap().classNameMap,e,"constraint")}function dm(t){if(null==t)return null;if("string"==typeof t){return pm({className:t in cm?cm[t]:t,config:{}})}return t instanceof am?t:pm(t)}const fm=["channelsFirst","channelsLast"],mm=["valid","same","causal"],gm=["max","avg"],ym=["sum","mul","concat","ave"],bm=new Map;function xm(t){Qf(fm,"DataFormat",t)}function wm(t){Qf(mm,"PaddingMode",t)}function vm(t){Qf(gm,"PoolMode",t)}const Im=[];function km(t,e){Im.push(t);try{const t=e();return Im.pop(),t}catch(t){throw Im.pop(),t}}function Nm(t){if(!Cm(t))throw new Error("Not a valid tensor name: '"+t+"'");return(0===Im.length?"":Im.join("/")+"/")+t}function Sm(t){if(!Cm(t))throw new Error("Not a valid tensor name: '"+t+"'");bm.has(t)||bm.set(t,0);const e=bm.get(t);if(bm.set(t,bm.get(t)+1),e>0){const n=`${t}_${e}`;return bm.set(n,1),n}return t}const Em=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function Cm(t){return!!t.match(Em)}function $m(t,e,n){null==e&&(e=0),null==n&&(n=t.length);let r=1;for(let s=e;s<n;++s)r*=t[s];return r}function Tm(t){return _u(t=Array.isArray(t)?new Float32Array(t):t)}function Am(t){return iu(Tm(t)).dataSync()[0]}function Rm(t){return qo(Tm(t)).dataSync()[0]}function _m(t,e){if(e<t)throw new Of(`end (${e}) < begin (${t}) is forbidden.`);const n=[];for(let r=t;r<e;++r)n.push(r);return n}function Dm(t,e){return t.asType(e)}function Mm(t,e=-1){const n=t.shape.slice();return e<0&&(e=n.length+e+1),n.splice(e,0,1),t.reshape(n)}function Fm(t,e,n){return ja((()=>{switch(t.rank){case 1:return ju(t,e,n);case 2:return qu(t,[e,0],[n,t.shape[1]]);case 3:return Ku(t,[e,0,0],[n,t.shape[1],t.shape[2]]);case 4:return Xu(t,[e,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3]]);case 5:return Hu(t,[e,0,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3],t.shape[4]]);case 6:return Hu(t,[e,0,0,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3],t.shape[4],t.shape[5]]);default:throw new Of(`sliceAlongFirstAxis() received an unsupported tensor rank: ${t.rank}`)}}))}function Om(t,e,n){return ja((()=>{switch(t.rank){case 1:return ju(t,e,n);case 2:return qu(t,[0,e],[t.shape[0],n]);case 3:return Ku(t,[0,0,e],[t.shape[0],t.shape[1],n]);case 4:return Xu(t,[0,0,0,e],[t.shape[0],t.shape[1],t.shape[2],n]);default:throw new Of(`sliceAlongLastAxis() received an unsupported tensor rank: ${t.rank}`)}}))}function Lm(t,e,n,r){return ja((()=>{switch(t.rank){case 1:return ju(t,e,n);case 2:switch(r){case 1:return Fm(t,e,n);case 2:return Om(t,e,n);default:throw new Of(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return Fm(t,e,n);case 2:return Ku(t,[0,e,0],[t.shape[0],n,t.shape[2]]);case 3:return Om(t,e,n);default:throw new Of(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return Fm(t,e,n);case 2:return Xu(t,[0,e,0,0],[t.shape[0],n,t.shape[2],t.shape[3]]);case 3:return Xu(t,[0,0,e,0],[t.shape[0],t.shape[1],n,t.shape[3]]);case 4:return Om(t,e,n);default:throw new Of(`The axis is not within the rank of the tensor ${r}`)}default:throw new Of(`sliceAlongLastAxis() received an unsupported tensor rank: ${t.rank}`)}}))}function Bm(t,e=-1){let n;return e<0&&(n=t[0].rank,e=0!==n?n:0),e===t[0].rank&&(e=-1),Gi(t,e)}function zm(t,e){switch(t.rank){case 1:return Hi([t,e]);case 2:return ji([t,e],0);case 3:return qi([t,e],0);case 4:return Ki([t,e],0);default:throw new Of(`concatAlongFirstAxis() received an unsupported tensor rank: ${t.rank}`)}}function Pm(t,e){if(Array.isArray(e)||(e=[e]),t.rank!==e.length)throw new Of(`The length of input n (${e.length}) does not match the number of dimensions in input x (${t.rank})`);return vo(t,e)}function Wm(t,e=0,n=1,r,s){return Au(t,e,n,r,s)}function Vm(t,e,n,r){if(t.rank<2||e.rank<2)throw new Lf(`dot requires both inputs to be rank >= 2 but got x shape = ${t.shape} and y shape = ${e.shape}`);if(e.rank>=3){if(t.shape.slice(-1)[0]!==e.shape.slice(-2)[0])throw new Lf(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${t.shape} and  y shape = ${e.shape}`)}if(2===t.rank&&2===e.rank){return Yl({a:t,b:e,transposeA:!1,transposeB:!1,bias:r?Hm(t.rank,r,"channelsLast"):null,activation:n})}{const s=t.shape.slice(),a=s.pop();t=t.reshape([-1,a]);const i=e.shape.slice(),o=i.pop(),u=i.pop(),l=[...i,o],c=Array.from({length:e.rank},((t,n)=>0===n?e.rank-2:n<=e.rank-2?n-1:n));e=e.transpose(c).reshape([u,-1]);const h=[...s,...l];return Yl({a:t,b:e,transposeA:!1,transposeB:!1,bias:r?Hm(t.rank,r,"channelsLast"):null,activation:n}).reshape(h)}}function Um(t,e,n){return ja((()=>(e=Array.isArray(e)?_u(e,"int32"):e.toInt(),Eo(t,e,n))))}function Gm(t){return Mo(t,t)}function Hm(t,e,n){const r=e.shape;if(1!==e.rank&&e.rank!==t)throw new Of(`Unexpected bias dimensions: ${e.rank}; expected it to be 1 or ${t}`);if(5===t){if("channelsFirst"===n)return 1===r.length?e.reshape([1,r[0],1,1,1]):e.reshape([1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?e.reshape([1,1,1,1,r[0]]):e.reshape([1].concat(r))}else if(4===t){if("channelsFirst"===n)return 1===r.length?e.reshape([1,r[0],1,1]):e.reshape([1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?e.reshape([1,1,1,r[0]]):e.reshape([1].concat(r))}else if(3===t){if("channelsFirst"===n)return 1===r.length?e.reshape([1,r[0],1]):e.reshape([1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?e.reshape([1,1,r[0]]):e.reshape([1].concat(r))}else if(t<3)return e;throw new Of(`Unsupported input rank by biasAdd: ${e.rank}`)}function jm(t,e,n){return ja((()=>(null==n&&(n="channelsLast"),xm(n),t.add(Hm(t.rank,e,n)))))}function qm(t,e,n,r){return ja((()=>zl(t,e,n,r)))}function Km(t,e,n=!1){return n?t():e()}const Xm=["fanIn","fanOut","fanAvg"],Ym=["normal","uniform","truncatedNormal"];class Jm extends Pa{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class Zm extends Jm{apply(t,e){return ru(t,e)}}Zm.className="Zeros",Va(Zm);class Qm extends Jm{apply(t,e){return su(t,e)}}Qm.className="Ones",Va(Qm);class tg extends Jm{constructor(t){if(super(),"object"!=typeof t)throw new Of(`Expected argument of type ConstantConfig but got ${t}`);if(void 0===t.value)throw new Of(`config must have value set but got ${t}`);this.value=t.value}apply(t,e){return ja((()=>Mo(Fo(this.value),su(t,e))))}getConfig(){return{value:this.value}}}tg.className="Constant",Va(tg);class eg extends Jm{constructor(t){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=t.minval||this.DEFAULT_MINVAL,this.maxval=t.maxval||this.DEFAULT_MAXVAL,this.seed=t.seed}apply(t,e){return Ru(t,this.minval,this.maxval,e)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}eg.className="RandomUniform",Va(eg);class ng extends Jm{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if("float32"!==(e=e||"float32")&&"int32"!==e)throw new Lf(`randomNormal does not support dType ${e}.`);return Wm(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}ng.className="RandomNormal",Va(ng);class rg extends Jm{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if("float32"!==(e=e||"float32")&&"int32"!==e)throw new Lf(`truncatedNormal does not support dType ${e}.`);return fl(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}rg.className="TruncatedNormal",Va(rg);class sg extends Jm{constructor(t){super(),this.gain=null!=t.gain?t.gain:1}apply(t,e){return ja((()=>{if(2!==t.length||t[0]!==t[1])throw new Of("Identity matrix initializer can only be used for 2D square matrices.");return Mo(this.gain,Io(t[0]))}))}getConfig(){return{gain:this.gain}}}sg.className="Identity",Va(sg);class ag extends Jm{constructor(t){if(super(),t.scale<0)throw new Of(`scale must be a positive float. Got: ${t.scale}`);var e;this.scale=null==t.scale?1:t.scale,this.mode=null==t.mode?"fanIn":t.mode,e=this.mode,Qf(Xm,"FanMode",e),this.distribution=null==t.distribution?"normal":t.distribution,function(t){Qf(Ym,"Distribution",t)}(this.distribution),this.seed=t.seed}apply(t,e){const n=function(t,e="channelsLast"){let n,r;if(xm(e),2===t.length)n=t[0],r=t[1];else if(-1!==[3,4,5].indexOf(t.length)){if("channelsFirst"===e){const e=$m(t,2);n=t[1]*e,r=t[0]*e}else if("channelsLast"===e){const e=$m(t,0,t.length-2);n=t[t.length-2]*e,r=t[t.length-1]*e}}else{const e=$m(t);n=Math.sqrt(e),r=Math.sqrt(e)}return[n,r]}(t),r=n[0],s=n[1];let a=this.scale;if("fanIn"===this.mode?a/=Math.max(1,r):"fanOut"===this.mode?a/=Math.max(1,s):a/=Math.max(1,(r+s)/2),"normal"===this.distribution){const n=Math.sqrt(a);if("float32"!==(e=e||"float32")&&"int32"!==e)throw new Lf(`${this.getClassName()} does not support dType ${e}.`);return fl(t,0,n,e,this.seed)}{const n=Math.sqrt(3*a);return Ru(t,-n,n,e)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}ag.className="VarianceScaling",Va(ag);class ig extends ag{constructor(t){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return ag.className}}ig.className="GlorotUniform",Va(ig);class og extends ag{constructor(t){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return ag.className}}og.className="GlorotNormal",Va(og);class ug extends ag{constructor(t){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return ag.className}}ug.className="HeNormal",Va(ug);class lg extends ag{constructor(t){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return ag.className}}lg.className="HeUniform",Va(lg);class cg extends ag{constructor(t){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return ag.className}}cg.className="LeCunNormal",Va(cg);class hg extends ag{constructor(t){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return ag.className}}hg.className="LeCunNormal",Va(hg);class pg extends Jm{constructor(t){if(super(),this.DEFAULT_GAIN=1,this.gain=null==t.gain?this.DEFAULT_GAIN:t.gain,this.seed=t.seed,null!=this.seed)throw new Lf("Random seed is not implemented for Orthogonal Initializer yet.")}apply(t,e){return ja((()=>{if(t.length<2)throw new Lf("Shape must be at least 2D.");t[0]*t[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${t[0]*t[1]}) elements: Slowness may result.`);const e=Wm(t[0]>t[1]?[t[1],t[0]]:t,0,1,"float32");let n=Ac.gramSchmidt(e);return t[0]>t[1]&&(n=n.transpose()),Mo(this.gain,n)}))}getConfig(){return{gain:this.gain,seed:this.seed}}}pg.className="Orthogonal",Va(pg);const dg={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function fg(t,e={}){return Xf(t,Wa.getMap().classNameMap,e,"initializer")}function mg(t){return qf(t)}function gg(t){if("string"==typeof t){const e=t in dg?dg[t]:t;if("GlorotNormal"===e)return new og;if("GlorotUniform"===e)return new ig;if("HeNormal"===e)return new ug;if("HeUniform"===e)return new lg;if("LeCunNormal"===e)return new cg;if("LeCunUniform"===e)return new hg;{const t={};return t.className=e,t.config={},fg(t)}}return t instanceof Jm?t:fg(t)}let yg=0;function bg(){return yg++}const xg={};function wg(t=""){return t in xg||(xg[t]=0),xg[t]+=1,t+xg[t].toString()}function vg(t){return Array.isArray(t)&&Array.isArray(t[0])}function Ig(t){return 0===t.length?[]:Array.isArray(t[0])?t:[t]}function kg(t){let e;if(Array.isArray(t)){if(1!==t.length)throw new Of(`Expected Tensor length to be 1; got ${t.length}`);e=t[0]}else e=t;return e}function Ng(t){if(Array.isArray(t)&&Array.isArray(t[0])){if(1===t.length)return(t=t)[0];throw new Of(`Expected exactly 1 Shape; got ${t.length}`)}return t}function Sg(t){let e=0;for(const n of t)0===n.shape.length?e+=1:e+=n.shape.reduce(((t,e)=>t*e));return e}const Eg="Variable";class Cg{constructor(t,e="float32",n="Variable",r=!0,s=null){this.dtype=null==e?"float32":e,this.shape=t.shape,this.id=bg(),n=null==n?Eg:n,this.originalName=Nm(n),this.name=Sm(this.originalName),this.trainable_=r,this.constraint=s,this.val=function(t,e=!0,n,r){return dr.makeVariable(t,e,n,r)}(t,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(t){return this.assertNotDisposed(),function(t,e){if(t.shape.toString()!==e.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(t.shape)+" vs. "+JSON.stringify(e.shape))}(this.val,t),this.val.id!==t.id&&(this.val.assign(t),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(t){this.trainable_=t,this.val.trainable=t}}function $g(t){return t.map((t=>t.read()))}function Tg(t){t.forEach((t=>{t[0].write(t[1])}))}class Ag{constructor(t){this.dtype=t.dtype,this.shape=t.shape,null!=t.shape?this.ndim=t.shape.length:this.ndim=t.ndim,this.maxNDim=t.maxNDim,this.minNDim=t.minNDim,this.axes=t.axes||{}}}class Rg{constructor(t,e,n,r,s,a,i){this.dtype=t,this.shape=e,this.sourceLayer=n,this.inputs=r,this.callArgs=s,this.outputTensorIndex=i,this.id=bg(),null!=a&&(this.originalName=Nm(a),this.name=Sm(this.originalName)),this.rank=e.length}}let _g=0;class Dg{constructor(t,e){this.callArgs=e,this.id=_g++,this.outboundLayer=t.outboundLayer,this.inboundLayers=t.inboundLayers,this.nodeIndices=t.nodeIndices,this.tensorIndices=t.tensorIndices,this.inputTensors=t.inputTensors,this.outputTensors=t.outputTensors,this.inputMasks=t.inputMasks,this.outputMasks=t.outputMasks,this.inputShapes=t.inputShapes,this.outputShapes=t.outputShapes;for(const e of t.inboundLayers)null!=e&&e.outboundNodes.push(this);t.outboundLayer.inboundNodes.push(this)}getConfig(){const t=[];for(const e of this.inboundLayers)null!=e?t.push(e.name):t.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:t,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let Mg=0;class Fg extends Pa{constructor(t={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=Mg++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let e=t.name;if(!e){const t=this.getClassName();e=Gf(t)+"_"+wg(t)}if(this.name=e,this.trainable_=null==t.trainable||t.trainable,null!=t.inputShape||null!=t.batchInputShape){let e;if(null!=t.batchInputShape)e=t.batchInputShape;else if(null!=t.inputShape){let n=null;null!=t.batchSize&&(n=t.batchSize),e=[n].concat(t.inputShape)}this.batchInputShape=e;let n=t.dtype;null==n&&(n=t.inputDType),null==n&&(n="float32"),this.dtype=n}null!=t.weights?this.initialWeights=t.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(t,e){return t.name+"_ib-"+e.toString()}getNodeAtIndex(t,e){if(0===this.inboundNodes.length)throw new Ff(`The layer has never been called and thus has no defined ${e}.`);if(this.inboundNodes.length<=t)throw new Of(`Asked to get ${e} at node ${t}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[t]}getInputAt(t){return Vf(this.getNodeAtIndex(t,"input").inputTensors)}getOutputAt(t){return Vf(this.getNodeAtIndex(t,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Mf(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new Mf(`Layer ${this.name} is not connected, no input to return.`);return Vf(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new Mf(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Mf(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return Vf(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((t=>t()))}get updates(){return this._updates}get built(){return this._built}set built(t){this._built=t}get trainable(){return this.trainable_}set trainable(t){this._trainableWeights.forEach((e=>e.trainable=t)),this.trainable_=t}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((t=>t.trainable)):[]}set trainableWeights(t){this._trainableWeights=t}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((t=>!t.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(t){this._nonTrainableWeights=t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(t){if(t=Uf(t),null==this.inputSpec||0===this.inputSpec.length)return;const e=Uf(this.inputSpec);if(t.length!==e.length)throw new Of(`Layer ${this.name} expects ${e.length} inputs, but it received ${t.length} input tensors. Input received: ${t}`);for(let n=0;n<t.length;n++){const r=t[n],s=e[n];if(null==s)continue;const a=r.rank;if(null!=s.ndim&&a!==s.ndim)throw new Of(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${s.ndim}, found ndim=${a}`);if(null!=s.maxNDim&&a>s.maxNDim)throw new Of(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${s.maxNDim}, found ndim=${a}`);if(null!=s.minNDim&&a<s.minNDim)throw new Of(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${s.minNDim}, found ndim=${a}.`);if(null!=s.dtype&&r.dtype!==s.dtype)throw new Of(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${s.dtype}, found dtype=${r.dtype}.`);if(s.axes){const t=r.shape;for(const e in s.axes){const r=Number(e),a=s.axes[e],i=r>=0?t[r]:t[t.length+r];if(null!=a&&-1===[a,null].indexOf(i))throw new Of(`Input ${n} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${a} but got shape ${t}.`)}}if(null!=s.shape)for(let t=0;t<s.shape.length;++t){const e=s.shape[t],a=r.shape[t];if(null!=e&&null!=a&&e!==a)throw new Of(`Input ${n} is incompatible with layer ${this.name}: expected shape=${s.shape}, found shape=${r.shape}.`)}}}call(t,e){return t}invokeCallHook(t,e){null!=this._callHook&&this._callHook(t,e)}setCallHook(t){this._callHook=t}clearCallHook(){this._callHook=null}apply(t,e){e=e||{},this.assertNotDisposed();const n=Uf(t);let r=!0;for(const t of n)if(!(t instanceof Rg)){r=!1;break}let s=!0;for(const t of n)if(t instanceof Rg){s=!1;break}if(r===s)throw new Of("Arguments to apply() must be all SymbolicTensors or all Tensors");return km(this.name,(()=>{if(!this.built){this.assertInputCompatibility(t);const e=[];for(const n of Uf(t))e.push(n.shape);this.build(Vf(e)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&s&&(this._refCount=1)}if(this.assertInputCompatibility(t),s){let r=this.call(t,e);const s=Uf(r),a=[];for(let t of s)-1!==n.indexOf(t)&&(t=t.clone()),a.push(t);if(r=Vf(a),null!=this.activityRegularizer)throw new Lf("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{const n=function(t){t=Uf(t);const e=[];for(const n of t)e.push(n.shape);return Vf(e)}(t),r=this.computeOutputShape(n);let s;const a="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(t)?n[0]:n),s=null!=r&&r.length>0&&Array.isArray(r[0])?r.map(((n,r)=>new Rg(a,n,this,Uf(t),e,this.name,r))):new Rg(a,r,this,Uf(t),e,this.name),this.addInboundNode(t,s,null,null,n,r,e),this._refCount++,null!=this.activityRegularizer)throw new Lf("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}}))}warnOnIncompatibleInputShape(t){if(null!=this.batchInputShape)if(t.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(t)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let e=!1;this.batchInputShape.forEach(((n,r)=>{null!=n&&null!=t[r]&&t[r]!==n&&(e=!0)})),e&&console.warn(`The shape of the input tensor (${JSON.stringify(t)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new Mf(`The layer ${this.name} has never been called and thus has no defined output shape.`);const t=[];for(const e of this.inboundNodes){const n=JSON.stringify(e.outputShapes);-1===t.indexOf(n)&&t.push(n)}if(1===t.length){const t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&1===t.length?t[0]:t}throw new Mf(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new Ff(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Sg(this.weights)}build(t){this.built=!0}getWeights(t=!1){return $g(t?this.trainableWeights:this.weights)}setWeights(t){ja((()=>{const e=this.weights;if(e.length!==t.length)throw new Of(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${t.length}, but the layer was expecting ${e.length} weights. Provided weights: ${t}...`);if(0===e.length)return;const n=[],r=$g(e);for(let s=0;s<r.length;++s){const a=r[s],i=e[s],o=t[s];if(!d(a.shape,o.shape))throw new Of(`Layer weight shape ${a.shape} not compatible with provided weight shape ${o.shape}`);n.push([i,o])}Tg(n)}))}addWeight(t,e,n,r,s,a,i){if(-1!==this._addedWeightNames.indexOf(t))throw new Of(`Duplicate weight name ${t} for layer ${this.name}`);this._addedWeightNames.push(t),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=gg("zeros"));const o=r.apply(e,n),u=new Cg(o,n,t,a,i);return o.dispose(),null!=s&&this.addLoss((()=>s.apply(u.read()))),null==a&&(a=!0),a?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(t){this.fastWeightInitDuringBuild=t}addLoss(t){null==t||Array.isArray(t)&&0===t.length||(t=Uf(t),void 0!==this._losses&&null!==this._losses&&this.losses.push(...t))}computeOutputShape(t){return t}computeMask(t,e){if(!this.supportsMasking){if(null!=e){if(!Array.isArray(e))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);e.forEach((t=>{if(null!=t)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return e}addInboundNode(t,e,n,r,s,a,i=null){const o=Uf(t);e=Uf(e),n=Uf(n),r=Uf(r),s=Ig(s),a=Ig(a);const u=[],l=[],c=[];for(const t of o)u.push(t.sourceLayer),l.push(t.nodeIndex),c.push(t.tensorIndex);new Dg({outboundLayer:this,inboundLayers:u,nodeIndices:l,tensorIndices:c,inputTensors:o,outputTensors:e,inputMasks:n,outputMasks:r,inputShapes:s,outputShapes:a},i);for(let t=0;t<e.length;t++)e[t].sourceLayer=this,e[t].nodeIndex=this.inboundNodes.length-1,e[t].tensorIndex=t}getConfig(){const t={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(t.batchInputShape=this.batchInputShape),null!=this.dtype&&(t.dtype=this.dtype),t}disposeWeights(){return this.weights.forEach((t=>t.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let t=0;return 0==--this._refCount&&(t=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:t}}}function Og(t,e,n){if((null==e||null!=n&&n>0)&&(e=t.sourceLayer,n=t.nodeIndex),0===e.inboundNodes.length)return[t];{const t=e.inboundNodes[n];if(0===t.inboundLayers.length)return t.inputTensors;{const e=[];for(let n=0;n<t.inboundLayers.length;n++){const r=Og(t.inputTensors[n],t.inboundLayers[n],t.nodeIndices[n]);for(const t of r)-1===e.indexOf(t)&&e.push(t)}return e}}}class Lg extends Fg{constructor(t){if(super({dtype:t.dtype,name:null!=t.name?t.name:wg("input").toString()}),null==t.batchSize&&(t.batchSize=null),null==t.sparse&&(t.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=t.sparse,null!=t.inputShape&&null!=t.batchInputShape)throw new Of("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let e=t.batchInputShape;if(null==e){if(null==t.inputShape)throw new Of("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");e=[t.batchSize].concat(t.inputShape)}else if(null!=t.batchSize)throw new Of("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=t.dtype||"float32";this.batchInputShape=e,this.dtype=n,this.inputSpec=[{shape:e}];const r=new Rg(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new Dg({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[e],outputShapes:[e]})}apply(t,e){throw new Of(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}async function Bg(t){if(null==t)return;const e=[],n=[],r=[];for(const s in t){const a=t[s];if("number"!=typeof a){const t=a;e.push(t.data()),n.push(s),r.push(t)}}if(e.length>0){const s=await Promise.all(e);for(let e=0;e<s.length;++e)t[n[e]]=s[e][0];qa(r)}}function zg(t){if(null!=t)for(const e in t){const n=t[e];"number"!=typeof n&&n.dispose()}}var Pg,Wg;Lg.className="InputLayer",Va(Lg),(Wg=Pg||(Pg={}))[Wg.SILENT=0]="SILENT",Wg[Wg.VERBOSE=1]="VERBOSE";class Vg{constructor(){this.validationData=null}setParams(t){this.params=t}async onEpochBegin(t,e){}async onEpochEnd(t,e){}async onBatchBegin(t,e){}async onBatchEnd(t,e){}async onTrainBegin(t){}async onTrainEnd(t){}setModel(t){}}class Ug{constructor(t,e=10){null==t&&(t=[]),this.callbacks=t,this.queueLength=e}append(t){this.callbacks.push(t)}setParams(t){for(const e of this.callbacks)e.setParams(t)}setModel(t){for(const e of this.callbacks)e.setModel(t)}async onEpochBegin(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onEpochBegin(t,e)}async onEpochEnd(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onEpochEnd(t,e)}async onBatchBegin(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onBatchBegin(t,e)}async onBatchEnd(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onBatchEnd(t,e)}async onTrainBegin(t){null==t&&(t={});for(const e of this.callbacks)await e.onTrainBegin(t)}async onTrainEnd(t){null==t&&(t={});for(const e of this.callbacks)await e.onTrainEnd(t)}}class Gg extends Vg{constructor(){super()}async onEpochBegin(t){this.seen=0,this.totals={}}async onBatchEnd(t,e){null==e&&(e={});const n=null==e.size?0:e.size;this.seen+=n;for(const t in e){const r=e[t];if("number"==typeof r)this.totals.hasOwnProperty(t)||(this.totals[t]=0),this.totals[t]=this.totals[t]+r*n;else{let e;t in this.totals?e=this.totals[t]:this.totals[t]=0;const s=ja((()=>ti(this.totals[t],Mo(r,n))));this.totals[t]=s,null!=e&&e.dispose()}}}async onEpochEnd(t,e){if(null!=e)for(const t of this.params.metrics)null!=this.totals[t]&&("number"==typeof this.totals[t]?e[t]=this.totals[t]/this.seen:ja((()=>{const n=Mo(oo(1,this.seen),this.totals[t]);e[t]=n,this.totals[t].dispose(),Ka(e[t])})))}}class Hg extends Vg{async onTrainBegin(t){this.epoch=[],this.history={}}async onEpochEnd(t,e){null==e&&(e={}),this.epoch.push(t);for(const t in e)null==this.history[t]&&(this.history[t]=[]),this.history[t].push(e[t])}async syncData(){const t=[],e=[],n=[];for(const r in this.history){const s=this.history[r];for(let a=0;a<s.length;++a)if("number"!=typeof s[a]){const i=s[a];t.push(i.data()),e.push(r),n.push(a)}}const r=await Promise.all(t);for(let t=0;t<r.length;++t){this.history[e[t]][n[t]].dispose(),this.history[e[t]][n[t]]=r[t][0]}}}class jg extends Vg{constructor(t,e){if(super(),this.currentEpoch=0,this.yieldEvery=e||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=t.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");C(this.yieldEvery)&&(this.maybeWait=function(t,e){let n,r=An();return(...s)=>{const a=An();return a-r<e||(r=a,n=t(...s)),n}}(this.maybeWait.bind(this),this.yieldEvery)),this.trainBegin=t.onTrainBegin,this.trainEnd=t.onTrainEnd,this.epochBegin=t.onEpochBegin,this.epochEnd=t.onEpochEnd,this.batchBegin=t.onBatchBegin,this.batchEnd=t.onBatchEnd,this.yield=t.onYield}async maybeWait(t,e,n){const r=[];null!=this.yield&&(await Bg(n),r.push(this.yield(t,e,n))),r.push(Vc()),await Promise.all(r)}async onEpochBegin(t,e){this.currentEpoch=t,null!=this.epochBegin&&(await Bg(e),await this.epochBegin(t,e))}async onEpochEnd(t,e){const n=[];null!=this.epochEnd&&(await Bg(e),n.push(this.epochEnd(t,e))),"epoch"===this.yieldEvery&&n.push(Vc()),await Promise.all(n)}async onBatchBegin(t,e){null!=this.batchBegin&&(await Bg(e),await this.batchBegin(t,e))}async onBatchEnd(t,e){const n=[];null!=this.batchEnd&&(await Bg(e),n.push(this.batchEnd(t,e))),"batch"===this.yieldEvery?n.push(Vc()):C(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,t,e)),await Promise.all(n)}async onTrainBegin(t){null!=this.trainBegin&&(await Bg(t),await this.trainBegin(t))}async onTrainEnd(t){null!=this.trainEnd&&(await Bg(t),await this.trainEnd(t))}}function qg(t,e){if(null==t&&(t={}),t instanceof Vg)return[t];if(Array.isArray(t)&&t[0]instanceof Vg)return t;return Uf(t).map((t=>new jg(t,e)))}class Kg{constructor(){}static registerCallbackConstructor(t,e){u(t>=0&&Number.isInteger(t),(()=>`Verbosity level is expected to be an integer >= 0, but got ${t}`)),Kg.checkForDuplicate(e),null==Kg.constructors[t]&&(Kg.constructors[t]=[]),Kg.constructors[t].push(e)}static checkForDuplicate(t){for(const e in Kg.constructors){Kg.constructors[+e].forEach((e=>{if(e===t)throw new Of("Duplicate callback constructor.")}))}}static clear(){Kg.constructors={}}static createCallbacks(t){const e=[];for(const n in Kg.constructors){const r=+n;t>=r&&e.push(...Kg.constructors[r])}return e.map((t=>new t))}}function Xg(t,e,n,r,s,a,i,o,u){const l=new Hg,c=[new Gg,...Kg.createCallbacks(e)];null!=t&&c.push(...t),c.push(l);const h=new Ug(c);return h.setParams({epochs:n,initialEpoch:r,samples:s,steps:a,batchSize:i,verbose:e,doValidation:o,metrics:u}),{callbackList:h,history:l}}function Yg(t,e={},n=!1){return Xf(t,Wa.getMap().classNameMap,e,"layer",n)}function Jg(t,e){return ja((()=>{"float32"!==t.dtype&&(t=t.asType("float32"));const n=Xo(Gm(t),e,!0),r=ko(n.shape,Df()),s=rl(Do(n,r));return oo(t,s)}))}function Zg(t,e){return ja((()=>au(Gm(Ko(e,t)),-1)))}function Qg(t,e){return ja((()=>au(Ja(Ko(e,t)),-1)))}function ty(t,e){return ja((()=>{const n=Ko(t,e),r=Wi(Ja(t),Df(),Number.MAX_VALUE),s=Ja(oo(n,r));return Mo(100,au(s,-1))}))}function ey(t,e,n=!1){return ja((()=>{if(n)e=Yu(e);else{const t=Xo(e,e.shape.length-1,!0);e=oo(e,t)}return e=Wi(e,Df(),1-Df()),Uo(Xo(Mo(t.toFloat(),Wo(e)),e.shape.length-1))}))}function ny(t,e,n=!1){return ja((()=>{const r=No(function(t){const e=[$m(t.shape)];return t.reshape(e)}(t)).toInt(),s=(e=Wi(e,Df(),1-Df())).shape;return ey(va(r,s[s.length-1]).reshape(s),e,n)}))}function ry(t,e){return ja((()=>{let n;return n=Wi(e,Df(),1-Df()),n=Wo(oo(n,Ko(1,n))),au(function(t,e){if(!d(t.shape,e.shape))throw new Of(`logits and labels must have the same shape, but got shapes ${JSON.stringify(t.shape)} and ${JSON.stringify(e.shape)}`);return ja((()=>{const n=e.relu(),r=e.abs().neg();return n.sub(e.mul(t)).add(r.exp().log1p())}))}(t,n),-1)}))}function sy(t,e){return ja((()=>{const n=Jg(t,-1),r=Jg(e,-1),s=Mo(n,r);return Uo(Xo(s,-1))}))}Kg.constructors={};const ay={meanSquaredError:Zg,meanAbsoluteError:Qg,meanAbsolutePercentageError:ty,meanSquaredLogarithmicError:function(t,e){return ja((()=>{const n=Wi(e,Df(),Number.MAX_VALUE),r=Wo(ti(1,n)),s=Wi(t,Df(),Number.MAX_VALUE),a=Wo(ti(1,s));return au(Gm(Ko(r,a)),-1)}))},squaredHinge:function(t,e){return ja((()=>{const n=Do(0,Ko(1,Mo(t,e)));return au(Gm(n),-1)}))},hinge:function(t,e){return ja((()=>{const n=Do(0,Ko(1,Mo(t,e)));return au(n,-1)}))},categoricalHinge:function(t,e){return ja((()=>{const n=Xo(Mo(t,e),-1),r=qo(Mo(Ko(1,t),e),-1);return Do(0,ti(1,Ko(r,n)))}))},logcosh:function(t,e){return ja((()=>{const n=Math.log(2),r=Ko(e,t),s=Ko(ti(r,Ho(Mo(-2,r))),n);return au(s,-1)}))},categoricalCrossentropy:ey,sparseCategoricalCrossentropy:ny,binaryCrossentropy:ry,kullbackLeiblerDivergence:function(t,e){return ja((()=>{const n=Wi(t,Df(),1),r=Wi(e,Df(),1);return Xo(Mo(t,Wo(oo(n,r))),-1)}))},poisson:function(t,e){return ja((()=>{const n=Wo(ti(Df(),e));return au(Ko(e,Mo(t,n)),-1)}))},cosineProximity:sy};function iy(t){if("string"==typeof t){if(t in ay)return ay[t];let e=`Unknown loss ${t}`;throw t.toLowerCase().includes("softmaxcrossentropy")&&(e=`Unknown loss ${t}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new Of(e)}return t}function oy(t,e){return ja((()=>{const n=Mo(.5,mu(e)),r=Dm(Co(e,n),t.dtype);return au(ho(t,r),-1)}))}function uy(t,e){return ja((()=>Dm(ho(hi(t,-1),hi(e,-1)),"float32")))}function ly(t,e){return ry(t,e)}function cy(t,e){return t.rank===e.rank&&(t=t.squeeze([t.rank-1])),(e=e.argMax(-1)).dtype!==t.dtype&&(e=e.asType(t.dtype)),ho(t,e).asType("float32")}const hy=ey,py=ny,dy={binaryAccuracy:oy,categoricalAccuracy:uy,precision:function(t,e){return ja((()=>{const n=function(t,e){return ja((()=>Jo(t.equal(1),e.equal(1)).sum().cast("float32")))}(t,e),r=function(t,e){return ja((()=>Jo(t.equal(0),e.equal(1)).sum().cast("float32")))}(t,e),s=n.add(r);return po(Co(s,0),n.div(s),0).cast("float32")}))},categoricalCrossentropy:hy,sparseCategoricalCrossentropy:py,mse:Zg,MSE:Zg,mae:Qg,MAE:Qg,mape:ty,MAPE:ty,cosine:sy};function fy(t){if("string"==typeof t&&t in dy)return dy[t];if("string"!=typeof t&&null!=t)return t;throw new Of(`Unknown metric ${t}`)}function my(t){if(Pf(null!==t,`Unknown LossOrMetricFn ${t}`),"string"==typeof t)return t;{let e;for(const n of Object.keys(ay))if(ay[n]===t){e=n;break}if(void 0!==e)return e;for(const n of Object.keys(dy))if(dy[n]===t){e=n;break}return void 0!==e?e:t.name}}const gy=1048576;function yy(t,e,n=!1){if(null==t||"object"!=typeof t||Object.getPrototypeOf(t)!==Object.prototype||!by(t))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(t);n.length>gy&&console.warn(`User-defined metadata of model "${e}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function by(t){if(null===t)return!0;if("object"==typeof t){if(Object.getPrototypeOf(t)===Object.prototype){const e=Object.keys(t);for(const n of e){if("string"!=typeof n)return!1;if(!by(t[n]))return!1}return!0}if(Array.isArray(t)){for(const e of t)if(!by(e))return!1;return!0}return!1}{const e=typeof t;return"string"===e||"number"===e||"boolean"===e}}function xy(t,e,n,r=console.log){const s=function(t){let e=!0;const n=[],r=[];for(const e in t.nodesByDepth)n.push(t.nodesByDepth[e]);for(const t of n){if(t.length>1||1===t.length&&t[0].inboundLayers.length>1){e=!1;break}r.push(...t)}if(e)for(const n of t.layers){let t=!1;for(const s of n.inboundNodes)if(-1!==r.indexOf(s)){if(t){e=!1;break}t=!0}if(!e)break}return e}(t),a=["Layer (type)","Output shape","Param #"];let i;if(s?(e=e||65,n=n||[.45,.85,1]):(e=e||98,n=n||[.33,.55,.67,1]),n[n.length-1]<=1&&(n=n.map((t=>Math.floor(e*t)))),!s){a.push("Receives inputs"),i=[];for(const e in t.nodesByDepth)i.push(...t.nodesByDepth[e])}r("_".repeat(e)),wy(a,n,r),r("=".repeat(e));const o=t.layers;for(let t=0;t<o.length;++t)s?vy(o[t],n,r):Iy(o[t],n,i,r),r((t===o.length-1?"=":"_").repeat(e));t.checkTrainableWeightsConsistency();const u=function(t){let e;e=null!=t.collectedTrainableWeights?Sg(t.collectedTrainableWeights):Sg(t.trainableWeights);return e}(t),l=Sg(t.nonTrainableWeights);r(`Total params: ${u+l}`),r(`Trainable params: ${u}`),r(`Non-trainable params: ${l}`),r("_".repeat(e))}function wy(t,e,n=console.log){let r="";for(let n=0;n<t.length;++n)n>0&&(r=r.slice(0,r.length-1)+" "),r+=t[n],r=r.slice(0,e[n]),r+=" ".repeat(e[n]-r.length);n(r)}function vy(t,e,n){let r;try{r=JSON.stringify(t.outputShape)}catch(t){r="multiple"}wy([`${t.name} (${t.getClassName()})`,r,t.countParams().toString()],e,n)}function Iy(t,e,n,r){let s;try{s=JSON.stringify(t.outputShape)}catch(t){s="multiple"}const a=[];for(const e of t.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(e)))for(let t=0;t<e.inboundLayers.length;++t){const n=e.inboundLayers[t].name,r=e.nodeIndices[t],s=e.tensorIndices[t];a.push(`${n}[${r}][${s}]`)}const i=t.name,o=t.getClassName(),u=0===a.length?"":a[0];wy([`${i} (${o})`,s,t.countParams().toString(),u],e,r);for(let t=1;t<a.length;++t)wy(["","","",a[t]],e,r)}function ky(t,e,n){return("inboundNodes"===t||"outputLayers"===t||"inputLayers"===t)&&0===e&&"string"==typeof n}function Ny(t,e){if(null===t)return null;if("string"==typeof t)return Hf(t);if("number"==typeof t||"boolean"==typeof t)return t;if(t instanceof Array){const n=[],r=t.length;for(let s=0;s<r;++s){const r=t[s];ky(e,s,r)?n.push(r):n.push(Ny(r,e))}return n}{const e={};for(const n of Object.keys(t)){const r=t[n];if("name"===n&&"string"==typeof r)e[n]=r;else{const t=Hf(n);e[t]=Ny(r,t)}}return e}}function Sy(t,e){if(null==t)return null;if("string"==typeof t)return Gf(t);if("number"==typeof t||"boolean"==typeof t)return t;if(t instanceof Array){const n=[],r=t.length;for(let s=0;s<r;++s){const r=t[s];ky(e,s,r)?n.push(r):n.push(Sy(r,e))}return n}{const e={};for(const n of Object.keys(t)){const r=t[n],s=Gf(n);e[s]="name"!==n&&"className"!==n||"string"!=typeof r?Sy(r,n):r}return e}}class Ey{constructor(t){if(this.id2Value={},this.id2Mask={},this.name2Id={},t instanceof Ey)for(const e in t.id2Value)this.id2Value[e]=t.id2Value[e],e in t.id2Mask&&(this.id2Mask[e]=t.id2Mask[e]);else{if(null==t)return;for(const e of t)this.add(e.key,e.value)}}add(t,e,n){if(null!=this.id2Value[t.id])throw new Of(`Duplicate key: name=${t.name}, id=${t.id}`);return this.id2Value[t.id]=function(t,e){if(null==t.dtype||t.dtype===e.dtype)return e;try{return la(e,t.dtype)}catch(n){throw new Of(`The dtype of the feed (${e.dtype}) can not be cast to the dtype of the key '${t.name}' (${t.dtype}).`)}}(t,e),this.name2Id[t.name]=t.id,null!=n&&(this.id2Mask[t.id]=n),this}addFeed(t){this.add(t.key,t.value)}hasKey(t){return null!=this.id2Value[t.id]}names(){return Object.keys(this.name2Id)}getValue(t){if(t instanceof Rg){if(null==this.id2Value[t.id])throw new Of(`Nonexistent key: ${t.name}`);return this.id2Value[t.id]}{const e=this.name2Id[t];if(null==e)throw new Of(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Value[e]}}getMask(t){if(t instanceof Rg){if(null==this.id2Value[t.id])throw new Of(`Nonexistent key: ${t.name}`);return this.id2Mask[t.id]}{const e=this.name2Id[t];if(null==e)throw new Of(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Mask[e]}}disposeMasks(){null!=this.id2Mask&&qa(this.id2Mask)}}const Cy={},$y={};function Ty(t,e,n,r){const s=null!=n&&n.training,a=Array.isArray(t),i=a?t:[t],o=i.map((t=>t.name)),l=[],c=e.names();for(const t of o)-1!==c.indexOf(t)?l.push(e.getValue(t)):l.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);const h=o.join(",")+"|"+e.names().join(",");let p,d;if(null==Cy[h]){const t=function(t,e){u(null!=t&&t.length>0,(()=>"Expected at least one fetch, got none"));let n=[],r={};if(1===t.length){const s=Ry(t[0],e);n=s.sorted,r=s.recipientMap}else{const s=new Set;for(const a of t){const{sorted:t,recipientMap:i}=Ry(a,e);for(const e of t)s.has(e.name)||(n.push(e),s.add(e.name));for(const t in i)null==r[t]&&(r[t]=new Set),i[t].forEach((e=>r[t].add(e)))}}return{sorted:n,recipientCounts:Ay(r)}}(i,e);p=t.sorted,d=t.recipientCounts,Cy[h]=p,$y[h]=d}p=Cy[h],d={},s||Object.assign(d,$y[h]);const f=new Ey(e);for(let t=0;t<p.length;++t){if(null!=r){const t=Ha().numTensors;t>r.maxNumTensors&&(r.maxNumTensors=t),t<r.minNumTensors&&(r.minNumTensors=t)}const a=p[t],i=a.sourceLayer;if(i instanceof Lg)continue;const u=[],c=[],h=[];let m=!1;for(const t of a.inputs){const n=f.getValue(t),r=f.getMask(t);u.push(n),c.push(r),null!=r&&(m=!0),s||(d[t.name]--,0!==d[t.name]||e.hasKey(t)||-1!==o.indexOf(t.name)||n.isDisposed||!0===t.sourceLayer.stateful||h.push(n))}m&&((n=n||{}).mask=c[0]);const g=Uf(i.apply(u,n));let y=null;i.supportsMasking&&(y=i.computeMask(u,c));const b=_y(a),x=Array.isArray(b)?b:[b];for(let t=0;t<x.length;++t){f.hasKey(x[t])||f.add(x[t],g[t],Array.isArray(y)?y[0]:y);const e=o.indexOf(x[t].name);-1!==e&&(l[e]=g[t])}s||qa(h)}return f.disposeMasks(),a?l:l[0]}function Ay(t){const e={};for(const n in t)e[n]=t[n].size;return e}function Ry(t,e){const n=new Set,r=[],s={};for(const t of e.names())n.add(t);const a=[],i=[];for(a.push(t);a.length>0;){const t=a[a.length-1];if(n.has(t.name)){a.pop();continue}const e=i[i.length-1]===a.length-1;if(0===t.inputs.length||e)a.pop(),r.push(t),n.add(t.name),e&&i.pop();else{i.push(a.length-1);for(const e of t.inputs)null==s[e.name]&&(s[e.name]=new Set),s[e.name].add(t.name),n.has(e.name)||a.push(e)}}return{sorted:r,recipientMap:s}}function _y(t){let e;if(1===t.sourceLayer.inboundNodes.length)e=t.sourceLayer.output;else{let n=null;for(let e=0;e<t.sourceLayer.inboundNodes.length;++e)for(const r of t.sourceLayer.inboundNodes[e].outputTensors)if(r.id===t.id){n=e;break}e=t.sourceLayer.getOutputAt(n)}return e}class Dy extends Fg{constructor(t){if(super({}),this.containerNodes=new Set,this.name=t.name,null==this.name){const t=this.getClassName().toLowerCase();this.name=wg(t)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(t.inputs)?this.inputs=t.inputs.slice():this.inputs=[t.inputs],Array.isArray(t.outputs)?this.outputs=t.outputs.slice():this.outputs=[t.outputs],Jf(this.inputs).length!==this.inputs.length)throw new Of(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((t=>t.name))}`);Jf(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((t=>t.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const t of this.outputs){const e=t.sourceLayer,n=t.nodeIndex,r=t.tensorIndex;this.outputLayers.push(e),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(r)}for(const t of this.inputs){const e=t.sourceLayer,n=t.nodeIndex,r=t.tensorIndex;Pf(0===n,"input layer has >1 nodes"),Pf(0===r,"input layer has >1 tensors"),this.inputLayers.push(e),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(r)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let e=0;e<this.inputLayers.length;e++){const n=this.inputLayers[e];if(!(n instanceof Lg))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${t.inputs}. Input ${e} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(const t of this.outputLayers)this.outputNames.push(t.name);this.internalInputShapes=this.inputs.map((t=>t.shape)),this.internalOutputShapes=this.outputs.map((t=>t.shape));const e={},n={},r={},s={},a={},i=[],o=(t,e,n,r,s,u)=>{null!=r&&null!=s&&null!=u||(r=t.sourceLayer,s=t.nodeIndex,u=t.tensorIndex);const l=r.inboundNodes[s];if(-1!==n.indexOf(l))throw new Ff(`The tensor ${t.name} at layer "${r.name}" is part of a cycle.`);if(-1!==e.indexOf(l))return;this.containerNodes.add(Dy.nodeKey(r,s)),r.id in a||(a[r.id]=Object.keys(a).length),-1===n.indexOf(l)&&n.push(l);const c=l.inboundLayers.length;for(let t=0;t<c;t++){const r=l.inputTensors[t],s=l.inboundLayers[t],a=l.nodeIndices[t],i=l.tensorIndices[t];o(r,e,n,s,a,i)}for(e.push(l);n.indexOf(l)>=0;)n.splice(n.indexOf(l),1);i.push(l)},u=[],l=[];for(const t of this.outputs)o(t,u,l);const c=i.slice().reverse();for(const t of c){n[t.id]=t,t.id in e||(e[t.id]=0);let a=e[t.id];const i=null==r[t.outboundLayer.id]?0:r[t.outboundLayer.id];a=Math.max(a,i),r[t.outboundLayer.id]=a,s[t.outboundLayer.id]=t.outboundLayer,e[t.id]=a;for(let r=0;r<t.inboundLayers.length;r++){const s=t.inboundLayers[r],i=t.nodeIndices[r],o=s.inboundNodes[i],u=null==e[o.id]?0:e[o.id];e[o.id]=Math.max(a+1,u),n[o.id]=o}}const h={};for(const t in e){const r=e[t];r in h||(h[r]=[]),h[r].push(n[t])}const p={};for(const t in r){const e=r[t];e in p||(p[e]=[]),p[e].push(s[t])}let d=Object.keys(p).map((t=>parseInt(t,10))).sort(Yf);this.layers=[];for(const t of d){const e=p[t];e.sort(((t,e)=>{const n=a[t.id],r=a[e.id];return n<r?-1:n>r?1:0}));for(const t of e)t instanceof Dy&&this.internalContainerRefs.push(t),this.layers.push(t)}this.layersByDepth=p,d=Object.keys(h).map((t=>parseInt(t,10))).sort(Yf);const f=this.inputs.slice(),m=[];for(const t of d)for(const e of h[t]){const t=e.outboundLayer;if(null!=t){for(const n of e.inputTensors)if(-1===f.indexOf(n))throw new Ff(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${t.name}". The following previous layers were accessed without issue: ${m}`);for(const t of e.outputTensors)f.push(t);m.push(t.name)}}this.nodesByDepth=h;const g=this.layers.map((t=>t.name));for(const t of g){const e=g.filter((e=>e===t)).length;if(1!==e)throw new Ff(`The name "${t}" is used ${e} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new Dg({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((t=>null)),outputMasks:this.outputs.map((t=>null)),inputShapes:this.inputs.map((t=>t.shape)),outputShapes:this.outputs.map((t=>t.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const t={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const e of this.layers)t.numDisposedVariables+=e.dispose().numDisposedVariables;for(const e of this.internalContainerRefs)t.numDisposedVariables+=e.dispose().numDisposedVariables}return t.refCountAfterDispose=this._refCount,t}get trainable(){return this.trainable_}set trainable(t){this.layers.forEach((e=>{e._trainableWeights.forEach((e=>e.trainable=t))})),this.trainable_=t}get trainableWeights(){if(this._trainableWeights.length>0)throw new Of("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let t=[];for(const e of this.layers)t=t.concat(e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.layers)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const t of this.layers)e.push(...t.trainableWeights);return e.concat(t)}return t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(t,e=!0){const n={};let r=0;for(const t of this.layers)for(const e of t.weights){if(null!=n[e.originalName])throw new Of(`Duplicate weight name: ${e.originalName}`);n[e.originalName]=e,r++}const s=[];for(const r in t){let a=r;if(null==n[r]){const t=r.split("/");a=t.slice(0,-2).concat([t[t.length-1]]).join("/")}if(null!=n[a])s.push([n[a],t[r]]);else if(e)throw new Of(`Provided weight data has no target variable: ${r}`);delete n[a]}if(e){const t=[];for(const e in n)t.push(e);if(t.length>0)throw new Of(`${t.length} of ${r} weights are not set: ${t}`)}Tg(s)}updatedConfig(){const t=this.getConfig(),e={};return e.className=this.getClassName(),e.config=t,e.kerasVersion="tfjs-layers 2.7.0",e.backend="TensorFlow.js",e}toJSON(t,e=!0){const n=Sy(this.updatedConfig());return e?JSON.stringify(n):n}call(t,e){return ja((()=>{t=Uf(t);const n=new Ey;for(let e=0;e<this.inputs.length;++e)n.add(this.inputs[e],t[e]);return Ty(this.outputs,n,e)}))}computeMask(t,e){return ja((()=>{let n;return t=Uf(t),n=null==e?zf(null,t.length):Uf(e),this.runInternalGraph(t,n)[1]}))}computeOutputShape(t){const e=Ig(t);if(e.length!==this.inputLayers.length)throw new Of(`Invalid inputShape argument ${t}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let t=0;t<e.length;t++){const r=this.inputLayers[t],s=e[t];n[r.name+"_0_0"]=s}const r=Object.keys(this.nodesByDepth).map((t=>parseInt(t,10))).sort(Yf);if(r.length>1)for(const t of r){const e=this.nodesByDepth[t];for(const t of e){const e=t.outboundLayer;if(-1!==this.inputLayers.map((t=>t.id)).indexOf(e.id))continue;const r=[];for(let e=0;e<t.inboundLayers.length;e++){const s=t.inboundLayers[e],a=t.nodeIndices[e],i=t.tensorIndices[e],o=n[`${s.name}_${a}_${i}`];r.push(o)}const s=Ig(e.computeOutputShape(Vf(r))),a=e.inboundNodes.indexOf(t);for(let t=0;t<s.length;t++){n[`${e.name}_${a}_${t}`]=s[t]}}}const s=[],a=[];for(let t=0;t<this.outputLayers.length;t++){const e=this.outputLayers[t],n=this.outputLayersNodeIndices[t],r=this.outputLayersTensorIndices[t],s=`${e.name}_${n}_${r}`;a.push(s)}for(let t=0;t<a.length;t++){const e=a[t];Pf(e in n),s.push(n[e])}return Vf(s)}runInternalGraph(t,e){null==e&&(e=zf(null,t.length));const n={};for(let r=0;r<this.inputs.length;++r){const s=this.inputs[r],a=t[r],i=e[r];n[s.id]=[a,i]}const r=Object.keys(this.nodesByDepth).map((t=>parseInt(t,10))).sort(Yf);for(const t of r){const e=this.nodesByDepth[t];for(const t of e){const e=t.outboundLayer,r=t.inputTensors,s=t.outputTensors,a=new Array;for(const t of r)t.id in n&&a.push(n[t.id]);if(a.length===r.length){let r,i,o,u,l={};if(null!=t.callArgs&&(l=t.callArgs),1===a.length){const[t,n]=a[0];null==l.mask&&(l.mask=n),o=Uf(e.call(t,l)),u=Uf(e.computeMask(t,n)),r=[t],i=[n]}else r=a.map((t=>t[0])),i=a.map((t=>t[1])),null==l.mask&&(l.mask=i),o=Uf(e.call(r,l)),u=Uf(e.computeMask(r,i));if(e.activityRegularizer)throw new Lf("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let t=0;t<s.length;++t){const e=s[t],r=o[t],a=u[t];n[e.id]=[r,a]}}}}const s=[],a=[],i=[];for(const t of this.outputs){Pf(t.id in n,`Could not compute output ${t.name} : ${t.id}`);const[e,r]=n[t.id];i.push(e.shape),s.push(e),a.push(r)}return[s,a,i]}buildNodeConversionMap(t){const e={};let n;for(const t of this.layers){n=t instanceof Dy?1:0;for(let r=0;r<t.inboundNodes.length;r++){const s=Dy.nodeKey(t,r);this.containerNodes.has(s)&&(e[s]=n,n+=1)}}return e}getLayer(t,e){if(null!=e){if(this.layers.length<=e)throw new Of(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}if(null==t)throw new Of("Provide either a layer name or layer index");for(const e of this.layers)if(e.name===t)return e;throw new Of(`No such layer: ${t}`)}calculateLosses(){return ja((()=>{const t=[];for(const e of this.layers)for(let n=0;n<e.inboundNodes.length;++n){const r=Dy.nodeKey(e,n);this.containerNodes.has(r)&&t.push(...e.calculateLosses())}return t}))}getConfig(){const t={name:this.name},e=this.buildNodeConversionMap(this.layers),n=[];for(const t of this.layers){const r=t.getClassName(),s=t.getConfig(),a=[];for(let n=0;n<t.inboundNodes.length;n++){const r=t.inboundNodes[n],s=Dy.nodeKey(t,n);let i={};if(this.containerNodes.has(s)){if(r.callArgs)try{JSON.stringify(r.callArgs),i=r.callArgs}catch(e){console.warn(`Layer ${t.name} was passed non-serializable keyword arguments: ${r.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),i={}}if(r.inboundLayers.length>0){const t=[];for(let n=0;n<r.inboundLayers.length;n++){const s=r.inboundLayers[n],a=r.nodeIndices[n],o=r.tensorIndices[n];let u=e[Dy.nodeKey(s,a)];null==u&&(u=0),t.push([s.name,u,o,i])}a.push(t)}}}const i={};i.name=t.name,i.className=r,i.config=s,i.inboundNodes=a,n.push(i)}t.layers=n;const r=[];for(let t=0;t<this.inputLayers.length;t++){const n=this.inputLayers[t],s=this.inputLayersNodeIndices[t],a=Dy.nodeKey(n,s);if(!this.containerNodes.has(a))continue;let i=e[a];null==i&&(i=0);const o=this.inputLayersTensorIndices[t];r.push([n.name,i,o])}t.inputLayers=r;const s=[];for(let t=0;t<this.outputLayers.length;t++){const n=this.outputLayers[t],r=this.outputLayersNodeIndices[t],a=Dy.nodeKey(n,r);if(!this.containerNodes.has(a))continue;let i=e[a];null==i&&(i=0);const o=this.outputLayersTensorIndices[t];s.push([n.name,i,o])}return t.outputLayers=s,t}static fromConfig(t,e,n={},r=!1){const s={},a={};function i(t,e){t.name in a?a[t.name].push(e):a[t.name]=[e]}function o(t,e){const n=[];let r;for(const a of e){const o=a[0],u=a[1],l=a[2];if(r=null==a[3]?{}:a[3],!(o in s))return void i(t,e);const c=s[o];if(c.inboundNodes.length<=u)return void i(t,e);const h=c.inboundNodes[u];n.push(h.outputTensors[l])}n.length>0&&t.apply(Vf(n),r)}function u(t){const n=t.name,a=Yg(t,null!=e.customObjects?e.customObjects:{});a.setFastWeightInitDuringBuild(r),s[n]=a;t.inboundNodes.forEach((t=>{if(!(t instanceof Array))throw new Of(`Corrupted configuration, expected array for nodeData: ${t}`);i(a,t)}))}const l=e.name,c=e.layers;for(const t of c)u(t);for(;!Zf(a);)for(const t of c){const e=s[t.name];if(e.name in a){const t=a[e.name];delete a[e.name];for(const n of t)o(e,n)}}const h=[],p=[],d=e.inputLayers;for(const t of d){const e=t[0],n=t[1],r=t[2];Pf(e in s);const a=s[e].inboundNodes[n].outputTensors;h.push(a[r])}const f=e.outputLayers;for(const t of f){const e=t[0],n=t[1],r=t[2];Pf(e in s);const a=s[e].inboundNodes[n].outputTensors;p.push(a[r])}return new t({inputs:h,outputs:p,name:l})}get stateful(){if(this._stateful)throw new Of("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const t of this.layers)if(t.stateful)return!0;return!1}resetStates(){ja((()=>{this.layers.forEach((t=>{t.stateful&&t.resetStates()}))}))}}function My(t,e){return function(t,e,n){const r=e.length;if(null==t||Array.isArray(t)&&0===t.length)return e.map((t=>null));if(1===r)return Array.isArray(t)&&1===t.length?t:"object"==typeof t&&e[0]in t?[t[e[0]]]:[t];if(Array.isArray(t)){if(t.length!==r)throw new Error(`Provided ${n} is an array of ${t.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return t}if("object"==typeof t&&Object.keys(t).length>0&&"object"==typeof t[Object.keys(t)[0]]){const n=[];return e.forEach((e=>{e in t?n.push(t[e]):n.push(null)})),n}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${e} keys. Provided ${n} not understood: ${JSON.stringify(t)}`)}(t,e,"classWeight")}async function Fy(t,e,n,r){if(null!=e||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const e=ja((()=>{if(1===t.shape.length)return t.clone();if(2===t.shape.length){if(t.shape[1]>1){const e=1;return t.argMax(e)}if(1===t.shape[1])return t.reshape([t.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${t.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${t.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),r=Array.from(await e.data());qa(e);const s=[];return r.forEach((t=>{if(null==n[t])throw new Error(`classWeight must contain all classes in the training data. The class ${t} exists in the data but not in classWeight`);s.push(n[t])})),_u(s,"float32")}return null}function Oy(t,e){return Mo(t,e)}function Ly(t,e){let n,r;const s=e;n=s.xs,r=s.ys,u(null!=n&&null!=r,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${e}`));const a=By("input",t.inputNames,n),i=By("output",t.outputNames,r),o=a[0].shape[0];u(a.length===t.inputs.length,(()=>`LayersModel has ${t.inputs.length} inputs, but the dataset provides ${a.length} inputs.  (Expected input keys: ${JSON.stringify(t.inputNames)})`)),u(i.length===t.outputs.length,(()=>`LayersModel has ${t.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(t.outputNames)})`));for(let e=0;e<a.length;e++)u(a[e].shape[0]===o,(()=>`Batch size mismatch: input ${t.inputNames[e]} has ${a[e].shape[0]}; expected  ${o} based on input ${t.inputNames[0]}.`));for(let e=0;e<i.length;e++)u(i[e].shape[0]===o,(()=>`Batch size mismatch: output ${t.outputNames[e]} has ${i[e].shape[0]}; expected  ${o} based on input ${t.inputNames[0]}.`));return{xs:a,ys:i}}function By(t,e,n){if(n instanceof Hn)return[n];if(Array.isArray(n))return u(n.length===e.length,(()=>`Received an array of ${n.length} Tensors, but expected ${e.length} to match the ${t} keys ${e}.`)),n;{const r=[];for(const s of e){if(null==n[s])throw new Of(`The feature data generated by the dataset lacks the required ${t} key '${s}'.`);r.push(n[s])}return r}}async function zy(t,e,n){const r=null!=n.batchesPerEpoch;if(u(null!=t.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),u(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),u(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),u(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),u(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),t.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");t.isTraining=!0;try{const s=null!=n.validationData;let a,i;if(s)if(Py(n.validationData))u(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{const t=function(t){if(3===t.length)throw new Lf("Validation with sample weights is not implemented yet.");return{xs:t[0],ys:t[1]}}(n.validationData);a=t.xs,i=t.ys}const o=t.makeTrainFunction(),l=t.getDedupedMetricsNames();let c;c=s?l.slice().concat(l.map((t=>"val_"+t))):l.slice();const h=qg(n.callbacks,n.yieldEvery),p=null==n.verbose?1:n.verbose,{callbackList:d,history:f}=Xg(h,p,n.epochs,null,null,function(t,e){let n=null;null!=e.batchesPerEpoch?n=e.batchesPerEpoch:Number.isFinite(t.size)&&(n=t.size);return n}(e,n),null,s,c);d.setModel(t),t.history=f,await d.onTrainBegin(),t.stopTraining_=!1;let m=null==n.initialEpoch?0:n.initialEpoch,g=await e.iterator();for(;m<n.epochs;){const u={};await d.onEpochBegin(m);let c=0,h=0;for(r||(g=await e.iterator());!r||c<n.batchesPerEpoch;){const e=await g.next();if(r&&e.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${c} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=e.value){const{xs:r,ys:s}=Ly(t,e.value),a={};a.batch=h,a.size=r[0].shape[0],await d.onBatchBegin(h,a);const i=[];if(null!=n.classWeight){const e=My(n.classWeight,t.outputNames);for(let t=0;t<e.length;++t)i.push(await Fy(s[t],null,e[t]))}const u=r.concat(s).concat(i),p=o(u);qa(u);for(let t=0;t<l.length;++t){const e=l[t],n=p[t];a[e]=n,Ka(n)}await d.onBatchEnd(h,a),zg(a),h++,c++}if(r?c>=n.batchesPerEpoch:e.done){if(s){let e;e=Py(n.validationData)?Uf(await t.evaluateDataset(n.validationData,{batches:n.validationBatches})):Uf(t.evaluate(a,i,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<t.metricsNames.length;++n)u[`val_${t.metricsNames[n]}`]=e[n]}break}if(t.stopTraining_)break}if(await d.onEpochEnd(m,u),m++,t.stopTraining_)break}return await d.onTrainEnd(),await t.history.syncData(),t.history}finally{t.isTraining=!1}}function Py(t){return"function"==typeof t.iterator}function Wy(t){u(t>0&&Number.isInteger(t),(()=>`batchSize is required to be a positive integer, but got ${t}`))}function Vy(t,e,n){return null==t?[null]:Array.isArray(t)?t.map((t=>Fm(t,e,n-e))):Fm(t,e,n-e)}function Uy(t,e){return ja((()=>null==t?null:Array.isArray(t)?t.map((t=>Uy(t,e))):Um(t,"int32"===e.dtype?e:e.toInt())))}function Gy(t,e){const n=[];let r=0,s=null;for(;r<t;)s=r+e,s>=t&&(s=t),n.push([r,s]),r=s;return n}async function Hy(t,e,n,r={}){if(t.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let s,i,o,u,l,c,h;t.isTraining=!0;try{const p=null==r.batchSize?32:r.batchSize;Wy(p);const d=!1,f=await t.standardizeUserData(e,n,r.sampleWeight,r.classWeight,d,p);s=f[0],i=f[1],h=f[2];let m,g=!1;if(null!=r.validationData&&r.validationData.length>0){if(g=!0,2!==r.validationData.length)throw 3===r.validationData.length?new Lf("validationData including sample weights is not supported yet."):new Of(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${r.validationData} is invalid.`);o=r.validationData[0],u=r.validationData[1];const e=!0,n=await t.standardizeUserData(o,u,null,null,e,p);l=n[0],c=n[1],m=l.concat(c)}else if(null!=r.validationSplit&&r.validationSplit>0&&r.validationSplit<1){g=!0;const t=Math.floor(s[0].shape[0]*(1-r.validationSplit)),e=s[0].shape[0];l=Vy(s,t,e),s=Vy(s,0,t),c=Vy(i,t,e),i=Vy(i,0,t),m=l.concat(c)}else null!=r.validationSteps&&(g=!0);const y=s.concat(i).concat(h);t.checkTrainableWeightsConsistency();const b=t.makeTrainFunction(),x=t.getDedupedMetricsNames();let w,v;g?(t.makeTestFunction(),w=t.testFunction,v=x.slice().concat(x.map((t=>"val_"+t)))):(w=null,m=[],v=x.slice());const I=qg(r.callbacks,r.yieldEvery);return await async function(t,e,n,r,s,i,o,u,l,c,h,p,d,f,m){null==s&&(s=32),null==i&&(i=1),null==h&&(h=!0),null==d&&(d=0);let g=!1;if(null!=l&&null!=c&&(g=!0),null!=m&&(g=!0,null==f))throw new Of("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const y=t.checkNumSamples(n,s,f,"steps_per_epoch");let b;null!=y&&(b=_m(0,y)),null==o&&(o=1);const{callbackList:x,history:w}=Xg(u,o,i,d,y,f,s,g,p);x.setModel(t),t.history=w,await x.onTrainBegin(),t.stopTraining_=!1;for(let o=d;o<i;++o){await x.onEpochBegin(o);const i={};if(null!=f)throw new Lf("stepsPerEpoch mode is not implemented yet.");{if("batch"===h)throw new Lf("batch shuffling is not implemneted yet");h&&a(b);const o=_u(b),u=Gy(y,s);for(let a=0;a<u.length;++a){const h={};if(await x.onBatchBegin(a,h),ja((()=>{const p=u[a][0],d=u[a][1],f=Fm(o,p,d-p);h.batch=a,h.size=d-p;const m=Uy(n,f),y=e(m);for(let t=0;t<r.length;++t){const e=r[t],n=y[t];h[e]=n,Ka(n)}if(a===u.length-1&&g){const e=t.testLoop(l,c,s);for(let t=0;t<r.length;++t){const n=r[t],s=e[t];Ka(s),i["val_"+n]=s}}})),await x.onBatchEnd(a,h),zg(h),t.stopTraining_)break}o.dispose()}if(await x.onEpochEnd(o,i),t.stopTraining_)break}return await x.onTrainEnd(),await t.history.syncData(),t.history}(t,b,y,x,p,r.epochs,r.verbose,I,w,m,r.shuffle,v,r.initialEpoch,null,null)}finally{t.isTraining=!1,qy(s,e),qy(i,n),qy(l,o),qy(c,u),null!=h&&qa(h)}}function jy(t){const e=[];t instanceof Hn&&(t=[t]);for(let n=0;n<t.length;++n){const r=t[n];if(1===r.rank)e.push(Mm(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");e.push(r)}}return e}function qy(t,e){if(null==t)return;const n=[];if(e instanceof Hn)n.push(e.id);else if(Array.isArray(e))e.forEach((t=>n.push(t.id)));else if(null!=e)for(const t in e){const r=e[t];n.push(r.id)}const r=[];if(t instanceof Hn)-1===n.indexOf(t.id)&&r.push(t);else if(Array.isArray(t))t.forEach((t=>{-1===n.indexOf(t.id)&&r.push(t)}));else if(null!=t)for(const e in t){const s=t[e];-1===n.indexOf(s.id)&&r.push(s)}r.forEach((t=>{t.isDisposed||t.dispose()}))}function Ky(t){return Array.isArray(t)}function Xy(t){return!function(t){return t instanceof Hn}(t)&&!Ky(t)}function Yy(t,e,n,r=!0,s=""){if(null==e||0===e.length){if(null!=t){let e=!1;if(Ky(t)&&t.length>0)e=!0;else if(Xy(t)){for(const n in t)if(t.hasOwnProperty(n)){e=!0;break}}else e=!0;if(e)throw new Of(`Error when checking model ${s} expected no data, but got ${t}`)}return[]}if(null==t)return e.map((t=>null));let a;if(Xy(t)){t=t,a=[];for(const n of e){if(null==t[n])throw new Of(`No data provided for "${n}". Need data for each key in: ${e}`);a.push(t[n])}}else if(Ky(t)){if((t=t).length!==e.length)throw new Of(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${e.length} Tensor(s), but instead got the following list of Tensor(s): ${t}`);a=t}else{if(t=t,e.length>1)throw new Of(`The model ${s} expects ${e.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${t.shape}`);a=[t]}if(a=jy(a),null!=n)for(let t=0;t<e.length;++t){if(null==n[t])continue;const i=a[t];if(i.shape.length!==n[t].length)throw new Of(`Error when checking ${s}: expected ${e[t]} to have ${n[t].length} dimension(s). but got array with shape ${i.shape}`);for(let a=0;a<n[t].length;++a){if(0===a&&!r)continue;const o=i.shape[a],u=n[t][a];if(null!=u&&u>=0&&o!==u)throw new Of(`Error when checking ${s}: expected ${e[t]} to have shape [${n[t]}], but got array with shape [${i.shape}].`)}}return a}function Jy(t,e,n,r=!0,s=""){let a;if(Array.isArray(t)){if(t.length!==e.length)throw new Of(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${e.length} Tensor(s), but instead got ${t.length} Tensors(s).`);a=t}else{if(e.length>1)throw new Of(`The model expects ${e.length} ${s} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(t.shape)}.`);a=[t]}if(null!=n)for(let t=0;t<e.length;++t){if(null==n[t])continue;const i=a[t];if(i.shape.length!==n[t].length)throw new Of(`Error when checking ${s}: expected ${e[t]} to have ${n[t].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let a=0;a<n[t].length;++a){if(0===a&&!r)continue;const o=i.shape[a],u=n[t][a];if(null!=u&&u!==o)throw new Of(`Error when checking ${s}: expected ${e[t]} to have shape ${JSON.stringify(n[t])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}class Zy extends Dy{constructor(t){super(t),this.isTraining=!1}summary(t,e,n=console.log){if(!this.built)throw new Of("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");xy(this,t,e,n)}compile(t){if(null==t.loss&&(t.loss=[]),this.loss=t.loss,"string"==typeof t.optimizer)this.optimizer_=function(t){const e={Adagrad:()=>Pc.adagrad(.01),Adadelta:()=>Pc.adadelta(1,.95,Df()),Adam:()=>Pc.adam(.001,.9,.999,Df()),Adamax:()=>Pc.adamax(.002,.9,.999,Df(),0),RMSProp:()=>Pc.rmsprop(.001,.9,0,Df()),SGD:()=>Pc.sgd(.01)};if(e.adagrad=e.Adagrad,e.adadelta=e.Adadelta,e.adam=e.Adam,e.adamax=e.Adamax,e.rmsprop=e.RMSProp,e.sgd=e.SGD,t in e)return e[t]();throw new Of(`Unknown Optimizer ${t}`)}(t.optimizer),this.isOptimizerOwned=!0;else{if(!(t.optimizer instanceof Rc))throw new Of("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=t.optimizer,this.isOptimizerOwned=!1}let e=[];if(Array.isArray(t.loss)||"string"==typeof t.loss||"function"==typeof t.loss)if(Array.isArray(t.loss)){if(t.loss.length!==this.outputs.length)throw new Of(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${t.loss}.`);const n=t.loss;e=n.map((t=>iy(t)))}else{const n=iy(t.loss);this.outputs.forEach((t=>{e.push(n)}))}else{t.loss=t.loss;for(const e in t.loss)if(-1===this.outputNames.indexOf(e))throw new Of(`Unknown entry in loss dictionary: "${e}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==t.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),e.push(iy(t.loss[n]))}this.lossFunctions=e,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let t=0;t<this.outputs.length;++t){const e=this.internalOutputShapes[t],n=this.outputNames[t];this.feedOutputNames.push(n),this.feedOutputShapes.push(e),this.feedLossFns.push(this.lossFunctions[t])}const n=[];this.metrics=t.metrics,this.metricsNames=["loss"],this.metricsTensors=[],km("loss",(()=>{for(let t=0;t<this.outputs.length;++t){if(-1!==n.indexOf(t))continue;const e=this.lossFunctions[t];this.outputs.length>1&&(this.metricsTensors.push([e,t]),this.metricsNames.push(this.outputNames[t]+"_loss"))}}));const r=function(t,e){if(null==t||Array.isArray(t)&&0===t.length)return e.map((t=>[]));let n;if("string"==typeof t||"function"==typeof t)n=[t];else{if(!Array.isArray(t)&&"object"!=typeof t)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${t}`);n=t}if(Array.isArray(n))return e.map((t=>n));{const t=[];for(const r of e){let e=n.hasOwnProperty(r)?n[r]:[];Array.isArray(e)||(e=[e]),t.push(e)}return t}}(t.metrics,this.outputNames),s=(t,e,n)=>{this.outputNames.length>1&&(e=this.outputNames[t]+"_"+e),this.metricsNames.push(e),this.metricsTensors.push([n,t])};km("metric",(()=>{for(let t=0;t<this.outputs.length;++t){if(-1!==n.indexOf(t))continue;(e=>{let n,r,a;for(const i of e){if("string"==typeof i&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(i)){const e=this.internalOutputShapes[t];let s;1===e[e.length-1]||this.lossFunctions[t]===ry?-1!==["accuracy","acc"].indexOf(i)?r=oy:-1!==["crossentropy","ce"].indexOf(i)&&(r=ly):this.lossFunctions[t]===ny?-1!==["accuracy","acc"].indexOf(i)?r=cy:-1!==["crossentropy","ce"].indexOf(i)&&(r=py):-1!==["accuracy","acc"].indexOf(i)?r=uy:-1!==["crossentropy","ce"].indexOf(i)&&(r=hy),-1!==["accuracy","acc"].indexOf(i)?s="acc":-1!==["crossentropy","ce"].indexOf(i)&&(s="ce"),a=r,n=""+s}else{const t=fy(i);a=t,n=""+my(i)}let e;km(n,(()=>{e=a})),s(t,n,e)}})(r[t])}})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(t,e,n={}){const r=null==n.batchSize?32:n.batchSize;Wy(r);const s=this.standardizeUserDataXY(t,e,!0,r);try{const a=s[0].concat(s[1]);this.makeTestFunction();const i=this.testFunction;return Vf(this.testLoop(i,a,r,n.verbose,n.steps))}finally{qy(s[0],t),qy(s[1],e)}}async evaluateDataset(t,e){return this.makeTestFunction(),async function(t,e,n){const r=null!=(n=n||{}).batches,s=t.testFunction;let a=[];if(n.verbose>0)throw new Lf("Verbose mode is not implemented yet.");u(!r||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));const i="function"==typeof e.next?e:await e.iterator();let o=0,l=0;for(;!r||l<n.batches;){const e=await i.next();if(a=ja((()=>{if(e.value){const{xs:n,ys:r}=Ly(t,e.value),i=n.concat(r),u=ja((()=>s(i)));if(qa(i),0===l)for(let t=0;t<u.length;++t)a.push(Fo(0));const c=i[0].shape[0];for(let t=0;t<u.length;++t){const e=u[t],n=a[t];a[t]=ja((()=>ti(a[t],Mo(c,e)))),l>0&&qa(n)}qa(u),o+=c,++l}return a})),e.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let t=0;t<a.length;++t){const e=a[t];a[t]=oo(a[t],o),qa(e)}return Vf(a)}(this,t,e)}checkNumSamples(t,e,n,r="steps"){let s;if(null!=n){if(s=null,null!=e)throw new Of(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${e}`)}else{if(null==t)throw new Of(`Either the input data should have a defined shape, or ${r} shoud be specified.`);s=Array.isArray(t)?t[0].shape[0]:t.shape[0]}return s}execute(t,e){if(Array.isArray(e)&&0===e.length)throw new Of("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(e),r=n?e:[e],s=this.retrieveSymbolicTensors(r),a=new Ey;if(t instanceof Hn&&(t=[t]),Array.isArray(t)){if(t.length!==this.inputs.length)throw new Of(`The number of inputs provided (${t.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let e=0;e<this.inputs.length;++e)a.add(this.inputs[e],t[e])}else for(const e of this.inputs){const n=t[e.name];if(null==n)throw new Of(`No value is provided for the model's input ${e.name}`);a.add(e,n)}const i=Ty(s,a);return n?i:i[0]}retrieveSymbolicTensors(t){const e=zf(null,t.length);let n=t.length;for(const r of this.layers){const s=Array.isArray(r.output)?r.output:[r.output],a=s.map((t=>t.name));for(let r=0;r<t.length;++r){const i=a.indexOf(t[r]);if(-1!==i&&(e[r]=s[i],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw e.forEach(((e,r)=>{null==e&&n.push(t[r])})),new Of(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return e}predictLoop(t,e=32,n=!1){return ja((()=>{const r=this.checkNumSamples(t);if(n)throw new Lf("Verbose predictLoop() is not implemented yet.");const s=Gy(r,e),a=this.outputs.map((t=>[]));for(let e=0;e<s.length;++e){ja((()=>{const n=s[e][0],r=s[e][1],a=Vy(t,n,r),i=[];if(Array.isArray(a))for(let t=0;t<a.length;++t)i.push({key:this.inputs[t],value:a[t]});else i.push({key:this.inputs[0],value:a});const o=new Ey(i);return Ty(this.outputs,o)})).forEach(((t,e)=>a[e].push(t)))}return Vf(a.map((t=>Gi(t,0))))}))}predict(t,e={}){const n=jy(t);Jy(n,this.inputNames,this.feedInputShapes,!1);try{const r=null==e.batchSize?32:e.batchSize;return Wy(r),this.predictLoop(n,r)}finally{qy(n,t)}}predictOnBatch(t){Jy(t,this.inputNames,this.feedInputShapes,!0);const e=(Array.isArray(t)?t[0]:t).shape[0];return this.predictLoop(t,e)}standardizeUserDataXY(t,e,n=!0,r){if(null==this.optimizer_)throw new Ff("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const s=[];for(let t=0;t<this.feedOutputShapes.length;++t){const e=this.feedOutputShapes[t];this.feedLossFns[t]===ny?s.push(e.slice(0,e.length-1).concat([1])):s.push(e)}if(function(t,e,n){const r=Jf(t.map((t=>t.shape[0])));r.sort();const s=Jf(e.map((t=>t.shape[0])));if(s.sort(),r.length>1)throw new Of(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((t=>t.shape)))}`);if(s.length>1)throw new Of(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((t=>t.shape)))}`);if(r.length>0&&s.length>0&&!d(r,s))throw new Of(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${s[0]} target sample(s).`)}(t=Yy(t,this.feedInputNames,this.feedInputShapes,!1,"input"),e=Yy(e,this.feedOutputNames,s,!1,"target")),function(t,e,n){const r=[Zg,ry,ey];for(let s=0;s<t.length;++s){const a=t[s],i=e[s],o=n[s];if(null!=i){if(i===ey&&1===a.shape[a.shape.length-1])throw new Of(`You are passing a target array of shape ${a.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(i)){const t=a.shape.slice(1),e=o.slice(1);for(let n=0;n<t.length;++n){const r=t[n],s=e[n];if(null!=s&&r!==s)throw new Of(`A target Tensor with shape ${a.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(e,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=r&&r>0&&t[0].shape[0]%r!=0)throw new Of(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${t[0].shape[0]} sample(s).`);return[t,e]}async standardizeUserData(t,e,n,r,s=!0,a){const[i,o]=this.standardizeUserDataXY(t,e,s,a);if(null!=n)throw new Error("sample weight is not supported yet.");let u=null;if(null!=r){const t=My(r,this.outputNames);u=[];for(let e=0;e<t.length;++e)u.push(await Fy(o[e],null,t[e]))}return[i,o,u]}testLoop(t,e,n,r=0,s){return ja((()=>{const a=this.checkNumSamples(e,n,s,"steps"),i=[];if(r>0)throw new Lf("Verbose mode is not implemented yet.");if(null!=s)throw new Lf("steps mode in testLoop() is not implemented yet");{const r=Gy(a,n),s=_u(_m(0,a));for(let n=0;n<r.length;++n){const a=r[n][0],o=r[n][1],u=Fm(s,a,o-a),l=Uy(e,u),c=t(l);if(0===n)for(let t=0;t<c.length;++t)i.push(Fo(0));for(let t=0;t<c.length;++t){const e=c[t];i[t]=ti(i[t],Mo(o-a,e))}}for(let t=0;t<i.length;++t)i[t]=oo(i[t],a)}return i}))}getDedupedMetricsNames(){const t=this.metricsNames,e=[];for(let n=0;n<t.length;++n){const r=t[n];let s=r;if(Wf(t,r)>1){s+=`_${Wf(t.slice(0,n),r)}`}e.push(s)}return e}makeTrainFunction(){return t=>{const e=[],n=t.slice(0,this.inputs.length),r=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=t.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),a=[],i=this.collectedTrainableWeights.map((t=>t.read()));return[this.optimizer_.minimize((()=>{const t=[];for(let e=0;e<this.inputs.length;++e)t.push({key:this.inputs[e],value:n[e]});const i=new Ey(t),o=Ty(this.outputs,i,{training:!0});let u;for(let t=0;t<this.lossFunctions.length;++t){let n=(0,this.lossFunctions[t])(r[t],o[t]);null!=s[t]&&(n=Oy(n,s[t]));const a=au(n);e.push(a),u=0===t?n:ti(u,n)}for(let t=0;t<this.metricsTensors.length;++t){let n;if(this.outputs.length>1&&t<this.outputs.length)n=e[t];else{const e=this.metricsTensors[t][0],s=this.metricsTensors[t][1];n=au(e(r[s],o[s]))}Ka(n),a.push(n)}return u=au(u),this.calculateLosses().forEach((t=>{u=ti(u,t)})),u}),!0,i)].concat(a)}}makeTestFunction(){this.testFunction=t=>ja((()=>{const e=[];let n;const r=t.slice(0,this.inputs.length),s=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let t=0;t<this.inputs.length;++t)a.push({key:this.inputs[t],value:r[t]});const i=new Ey(a),o=Ty(this.outputs,i);for(let t=0;t<this.lossFunctions.length;++t){const r=this.lossFunctions[t],a=au(r(s[t],o[t]));n=0===t?a:ti(n,a),e.push(n)}for(let t=0;t<this.metricsTensors.length;++t){const n=this.metricsTensors[t][0],r=this.metricsTensors[t][1],a=au(n(s[r],o[r]));e.push(a)}return e}))}async fit(t,e,n={}){return Hy(this,t,e,n)}async fitDataset(t,e){return zy(this,t,e)}async trainOnBatch(t,e){const n=await this.standardizeUserData(t,e),r=n[0],s=n[1],a=this.makeTrainFunction()(r.concat(s)),i=[];for(const t of a){const e=await t.data();i.push(e[0])}return qa(a),Vf(i)}getNamedWeights(t){const e=[],n=null!=t&&t.trainableOnly,r=n?this.trainableWeights:this.weights,s=this.getWeights(n);for(let t=0;t<r.length;++t)n&&!r[t].trainable||e.push({name:r[t].originalName,tensor:s[t]});return e}set stopTraining(t){this.stopTraining_=t}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(t){this.optimizer_!==t&&(this.optimizer_=t,this.isOptimizerOwned=!1)}dispose(){const t=super.dispose();if(0===t.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const e=Ha().numTensors;this.optimizer_.dispose(),t.numDisposedVariables+=e-Ha().numTensors}return t}getLossIdentifiers(){let t;if("string"==typeof this.loss)t=Gf(this.loss);else if(Array.isArray(this.loss)){for(const t of this.loss)if("string"!=typeof t)throw new Error("Serialization of non-string loss is not supported.");t=this.loss.map((t=>Gf(t)))}else{const e=Object.keys(this.loss);t={};const n=this.loss;for(const r of e){if("string"!=typeof n[r])throw new Error("Serialization of non-string loss is not supported.");t[r]=Gf(n[r])}}return t}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[Gf(my(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((t=>Gf(my(t))));{const t={};for(const e in this.metrics)t[e]=Gf(my(this.metrics[e]));return t}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(t){if(null!=t.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=t.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=t.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const e=Yg(Ny(t.optimizer_config));let n,r;if("string"==typeof t.loss)n=Hf(t.loss);else if(Array.isArray(t.loss))n=t.loss.map((t=>Hf(t)));else if(null!=t.loss){n={};for(const e in t.loss)n[e]=Hf(t.loss[e])}if(Array.isArray(t.metrics))r=t.metrics.map((t=>Hf(t)));else if(null!=t.metrics){r={};for(const e in t.metrics)r[e]=Hf(t.metrics[e])}this.compile({loss:n,metrics:r,optimizer:e})}async save(t,e){if("string"==typeof t){const e=Ms(t);if(0===e.length)throw new Of(`Cannot find any save handlers for URL '${t}'`);if(e.length>1)throw new Of(`Found more than one (${e.length}) save handlers for URL '${t}'`);t=e[0]}if(null==t.save)throw new Of("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await Es(this.getNamedWeights(e)),r={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:"TensorFlow.js tfjs-layers v2.7.0",convertedBy:null};if(null!=e&&e.includeOptimizer&&null!=this.optimizer){r.trainingConfig=this.getTrainingConfig();const t="optimizer",{data:e,specs:s}=await Es(await this.optimizer.getWeights(),t);n.specs.push(...s),n.data=As([n.data,e])}if(null!=this.userDefinedMetadata){const t=!0;yy(this.userDefinedMetadata,this.name,t),r.userDefinedMetadata=this.userDefinedMetadata}return r.weightData=n.data,r.weightSpecs=n.specs,t.save(r)}setUserDefinedMetadata(t){yy(t,this.name),this.userDefinedMetadata=t}getUserDefinedMetadata(){return this.userDefinedMetadata}}Zy.className="Model",Va(Zy);class Qy extends Zy{}Qy.className="Functional",Va(Qy);class tb extends Zy{constructor(t){if(super({inputs:[],outputs:[]}),t=t||{},this.trainable=!0,this.built=!1,this.name=null!=t.name?t.name:wg("sequential_"),null!=t.layers)for(const e of t.layers)this.add(e)}checkShape(t){if(t.inboundNodes[0].outputTensors[0].shape.some((t=>t<0)))throw new Of(`Negative dimension size caused by adding layer ${t.name} with input shape [${t.inboundNodes[0].inputTensors[0].shape}]`)}add(t){const e=t instanceof tb||t instanceof Zy;let n;if(e){if(n=t,1!==n.outputs.length)throw new Of("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new Of("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===t.inboundNodes.length){if(null==t.batchInputShape)throw new Of("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const e=function(t){if(null==t.batchShape&&null==t.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=t.batchShape&&null!=t.shape)throw new Of("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let e=t.batchShape;null!=t.shape&&null==e&&(e=[null].concat(t.shape));let n=t.dtype;return null==n&&(n="float32"),new Lg({batchInputShape:e,name:t.name,dtype:n,sparse:t.sparse}).inboundNodes[0].outputTensors[0]}({batchShape:t.batchInputShape,dtype:t.dtype,name:t.name+"_input"});t.apply(e)}if(e)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==t.inboundNodes.length)throw new Of(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${t.name} which has ${t.inboundNodes.length} pre-existing inbound connections.`);if(1!==t.inboundNodes[0].outputTensors.length)throw new Of("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[t.inboundNodes[0].outputTensors[0]],this.inputs=Og(this.outputs[0])}this.inboundNodes=[],new Dg({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:zf(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((t=>t.shape)),outputShapes:this.outputs[0].shape})}else{const e=t.apply(this.outputs[0]);if(Array.isArray(e))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[e],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(t),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const t=this.layers.length-1;this.layers[t].outboundNodes=[],this.outputs=[this.layers[t].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(t,e){return null==this.model&&this.build(),this.model.call(t,e)}build(t){if(Ng(t),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Zy({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(t,e,n=console.log){this.built||this.build(),super.summary(t,e,n)}setWeights(t){null==this.model&&this.build(),this.model.setWeights(t)}evaluate(t,e,n={}){if(!this.built)throw new Ff("The model needs to be compiled before being used.");return this.model.evaluate(t,e,n)}async evaluateDataset(t,e){if(!this.built)throw new Ff("The model needs to be compiled before being used.");return this.model.evaluateDataset(t,e)}predict(t,e={}){return null==this.model&&this.build(),this.model.predict(t,e)}predictOnBatch(t){return null==this.model&&this.build(),this.model.predictOnBatch(t)}compile(t){this.build(),this.model.compile(t),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(t){this.model.optimizer=t}async fit(t,e,n={}){if(!this.built)throw new Ff("The model needs to be compiled before being used.");return this.model.fit(t,e,n)}async fitDataset(t,e){if(!this.built)throw new Ff("The model needs to be compiled before being used.");return this.model.fitDataset(t,e)}async trainOnBatch(t,e){return this.model.trainOnBatch(t,e)}static fromConfig(t,e,n={},r=!1){let s,a={};if(e instanceof Array){if(null==e[0].className||"Merge"===e[0].className)throw new Of("Legacy serialization format not supported yet.");s=e}else u(null!=e.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),s=e.layers,delete e.layers,a=e;const i=new t(a);if(!(i instanceof tb))throw new Lf(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(const t of s){const e=Yg(t,void 0,r);r&&e.setFastWeightInitDuringBuild(!0),i.add(e)}return i}set stopTraining(t){if(null==this.model)throw new Of("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=t}get stopTraining(){if(null==this.model)throw new Of("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const t=[];for(const e of this.layers){const n={};n.className=e.getClassName(),n.config=e.getConfig(),t.push(n)}return{name:this.name,layers:t}}}tb.className="Sequential",Va(tb);class eb extends Pa{getConfig(){return{}}}class nb extends eb{apply(t,e=1){return function(t,e=1){if(1!==e)throw new Lf(`Support for alpha values other than 1 (${e}) is not implemented yet.`);return go(t)}(t,e)}}nb.className="elu",Va(nb);class rb extends eb{apply(t){return zu(t)}}rb.className="selu",Va(rb);class sb extends eb{apply(t){return Fu(t)}}sb.className="relu",Va(sb);class ab extends eb{apply(t){return ja((()=>ou(6,Fu(t))))}}ab.className="relu6",Va(ab);class ib extends eb{apply(t){return t}}ib.className="linear",Va(ib);class ob extends eb{apply(t){return Go(t)}}ob.className="sigmoid",Va(ob);class ub extends eb{apply(t){return function(t){return ja((()=>{const e=ti(.5,Mo(.2,t));return Wi(e,0,1)}))}(t)}}ub.className="hardSigmoid",Va(ub);class lb extends eb{apply(t){return Ho(t)}}lb.className="softplus",Va(lb);class cb extends eb{apply(t){return function(t){return ja((()=>oo(t,Ja(t).add(1))))}(t)}}cb.className="softsign",Va(cb);class hb extends eb{apply(t){return cl(t)}}hb.className="tanh",Va(hb);class pb extends eb{apply(t,e=-1){return Yu(t,e)}}pb.className="softmax",Va(pb);class db extends eb{apply(t,e=-1){return Yo(t,e)}}db.className="logSoftmax",Va(db);class fb extends eb{apply(t,e=1){return ja((()=>Go(t.mul(e)).mul(t)))}}function mb(t){return t.getClassName()}function gb(t,e={}){return Xf(t,Wa.getMap().classNameMap,e,"activation")}function yb(t){if(null==t){const t={className:"linear",config:{}};return gb(t)}if("string"==typeof t){const e={};return e.className=t,e.config={},gb(e)}return t instanceof eb?t:gb(t)}fb.className="swish",Va(fb);class bb extends Pa{}class xb extends bb{constructor(t){super(),function(t){if(null!=t&&"object"!=typeof t)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${t}`)}(t),this.l1=null==t||null==t.l1?.01:t.l1,this.l2=null==t||null==t.l2?.01:t.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(t){return ja((()=>{let e=ru([1]);return this.hasL1&&(e=ti(e,Xo(Mo(this.l1,Ja(t))))),this.hasL2&&(e=ti(e,Xo(Mo(this.l2,Gm(t))))),e.asScalar()}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(t,e){return new t({l1:e.l1,l2:e.l2})}}xb.className="L1L2",Va(xb);const wb={l1l2:"L1L2"};function vb(t){return qf(t)}function Ib(t,e={}){return Xf(t,Wa.getMap().classNameMap,e,"regularizer")}function kb(t){if(null==t)return null;if("string"==typeof t){return Ib({className:t in wb?wb[t]:t,config:{}})}return t instanceof bb?t:Ib(t)}class Nb extends Fg{constructor(t){super(null==t?{}:t),this.supportsMasking=!0,null!=t&&(this.maxValue=t.maxValue)}call(t,e){t=kg(t);let n=Fu(t);return null!=this.maxValue&&(n=Wi(n,0,this.maxValue)),n}computeOutputShape(t){return t}getConfig(){const t={maxValue:this.maxValue},e=super.getConfig();return Object.assign(t,e),t}}Nb.className="ReLU",Va(Nb);class Sb extends Fg{constructor(t){super(null==t?{}:t),this.DEFAULT_ALPHA=.3,null==t&&(t={}),this.alpha=null==t.alpha?this.DEFAULT_ALPHA:t.alpha}call(t,e){const n=kg(t);return Oo(n,this.alpha)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}Sb.className="LeakyReLU",Va(Sb);class Eb extends Fg{constructor(t){if(super(null==t?{}:t),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==t&&(t={}),this.supportsMasking=!0,this.alphaInitializer=gg(t.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=kb(t.alphaRegularizer),this.alphaConstraint=dm(t.alphaConstraint),null==t.sharedAxes)this.sharedAxes=null;else if(Array.isArray(t.sharedAxes))this.sharedAxes=t.sharedAxes;else{if("number"!=typeof t.sharedAxes)throw new Of(`Expected sharedAxes to be a number or an array of numbers, but got ${t.sharedAxes}`);this.sharedAxes=[t.sharedAxes]}}build(t){const e=(t=Ng(t)).slice(1);if(null!=this.sharedAxes)for(const t of this.sharedAxes)e[t-1]=1;this.alpha=this.addWeight("alpha",e,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let e=1;e<t.length;++e)n[e]=t[e];this.inputSpec=[new Ag({ndim:t.length,axes:n})],this.built=!0}call(t,e){return t=kg(t),bu(t,this.alpha.read())}getConfig(){const t={alphaInitializer:mg(this.alphaInitializer),alphaRegularizer:vb(this.alphaRegularizer),alphaConstraint:hm(this.alphaConstraint),sharedAxes:this.sharedAxes},e=super.getConfig();return Object.assign(t,e),t}}Eb.className="PReLU",Va(Eb);class Cb extends Fg{constructor(t){if(super(null==t?{}:t),this.DEFAULT_ALPHA=1,null==t&&(t={}),null!=t.alpha&&t.alpha!==this.DEFAULT_ALPHA)throw new Lf(`Non-default alpha value (${t.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==t.alpha?this.DEFAULT_ALPHA:t.alpha}call(t,e){const n=kg(t);return go(n)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}Cb.className="ELU",Va(Cb);class $b extends Fg{constructor(t){super(null==t?{}:t),this.DEFAULT_THETA=1,null==t&&(t={}),this.theta=null==t.theta?this.DEFAULT_THETA:t.theta}call(t,e){const n=kg(t);return n.mul(Dm(n.greater(this.theta),"float32"))}computeOutputShape(t){return t}getConfig(){const t={theta:this.theta},e=super.getConfig();return Object.assign(t,e),t}}$b.className="ThresholdedReLU",Va($b);class Tb extends Fg{constructor(t){super(null==t?{}:t),this.DEFAULT_AXIS=1,null==t&&(t={}),this.softmax=(new pb).apply,this.axis=null==t.axis?this.DEFAULT_AXIS:t.axis}call(t,e){const n=kg(t);return this.softmax(n,this.axis)}computeOutputShape(t){return t}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}function Ab(t,e,n){if("number"==typeof t)return zf(t,e);if(t.length!==e)throw new Of(`The ${n} argument must be an integer or tuple of ${e} integers. Received: ${t.length} elements.`);for(let s=0;s<e;++s){const a=t[s];if((r=a)!==parseInt(r.toString(),10))throw new Of(`The ${n} argument must be an integer or tuple of ${e} integers. Received: ${JSON.stringify(t)} including a non-integer number ${a}`)}return t;var r}function Rb(t,e,n,r,s=1){if(null==t)return t;let a;return a="same"===n?t:t-(e+(e-1)*(s-1))+1,Math.floor((a+r-1)/r)}function _b(t,e,n,r){if(null==t)return null;if("valid"===r)t=t*e+Rm([n-e,0]);else{if("same"!==r)throw new Of(`Unsupport padding mode: ${r}.`);t*=e}return t}function Db(t,e){return ja((()=>(xm(e),"channelsFirst"===e?Ia(t,[0,2,3,1]):t)))}function Mb(t,e){return ja((()=>(xm(e),"channelsFirst"===e?Ia(t,[0,2,3,4,1]):t)))}function Fb(t,e,n,r=[1,1],s="valid",a,i,o=null){return ja((()=>{if(null==a&&(a="channelsLast"),xm(a),3!==t.rank&&4!==t.rank)throw new Of(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${t.rank}.`);if(3!==e.rank&&4!==e.rank)throw new Of(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${t.rank}.`);let u=Db(t,a);if("causal"===s)throw new Lf("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return u=jl({x:u,filter:e,strides:r,pad:"same"===s?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===a&&(u=Ia(u,[0,3,1,2])),u}))}Tb.className="Softmax",Va(Tb);class Ob extends Fg{constructor(t,e){if(super(e),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Ob.verifyArgs(e),this.rank=t,em(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new Lf(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Ab(e.kernelSize,t,"kernelSize"),this.strides=Ab(null==e.strides?1:e.strides,t,"strides"),this.padding=null==e.padding?"valid":e.padding,wm(this.padding),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,xm(this.dataFormat),this.activation=yb(e.activation),this.useBias=null==e.useBias||e.useBias,this.biasInitializer=gg(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=dm(e.biasConstraint),this.biasRegularizer=kb(e.biasRegularizer),this.activityRegularizer=kb(e.activityRegularizer),this.dilationRate=Ab(null==e.dilationRate?1:e.dilationRate,t,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new Of(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new Of(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new Of(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(t){if(Pf("kernelSize"in t,"required key 'kernelSize' not in config"),"number"!=typeof t.kernelSize&&!tm(t.kernelSize,"number",1,3))throw new Of(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(t.kernelSize)}.`)}getConfig(){const t={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:mb(this.activation),useBias:this.useBias,biasInitializer:mg(this.biasInitializer),biasRegularizer:vb(this.biasRegularizer),activityRegularizer:vb(this.activityRegularizer),biasConstraint:hm(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}class Lb extends Ob{constructor(t,e){super(t,e),this.kernel=null,Lb.verifyArgs(e),this.filters=e.filters,em(this.filters,"filters"),this.kernelInitializer=gg(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=dm(e.kernelConstraint),this.kernelRegularizer=kb(e.kernelRegularizer)}build(t){t=Ng(t);const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new Of(`The channel dimension of the input should be defined. Found ${t[e]}`);const n=t[e],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[e]:n}}],this.built=!0}call(t,e){return ja((()=>{let e;t=kg(t);const n=null==this.bias?null:this.bias.read(),r=rm(this.activation.getClassName());if(null!=r&&2===this.rank)e=Fb(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)e=function(t,e,n,r=1,s="valid",a,i=1){return ja((()=>{if(null==a&&(a="channelsLast"),xm(a),3!==t.shape.length)throw new Of(`The input of a conv1dWithBias operation should be 3, but is ${t.shape.length} instead.`);if(3!==e.shape.length)throw new Of(`The kernel for a conv1dWithBias operation should be 3, but is ${e.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new Of(`The bias for a conv1dWithBias operation should be 1, but is ${e.shape.length} instead`);if("channelsFirst"===a&&(t=Ia(t,[0,2,1])),"causal"===s)throw new Lf("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=Yi(t,e,r,"same"===s?"same":"valid","NWC",i);return null!=n&&(o=jm(o,n)),o}))}(t,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)e=Fb(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new Lf("convolutions greater than 3D are not implemented yet.");e=function(t,e,n,r=[1,1,1],s="valid",a,i){return ja((()=>{if(null==a&&(a="channelsLast"),xm(a),4!==t.rank&&5!==t.rank)throw new Of(`conv3dWithBias expects input to be of rank 4 or 5, but received ${t.rank}.`);if(4!==e.rank&&5!==e.rank)throw new Of(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${t.rank}.`);let o=Mb(t,a);if("causal"===s)throw new Lf("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=Qi(o,e,r,"same"===s?"same":"valid","NDHWC",i),null!=n&&(o=jm(o,n)),"channelsFirst"===a&&(o=Ia(o,[0,4,1,2,3])),o}))}(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(e=this.activation.apply(e))}return e}))}computeOutputShape(t){t=Ng(t);const e=[],n="channelsLast"===this.dataFormat?t.slice(1,t.length-1):t.slice(2);for(let t=0;t<n.length;++t){const r=Rb(n[t],this.kernelSize[t],this.padding,this.strides[t],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[t]);e.push(r)}let r=[t[0]];return"channelsLast"===this.dataFormat?(r=r.concat(e),r.push(this.filters)):(r.push(this.filters),r=r.concat(e)),r}getConfig(){const t={filters:this.filters,kernelInitializer:mg(this.kernelInitializer),kernelRegularizer:vb(this.kernelRegularizer),kernelConstraint:hm(this.kernelConstraint)},e=super.getConfig();return Object.assign(t,e),t}static verifyArgs(t){if(!("filters"in t)||"number"!=typeof t.filters||t.filters<1)throw new Of(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(t.filters)}`)}}class Bb extends Lb{constructor(t){super(2,t),Bb.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&!tm(t.kernelSize,"number",1,2))throw new Of(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(t.kernelSize)}.`)}}Bb.className="Conv2D",Va(Bb);class zb extends Lb{constructor(t){super(3,t),zb.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&(!Array.isArray(t.kernelSize)||1!==t.kernelSize.length&&3!==t.kernelSize.length))throw new Of(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(t.kernelSize)}.`)}}zb.className="Conv3D",Va(zb);class Pb extends Bb{constructor(t){if(super(t),this.inputSpec=[new Ag({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new Of(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if(4!==(t=Ng(t)).length)throw new Of("Input should have rank 4; Received input shape: "+JSON.stringify(t));const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new Of("The channel dimension of the inputs should be defined. Found `None`.");const n=t[e],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Ag({ndim:4,axes:{[e]:n}})],this.built=!0}call(t,e){return ja((()=>{let e=kg(t);if(4!==e.shape.length)throw new Of(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${e.shape.length}`);const n=e.shape,r=n[0];let s,a;"channelsFirst"===this.dataFormat?(s=2,a=3):(s=1,a=2);const i=n[s],o=n[a],u=this.kernelSize[0],l=this.kernelSize[1],c=this.strides[0],h=this.strides[1],p=[r,_b(i,c,u,this.padding),_b(o,h,l,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(e=Ia(e,[0,2,3,1]));let d=Zi(e,this.kernel.read(),p,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(d=Ia(d,[0,3,1,2])),null!=this.bias&&(d=jm(d,this.bias.read(),this.dataFormat)),null!=this.activation&&(d=this.activation.apply(d)),d}))}computeOutputShape(t){const e=(t=Ng(t)).slice();let n,r,s;"channelsFirst"===this.dataFormat?(n=1,r=2,s=3):(n=3,r=1,s=2);const a=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],u=this.strides[1];return e[n]=this.filters,e[r]=_b(e[r],o,a,this.padding),e[s]=_b(e[s],u,i,this.padding),e}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}Pb.className="Conv2DTranspose",Va(Pb);class Wb extends Lb{constructor(t,e){if(super(t,e),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==e.filters)throw new Of("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=e.kernelInitializer||null!=e.kernelRegularizer||null!=e.kernelConstraint)throw new Of("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=e.padding&&"same"!==e.padding&&"valid"!==e.padding)throw new Of(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(e.padding)}`);this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=gg(e.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=kb(e.depthwiseRegularizer),this.depthwiseConstraint=dm(e.depthwiseConstraint),this.pointwiseInitializer=gg(e.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=kb(e.pointwiseRegularizer),this.pointwiseConstraint=dm(e.pointwiseConstraint)}build(t){if((t=Ng(t)).length<this.rank+2)throw new Of(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(t)}`);const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e]||t[e]<0)throw new Of(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(t[e])}`);const n=t[e],r=this.kernelSize.concat([n,this.depthMultiplier]),s=[];for(let t=0;t<this.rank;++t)s.push(1);s.push(n*this.depthMultiplier,this.filters);const a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",s,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):this.bias=null,this.inputSpec=[new Ag({ndim:this.rank+2,axes:{[e]:n}})],this.built=!0}call(t,e){return ja((()=>{let e;if(t=kg(t),1===this.rank)throw new Lf("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(t=Ia(t,[0,2,3,1])),e=Pu(t,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(e=jm(e,this.bias.read(),this.dataFormat)),null!=this.activation&&(e=this.activation.apply(e)),"channelsFirst"===this.dataFormat&&(e=Ia(e,[0,3,1,2])),e}))}getConfig(){const t=super.getConfig();return delete t.rank,delete t.kernelInitializer,delete t.kernelRegularizer,delete t.kernelConstraint,t.depthwiseInitializer=mg(this.depthwiseInitializer),t.pointwiseInitializer=mg(this.pointwiseInitializer),t.depthwiseRegularizer=vb(this.depthwiseRegularizer),t.pointwiseRegularizer=vb(this.pointwiseRegularizer),t.depthwiseConstraint=hm(this.depthwiseConstraint),t.pointwiseConstraint=hm(this.pointwiseConstraint),t}}Wb.className="SeparableConv";class Vb extends Wb{constructor(t){super(2,t)}}Vb.className="SeparableConv2D",Va(Vb);class Ub extends Lb{constructor(t){super(1,t),Ub.verifyArgs(t),this.inputSpec=[{ndim:3}]}getConfig(){const t=super.getConfig();return delete t.rank,delete t.dataFormat,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&!tm(t.kernelSize,"number",1,1))throw new Of(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(t.kernelSize)}.`)}}Ub.className="Conv1D",Va(Ub);class Gb extends Fg{constructor(t){super(t),"number"==typeof t.cropping?this.cropping=[[t.cropping,t.cropping],[t.cropping,t.cropping]]:"number"==typeof t.cropping[0]?this.cropping=[[t.cropping[0],t.cropping[0]],[t.cropping[1],t.cropping[1]]]:this.cropping=t.cropping,this.dataFormat=void 0===t.dataFormat?"channelsLast":t.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(t){return"channelsFirst"===this.dataFormat?[t[0],t[1],t[2]-this.cropping[0][0]-this.cropping[0][1],t[3]-this.cropping[1][0]-this.cropping[1][1]]:[t[0],t[1]-this.cropping[0][0]-this.cropping[0][1],t[2]-this.cropping[1][0]-this.cropping[1][1],t[3]]}call(t,e){return ja((()=>{if(t=kg(t),"channelsLast"===this.dataFormat){const e=Lm(t,this.cropping[0][0],t.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Lm(e,this.cropping[1][0],t.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const e=Lm(t,this.cropping[0][0],t.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Lm(e,this.cropping[1][0],t.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const t={cropping:this.cropping,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}Gb.className="Cropping2D",Va(Gb);class Hb extends Fg{constructor(t){super(t),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==t.size?this.DEFAULT_SIZE:t.size,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat}computeOutputShape(t){if("channelsFirst"===this.dataFormat){const e=null==t[2]?null:this.size[0]*t[2],n=null==t[3]?null:this.size[1]*t[3];return[t[0],t[1],e,n]}{const e=null==t[1]?null:this.size[0]*t[1],n=null==t[2]?null:this.size[1]*t[2];return[t[0],e,n,t[3]]}}call(t,e){return ja((()=>{let e=kg(t);const n=e.shape;if("channelsFirst"===this.dataFormat){e=Ia(e,[0,2,3,1]);const t=this.size[0]*n[2],r=this.size[1]*n[3],s=e.resizeNearestNeighbor([t,r]);return Ia(s,[0,3,1,2])}{const t=this.size[0]*n[1],r=this.size[1]*n[2];return e.resizeNearestNeighbor([t,r])}}))}getConfig(){const t={size:this.size,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}Hb.className="UpSampling2D",Va(Hb);class jb extends Ob{constructor(t){super(2,t),this.depthwiseKernel=null,this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=gg(t.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=dm(t.depthwiseConstraint),this.depthwiseRegularizer=kb(t.depthwiseRegularizer)}build(t){if((t=Ng(t)).length<4)throw new Of(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(t)}.`);const e="channelsFirst"===this.dataFormat?1:3;if(null==t[e]||t[e]<0)throw new Of(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${t[e]}).`);const n=t[e],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return ja((()=>{let e=function(t,e,n=[1,1],r="valid",s,a){return ja((()=>{null==s&&(s="channelsLast"),xm(s);let i=Db(t,s);if(4!==t.rank)throw new Of(`Input for depthwiseConv2d is required to be 4-D, but is instead ${t.rank}-D`);if(4!==e.rank)throw new Of(`depthwiseKernel is required to be 4-D, but is instead ${e.rank}-D`);return i=so(i,e,n,"same"===r?"same":"valid","NHWC",a),"channelsFirst"===s&&(i=Ia(i,[0,3,1,2])),i}))}(t=kg(t),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(e=jm(e,this.bias.read(),this.dataFormat)),null!=this.activation&&(e=this.activation.apply(e)),e}))}computeOutputShape(t){t=Ng(t);const e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2],r="channelsFirst"===this.dataFormat?t[1]*this.depthMultiplier:t[3]*this.depthMultiplier,s=Rb(e,this.kernelSize[0],this.padding,this.strides[0]),a=Rb(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[t[0],r,s,a]:[t[0],s,a,r]}getConfig(){const t=super.getConfig();return t.depthMultiplier=this.depthMultiplier,t.depthwiseInitializer=mg(this.depthwiseInitializer),t.depthwiseRegularizer=vb(this.depthwiseRegularizer),t.depthwiseConstraint=hm(this.depthwiseRegularizer),t}}function qb(t,e,n,r){if(Array.isArray(t)){if(null!=e||null!=n)throw new Of("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=t.slice(t.length-r,t.length),t=t.slice(0,t.length-r)),t.length>1&&(e=t.slice(1,t.length)),t=t[0]}function s(t){return null==t||Array.isArray(t)?t:[t]}return{inputs:t,initialState:e=s(e),constants:n=s(n)}}function Kb(t,e,n,r=!1,s,a,i=!1,o=!1){return ja((()=>{const u=e.shape.length;if(u<3)throw new Of(`Input should be at least 3D, but is ${u}D.`);const l=[1,0].concat(_m(2,u));if(e=Ia(e,l),null!=a)throw new Lf("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=s&&((s=s.asType("bool").asType("float32")).rank===u-1&&(s=xo(s,-1)),s=Ia(s,l)),r&&(e=Ou(e,0),null!=s&&(s=Ou(s,0)));const c=[];let h,p=n;const d=e.shape[0],f=gl(e);let m,g;null!=s&&(m=gl(s));for(let e=0;e<d;++e){const n=f[e],r=ja((()=>t(n,p)));if(null==s)h=r[0],p=r[1];else{const t=ja((()=>{const t=m[e],n=mu(t).sub(t);return{output:r[0].mul(t).add(p[0].mul(n)),newStates:p.map(((e,s)=>r[1][s].mul(t).add(e.mul(n))))}}));h=t.output,p=t.newStates}o&&c.push(h)}if(o){g=il(c,1)}return[h,g,p]}))}jb.className="DepthwiseConv2D",Va(jb);class Xb extends Fg{constructor(t){let e;if(super(t),null==t.cell)throw new Of("cell property is missing for the constructor of RNN.");if(e=Array.isArray(t.cell)?new rx({cells:t.cell}):t.cell,null==e.stateSize)throw new Of("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=e,this.returnSequences=null!=t.returnSequences&&t.returnSequences,this.returnState=null!=t.returnState&&t.returnState,this.goBackwards=null!=t.goBackwards&&t.goBackwards,this._stateful=null!=t.stateful&&t.stateful,this.unroll=null!=t.unroll&&t.unroll,this.supportsMasking=!0,this.inputSpec=[new Ag({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(null==this.states_){return _m(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((t=>null))}return this.states_}setStates(t){this.states_=t}computeOutputShape(t){vg(t)&&(t=t[0]),t=t;let e=this.cell.stateSize;Array.isArray(e)||(e=[e]);const n=e[0];let r;if(r=this.returnSequences?[t[0],t[1],n]:[t[0],n],this.returnState){const n=[];for(const r of e)n.push([t[0],r]);return[r].concat(n)}return r}computeMask(t,e){return ja((()=>{Array.isArray(e)&&(e=e[0]);const t=this.returnSequences?e:null;if(this.returnState){const e=this.states.map((t=>null));return[t].concat(e)}return t}))}get states(){if(null==this.states_){const t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,e=[];for(let n=0;n<t;++n)e.push(null);return e}return this.states_}set states(t){this.states_=t}build(t){if(null!=this.numConstants)throw new Lf("Constants support is not implemented in RNN yet.");vg(t)&&(t=t[0]),t=t;const e=this.stateful?t[0]:null,n=t.slice(2);this.inputSpec[0]=new Ag({shape:[e,null,...n]});const r=[t[0]].concat(t.slice(2));let s;if(this.cell.build(r),s=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!d(this.stateSpec.map((t=>t.shape[t.shape.length-1])),s))throw new Of(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=s.map((t=>new Ag({shape:[null,t]})));this.stateful&&this.resetStates()}resetStates(t,e=!1){ja((()=>{if(!this.stateful)throw new Mf("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new Of("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((t=>ru([n,t]))):this.states_=[ru([n,this.cell.stateSize])];else if(null==t)qa(this.states_),null!=this.keptStates&&(qa(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((t=>ru([n,t]))):this.states_[0]=ru([n,this.cell.stateSize]);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new Of(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);!0===e?this.keptStates.push(this.states_.slice()):qa(this.states_);for(let e=0;e<this.states_.length;++e){const r=t[e],s=Array.isArray(this.cell.stateSize)?this.cell.stateSize[e]:this.cell.stateSize,a=[n,s];if(!d(r.shape,a))throw new Of(`State ${e} is incompatible with layer ${this.name}: expected shape=${a}, received shape=${r.shape}`);this.states_[e]=r}}this.states_=this.states_.map((t=>Ka(t.clone())))}))}apply(t,e){let n=null==e?null:e.initialState,r=null==e?null:e.constants;null==e&&(e={});const s=qb(t,n,r,this.numConstants);t=s.inputs,n=s.initialState,r=s.constants;let a=[],i=[];if(null!=n){e.initialState=n,a=a.concat(n),this.stateSpec=[];for(const t of n)this.stateSpec.push(new Ag({shape:t.shape}));i=i.concat(this.stateSpec)}null!=r&&(e.constants=r,a=a.concat(r),this.numConstants=r.length);if(a[0]instanceof Rg){const n=[t].concat(a),r=this.inputSpec.concat(i),s=this.inputSpec;this.inputSpec=r;const o=super.apply(n,e);return this.inputSpec=s,o}return super.apply(t,e)}call(t,e){return ja((()=>{const n=null==e?null:e.mask,r=null==e?null:e.training;let s=null==e?null:e.initialState;t=kg(t),null==s&&(s=this.stateful?this.states_:this.getInitialState(t));const a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(s.length!==a)throw new Of(`RNN Layer has ${a} state(s) but was passed ${s.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const i={training:r},o=Kb(((t,e)=>{const n=this.cell.call([t].concat(e),i);return[n[0],n.slice(1)]}),t,s,this.goBackwards,n,null,this.unroll,this.returnSequences),u=o[0],l=o[1],c=o[2];this.stateful&&this.resetStates(c,r);const h=this.returnSequences?l:u;return this.returnState?[h].concat(c):h}))}getInitialState(t){return ja((()=>{let e=ru(t.shape);return e=Xo(e,[1,2]),e=Mm(e),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((t=>t>1?Pm(e,[1,t]):e)):this.cell.stateSize>1?[Pm(e,[1,this.cell.stateSize])]:[e]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(t)}getConfig(){const t=super.getConfig(),e={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(e.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===Xb.className&&(e.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,t,e)}static fromConfig(t,e,n={}){const r=Yg(e.cell,n);return new t(Object.assign(e,{cell:r}))}}Xb.className="RNN",Va(Xb);class Yb extends Fg{}class Jb extends Yb{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,em(this.units,"units"),this.activation=yb(null==t.activation?this.DEFAULT_ACTIVATION:t.activation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=gg(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=gg(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=gg(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=kb(t.kernelRegularizer),this.recurrentRegularizer=kb(t.recurrentRegularizer),this.biasRegularizer=kb(t.biasRegularizer),this.kernelConstraint=dm(t.kernelConstraint),this.recurrentConstraint=dm(t.recurrentConstraint),this.biasConstraint=dm(t.biasConstraint),this.dropout=Am([1,Rm([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=Am([1,Rm([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=Ng(t),this.kernel=this.addWeight("kernel",[t[t.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return ja((()=>{if(2!==(t=t).length)throw new Of(`SimpleRNNCell expects 2 input Tensors, got ${t.length}.`);let n=t[1];t=t[0];const r=null!=e.training&&e.training;let s;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=sx({ones:()=>mu(t),rate:this.dropout,training:r})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=sx({ones:()=>mu(n),rate:this.recurrentDropout,training:r}));const a=this.dropoutMask,i=this.recurrentDropoutMask;s=Vm(null!=a?Mo(t,a):t,this.kernel.read()),null!=this.bias&&(s=jm(s,this.bias.read())),null!=i&&(n=Mo(n,i));let o=ti(s,Vm(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]}))}getConfig(){const t=super.getConfig(),e={units:this.units,activation:mb(this.activation),useBias:this.useBias,kernelInitializer:mg(this.kernelInitializer),recurrentInitializer:mg(this.recurrentInitializer),biasInitializer:mg(this.biasInitializer),kernelRegularizer:vb(this.kernelRegularizer),recurrentRegularizer:vb(this.recurrentRegularizer),biasRegularizer:vb(this.biasRegularizer),activityRegularizer:vb(this.activityRegularizer),kernelConstraint:hm(this.kernelConstraint),recurrentConstraint:hm(this.recurrentConstraint),biasConstraint:hm(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},t,e)}}Jb.className="SimpleRNNCell",Va(Jb);class Zb extends Xb{constructor(t){t.cell=new Jb(t),super(t)}call(t,e){return ja((()=>{null!=this.cell.dropoutMask&&(qa(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(qa(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,r=null==e?null:e.training,s=null==e?null:e.initialState;return super.call(t,{mask:n,training:r,initialState:s})}))}static fromConfig(t,e){return new t(e)}}Zb.className="SimpleRNN",Va(Zb);class Qb extends Yb{constructor(t){if(super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.resetAfter)throw new Of("GRUCell does not support reset_after parameter set to true.");this.units=t.units,em(this.units,"units"),this.activation=yb(void 0===t.activation?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=yb(void 0===t.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=gg(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=gg(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=gg(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=kb(t.kernelRegularizer),this.recurrentRegularizer=kb(t.recurrentRegularizer),this.biasRegularizer=kb(t.biasRegularizer),this.kernelConstraint=dm(t.kernelConstraint),this.recurrentConstraint=dm(t.recurrentConstraint),this.biasConstraint=dm(t.biasConstraint),this.dropout=Am([1,Rm([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=Am([1,Rm([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.implementation=t.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){const e=(t=Ng(t))[t.length-1];this.kernel=this.addWeight("kernel",[e,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return ja((()=>{if(2!==(t=t).length)throw new Of(`GRUCell expects 2 input Tensors (inputs, h, c), got ${t.length}.`);const n=null!=e.training&&e.training;let r=t[1];t=t[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=sx({ones:()=>mu(t),rate:this.dropout,training:n,count:3})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=sx({ones:()=>mu(r),rate:this.recurrentDropout,training:n,count:3}));const s=this.dropoutMask,a=this.recurrentDropoutMask;let i,o,u;0<this.dropout&&this.dropout<1&&(t=Mo(t,s[0]));let l=Vm(t,this.kernel.read());this.useBias&&(l=jm(l,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=Mo(r,a[0]));const c=this.recurrentKernel.read(),[h,p]=el(c,[2*this.units,this.units],c.rank-1),d=Vm(r,h),[f,m,g]=el(l,3,l.rank-1),[y,b]=el(d,2,d.rank-1);i=this.recurrentActivation.apply(ti(f,y)),o=this.recurrentActivation.apply(ti(m,b));const x=Vm(Mo(o,r),p);u=this.activation.apply(ti(g,x));const w=ti(Mo(i,r),Mo(ti(1,Uo(i)),u));return[w,w]}))}getConfig(){const t=super.getConfig(),e={units:this.units,activation:mb(this.activation),recurrentActivation:mb(this.recurrentActivation),useBias:this.useBias,kernelInitializer:mg(this.kernelInitializer),recurrentInitializer:mg(this.recurrentInitializer),biasInitializer:mg(this.biasInitializer),kernelRegularizer:vb(this.kernelRegularizer),recurrentRegularizer:vb(this.recurrentRegularizer),biasRegularizer:vb(this.biasRegularizer),activityRegularizer:vb(this.activityRegularizer),kernelConstraint:hm(this.kernelConstraint),recurrentConstraint:hm(this.recurrentConstraint),biasConstraint:hm(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},t,e)}}Qb.className="GRUCell",Va(Qb);class tx extends Xb{constructor(t){0===t.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new Qb(t),super(t)}call(t,e){return ja((()=>{null!=this.cell.dropoutMask&&(qa(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(qa(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,r=null==e?null:e.training,s=null==e?null:e.initialState;return super.call(t,{mask:n,training:r,initialState:s})}))}static fromConfig(t,e){return 0===e.implmentation&&(e.implementation=1),new t(e)}}tx.className="GRU",Va(tx);class ex extends Yb{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,em(this.units,"units"),this.activation=yb(void 0===t.activation?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=yb(void 0===t.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=gg(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=gg(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=gg(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=t.unitForgetBias,this.kernelRegularizer=kb(t.kernelRegularizer),this.recurrentRegularizer=kb(t.recurrentRegularizer),this.biasRegularizer=kb(t.biasRegularizer),this.kernelConstraint=dm(t.kernelConstraint),this.recurrentConstraint=dm(t.recurrentConstraint),this.biasConstraint=dm(t.biasConstraint),this.dropout=Am([1,Rm([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=Am([1,Rm([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.implementation=t.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){var e;const n=(t=Ng(t))[t.length-1];let r;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const t=this.biasInitializer,n=this.units;r=new((e=class extends Jm{apply(e,r){const s=t.apply([n]),a=(new Qm).apply([n]),i=t.apply([2*n]);return zm(zm(s,a),i)}}).className="CustomInit",e)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(t,e){return ja((()=>{const n=null!=e.training&&e.training;if(3!==(t=t).length)throw new Of(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);let r=t[1];const s=t[2];t=t[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=sx({ones:()=>mu(t),rate:this.dropout,training:n,count:4})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=sx({ones:()=>mu(r),rate:this.recurrentDropout,training:n,count:4}));const a=this.dropoutMask,i=this.recurrentDropoutMask;let o,u,l,c;0<this.dropout&&this.dropout<1&&(t=Mo(t,a[0]));let h=Vm(t,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=Mo(r,i[0])),h=ti(h,Vm(r,this.recurrentKernel.read())),this.useBias&&(h=jm(h,this.bias.read()));const[p,d,f,m]=el(h,4,h.rank-1);o=this.recurrentActivation.apply(p),u=this.recurrentActivation.apply(d),l=ti(Mo(u,s),Mo(o,this.activation.apply(f))),c=this.recurrentActivation.apply(m);const g=Mo(c,this.activation.apply(l));return[g,g,l]}))}getConfig(){const t=super.getConfig(),e={units:this.units,activation:mb(this.activation),recurrentActivation:mb(this.recurrentActivation),useBias:this.useBias,kernelInitializer:mg(this.kernelInitializer),recurrentInitializer:mg(this.recurrentInitializer),biasInitializer:mg(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:vb(this.kernelRegularizer),recurrentRegularizer:vb(this.recurrentRegularizer),biasRegularizer:vb(this.biasRegularizer),activityRegularizer:vb(this.activityRegularizer),kernelConstraint:hm(this.kernelConstraint),recurrentConstraint:hm(this.recurrentConstraint),biasConstraint:hm(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},t,e)}}ex.className="LSTMCell",Va(ex);class nx extends Xb{constructor(t){0===t.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new ex(t),super(t)}call(t,e){return ja((()=>{null!=this.cell.dropoutMask&&(qa(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(qa(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,r=null==e?null:e.training,s=null==e?null:e.initialState;return super.call(t,{mask:n,training:r,initialState:s})}))}static fromConfig(t,e){return 0===e.implmentation&&(e.implementation=1),new t(e)}}nx.className="LSTM",Va(nx);class rx extends Yb{constructor(t){super(t),this.cells=t.cells}get stateSize(){const t=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?t.push(...e.stateSize):t.push(e.stateSize);return t}call(t,e){return ja((()=>{let n=(t=t).slice(1);const r=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?r.push(n.splice(0,t.stateSize.length)):r.push(n.splice(0,1));r.reverse();const s=[];let a;for(let i=0;i<this.cells.length;++i){const o=this.cells[i];n=r[i],a=0===i?[t[0]].concat(n):[a[0]].concat(n),a=o.call(a,e),s.push(a.slice(1))}n=[];for(const t of s.slice().reverse())n.push(...t);return[a[0]].concat(n)}))}build(t){let e;vg(t)&&(t=t[0]),t=t,this.cells.forEach(((n,r)=>{km(`RNNCell_${r}`,(()=>{n.build(t),e=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,t=[t[0],e]}))})),this.built=!0}getConfig(){const t=super.getConfig(),e={cells:this.cells.map((t=>({className:t.getClassName(),config:t.getConfig()})))};return Object.assign({},t,e)}static fromConfig(t,e,n={}){const r=[];for(const t of e.cells)r.push(Yg(t,n));return new t({cells:r})}get trainableWeights(){if(!this.trainable)return[];const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.cells)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e.concat(t)}return t}getWeights(){const t=[];for(const e of this.cells)t.push(...e.weights);return $g(t)}setWeights(t){const e=[];for(const n of this.cells){const r=n.weights.length,s=t.splice(r);for(let t=0;t<n.weights.length;++t)e.push([n.weights[t],s[t]])}Tg(e)}}function sx(t){const{ones:e,rate:n,training:r=!1,count:s=1}=t,a=()=>qm(e(),n),i=()=>Km(a,e,r);if(!s||s<=1)return Ka(i().clone());return Array(s).fill(void 0).map(i).map((t=>Ka(t.clone())))}rx.className="StackedRNNCells",Va(rx);var ax=function(t,e){var n={};for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&e.indexOf(r)<0&&(n[r]=t[r]);if(null!=t&&"function"==typeof Object.getOwnPropertySymbols){var s=0;for(r=Object.getOwnPropertySymbols(t);s<r.length;s++)e.indexOf(r[s])<0&&Object.prototype.propertyIsEnumerable.call(t,r[s])&&(n[r[s]]=t[r[s]])}return n};class ix extends Xb{constructor(t){if(t.unroll)throw new Lf("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(t.cell))throw new Lf("It is not possible at the moment to stack convolutional cells.");super(t),this.inputSpec=[new Ag({ndim:5})]}call(t,e){return ja((()=>{if(null!=this.cell.dropoutMask&&(qa(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(qa(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),e&&e.constants)throw new Of("ConvRNN2D cell does not support constants");const n=null==e?null:e.mask,r=null==e?null:e.training,s=null==e?null:e.initialState;return super.call(t,{mask:n,training:r,initialState:s})}))}computeOutputShape(t){let e=this.computeSingleOutputShape(t);return this.returnSequences||(e=[e[0],...e.slice(2)]),this.returnState&&(e=[e,...Array(2).fill([t[0],...e.slice(-3)])]),e}getInitialState(t){return ja((()=>{const{stateSize:e}=this.cell,n=t.shape,r=this.computeSingleOutputShape(n),s=ru([r[0],...r.slice(2)]);return Array.isArray(e)?Array(e.length).fill(s):[s]}))}resetStates(t,e=!1){ja((()=>{if(!this.stateful)throw new Mf("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),s=[r[0],...r.slice(2)];if(null==n[0])throw new Of("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>ru(s))):this.states_=[ru(s)];else if(null==t)qa(this.states_),null!=this.keptStates&&(qa(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>ru(s))):this.states_[0]=ru(s);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new Of(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);e?this.keptStates.push(this.states_.slice()):qa(this.states_);for(let e=0;e<this.states_.length;++e){const n=t[e],r=s;if(!d(n.shape,r))throw new Of(`State ${e} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[e]=n}}this.states_=this.states_.map((t=>Ka(t.clone())))}))}computeSingleOutputShape(t){const{dataFormat:e,filters:n,kernelSize:r,padding:s,strides:a,dilationRate:i}=this.cell,o="channelsFirst"===e,u=t[o?3:2],l=t[o?4:3],c=Rb(u,r[0],s,a[0],i[0]),h=Rb(l,r[1],s,a[1],i[1]);return[...t.slice(0,2),...o?[n,c,h]:[c,h,n]]}}ix.className="ConvRNN2D";class ox extends ex{constructor(t){const{filters:e,kernelSize:n,strides:r,padding:s,dataFormat:a,dilationRate:i}=t;super(Object.assign({},t,{units:e})),this.filters=e,em(this.filters,"filters"),this.kernelSize=Ab(n,2,"kernelSize"),this.kernelSize.forEach((t=>em(t,"kernelSize"))),this.strides=Ab(r||1,2,"strides"),this.strides.forEach((t=>em(t,"strides"))),this.padding=s||"valid",wm(this.padding),this.dataFormat=a||"channelsLast",xm(this.dataFormat),this.dilationRate=Ab(i||1,2,"dilationRate"),this.dilationRate.forEach((t=>em(t,"dilationRate")))}build(t){var e;t=Ng(t);const n="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[n])throw new Of(`The channel dimension of the input should be defined. Found ${t[n]}`);const r=t[n],s=this.kernelSize.concat([r,4*this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const a=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",a,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let t;if(this.unitForgetBias){const n=this.biasInitializer,r=this.filters;t=new((e=class extends Jm{apply(t,e){return Bm([n.apply([r]),su([r]),n.apply([2*r])])}}).className="CustomInit",e)}else t=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,t,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(t,e){return ja((()=>{if(3!==t.length)throw new Of(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);const n=e.training||!1,r=t[0],s=t[1],a=t[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=sx({ones:()=>mu(r),rate:this.dropout,training:n,count:4}));const i=this.dropoutMask,o=(t,e,n)=>e&&e[n]?Mo(e[n],t):t;let u=o(r,i,0),l=o(r,i,1),c=o(r,i,2),h=o(r,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=sx({ones:()=>mu(s),rate:this.recurrentDropout,training:n,count:4}));const p=this.recurrentDropoutMask;let d=o(s,p,0),f=o(s,p,1),m=o(s,p,2),g=o(s,p,3);const[y,b,x,w]=el(this.kernel.read(),4,3),[v,I,k,N]=this.useBias?el(this.bias.read(),4):[null,null,null,null];u=this.inputConv(u,y,v,this.padding),l=this.inputConv(l,b,I,this.padding),c=this.inputConv(c,x,k,this.padding),h=this.inputConv(h,w,N,this.padding);const[S,E,C,$]=el(this.recurrentKernel.read(),4,3);d=this.recurrentConv(d,S),f=this.recurrentConv(f,E),m=this.recurrentConv(m,C),g=this.recurrentConv(g,$);const T=this.recurrentActivation.apply(ti(u,d)),A=this.recurrentActivation.apply(ti(l,f)),R=ti(Mo(A,a),Mo(T,this.activation.apply(ti(c,m)))),_=Mo(this.recurrentActivation.apply(ti(h,g)),this.activation.apply(R));return[_,_,R]}))}getConfig(){const t=super.getConfig(),{units:e}=t,n=ax(t,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},n,r)}inputConv(t,e,n,r){const s=Xi(t,e,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?jm(s,n,this.dataFormat):s}recurrentConv(t,e){return Xi(t,e,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}ox.className="ConvLSTM2DCell",Va(ox);class ux extends ix{constructor(t){const e=new ox(t);super(Object.assign({},t,{cell:e}))}static fromConfig(t,e){return new t(e)}}ux.className="ConvLSTM2D",Va(ux);class lx extends Fg{constructor(t){super(t),this.rate=Math.max(Math.min(t.rate,1),0),this.noiseShape=t.noiseShape,this.seed=t.seed,this.supportsMasking=!0}getNoiseShape(t){if(null==this.noiseShape)return this.noiseShape;const e=t.shape,n=[];for(let t=0;t<this.noiseShape.length;++t)n.push(null==this.noiseShape[t]?e[t]:this.noiseShape[t]);return n}call(t,e){return ja((()=>{this.invokeCallHook(t,e);const n=kg(t);if(0<this.rate&&this.rate<1){const t=null!=e.training&&e.training,r=this.getNoiseShape(n);return Km((()=>qm(n,this.rate,r,this.seed)),(()=>n),t)}return t}))}getConfig(){const t={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},e=super.getConfig();return Object.assign(t,e),t}dispose(){return super.dispose()}}lx.className="Dropout",Va(lx);class cx extends lx{constructor(t){super(t),this.inputSpec=[{ndim:3}]}getNoiseShape(t){const e=t.shape;return[e[0],1,e[2]]}}cx.className="SpatialDropout1D",Va(cx);class hx extends Fg{constructor(t){if(super(t),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==t.batchInputShape&&null==t.inputShape&&null!=t.inputDim){let e=null;null!=t.batchSize&&(e=t.batchSize),this.batchInputShape=[e,t.inputDim]}this.units=t.units,em(this.units,"units"),this.activation=yb(t.activation),null!=t.useBias&&(this.useBias=t.useBias),this.kernelInitializer=gg(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=gg(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=dm(t.kernelConstraint),this.biasConstraint=dm(t.biasConstraint),this.kernelRegularizer=kb(t.kernelRegularizer),this.biasRegularizer=kb(t.biasRegularizer),this.activityRegularizer=kb(t.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(t){const e=(t=Ng(t))[t.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[e,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:e}}],this.built=!0}computeOutputShape(t){const e=(t=Ng(t)).slice();return e[e.length-1]=this.units,e}call(t,e){return ja((()=>{this.invokeCallHook(t,e);const n=kg(t),r=rm(this.activation.getClassName());let s;return null!=r?s=Vm(n,this.kernel.read(),r,this.bias?this.bias.read():null):(s=Vm(n,this.kernel.read()),null!=this.bias&&(s=jm(s,this.bias.read())),null!=this.activation&&(s=this.activation.apply(s))),s}))}getConfig(){const t={units:this.units,activation:mb(this.activation),useBias:this.useBias,kernelInitializer:mg(this.kernelInitializer),biasInitializer:mg(this.biasInitializer),kernelRegularizer:vb(this.kernelRegularizer),biasRegularizer:vb(this.biasRegularizer),activityRegularizer:vb(this.activityRegularizer),kernelConstraint:hm(this.kernelConstraint),biasConstraint:hm(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}hx.className="Dense",Va(hx);class px extends Fg{constructor(t){super(t=t||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=t.dataFormat}computeOutputShape(t){t=Ng(t);for(const e of t.slice(1))if(null==e)throw new Of(`The shape of the input to "Flatten" is not fully defined (got ${t.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[t[0],$m(t,1)]}call(t,e){return ja((()=>{this.invokeCallHook(t,e);let n=kg(t);if("channelsFirst"===this.dataFormat&&n.rank>1){const t=[0];for(let e=2;e<n.rank;++e)t.push(e);t.push(1),n=n.transpose(t)}return function(t){if(t.rank<=1)throw new Of(`batchFlatten requires a minimum rank of 2. Got rank: ${t.rank}.`);const e=[t.shape[0],$m(t.shape,1)];return t.reshape(e)}(n)}))}getConfig(){const t={};null!=this.dataFormat&&(t.dataFormat=this.dataFormat);const e=super.getConfig();return Object.assign(t,e),t}}px.className="Flatten",Va(px);class dx extends Fg{constructor(t){super(t),this.supportsMasking=!0,this.activation=yb(t.activation)}call(t,e){return ja((()=>{this.invokeCallHook(t,e);const n=kg(t);return this.activation.apply(n)}))}getConfig(){const t={activation:mb(this.activation)},e=super.getConfig();return Object.assign(t,e),t}}dx.className="Activation",Va(dx);class fx extends Fg{constructor(t){super(t),this.n=t.n,this.inputSpec=[{ndim:2}]}computeOutputShape(t){return[t[0],this.n,t[1]]}call(t,e){return ja((()=>{return t=kg(t),e=t,n=this.n,ja((()=>{if(2!==e.shape.length)throw new Of(`repeat() expects a rank-2 tensor, but received a rank-${e.shape.length} tensor.`);return Pm(Mm(e,1),[1,n,1])}));var e,n}))}getConfig(){const t={n:this.n},e=super.getConfig();return Object.assign(t,e),t}}fx.className="RepeatVector",Va(fx);class mx extends Fg{constructor(t){super(t),this.targetShape=t.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(t){return t<0||null==t}fixUnknownDimension(t,e){const n="Total size of new array must be unchanged.",r=e.slice();let s=1,a=null;for(let t=0;t<r.length;++t){const e=r[t];if(this.isUnknown(e)){if(null!==a)throw new Of("Can only specifiy one unknown dimension.");a=t}else s*=e}const i=$m(t);if(null!==a){if(0===s||i%s!=0)throw new Of(n);r[a]=i/s}else if(i!==s)throw new Of(n);return r}computeOutputShape(t){let e=!1;for(let n=0;n<t.length;++n)if(this.isUnknown(t[n])){e=!0;break}return e?t.slice(0,1).concat(this.targetShape):t.slice(0,1).concat(this.fixUnknownDimension(t.slice(1),this.targetShape))}call(t,e){return ja((()=>{this.invokeCallHook(t,e);const n=kg(t),r=n.shape,s=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return n.reshape(s)}))}getConfig(){const t={targetShape:this.targetShape},e=super.getConfig();return Object.assign(t,e),t}}mx.className="Reshape",Va(mx);class gx extends Fg{constructor(t){if(super(t),null==t.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(t.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${t.dims} instead.`);const e=_m(1,t.dims.length+1);if(!d(t.dims.slice().sort(),e))throw new Error("Invalid permutation `dims`: "+JSON.stringify(t.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=t.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Ag({ndim:this.dims.length+1})]}computeOutputShape(t){const e=(t=Ng(t)).slice();return this.dims.forEach(((n,r)=>{e[r+1]=t[n]})),e}call(t,e){return Ia(kg(t),this.dimsIncludingBatch)}getConfig(){const t={dims:this.dims},e=super.getConfig();return Object.assign(t,e),t}}gx.className="Permute",Va(gx);class yx extends Fg{constructor(t){super(null==t?{}:t),this.supportsMasking=!0,this.maskValue=null!=t?null==t.maskValue?0:t.maskValue:0}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={maskValue:this.maskValue};return Object.assign(e,t),e}computeMask(t,e){const n=kg(t);return ci(du(n,this.maskValue),-1)}call(t,e){return ja((()=>{this.invokeCallHook(t,e);const n=kg(t),r=ci(du(n,this.maskValue),-1,!0);return n.mul(r.asType(n.dtype))}))}}yx.className="Masking",Va(yx);class bx extends Fg{constructor(t){if(super(t),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==t.batchInputShape&&null==t.inputShape){let e=null;null!=t.batchSize&&(e=t.batchSize),null==t.inputLength?this.batchInputShape=[e,null]:this.batchInputShape=[e].concat(Uf(t.inputLength))}this.inputDim=t.inputDim,em(this.inputDim,"inputDim"),this.outputDim=t.outputDim,em(this.outputDim,"outputDim"),this.embeddingsInitializer=gg(t.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=kb(t.embeddingsRegularizer),this.activityRegularizer=kb(t.activityRegularizer),this.embeddingsConstraint=dm(t.embeddingsConstraint),this.maskZero=t.maskZero,this.supportsMasking=t.maskZero,this.inputLength=t.inputLength}build(t){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(t){}computeMask(t,e){return ja((()=>this.maskZero?(t=kg(t),du(t,fo(t))):null))}computeOutputShape(t){if(t=Ng(t),null==this.inputLength)return[...t,this.outputDim];const e=Uf(this.inputLength);if(e.length!==t.length-1)throw new Of(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);{let n=0;for(let r=0;r<e.length;++r){const s=e[r],a=t[r+1];if(null!=s&&null!=a&&s!==a)throw new Of(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);null==s&&(e[n]=a),n++}}return[t[0],...e,this.outputDim]}call(t,e){return ja((()=>{this.invokeCallHook(t,e);let n=kg(t);"int32"!==n.dtype&&(n=Dm(n,"int32"));return Um(this.embeddings.read(),n.as1D()).reshape(Ng(this.computeOutputShape(n.shape)))}))}getConfig(){const t={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:mg(this.embeddingsInitializer),embeddingsRegularizer:vb(this.embeddingsRegularizer),activityRegularizer:vb(this.activityRegularizer),embeddingsConstraint:hm(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},e=super.getConfig();return Object.assign(t,e),t}}bx.className="Embedding",Va(bx);class xx extends Fg{constructor(t){super(t||{}),this.supportsMasking=!0}mergeFunction(t){throw new Lf}computeElementwiseOpOutputShape(t,e){if(null==t||null==e)return null;if(t.length<e.length)return this.computeElementwiseOpOutputShape(e,t);if(0===e.length)return t;const n=t.slice(0,t.length-e.length);for(let r=0;r<e.length;++r){const s=t[t.length-e.length+r],a=e[r];if(null==s||null==a||s<0||a<0)n.push(null);else if(1===s)n.push(a);else if(1===a)n.push(s);else{if(s!==a)throw new Of("Operands could not be broadcast together with shapes "+JSON.stringify(t)+" "+JSON.stringify(e));n.push(s)}}return n}build(t){if(Array.isArray(t)&&!Array.isArray(t[0])&&(t=[Ng(t)]),(t=t).length<2)throw new Of(`A merge layer should be called on an Array of at least 2 inputs. Got ${t.length} input(s).`);let e=[];for(const n of t)null!=n&&null!==n[0]&&e.push(n[0]);if(e=Jf(e),e.length>1)throw new Of(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(t)}.`);let n=null==t[0]?null:t[0].slice(1);for(let e=1;e<t.length;++e){const r=null==t[e]?null:t[e].slice(1);n=this.computeElementwiseOpOutputShape(n,r)}const r=t.map((t=>t.length));-1===t.indexOf(null)&&1===Jf(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(t,e){return ja((()=>{if(t=t,this.reshapeRequired){const e=[],n=t.map((t=>t.rank));if(-1===n.indexOf(null)){const r=Rm(n);for(let n of t){const t=n.rank;for(let e=0;e<r-t;++e)n=Mm(n,1);e.push(n)}return this.mergeFunction(e)}{let n=!1;for(const r of t){const t=r.rank;if(null==t){const t=r.shape,s=t[0],a=t.slice(1).concat([s]);let i=r.reshape([s].concat($m(t.slice(1))));i=Ia(i,[1,0]),i=i.reshape(a),e.push(i),n=!0}else if(t>1){const s=_m(1,t).concat([0]);e.push(Ia(r,s)),n=!0}else e.push(r)}let r=this.mergeFunction(e);const s=r.rank;if(n)if(null==s){const t=r.shape,e=t[t.length-1],n=[e].concat(t.slice(0,t.length-1));r=Ia(r.reshape([-1,e]),[1,0]).reshape(n)}else if(s>1){const t=[s-1].concat(_m(0,s-1));r=Ia(r,t)}return r}}return this.mergeFunction(t)}))}computeOutputShape(t){let e;e=null==(t=t)[0]?null:t[0].slice(1);for(let n=1;n<t.length;++n){const r=null==t[n]?null:t[n].slice(1);e=this.computeElementwiseOpOutputShape(e,r)}let n=[];for(const e of t)null!=e&&null!==e[0]&&n.push(e[0]);return n=Jf(n),e=1===n.length?n.concat(e):[null].concat(e),e}computeMask(t,e){return ja((()=>{if(null==e)return null;if(!Array.isArray(e))throw new Of("`mask` should be an Array");if(!Array.isArray(t))throw new Of("`inputs` should be an Array");if(e.length!==t.length)throw new Of(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${t.length} vs ${e.length})`);if(e.every((t=>null==t)))return null;let n=(e=e.map((t=>null==t?t:xo(t,0))))[0];for(let t=1;t<e.length-1;++t)n=Jo(n,e[t]);return n}))}}class wx extends xx{constructor(t){super(t)}mergeFunction(t){return ja((()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=ti(e,t[n]);return e}))}}wx.className="Add",Va(wx);class vx extends xx{constructor(t){super(t)}mergeFunction(t){return ja((()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=Mo(e,t[n]);return e}))}}vx.className="Multiply",Va(vx);class Ix extends xx{constructor(t){super(t)}mergeFunction(t){return ja((()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=ti(e,t[n]);return Mo(1/t.length,e)}))}}Ix.className="Average",Va(Ix);class kx extends xx{constructor(t){super(t)}mergeFunction(t){return ja((()=>{let e=t[0];for(let n=1;n<t.length;++n)e=Do(e,t[n]);return e}))}}kx.className="Maximum",Va(kx);class Nx extends xx{constructor(t){super(t)}mergeFunction(t){return ja((()=>{let e=t[0];for(let n=1;n<t.length;++n)e=ou(e,t[n]);return e}))}}Nx.className="Minimum",Va(Nx);class Sx extends xx{constructor(t){super(t),this.DEFAULT_AXIS=-1,null==t&&(t={}),this.axis=null==t.axis?this.DEFAULT_AXIS:t.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){if(!Array.isArray(t)||!Array.isArray(t[0])||1===t.length)throw new Of("A `Concatenate` layer should be called on a list of at least 2 inputs");t=t;let e=!0;for(const n of t)if(null!=n){e=!1;break}if(e)return;const n=[];for(let e=0;e<t.length;++e){const r=t[e].slice();r.splice(this.axis,1);let s=!1;for(const t of n)if(d(t,r)){s=!0;break}s||n.push(r)}if(n.length>1)throw new Of("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(t))}mergeFunction(t){return ja((()=>Bm(t,this.axis)))}computeOutputShape(t){if(!Array.isArray(t)||!Array.isArray(t[0]))throw new Of("A `Concatenate` layer should be called on a list of inputs.");const e=t,n=e[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(const t of e.slice(1)){if(null==n[r]||null==t[r]){n[r]=null;break}n[r]+=t[r]}return n}computeMask(t,e){if(null==e)return null;if(!Array.isArray(e))throw new Of("`mask` should be an array for Concatenate");if(!Array.isArray(t))throw new Of("`inputs` should be an array for Concatenate");if(e.length!==t.length)throw new Of(`Mismatch in the length of mask (${e.length}) and the legnth of inputs (${t.length})`);return ja((()=>{let n=!0;if(e.forEach((t=>{null==t||(n=!1)})),n)return null;const r=[];for(let n=0;n<t.length;++n)null==e[n]?r.push(mu(t[n]).asType("bool")):e[n].rank<t[n].rank?r.push(xo(e[n],-1)):r.push(e[n]);const s=Gi(r,this.axis);return li(s,-1,!1)}))}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}function Ex(t,e){for(;t<0;)t+=e;return t}Sx.className="Concatenate",Va(Sx);class Cx extends xx{constructor(t){super(t),this.axes=t.axes,this.normalize=null!=t.normalize&&t.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){u(Array.isArray(t)&&2===t.length&&Array.isArray(t[0])&&Array.isArray(t[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const e=t[0],n=t[1];if(e.length>3||n.length>3)throw new Lf("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(e,n);if(e[r[0]]!==n[r[1]])throw new Of(`Dimension incompatibility: ${e[r[0]]} !== ${n[r[1]]}`)}mergeFunction(t){if(2!==t.length)throw new Of(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${t.length} input(s).`);let e,n=t[0],r=t[1];return e=Array.isArray(this.axes)?this.axes.map(((e,n)=>Ex(e,t[n].shape.length))):[Ex(this.axes,n.shape.length),Ex(this.axes,r.shape.length)],this.normalize&&(n=Jg(n,e[0]),r=Jg(r,e[1])),function(t,e,n){if(t.shape.length>3||e.shape.length>3)throw new Lf("batchDot is not implemented for tensors of 4D or higher rank yet");if(u(t.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${t.shape.length}`)),u(t.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${e.shape.length}`)),"number"==typeof n&&(n=[n,n]),"complex64"===t.dtype||"complex64"===e.dtype)throw new Lf("batchDot is not implemented for complex64-type Tensors yet.");const r=t.shape.length,s=e.shape.length;null==n&&(n=[r-1,s-2]);const a=n;return ja((()=>{let n,i;if(r>s){n=r-s;const t=[];for(let e=0;e<n;++e)t.push(1);e=e.reshape(e.shape.concat(t))}else if(s>r){n=s-r;const e=[];for(let t=0;t<n;++t)e.push(1);t=t.reshape(t.shape.concat(e))}else n=0;if(2===t.shape.length&&2===e.shape.length)i=a[0]===a[1]?t.mul(e).sum(a[0]):t.transpose([1,0]).mul(e).sum(a[1]);else{const n=a[0]!==t.shape.length-1,r=a[1]===e.shape.length-1;i=t.matMul(e,n,r)}if(n>0){let t;t=r>s?r+s-3:r-1;const e=[];for(let r=t;r<t+n;++r)e.push(r);i=i.squeeze(e)}return 1===i.shape.length&&(i=i.expandDims(1)),i}))}(n,r,e)}interpretAxes(t,e){let n;return n=Array.isArray(this.axes)?this.axes:[Ex(this.axes,t.length),Ex(this.axes,e.length)],n}computeOutputShape(t){u(Array.isArray(t)&&2===t.length&&Array.isArray(t[0])&&Array.isArray(t[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const e=t[0].slice(),n=t[1].slice();if(e.length>3||n.length>3)throw new Lf("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(e,n);e.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);const s=e.concat(n);return 1===s.length&&s.push(1),s}computeMask(t,e){return null}getConfig(){const t={axes:this.axes,normalize:this.normalize},e=super.getConfig();return Object.assign(t,e),t}}Cx.className="Dot",Va(Cx);class $x extends Fg{constructor(t){super(t),this.supportsMasking=!0,this.stddev=t.stddev}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={stddev:this.stddev};return Object.assign(e,t),e}call(t,e){return ja((()=>{this.invokeCallHook(t,e);const n=kg(t);return Km((()=>Wm(n.shape,0,this.stddev).add(n)),(()=>n),e.training||!1)}))}}$x.className="GaussianNoise",Va($x);class Tx extends Fg{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return ja((()=>{this.invokeCallHook(t,e);const n=kg(t);if(this.rate>0&&this.rate<1){return Km((()=>{const t=Math.sqrt(this.rate/(1-this.rate));return n.mul(Wm(n.shape,1,t))}),(()=>n),e.training||!1)}return n}))}}Tx.className="GaussianDropout",Va(Tx);class Ax extends Fg{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate,this.noiseShape=t.noiseShape}_getNoiseShape(t){return this.noiseShape||kg(t).shape}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return ja((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(t);return Km((()=>{const e=kg(t),r=-1.7580993408473766;let s=$o(Ru(n),this.rate);s=Dm(s,"float32");const a=((1-this.rate)*(1+this.rate*r**2))**-.5,i=-a*r*this.rate;return e.mul(s).add(s.add(-1).mul(r)).mul(a).add(i)}),(()=>kg(t)),e.training||!1)}return t}))}}function Rx(t,e,n,r,s,a=.001){let i;if(2===t.rank)i=Oi(t,e,n,r,s,a);else if(3===t.rank)i=Li(t,e,n,r,s,a);else{if(4!==t.rank)throw new Lf(`batchNormalization is not implemented for array of rank ${t.rank} yet`);i=Bi(t,e,n,r,s,a)}return i}function _x(t,e,n,r,s=.001){return d(r.slice().sort(),_m(0,t.rank-1))?function(t,e,n,r,s=.001){return ja((()=>{const a=hu(t,r),i=a.mean,o=a.variance;return[Rx(t,i,o,n,e,s),i,o]}))}(t,e,n,r,s):function(t,e,n,r,s=.001){return ja((()=>{const a=hu(t,r),i=a.mean,o=a.variance,u=[];for(const e of _m(0,t.rank))-1!==r.indexOf(e)?u.push(1):u.push(t.shape[e]);const l=i.reshape(u),c=o.reshape(u),h=null==e?null:e.reshape(u),p=null==n?null:n.reshape(u);return[Rx(t,l,c,p,h,s),i,o]}))}(t,e,n,r,s)}Ax.className="AlphaDropout",Va(Ax);class Dx extends Fg{constructor(t){null==t&&(t={}),super(t),this.supportsMasking=!0,this.axis=null==t.axis?-1:t.axis,this.momentum=null==t.momentum?.99:t.momentum,this.epsilon=null==t.epsilon?.001:t.epsilon,this.center=null==t.center||t.center,this.scale=null==t.scale||t.scale,this.betaInitializer=gg(t.betaInitializer||"zeros"),this.gammaInitializer=gg(t.gammaInitializer||"ones"),this.movingMeanInitializer=gg(t.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=gg(t.movingVarianceInitializer||"ones"),this.betaConstraint=dm(t.betaConstraint),this.gammaConstraint=dm(t.gammaConstraint),this.betaRegularizer=kb(t.betaRegularizer),this.gammaRegularizer=kb(t.gammaRegularizer)}build(t){t=Ng(t);const e=this.axis>=0?this.axis:this.axis+t.length,n=t[e];if(null==n)throw new Of(`Axis ${e} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(t)}.`);this.inputSpec=[new Ag({ndim:t.length,axes:{[e]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(t,e){return ja((()=>{const n=null!=e.training&&e.training,r=kg(t),s=r.shape,a=s.length,i=_m(0,a),o=this.axis>=0?this.axis:this.axis+a;i.splice(o,1);const u=zf(1,a);u[o]=s[o];const l=i.slice();l.sort();const c=!d(l,_m(0,a).slice(0,a-1));if(!n)return(()=>{if(c){const t=this.movingMean.read().reshape(u),e=this.movingVariance.read().reshape(u),n=this.center?this.beta.read().reshape(u):null,s=this.scale?this.gamma.read().reshape(u):null;return Rx(r,t,e,n,s,this.epsilon)}return Rx(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[h,p,f]=_x(r,this.gamma.read(),this.beta.read(),i,this.epsilon),m=(t,e,n)=>{ja((()=>{const r=1-n,s=t.read(),a=s.sub(e).mul(r);t.write(s.sub(a))}))};return(()=>{m(this.movingMean,p,this.momentum),m(this.movingVariance,f,this.momentum)})(),h}))}getConfig(){const t={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:mg(this.betaInitializer),gammaInitializer:mg(this.gammaInitializer),movingMeanInitializer:mg(this.movingMeanInitializer),movingVarianceInitializer:mg(this.movingVarianceInitializer),betaRegularizer:vb(this.betaRegularizer),gammaRegularizer:vb(this.gammaRegularizer),betaConstraint:hm(this.betaConstraint),gammaConstraint:hm(this.gammaConstraint)},e=super.getConfig();return Object.assign(t,e),t}}Dx.className="BatchNormalization",Va(Dx);class Mx extends Fg{constructor(t){if(null==t&&(t={}),super(t),this.axis=null==t.axis?-1:t.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const t of this.axis)if(!Number.isInteger(t))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==t.epsilon?.001:t.epsilon,this.center=null==t.center||t.center,this.scale=null==t.scale||t.scale,this.betaInitializer=gg(t.betaInitializer||"zeros"),this.gammaInitializer=gg(t.gammaInitializer||"ones"),this.betaRegularizer=kb(t.betaRegularizer),this.gammaRegularizer=kb(t.gammaRegularizer),this.supportsMasking=!0}build(t){const e=(t=Ng(t)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let t=0;t<this.axis.length;++t)this.axis[t]<0&&(this.axis[t]+=e);for(const t of this.axis)if(t<0||t>=e)throw new Error(`Invalid axis: ${t}`);if(this.axis.length!==Jf(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map((e=>t[e]));this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,true):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,true):this.beta=null,this.built=!0}call(t,e){const n=kg(t),r=n.shape,s=r.length;return ja((()=>{let{mean:t,variance:e}=hu(n,this.axis,!0);const a=zf(1,s);for(const t of this.axis)a[t]=r[t];const i=t=>null!=t&&t.shape.length!==s&&this.axis!==[s-1]?t.reshape(a):t;let o=i(this.gamma.read()),u=i(this.beta.read());const l=[],c=[];for(let t=0;t<s;++t)-1!==this.axis.indexOf(t)?(l.push(r[t]),c.push(1)):(l.push(1),c.push(r[t]));return t=t.tile(l),e=e.tile(l),o=o.tile(c),u=u.tile(c),Rx(n,t,e,u,o,this.epsilon)}))}getConfig(){const t={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:mg(this.betaInitializer),gammaInitializer:mg(this.gammaInitializer),betaRegularizer:vb(this.betaRegularizer),gammaRegularizer:vb(this.gammaRegularizer)},e=super.getConfig();return Object.assign(t,e),t}}Mx.className="LayerNormalization",Va(Mx);class Fx extends Fg{constructor(t){if(null==t&&(t={}),super(t),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,null==t.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof t.padding)this.padding=[[t.padding,t.padding],[t.padding,t.padding]];else{if(t.padding=t.padding,2!==t.padding.length)throw new Of(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${t.padding.length} array.`);let e,n;if("number"==typeof t.padding[0])e=[t.padding[0],t.padding[0]],n=[t.padding[1],t.padding[1]];else{if(t.padding=t.padding,2!==t.padding[0].length)throw new Of(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${t.padding[0].length} array.`);if(e=t.padding[0],2!==t.padding[1].length)throw new Of(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${t.padding[1].length} array.`);n=t.padding[1]}this.padding=[e,n]}this.inputSpec=[new Ag({ndim:4})]}computeOutputShape(t){let e,n;return t=Ng(t),"channelsFirst"===this.dataFormat?(e=null!=t[2]&&t[2]>=0?t[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=t[3]&&t[3]>=0?t[3]+this.padding[1][0]+this.padding[1][1]:null,[t[0],t[1],e,n]):(e=null!=t[1]&&t[1]>=0?t[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=t[2]&&t[2]>=0?t[2]+this.padding[1][0]+this.padding[1][1]:null,[t[0],e,n,t[3]])}call(t,e){return ja((()=>{return e=kg(t),n=this.padding,r=this.dataFormat,ja((()=>{if(4!==e.rank)throw new Of(`temporalPadding expects input tensor to be 4-D, but received a ${e.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new Of("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==r&&(r="channelsLast"),"channelsLast"!==r&&"channelsFirst"!==r)throw new Of(`Unknown data format: ${r}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let t;return t="channelsFirst"===r?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],gu(e,t)}));var e,n,r}))}getConfig(){const t={padding:this.padding,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}function Ox(t,e,n,r,s,a){return ja((()=>{let i;xm(s),vm(a),wm(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==a&&(a="max"),t=Db(t,s);const o="same"===r?"same":"valid";return i="max"===a?tu(t,e,n,o):Ri(t,e,n,o),"channelsFirst"===s&&(i=Ia(i,[0,3,1,2])),i}))}function Lx(t,e,n,r,s,a){return ja((()=>{let i;xm(s),vm(a),wm(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==a&&(a="max"),t=Mb(t,s);const o="same"===r?"same":"valid";return i="max"===a?eu(t,e,n,o):_i(t,e,n,o),"channelsFirst"===s&&(i=Ia(i,[0,4,1,2,3])),i}))}Fx.className="ZeroPadding2D",Va(Fx);class Bx extends Fg{constructor(t){if(null==t.poolSize&&(t.poolSize=2),super(t),"number"==typeof t.poolSize)this.poolSize=[t.poolSize];else{if(!Array.isArray(t.poolSize)||1!==t.poolSize.length||"number"!=typeof t.poolSize[0])throw new Of(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.poolSize)}`);this.poolSize=t.poolSize}if(em(this.poolSize,"poolSize"),null==t.strides)this.strides=this.poolSize;else if("number"==typeof t.strides)this.strides=[t.strides];else{if(!Array.isArray(t.strides)||1!==t.strides.length||"number"!=typeof t.strides[0])throw new Of(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.strides)}`);this.strides=t.strides}em(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,wm(this.padding),this.inputSpec=[new Ag({ndim:3})]}computeOutputShape(t){const e=Rb((t=Ng(t))[1],this.poolSize[0],this.padding,this.strides[0]);return[t[0],e,t[2]]}call(t,e){return ja((()=>{this.invokeCallHook(t,e),t=Mm(kg(t),2);const n=this.poolingFunction(kg(t),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return al(n,[2])}))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides},e=super.getConfig();return Object.assign(t,e),t}}class zx extends Bx{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return xm(s),wm(r),Ox(t,e,n,r,s,"max")}}zx.className="MaxPooling1D",Va(zx);class Px extends Bx{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return xm(s),wm(r),Ox(t,e,n,r,s,"avg")}}Px.className="AveragePooling1D",Va(Px);class Wx extends Fg{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(2!==t.strides.length)throw new Of(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides];em(this.poolSize,"poolSize"),em(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,xm(this.dataFormat),wm(this.padding),this.inputSpec=[new Ag({ndim:4})]}computeOutputShape(t){t=Ng(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2];return e=Rb(e,this.poolSize[0],this.padding,this.strides[0]),n=Rb(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,n]:[t[0],e,n,t[3]]}call(t,e){return ja((()=>(this.invokeCallHook(t,e),this.poolingFunction(kg(t),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class Vx extends Wx{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return xm(s),wm(r),Ox(t,e,n,r,s,"max")}}Vx.className="MaxPooling2D",Va(Vx);class Ux extends Wx{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return xm(s),wm(r),Ox(t,e,n,r,s,"avg")}}Ux.className="AveragePooling2D",Va(Ux);class Gx extends Fg{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(3!==t.strides.length)throw new Of(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides,t.strides];em(this.poolSize,"poolSize"),em(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,xm(this.dataFormat),wm(this.padding),this.inputSpec=[new Ag({ndim:5})]}computeOutputShape(t){t=Ng(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2],r="channelsFirst"===this.dataFormat?t[4]:t[3];return e=Rb(e,this.poolSize[0],this.padding,this.strides[0]),n=Rb(n,this.poolSize[1],this.padding,this.strides[1]),r=Rb(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,n,r]:[t[0],e,n,r,t[4]]}call(t,e){return ja((()=>(this.invokeCallHook(t,e),this.poolingFunction(kg(t),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class Hx extends Gx{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return xm(s),wm(r),Lx(t,e,n,r,s,"max")}}Hx.className="MaxPooling3D",Va(Hx);class jx extends Gx{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return xm(s),wm(r),Lx(t,e,n,r,s,"avg")}}jx.className="AveragePooling3D",Va(jx);class qx extends Fg{constructor(t){super(t),this.inputSpec=[new Ag({ndim:3})]}computeOutputShape(t){return[t[0],t[2]]}call(t,e){throw new Lf}}class Kx extends qx{constructor(t){super(t||{})}call(t,e){return ja((()=>{const e=kg(t);return au(e,1)}))}}Kx.className="GlobalAveragePooling1D",Va(Kx);class Xx extends qx{constructor(t){super(t||{})}call(t,e){return ja((()=>{const e=kg(t);return qo(e,1)}))}}Xx.className="GlobalMaxPooling1D",Va(Xx);class Yx extends Fg{constructor(t){super(t),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,xm(this.dataFormat),this.inputSpec=[new Ag({ndim:4})]}computeOutputShape(t){return t=t,"channelsLast"===this.dataFormat?[t[0],t[3]]:[t[0],t[1]]}call(t,e){throw new Lf}getConfig(){const t={dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class Jx extends Yx{call(t,e){return ja((()=>{const e=kg(t);return"channelsLast"===this.dataFormat?au(e,[1,2]):au(e,[2,3])}))}}Jx.className="GlobalAveragePooling2D",Va(Jx);class Zx extends Yx{call(t,e){return ja((()=>{const e=kg(t);return"channelsLast"===this.dataFormat?qo(e,[1,2]):qo(e,[2,3])}))}}Zx.className="GlobalMaxPooling2D",Va(Zx);class Qx extends Fg{constructor(t){super(t),this.layer=t.layer}build(t){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(t){null!=this.layer&&(this.layer.trainable=t)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(t){this.layer.setWeights(t)}getConfig(){const t={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},e=super.getConfig();return Object.assign(t,e),t}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(t)}static fromConfig(t,e,n={}){const r=Yg(e.layer,n);delete e.layer;const s={layer:r};return Object.assign(s,e),new t(s)}}class tw extends Qx{constructor(t){super(t),this.supportsMasking=!0}build(t){if((t=Ng(t)).length<3)throw new Of(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(t)}`);this.inputSpec=[{shape:t}];const e=[t[0]].concat(t.slice(2));this.layer.built||(this.layer.build(e),this.layer.built=!0),super.build(t)}computeOutputShape(t){const e=[(t=Ng(t))[0]].concat(t.slice(2)),n=this.layer.computeOutputShape(e),r=t[1];return[n[0],r].concat(n.slice(1))}call(t,e){return ja((()=>Kb(((t,n)=>[kg(this.layer.call(t,e)),[]]),t=kg(t),[],!1,null,null,!1,!0)[1]))}}tw.className="TimeDistributed",Va(tw);class ew extends Qx{constructor(t){super(t);const e=t.layer.getConfig(),n={};n.className=t.layer.getClassName(),n.config=e,this.forwardLayer=Yg(n),e.goBackwards=!0!==e.goBackwards;const r={};var s;if(r.className=t.layer.getClassName(),r.config=e,this.backwardLayer=Yg(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===t.mergeMode?"concat":t.mergeMode,s=this.mergeMode,Qf(ym,"BidirectionalMergeMode",s),t.weights)throw new Lf("weights support is not implemented for Bidirectional layer yet.");this._stateful=t.layer.stateful,this.returnSequences=t.layer.returnSequences,this.returnState=t.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=t.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(t){this._trainable=t,null!=this.forwardLayer&&(this.forwardLayer.trainable=t),null!=this.backwardLayer&&(this.backwardLayer.trainable=t)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(t){const e=t.length,n=Math.floor(e/2);this.forwardLayer.setWeights(t.slice(0,n)),this.backwardLayer.setWeights(t.slice(n))}computeOutputShape(t){let e,n,r,s=this.forwardLayer.computeOutputShape(t);return Array.isArray(s)&&Array.isArray(s[0])||(s=[s]),s=s,this.returnState?(r=s.slice(1),e=s[0]):e=s[0],e=e,"concat"===this.mergeMode?(e[e.length-1]*=2,n=[e]):n=null==this.mergeMode?[e,e.slice()]:[e],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[e].concat(r).concat(r.slice()):Vf(n)}apply(t,e){let n=null==e?null:e.initialState,r=null==e?null:e.constants;null==e&&(e={});const s=qb(t,n,r,this.numConstants);if(t=s.inputs,n=s.initialState,r=s.constants,Array.isArray(t)&&(n=t.slice(1),t=t[0]),(null==n||0===n.length)&&null==r)return super.apply(t,e);const a=[],i=[];if(null!=n){const t=n.length;if(t%2>0)throw new Of("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");e.initialState=n,a.push(...n);const r=n.map((t=>new Ag({shape:t.shape})));this.forwardLayer.stateSpec=r.slice(0,t/2),this.backwardLayer.stateSpec=r.slice(t/2),i.push(...r)}if(null!=r)throw new Lf("Support for constants in Bidirectional layers is not implemented yet.");const o=a[0]instanceof Rg;for(const t of a)if(t instanceof Rg!==o)throw new Of("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[t].concat(a),r=this.inputSpec.concat(i),s=this.inputSpec;this.inputSpec=r;const o=super.apply(n,e);return this.inputSpec=s,o}return super.apply(t,e)}call(t,e){return ja((()=>{const n=e.initialState;let r,s,a,i;if(null==n)r=this.forwardLayer.call(t,e),s=this.backwardLayer.call(t,e);else{const a=n.slice(0,n.length/2),i=n.slice(n.length/2);r=this.forwardLayer.call(t,Object.assign(e,{initialState:a})),s=this.backwardLayer.call(t,Object.assign(e,{initialState:i}))}return this.returnState&&(Array.isArray(r)&&(a=r.slice(1).concat(s.slice(1))),r=r[0],s=s[0]),this.returnSequences&&(s=Ou(s,1)),"concat"===this.mergeMode?i=Bm([r,s]):"sum"===this.mergeMode?i=ti(r,s):"ave"===this.mergeMode?i=Mo(.5,ti(r,s)):"mul"===this.mergeMode?i=Mo(r,s):null==this.mergeMode&&(i=[r,s]),this.returnState?null==this.mergeMode?i.concat(a):[i].concat(a):i}))}resetStates(t){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(t){km(this.forwardLayer.name,(()=>{this.forwardLayer.build(t)})),km(this.backwardLayer.name,(()=>{this.backwardLayer.build(t)})),this.built=!0}computeMask(t,e){let n;if(Array.isArray(e)&&(e=e[0]),n=this.returnSequences?null==this.mergeMode?[e,e]:e:null==this.mergeMode?[null,null]:null,this.returnState){const t=this.forwardLayer.states.map((t=>null));return Array.isArray(n)?n.concat(t).concat(t):[n].concat(t).concat(t)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(t),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(t)}getConfig(){const t={mergeMode:this.mergeMode},e=super.getConfig();return Object.assign(t,e),t}static fromConfig(t,e){const n=Yg(e.layer);if(delete e.layer,null!=e.numConstants)throw new Lf("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=e;return r.layer=n,new t(r)}}function nw(t,e){return rw(t,e)}function rw(t,e,n=new Map,r=new Set){if(null==t)return null;if(r.has(t))throw new Error("Circular references are not supported.");if(n.has(t))return n.get(t);const s=e(t);if(s.recurse&&null!==s.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(s.recurse){if(ow(t)){const s=Array.isArray(t)?[]:{};r.add(t);for(const a in t){const i=rw(t[a],e,n,r);s[a]=i}return r.delete(t),s}throw new Error(`Can't recurse into non-iterable type: ${t}`)}return n.set(t,s.value),s.value}function sw(t,e=iw){return aw(t,e)}function aw(t,e,n=new Set){const r=t[0];if(n.has(r))throw new Error("Circular references are not supported.");const s=e(t);if(s.recurse&&null!==s.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(s.recurse){if(ow(r)){const s=Array.isArray(r)?[]:{};n.add(r);for(const a in r){const r=aw(t.map((t=>t[a])),e,n);s[a]=r}return n.delete(r),s}throw new Error(`Can't recurse into non-iterable type: ${r}`)}return s.value}function iw(t){return null===t?null:ow(t[0])?{value:null,recurse:!0}:{value:t,recurse:!1}}function ow(t){return null!=t&&!ArrayBuffer.isView(t)&&(Array.isArray(t)||"object"==typeof t&&!(t instanceof Hn))}function uw(t){return t instanceof Hn?{value:t.clone(),recurse:!1}:ow(t)?{value:null,recurse:!0}:{value:t,recurse:!1}}ew.className="Bidirectional",Va(ew);class lw{constructor(t){if(this.capacity=t,this.begin=0,this.end=0,null==t)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(t<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(t),this.doubledCapacity=2*t}wrap(t){for(;t<0;)t+=this.doubledCapacity;return t%this.doubledCapacity}get(t){if(t<0)throw new RangeError("Can't get item at a negative index.");return this.data[t%this.capacity]}set(t,e){if(t<0)throw new RangeError("Can't set item at a negative index.");this.data[t%this.capacity]=e}length(){let t=this.end-this.begin;return t<0&&(t=this.doubledCapacity+t),t}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,t),this.end=this.wrap(this.end+1)}pushAll(t){for(const e of t)this.push(e)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const t=this.get(this.end);return this.set(this.end,void 0),t}unshift(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,t)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),t}shuffleExcise(t){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.wrap(this.begin+t),n=this.get(e);return this.set(e,this.pop()),n}}class cw extends lw{constructor(){super(cw.INITIAL_CAPACITY)}isFull(){return!1}push(t){super.isFull()&&this.expand(),super.push(t)}unshift(t){super.isFull()&&this.expand(),super.unshift(t)}expand(){const t=2*this.capacity,e=new Array(t),n=this.length();for(let t=0;t<n;t++)e[t]=this.get(this.wrap(this.begin+t));this.data=e,this.capacity=t,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}cw.INITIAL_CAPACITY=32;class hw{async toArray(){const t=[];let e=await this.next();for(;!e.done;)t.push(e.value),e=await this.next();return t}async toArrayForTest(){const t=this.prefetch(100),e=[];let n=await t.next();for(;!n.done;)e.push(n.value),n=await t.next();return e}async resolveFully(){let t=await this.next();for(;!t.done;)t=await this.next()}async resolveWhile(t){let e=await this.next(),n=t(e.value);for(;!e.done&&n;)e=await this.next(),n=t(e.value)}handleErrors(t){return new ww(this,t)}filter(t){return new bw(this,t)}map(t){return new xw(this,t)}mapAsync(t){return new vw(this,t)}serialMapAsync(t){return new vw(this,t).serial()}flatmap(t){return new kw(this,t)}async forEachAsync(t){return this.map(t).resolveFully()}async serialForEach(t){return this.serialMapAsync(t).resolveWhile((t=>!0===t))}rowMajorBatch(t,e=!0){return new yw(this,t,e)}columnMajorBatch(t,e=!0,n=iw){return this.rowMajorBatch(t,e).map((t=>sw(t,n)))}concatenate(t,e){return new Nw(new pw([this,t]),e)}take(t){return t<0||null==t?this:new gw(this,t)}skip(t){return t<0||null==t?this:new mw(this,t)}prefetch(t){return new Cw(this,t)}shuffle(t,e){return new $w(this,t,e)}serial(){return new fw(this)}}class pw extends hw{constructor(t){super(),this.items=t,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const t=this.items[this.trav];return this.trav++,{value:(e=t,nw(e,uw)),done:!1};var e}}class dw extends hw{constructor(t){super(),this.nextFn=t}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(t){throw t.message=`Error thrown while iterating through a dataset: ${t.message}`,t}}}class fw extends hw{constructor(t){super(),this.upstream=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class mw extends hw{constructor(t,e){super(),this.upstream=t,this.maxCount=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const t=await this.upstream.next();if(t.done)return t;qa(t.value)}return this.upstream.next()}}class gw extends hw{constructor(t,e){super(),this.upstream=t,this.maxCount=e,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class yw extends hw{constructor(t,e,n=!0){super(),this.upstream=t,this.batchSize=e,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const t=[];for(;t.length<this.batchSize;){const e=await this.upstream.next();if(e.done)return this.enableSmallLastBatch&&t.length>0?{value:t,done:!1}:{value:null,done:!0};t.push(e.value)}return{value:t,done:!1}}}class bw extends hw{constructor(t,e){super(),this.upstream=t,this.predicate=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const t=await this.upstream.next();if(t.done||this.predicate(t.value))return t;qa(t.value)}}}class xw extends hw{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return`${this.upstream.summary()} -> Map`}async next(){const t=await this.upstream.next();if(t.done)return{value:null,done:!0};const e=ur(t.value),n=this.transform(t.value),r=ur(n);for(const t of e)or(t,r)||t.dispose();return{value:n,done:!1}}}class ww extends hw{constructor(t,e){super(),this.upstream=t,this.handler=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(t){if(!this.handler(t))return{value:null,done:!0}}}}class vw extends hw{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const t=await this.upstream.next();if(t.done)return{value:null,done:!0};const e=ur(t.value),n=await this.transform(t.value),r=ur(n);for(const t of e)or(t,r)||t.dispose();return{value:n,done:!1}}}class Iw extends hw{constructor(){super(),this.outputQueue=new cw,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class kw extends Iw{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const t=await this.upstream.next();if(t.done)return!1;const e=ur(t.value),n=this.transform(t.value),r=ur(n);this.outputQueue.pushAll(n);for(const t of e)or(t,r)||t.dispose();return!0}}class Nw extends hw{constructor(t,e){super(),this.baseErrorHandler=e,this.lastRead=null,this.iterator=null,this.moreIterators=t}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(t){if(await t,null==this.iterator){const t=await this.moreIterators.next();if(t.done)return{value:null,done:!0};this.iterator=t.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const e=await this.iterator.next();return e.done?(this.iterator=null,this.readFromChain(t)):e}}var Sw,Ew;(Ew=Sw||(Sw={}))[Ew.FAIL=0]="FAIL",Ew[Ew.SHORTEST=1]="SHORTEST",Ew[Ew.LONGEST=2]="LONGEST";class Cw extends hw{constructor(t,e){super(),this.upstream=t,this.bufferSize=e,this.buffer=new lw(e)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const t=this.upstream.next();this.buffer.push(t)}}next(){return this.refill(),this.buffer.shift()}}class $w extends Cw{constructor(t,e,n){super(t,e),this.upstream=t,this.windowSize=e,this.upstreamExhausted=!1,this.random=wu.alea(n||An().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(t){return Math.floor(this.random()*t)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const t=this.chooseIndex(),e=await this.buffer.shuffleExcise(t);if(!e.done)return this.refill(),e;this.upstreamExhausted=!0}return{value:null,done:!0}}}class Tw{constructor(){this.size=null}batch(t,e=!0){const n=this;let r;return u(t>0,(()=>`batchSize needs to be positive, but it is\n      ${t}`)),r=this.size===1/0||null==this.size?this.size:e?Math.ceil(this.size/t):Math.floor(this.size/t),Aw((async()=>(await n.iterator()).columnMajorBatch(t,e,Rw)),r)}concatenate(t){const e=this;let n;return n=this.size===1/0||t.size===1/0?1/0:null!=this.size&&null!=t.size?this.size+t.size:null,Aw((async()=>(await e.iterator()).concatenate(await t.iterator())),n)}filter(t){const e=this;let n;return n=this.size===1/0?1/0:null,Aw((async()=>(await e.iterator()).filter((e=>ja((()=>t(e)))))),n)}async forEachAsync(t){return(await this.iterator()).forEachAsync(t)}map(t){const e=this;return Aw((async()=>(await e.iterator()).map((e=>ja((()=>t(e)))))),this.size)}mapAsync(t){const e=this;return Aw((async()=>(await e.iterator()).mapAsync(t)),this.size)}prefetch(t){if(null==t)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const e=this;return Aw((async()=>(await e.iterator()).prefetch(t)),this.size)}repeat(t){const e=this;let n;return n=null!=this.size&&t>0?this.size*t:0===t?0:null!=this.size&&(void 0===t||t<0)?1/0:null,Aw((async()=>{const n=new dw((async()=>({value:await e.iterator(),done:!1})));var r,s;return r=n.take(t),new Nw(r,s)}),n)}skip(t){const e=this;let n;return n=null!=this.size&&t>=0&&this.size>=t?this.size-t:null!=this.size&&(this.size<t||void 0===t||t<0)?0:null,Aw((async()=>(await e.iterator()).skip(t)),n)}shuffle(t,e,n=!0){if(null==t||t<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const r=this,s=wu.alea(e||An().toString());return Aw((async()=>{let e=s.int32();return n&&(e+=s.int32()),(await r.iterator()).shuffle(t,e.toString())}),this.size)}take(t){const e=this;let n;return n=null!=this.size&&this.size>t?t:null!=this.size&&this.size<=t?this.size:null,Aw((async()=>(await e.iterator()).take(t)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function Aw(t,e=null){return new class extends Tw{constructor(){super(...arguments),this.size=e}async iterator(){return t()}}}function Rw(t){if(null===t)return null;const e=t[0];if(null==(n=e)||null===(r=n)||"object"!=typeof r&&"function"!=typeof r||Array.isArray(n)||"object"==typeof n&&n instanceof Hn||N(n)){return{value:function(t){if(0===t.length)throw new Error("Can't make a batch of zero elements.");return t[0]instanceof Hn?il(t):ks(t)}(t),recurse:!1}}var n,r;return{value:null,recurse:!0}}Tw.MAX_BUFFER_SIZE=1e4;Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");function _w(t,e){Array.isArray(t)||(t=[t]),t.forEach((t=>{null!=t&&u("complex64"!==t.dtype,(()=>`${e} does not support complex64 tensors in the CPU backend.`))}))}const Dw=oc,Mw=rh,Fw=sh,Ow=ah,Lw=yl;class Bw extends r{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new n(this,Ga())}write(t,e,n){this.firstUse&&(this.firstUse=!1,U().get("IS_NODE")&&Jc("\n============================\nHi there 👋. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));const r={};return this.data.set(r,{values:t,dtype:n,refCount:1}),r}makeTensorInfo(t,e,n){let r;if("string"===e&&null!=n&&n.length>0&&E(n[0])){const s=n.map((t=>Rn(t)));r=this.write(s,t,e)}else r=this.write(n,t,e);return{dataId:r,shape:t,dtype:e}}incRef(t){this.data.get(t).refCount++}decRef(t){if(this.data.has(t)){this.data.get(t).refCount--}}move(t,e,n,r){this.data.set(t,{values:e,dtype:r,refCount:1})}numDataIds(){return this.data.numDataIds()}async read(t){return this.readSync(t)}readSync(t){const{dtype:e,complexTensorInfos:n}=this.data.get(t);if("complex64"===e){return Zc(this.readSync(n.real.dataId),this.readSync(n.imag.dataId))}return this.data.get(t).values}bufferSync(t){const e=this.readSync(t.dataId);let n=e;if("string"===t.dtype)try{n=e.map((t=>_n(t)))}catch(t){throw new Error("Failed to decode encoded string bytes into utf-8")}return ua(t.shape,t.dtype,n)}makeOutput(t,e,n){const r=this.write(t,e,n);return Ga().makeTensorFromDataId(r,e,n,this)}disposeData(t){if(this.data.has(t)){const{complexTensorInfos:e}=this.data.get(t);null!=e&&(this.disposeData(e.real.dataId),this.disposeData(e.imag.dataId)),this.data.delete(t)}}disposeIntermediateTensorInfo(t){const e=t.dataId;if(this.data.has(e)){const t=this.data.get(e);t.refCount--,t.refCount<1&&this.disposeData(e)}}async time(t){const e=An();t();return{kernelMs:An()-e}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}stridedSlice(t,e,n,r){_w(t,"stridedSlice");const s=Aa(e,n,r);if(s.some((t=>0===t)))return ks([],s);const a=ua(s,t.dtype),i=this.bufferSync(t);for(let t=0;t<a.size;t++){const n=a.indexToLoc(t),s=new Array(n.length);for(let t=0;t<s.length;t++)s[t]=n[t]*r[t]+e[t];a.set(i.get(...s),...n)}return a.toTensor()}diag(t){const e=this.readSync(t.dataId),n=ua([t.size,t.size],t.dtype),r=n.values;for(let n=0;n<e.length;n++)r[n*t.size+n]=e[n];return n.toTensor()}unstack(t,e){const n=t.shape[e],r=new Array(t.rank-1);let s=0;for(let n=0;n<t.rank;n++)n!==e&&(r[s++]=t.shape[n]);const a=new Array(t.rank).fill(0),i=t.shape.slice();i[e]=1;const o=new Array(n);for(let n=0;n<o.length;n++)a[e]=n,o[n]=Hu(t,a,i).reshape(r);return o}reverse(t,e){_w(t,"reverse");const n=ua(t.shape,t.dtype),r=this.bufferSync(t);for(let s=0;s<n.size;s++){const a=n.indexToLoc(s),i=a.slice();e.forEach((e=>i[e]=t.shape[e]-1-i[e])),n.set(r.get(...i),...a)}return n.toTensor()}neg(t){return _w(t,"neg"),Mo(Fo(-1),t)}addN(t){_w(t,"addN");const e=t.map((t=>this.readSync(t.dataId))),n=ua(t[0].shape,t[0].dtype),r=n.values;for(let n=0;n<t.length;n++){const t=e[n];for(let e=0;e<r.length;e++)r[e]+=t[e]}return n.toTensor()}softmax(t,e){const n=x([e],t.shape),r=qo(t,n),s=si(r.shape,n),a=Ko(t,r.reshape(s)),i=bo(a),o=this.sum(i,n).reshape(s);return oo(i,o)}pow(t,e){return _w([t,e],"pow"),this.broadcastedBinaryOp(t,e,t.dtype,((t,e)=>Math.pow(t,e)))}floorDiv(t,e){_w([t,e],"floorDiv");return this.broadcastedBinaryOp(t,e,"int32",((t,e)=>Math.floor(t/e)))}sum(t,e){_w(t,"sum"),ai("sum",e,t.rank);const[n,r]=ri(t.shape,e),s=ru(n,sr(t.dtype,"int32")),a=p(r),i=this.readSync(s.dataId),o=this.readSync(t.dataId);for(let t=0;t<i.length;++t){const e=t*a;let n=0;for(let t=0;t<a;++t)n+=o[e+t];i[t]=n}return s}prod(t,e){_w(t,"sum");const[n,r]=ri(t.shape,e),s=ru(n,sr(t.dtype,"int32")),a=p(r),i=this.readSync(s.dataId),o=this.readSync(t.dataId);for(let t=0;t<i.length;++t){const e=t*a;let n=1;for(let t=0;t<a;++t)n*=o[e+t];i[t]=n}return s}unsortedSegmentSum(t,e,n){_w(t,"unsortedSegmentSum");const r=[],s=t.rank-e.rank;for(let t=0;t<s;++t)e=e.expandDims(t+1);for(let s=0;s<n;++s){const n=Fo(s,"int32"),a=ho(n,e).asType("float32").mul(t).sum(0);r.push(a)}return il(r)}argMin(t,e){_w(t,"argMin");const n=[e];ai("argMin",n,t.rank);const[r,s]=ri(t.shape,n),a=ru(r,"int32"),i=p(s),o=this.readSync(a.dataId),u=this.readSync(t.dataId);for(let t=0;t<o.length;++t){const e=t*i;let n=u[e],r=0;for(let t=0;t<i;++t){const s=u[e+t];s<n&&(n=s,r=t)}o[t]=r}return a}argMax(t,e){_w(t,"argMax");const n=[e];ai("argMax",n,t.rank);const[r,s]=ri(t.shape,n),a=ru(r,"int32"),i=p(s),o=this.readSync(a.dataId),u=this.readSync(t.dataId);for(let t=0;t<o.length;++t){const e=t*i;let n=u[e],r=0;for(let t=0;t<i;++t){const s=u[e+t];s>n&&(n=s,r=t)}o[t]=r}return a}cumsum(t,e,n,r){if(_w(t,"cumsum"),e!==t.rank-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${t.rank-1} but got axis=${e}`);const s=sr(t.dtype,"int32"),a=ru(t.shape,s),i=this.readSync(a.dataId),o=this.readSync(t.dataId),u=t.shape[t.rank-1],l=r?(t,e)=>t+u-e-1:(t,e)=>t+e;for(let t=0;t<o.length;t+=u)for(let e=0;e<u;e++){const r=l(t,e);if(0===e)i[r]=n?0:o[r];else{const s=l(t,e-1);i[r]=n?o[s]+i[s]:o[r]+i[s]}}return a}equal(t,e){return _w([t,e],"equal"),this.broadcastedBinaryOp(t,e,"bool",((t,e)=>t===e?1:0))}notEqual(t,e){return _w([t,e],"notEqual"),this.broadcastedBinaryOp(t,e,"bool",((t,e)=>t!==e?1:0))}less(t,e){return _w([t,e],"less"),this.broadcastedBinaryOp(t,e,"bool",((t,e)=>t<e?1:0))}lessEqual(t,e){return _w([t,e],"lessEqual"),this.broadcastedBinaryOp(t,e,"bool",((t,e)=>t<=e?1:0))}greater(t,e){return _w([t,e],"greater"),this.broadcastedBinaryOp(t,e,"bool",((t,e)=>t>e?1:0))}greaterEqual(t,e){return _w([t,e],"greaterEqual"),this.broadcastedBinaryOp(t,e,"bool",((t,e)=>t>=e?1:0))}logicalAnd(t,e){return _w([t,e],"logicalAnd"),this.broadcastedBinaryOp(t,e,"bool",((t,e)=>t&&e))}logicalOr(t,e){return _w([t,e],"logicalOr"),this.broadcastedBinaryOp(t,e,"bool",((t,e)=>t||e))}select(t,e,n){_w([t,e,n],"select");const r=this.readSync(t.dataId),s=this.readSync(e.dataId),a=this.readSync(n.dataId),i=ru(e.shape,sr(e.dtype,n.dtype)),o=this.readSync(i.dataId);let u=0;const l=0===t.rank||t.rank>1||1===e.rank?1:p(e.shape.slice(1));for(let t=0;t<r.length;t++)for(let e=0;e<l;e++)1===r[t]?o[u++]=s[t]:o[u++]=a[t];return i}where(t){_w([t],"where");const e=this.readSync(t.dataId);return Lw(t.shape,e)}topk(t,e,n){_w(t,"topk");const r=this.readSync(t.dataId);return Ow(r,t.shape,t.dtype,e,n)}min(t,e){_w(t,"min"),ai("min",e,t.rank);const[n,r]=ri(t.shape,e),s=ru(n,t.dtype),a=p(r),i=this.readSync(s.dataId),o=this.readSync(t.dataId);for(let t=0;t<i.length;++t){const e=t*a;let n=o[e];for(let t=0;t<a;++t){const r=o[e+t];r<n&&(n=r)}i[t]=n}return s}minimum(t,e){return _w([t,e],"minimum"),this.broadcastedBinaryOp(t,e,t.dtype,((t,e)=>Math.min(t,e)))}mod(t,e){return _w([t,e],"mod"),this.broadcastedBinaryOp(t,e,t.dtype,((t,e)=>{const n=t%e;return t<0&&e<0||t>=0&&e>=0?n:(n+e)%e}))}maximum(t,e){return _w([t,e],"maximum"),this.broadcastedBinaryOp(t,e,t.dtype,((t,e)=>Math.max(t,e)))}all(t,e){_w(t,"all"),ai("all",e,t.rank);const[n,r]=ri(t.shape,e),s=ru(n,t.dtype),a=p(r),i=this.readSync(s.dataId),o=this.readSync(t.dataId);for(let t=0;t<i.length;++t){const e=t*a;let n=o[e];for(let t=0;t<a;++t){const r=o[e+t];n=n&&r}i[t]=n}return s}any(t,e){_w(t,"any"),ai("any",e,t.rank);const[n,r]=ri(t.shape,e),s=ru(n,t.dtype),a=p(r),i=this.readSync(s.dataId),o=this.readSync(t.dataId);for(let t=0;t<i.length;++t){const e=t*a;let n=o[e];for(let t=0;t<a;++t){const r=o[e+t];n=n||r}i[t]=n}return s}squaredDifference(t,e){return _w([t,e],"squaredDifference"),this.broadcastedBinaryOp(t,e,t.dtype,((t,e)=>{const n=t-e;return n*n}))}eluDer(t,e){_w([t,e],"eluDer");const n=new Float32Array(e.size),r=this.readSync(e.dataId),s=this.readSync(t.dataId);for(let t=0;t<r.length;++t){const e=r[t];n[t]=e>=1?s[t]:s[t]*(e+1)}return this.makeOutput(n,e.shape,"float32")}atan2(t,e){return _w([t,e],"atan2"),this.broadcastedBinaryOp(t,e,t.dtype,((t,e)=>Math.atan2(t,e)))}tile(t,e){return _w(t,"tile"),Fw(this.bufferSync(t),e)}gather(t,e,n){_w([t,e],"gather");const r=t.shape.slice(),s=this.readSync(e.dataId);r[n]=s.length;const a=ua(r,t.dtype),i=this.bufferSync(t);for(let t=0;t<a.size;++t){const e=a.indexToLoc(t),r=e.slice();r[n]=s[e[n]];const o=i.locToIndex(r);a.values[t]=i.values[o]}return a.toTensor()}batchToSpaceND(t,e,n){_w([t],"batchToSpaceND");const r=e.reduce(((t,e)=>t*e)),s=Gc(t.shape,e,r),a=Hc(s.length,e.length),i=jc(t.shape,e,r),o=qc(n,e.length),u=Kc(i,n,e.length);return Ia(t.reshape(s),a).reshape(i).slice(o,u)}pool3d(t,e,n){_w(t,"pool3d");const r=e.strideDepth,s=e.strideHeight,a=e.strideWidth,i=e.dilationDepth,o=e.dilationHeight,u=e.dilationWidth,l=e.effectiveFilterDepth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,p=e.padInfo.front,d=e.padInfo.top,f=e.padInfo.left,m="max"===n?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,g=this.readSync(t.dataId),y=ua(e.outShape,t.dtype),b=y.values,x=e.outShape[1]*e.outShape[2]*e.outShape[3]*e.outShape[4],w=e.outShape[2]*e.outShape[3]*e.outShape[4],v=e.outShape[3]*e.outShape[4],I=e.outShape[4];for(let y=0;y<e.batchSize;++y){const k=y*x,N=y*t.strides[0];for(let y=0;y<e.inChannels;++y)for(let x=0;x<e.outDepth;++x){const S=x*r-p;let E=S;for(;E<0;)E+=i;const C=Math.min(e.inDepth,l+S),$=k+x*w;for(let r=0;r<e.outHeight;++r){const l=r*s-d;let p=l;for(;p<0;)p+=o;const x=Math.min(e.inHeight,c+l),w=$+r*v;for(let r=0;r<e.outWidth;++r){const s=r*a-f;let l=s;for(;l<0;)l+=u;const c=Math.min(e.inWidth,h+s),d=w+r*I;let v=m,k=0,S=0;for(let e=E;e<C;e+=i){const r=N+e*t.strides[1];for(let e=p;e<x;e+=o){const s=r+e*t.strides[2];for(let e=l;e<c;e+=u){const r=g[s+e*t.strides[3]+y];if("max"===n&&r>v?v=r:"avg"===n&&(k+=r,S++),isNaN(v))break}if(isNaN(v))break}if(isNaN(v))break}b[d+y]="avg"===n?k/S:v}}}}return y.toTensor()}avgPool3d(t,e){return _w(t,"avgPool3d"),this.pool3d(t,e,"avg").toFloat()}avgPool3dBackprop(t,e,n){_w([t,e],"avgPool3dBackprop");const r=n.strideDepth,s=n.strideHeight,a=n.strideWidth,i=n.filterDepth,o=n.filterHeight,u=n.filterWidth,l=n.dilationDepth,c=n.dilationHeight,h=n.dilationWidth,p=n.effectiveFilterDepth,d=n.effectiveFilterHeight,f=n.effectiveFilterWidth,m=p-1-n.padInfo.front,g=f-1-n.padInfo.left,y=d-1-n.padInfo.top,b=ua(e.shape,"float32"),x=1/(i*o*u),w=this.bufferSync(t);for(let t=0;t<n.batchSize;++t)for(let e=0;e<n.inChannels;++e)for(let i=0;i<n.inDepth;++i)for(let o=0;o<n.inHeight;++o)for(let u=0;u<n.inWidth;++u){const v=i-m,I=o-y,k=u-g;let N=0;for(let i=0;i<p;i+=l){const o=(v+i)/r;if(!(o<0||o>=n.outDepth||Math.floor(o)!==o))for(let r=0;r<d;r+=c){const i=(I+r)/s;if(!(i<0||i>=n.outHeight||Math.floor(i)!==i))for(let r=0;r<f;r+=h){const s=(k+r)/a;if(s<0||s>=n.outWidth||Math.floor(s)!==s)continue;N+=w.get(t,o,i,s,e)}}}b.set(N*x,t,i,o,u,e)}return b.toTensor()}maxPool3d(t,e){return _w(t,"maxPool3d"),this.pool3d(t,e,"max").toFloat()}maxPool3dPositions(t,e){const n=ua(e.outShape,"int32"),r=e.strideDepth,s=e.strideHeight,a=e.strideWidth,i=e.dilationDepth,o=e.dilationHeight,u=e.dilationWidth,l=e.effectiveFilterDepth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,p=e.padInfo.front,d=e.padInfo.top,f=e.padInfo.left,m=this.bufferSync(t);for(let t=0;t<e.batchSize;++t)for(let g=0;g<e.inChannels;++g)for(let y=0;y<e.outDepth;++y){const b=y*r-p;let x=b;for(;x<0;)x+=i;const w=Math.min(e.inDepth,l+b);for(let r=0;r<e.outHeight;++r){const l=r*s-d;let p=l;for(;p<0;)p+=o;const v=Math.min(e.inHeight,c+l);for(let s=0;s<e.outWidth;++s){const d=s*a-f;let I=d;for(;I<0;)I+=u;const k=Math.min(e.inWidth,h+d);let N=Number.NEGATIVE_INFINITY,S=-1;for(let e=x;e<w;e+=i){const n=e-b;for(let r=p;r<v;r+=o){const s=r-l;for(let a=I;a<k;a+=u){const i=a-d,o=m.get(t,e,r,a,g);o>=N&&(N=o,S=n*c*h+s*c+i)}}}n.set(S,t,y,r,s,g)}}}return n.toTensor()}maxPool3dBackprop(t,e,n,r){_w([e,n],"maxPool3dBackprop");const s=this.maxPool3dPositions(e,r),a=r.strideDepth,i=r.strideHeight,o=r.strideWidth,u=r.dilationDepth,l=r.dilationHeight,c=r.dilationWidth,h=r.effectiveFilterDepth,p=r.effectiveFilterHeight,d=r.effectiveFilterWidth,f=h-1-r.padInfo.front,m=d-1-r.padInfo.left,g=p-1-r.padInfo.top,y=ua(e.shape,"float32"),b=this.bufferSync(s),x=this.bufferSync(t);for(let t=0;t<r.batchSize;++t)for(let e=0;e<r.inChannels;++e)for(let n=0;n<r.inDepth;++n)for(let s=0;s<r.inHeight;++s)for(let w=0;w<r.inWidth;++w){const v=n-f,I=s-g,k=w-m;let N=0;for(let n=0;n<h;n+=u){const s=(v+n)/a;if(!(s<0||s>=r.outDepth||Math.floor(s)!==s))for(let a=0;a<p;a+=l){const u=(I+a)/i;if(!(u<0||u>=r.outHeight||Math.floor(u)!==u))for(let i=0;i<d;i+=c){const l=(k+i)/o;if(l<0||l>=r.outWidth||Math.floor(l)!==l)continue;const c=h*p*d-1-b.get(t,s,u,l,e)===n*p*d+a*d+i?1:0;if(0===c)continue;N+=x.get(t,s,u,l,e)*c}}}y.set(N,t,n,s,w,e)}return y.toTensor()}resizeBilinear(t,e,n,r){_w(t,"resizeBilinear");const[s,a,i,o]=t.shape,u=this.readSync(t.dataId),l=new Float32Array(p([s,e,n,o])),c=[r&&e>1?a-1:a,r&&n>1?i-1:i],h=[r&&e>1?e-1:e,r&&n>1?n-1:n];let d=0;const f=c[0]/h[0],m=c[1]/h[1];for(let r=0;r<s;r++)for(let s=0;s<e;s++){const e=f*s,c=Math.floor(e),h=e-c,p=Math.min(a-1,Math.ceil(e)),g=r*t.strides[0]+c*t.strides[1],y=r*t.strides[0]+p*t.strides[1];for(let e=0;e<n;e++){const n=m*e,r=Math.floor(n),s=n-r,a=Math.min(i-1,Math.ceil(n)),c=g+r*t.strides[2],p=y+r*t.strides[2],f=g+a*t.strides[2],b=y+a*t.strides[2];for(let t=0;t<o;t++){const e=u[c+t],n=u[p+t],r=e+(u[f+t]-e)*s,a=r+(n+(u[b+t]-n)*s-r)*h;l[d++]=a}}}return ks(l,[s,e,n,o])}resizeBilinearBackprop(t,e,n){_w([t,e],"resizeBilinearBackprop");const[r,s,a,i]=e.shape,[,o,u]=t.shape,l=new Float32Array(r*s*a*i),c=[n&&o>1?s-1:s,n&&u>1?a-1:a],h=[n&&o>1?o-1:o,n&&u>1?u-1:u],p=c[0]/h[0],d=c[1]/h[1],f=this.readSync(t.dataId);let m=0;for(let t=0;t<r;t++){const n=t*e.strides[0];for(let t=0;t<o;t++){const r=t*p,o=Math.floor(r),c=Math.min(Math.ceil(r),s-1),h=n+o*e.strides[1],g=n+c*e.strides[1],y=r-o,b=1-y;for(let t=0;t<u;t++){const n=t*d,r=Math.floor(n),s=Math.min(Math.ceil(n),a-1),o=n-r,u=1-o,c=h+r*e.strides[2],p=h+s*e.strides[2],x=g+r*e.strides[2],w=g+s*e.strides[2],v=b*u,I=b*o,k=y*u,N=y*o;for(let t=0;t<i;t++){const e=f[m++];l[c+t]+=e*v,l[p+t]+=e*I,l[x+t]+=e*k,l[w+t]+=e*N}}}}return pl(l,[r,a,s,i],e.dtype)}resizeNearestNeighbor(t,e,n,r){_w(t,"resizeNearestNeighbor");const[s,a,i,o]=t.shape,u=this.readSync(t.dataId),l=new Float32Array(s*e*n*o),c=[r&&e>1?a-1:a,r&&n>1?i-1:i],h=[r&&e>1?e-1:e,r&&n>1?n-1:n],p=c[0]/h[0],d=c[1]/h[1];let f=0;for(let c=0;c<s;c++){const s=c*t.strides[0];for(let c=0;c<e;c++){const e=p*c,h=s+Math.min(a-1,r?Math.round(e):Math.floor(e))*t.strides[1];for(let e=0;e<n;e++){const n=d*e,s=h+Math.min(i-1,r?Math.round(n):Math.floor(n))*t.strides[2];for(let t=0;t<o;t++){const e=u[s+t];l[f++]=e}}}}return ks(l,[s,e,n,o],t.dtype)}resizeNearestNeighborBackprop(t,e,n){_w([t,e],"resizeNearestNeighborBackprop");const[r,s,a,i]=e.shape,[,o,u]=t.shape,l=new Float32Array(r*s*a*i),c=this.readSync(t.dataId),h=[n&&o>1?s-1:s,n&&u>1?a-1:a],p=[n&&o>1?o-1:o,n&&u>1?u-1:u],d=h[0]/p[0],f=h[1]/p[1],m=1/d,g=1/f,y=2*Math.ceil(m)+2,b=2*Math.ceil(g)+2;for(let h=0;h<r;h++){const r=h*e.strides[0];for(let h=0;h<s;h++){const p=r+h*e.strides[1],x=Math.floor(h*m),w=Math.floor(x-y/2);for(let m=0;m<a;m++){const x=p+m*e.strides[2],v=Math.floor(m*g),I=Math.floor(v-b/2);for(let e=0;e<i;e++){let i=0;for(let l=0;l<y;l++){const p=l+w;if(p<0||p>=o)continue;const g=r+p*t.strides[1],y=p*d;if(h===Math.min(s-1,n?Math.round(y):Math.floor(y)))for(let r=0;r<b;r++){const s=r+I;if(s<0||s>=u)continue;const o=g+s*t.strides[2],l=s*f;m===Math.min(a-1,n?Math.round(l):Math.floor(l))&&(i+=c[o+e])}}l[x+e]=i}}}}return pl(l,e.shape,e.dtype)}localResponseNormalization4D(t,e,n,r,s){_w(t,"localResponseNormalization4D");const a=t.shape[3],i=a-1,o=this.readSync(t.dataId),u=t.size,l=new Float32Array(u);function c(t){const n=t%a;let r=t-n+Math.max(0,n-e);const s=t-n+Math.min(n+e,i);let u=0;for(;r<=s;r++){const t=o[r];u+=t*t}return u}for(let t=0;t<u;t++){const e=c(t),a=o[t]*Math.pow(n+r*e,-s);l[t]=a}return pl(l,t.shape)}LRNGrad(t,e,n,r,s,a,i){_w(t,"LRNGrad");const o=t.shape[3],u=this.readSync(t.dataId),l=this.readSync(e.dataId),c=this.readSync(n.dataId),h=new Float32Array(t.size),p=t.size;for(let t=0;t<p;t++){const e=t%o,n=t-e+Math.max(0,e-r),p=t-e+Math.min(o,e+r+1);let d=0;for(let t=n;t<p;t++)d+=Math.pow(l[t],2);d=a*d+s;for(let e=n;e<p;e++){let n=-2*a*i*l[e]*c[t]/d;t===e&&(n+=Math.pow(d,-i)),n*=u[t],h[e]+=n}}return pl(h,t.shape)}multinomial(t,e,n,r){_w(t,"multinomial");const s=e?t:Yu(t),a=s.shape[0],i=s.shape[1],o=ru([a,n],"int32"),u=this.readSync(o.dataId),l=this.readSync(s.dataId);for(let t=0;t<a;++t){const e=t*i,s=new Float32Array(i-1);s[0]=l[e];for(let t=1;t<s.length;++t)s[t]=s[t-1]+l[e+t];const a=wu.alea(r.toString()),o=t*n;for(let t=0;t<n;++t){const e=a();u[o+t]=s.length;for(let n=0;n<s.length;n++)if(e<s[n]){u[o+t]=n;break}}}return o}oneHot(t,e,n,r){_w(t,"oneHot");const s=new Float32Array(t.size*e);s.fill(r);const a=this.readSync(t.dataId);for(let r=0;r<t.size;++r)a[r]>=0&&a[r]<e&&(s[r*e+a[r]]=n);return hl(s,[t.size,e],"int32")}nonMaxSuppression(t,e,n,r,s){_w(t,"nonMaxSuppression");const a=this.readSync(t.dataId),i=this.readSync(e.dataId);return Dw(a,i,n,r,s)}depthToSpace(t,e,n){u("NHWC"===n,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${n}`)),u(e>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${e}`));const r=t.shape[0],s=t.shape[1],a=t.shape[2],i=t.shape[3],o=s*e,l=a*e,c=i/(e*e),h=this.readSync(t.dataId),p=new Float32Array(r*o*l*c);let d=0;for(let t=0;t<r;++t)for(let n=0;n<o;++n){const r=Math.floor(n/e),o=n%e;for(let n=0;n<l;++n){const u=Math.floor(n/e),l=(o*e+n%e)*c;for(let e=0;e<c;++e){const n=e+l+i*(u+a*(r+s*t));p[d++]=h[n]}}}return pl(p,[r,o,l,c])}broadcastedBinaryOp(t,e,n,r){const s=co(t.shape,e.shape),a=ua(s,n),i=this.readSync(t.dataId),o=this.readSync(e.dataId),u=uo(t.shape,s),l=uo(e.shape,s),c=a.values;if(u.length+l.length===0)for(let t=0;t<c.length;++t)c[t]=r(i[t%i.length],o[t%o.length]);else{const n=this.bufferSync(t),s=this.bufferSync(e);for(let h=0;h<c.length;++h){const p=a.indexToLoc(h),d=p.slice(-t.rank);u.forEach((t=>d[t]=0));const f=n.locToIndex(d),m=p.slice(-e.rank);l.forEach((t=>m[t]=0));const g=s.locToIndex(m);c[h]=r(i[f],o[g])}}return a.toTensor()}split(t,e,n){return Mw(t,e,n)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}cropAndResize(t,e,n,r,s,a){const[i,o,u,l]=t.shape,c=e.shape[0],[h,p]=r,d=ua([c,h,p,l],"float32"),f=this.readSync(e.dataId),m=this.readSync(n.dataId),g=this.readSync(t.dataId),y=t.strides,b=d.strides;for(let t=0;t<c;t++){const e=4*t,n=f[e],r=f[e+1],c=f[e+2],x=f[e+3],w=m[t];if(w>=i)continue;const v=h>1?(c-n)*(o-1)/(h-1):0,I=p>1?(x-r)*(u-1)/(p-1):0;for(let e=0;e<h;e++){const i=h>1?n*(o-1)+e*v:.5*(n+c)*(o-1);if(i<0||i>o-1)for(let n=0;n<p;n++)for(let r=0;r<l;r++){const s=r+n*b[2]+e*b[1]+t*b[0];d.values[s]=a}else if("bilinear"===s){const n=Math.floor(i),s=Math.ceil(i),o=i-n;for(let i=0;i<p;i++){const c=p>1?r*(u-1)+i*I:.5*(r+x)*(u-1);if(c<0||c>u-1){for(let n=0;n<l;n++){const r=n+i*b[2]+e*b[1]+t*b[0];d.values[r]=a}continue}const h=Math.floor(c),f=Math.ceil(c),m=c-h;for(let r=0;r<l;r++){let a=r+h*y[2]+n*y[1]+w*y[0];const u=g[a];a=r+f*y[2]+n*y[1]+w*y[0];const l=g[a];a=r+h*y[2]+s*y[1]+w*y[0];const c=g[a];a=r+f*y[2]+s*y[1]+w*y[0];const p=u+(l-u)*m,x=c+(g[a]-c)*m;a=r+i*b[2]+e*b[1]+t*b[0],d.values[a]=p+(x-p)*o}}}else for(let n=0;n<p;++n){const s=p>1?r*(u-1)+n*I:.5*(r+x)*(u-1);if(s<0||s>u-1){for(let r=0;r<l;r++){const s=r+n*b[2]+e*b[1]+t*b[0];d.values[s]=a}continue}const o=Math.round(s),c=Math.round(i);for(let r=0;r<l;r++){const s=r+o*y[2]+c*y[1]+w*y[0],a=r+n*b[2]+e*b[1]+t*b[0];d.values[a]=g[s]}}}}return d.toTensor()}sparseToDense(t,e,n,r){const{sliceRank:s,numUpdates:a,sliceSize:i,strides:o,outputSize:u}=Ca(0,t,n);return this.scatter(t,e,n,u,i,a,s,o,r,!1)}gatherND(t,e){const n=e.shape,r=n[n.length-1],[s,a,i,o]=Sa(t,e);if(0===a)return ks([],s,t.dtype);const u=new Wn([a,i],t.dtype),l=this.readSync(e.dataId),c=this.readSync(t.dataId);for(let e=0;e<a;e++){const n=[];let s=0;for(let t=0;t<r;t++){const a=l[e*r+t];s+=a*o[t],n.push(a)}if(s<0||s>=t.size/i)throw new Error(`Invalid indices: ${n} does not index into ${t.shape}`);for(let t=0;t<i;t++)u.values[e*i+t]=c[s*i+t]}return u.toTensor().reshape(s)}scatterND(t,e,n){const{sliceRank:r,numUpdates:s,sliceSize:a,strides:i,outputSize:o}=Ca(0,t,n),u=Fo(0);return this.scatter(t,e,n,o,a,s,r,i,u,!0)}onesLike(t){if("string"===t.dtype)throw new Error("onesLike is not supported for string tensors");return ko(t.shape,1,t.dtype)}zerosLike(t){const e=I(t.dtype,p(t.shape));return this.makeOutput(e,t.shape,t.dtype)}linspace(t,e,n){return nh(t,e,n)}scatter(t,e,n,r,s,a,i,o,u,l){const c=[r/s,s],h=this.readSync(t.dataId),p=this.readSync(e.dataId);if(0===r)return ks([],n,e.dtype);const d=new Wn(c,e.dtype);d.values.fill(this.readSync(u.dataId)[0]);for(let t=0;t<a;t++){const a=[];let u=0;for(let e=0;e<i;e++){const n=h[t*i+e];a.push(n),u+=n*o[e]}if(u<0||u>=r/s)throw new Error(`Invalid indices: ${a} does not index into ${n}`);for(let n=0;n<s;n++)l?d.values[u*s+n]+=p[t*s+n]:d.values[u*s+n]=0===e.rank?p[0]:p[t*s+n]}return d.toTensor().reshape(n)}}function zw(t){const e=new Float32Array(t.length);for(let n=0;n<t.length;++n)e[n]=Math.abs(t[n]);return e}const Pw={kernelName:lt,backendName:"cpu",kernelFunc:t=>{const{x:e}=t.inputs,n=t.backend;let r=new Float32Array(p(e.shape));if("complex64"!==e.dtype){r=zw(n.data.get(e.dataId).values)}else{const t=n.data.get(e.dataId),s=t.complexTensorInfos.real,a=t.complexTensorInfos.imag,i=n.data.get(s.dataId).values,o=n.data.get(a.dataId).values;for(let t=0;t<i.length;t++){const e=i[t],n=o[t];r[t]=Math.hypot(e,n)}}return n.makeOutput(r,e.shape,"float32")}};function Ww(t){return(e,n,r,s,a)=>{const i=co(e,n),o=i.length,u=R(i),l=v(a,p(i)),c=e.length,h=n.length,d=R(e),f=R(n),m=uo(e,i),g=uo(n,i);if(m.length+g.length===0)for(let e=0;e<l.length;++e)l[e]=t(r[e%r.length],s[e%s.length]);else for(let e=0;e<l.length;++e){const n=z(e,o,u),a=n.slice(-c);m.forEach((t=>a[t]=0));const i=B(a,c,d),p=n.slice(-h);g.forEach((t=>p[t]=0));const y=B(p,h,f);l[e]=t(r[i],s[y])}return[l,i]}}function Vw(t){const{inputs:e,backend:n}=t,{real:r,imag:s}=e,a=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,o=n.makeTensorInfo(r.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",a),imag:n.makeTensorInfo(s.shape,"float32",i)},o}const Uw={kernelName:At,backendName:"cpu",kernelFunc:Vw};function Gw(t){const{inputs:e,backend:n}=t,{x:r}=e;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const Hw={kernelName:ie,backendName:"cpu",kernelFunc:Gw};function jw(t){const{inputs:e,backend:n}=t,{input:r}=e,s=n.data.get(r.dataId).complexTensorInfos.real,a=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,a)}const qw={kernelName:Fe,backendName:"cpu",kernelFunc:jw};function Kw(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{dtype:a}=r;if("complex64"===a){if("complex64"===s.dtype)return Gw({inputs:{x:s},backend:n});const t=ru(s.shape),e=Kw({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),r=Vw({inputs:{real:e,imag:t},backend:n});return t.dispose(),n.disposeIntermediateTensorInfo(e),r}if("complex64"===s.dtype){const t=jw({inputs:{input:s},backend:n}),e=Kw({inputs:{x:t},backend:n,attrs:{dtype:a}});return n.disposeIntermediateTensorInfo(t),e}if(!k(s.dtype,a)){const t=Gw({inputs:{x:s},backend:n});return{dataId:t.dataId,shape:t.shape,dtype:a}}if("int32"===a){const t=n.data.get(s.dataId).values,e=Int32Array.from(t);return n.makeTensorInfo(s.shape,"int32",e)}if("bool"===a){const t=n.data.get(s.dataId).values,e=Tn([0],s.dtype),[r,a]=Ww(((t,e)=>t!==e?1:0))(s.shape,[],t,e,"bool");return n.makeTensorInfo(a,"bool",r)}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${a}`)}const Xw={kernelName:Ct,backendName:"cpu",kernelFunc:Kw};function Yw(t,e,n,r){return null==n?({inputs:n,backend:s})=>{const{a:a,b:i}=n,o=s;_w([a,i],t);const u=o.data.get(a.dataId).values,l=o.data.get(i.dataId).values,c=r||a.dtype,[h,p]=e(a.shape,i.shape,u,l,c);return o.makeTensorInfo(p,c,h)}:({inputs:t,backend:s})=>{const{a:a,b:i}=t,o=s;if("complex64"===a.dtype||"complex64"===i.dtype){const t=Kw({inputs:{x:a},backend:o,attrs:{dtype:"complex64"}}),e=o.data.get(t.dataId),r=e.complexTensorInfos.real,s=e.complexTensorInfos.imag,u=o.data.get(r.dataId).values,l=o.data.get(s.dataId).values,c=Kw({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),h=o.data.get(c.dataId),p=h.complexTensorInfos.real,d=h.complexTensorInfos.imag,f=o.data.get(p.dataId).values,m=o.data.get(d.dataId).values,[g,y,b]=n(a.shape,i.shape,u,l,f,m),x=o.makeTensorInfo(b,"float32",g),w=o.makeTensorInfo(b,"float32",y),v=Vw({inputs:{real:x,imag:w},backend:o});return o.disposeIntermediateTensorInfo(t),o.disposeIntermediateTensorInfo(c),o.disposeIntermediateTensorInfo(x),o.disposeIntermediateTensorInfo(w),v}{const t=o.data.get(a.dataId).values,n=o.data.get(i.dataId).values,s=r||a.dtype,[u,l]=e(a.shape,i.shape,t,n,s);return o.makeTensorInfo(l,s,u)}}}function Jw(t){return(e,n,r,s,a,i)=>{const o=co(e,n),u=p(o),l=o.length,c=R(o),h=v("float32",u),d=v("float32",u),f=uo(e,o),m=uo(n,o),g=Zc(r,s),y=Zc(a,i),b=e.length,x=R(e),w=n.length,I=R(n);if(f.length+m.length===0)for(let e=0;e<h.length;e++){const n=e%g.length,r=e%y.length,s=t(g[2*n],g[2*n+1],y[2*r],y[2*r+1]);h[e]=s.real,d[e]=s.imag}else for(let e=0;e<h.length;e++){const n=z(e,l,c),r=n.slice(-b);f.forEach((t=>r[t]=0));const s=B(r,b,x),a=n.slice(-w);m.forEach((t=>a[t]=0));const i=B(a,w,I),o=t(g[2*s],g[2*s+1],y[2*i],y[2*i+1]);h[e]=o.real,d[e]=o.imag}return[h,d,o]}}const Zw=Ww(((t,e)=>t+e)),Qw=Jw(((t,e,n,r)=>({real:t+n,imag:e+r}))),tv=Yw(pt,Zw,Qw),ev={kernelName:pt,backendName:"cpu",kernelFunc:tv};function nv(t){return(e,n,r)=>{const s=v(n,e.length);for(let n=0;n<e.length;++n)s[n]=t(e[n],r);return s}}function rv(t,e,n){return({inputs:r,attrs:s,backend:a})=>{const{x:i}=r;if(_w(i,t),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=a,u=o.data.get(i.dataId).values,l=p(i.shape),c=n||i.dtype,h=I(c,l);for(let t=0;t<l;++t)h[t]=e(u[t],s);return o.makeTensorInfo(i.shape,c,h)}}function sv(t,e,n){return({inputs:r,attrs:s,backend:a})=>{const{x:i}=r;if(_w(i,t),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=a,u=o.data.get(i.dataId).values,l=n||i.dtype,c=e(u,l,s);return o.makeTensorInfo(i.shape,l,c)}}const av=nv((t=>Math.ceil(t))),iv=sv($t,av),ov={kernelName:$t,backendName:"cpu",kernelFunc:iv},uv=nv((t=>Math.exp(t))),lv=sv(Yt,uv),cv={kernelName:Yt,backendName:"cpu",kernelFunc:lv},hv=nv((t=>Math.expm1(t))),pv=sv(Jt,hv),dv={kernelName:Jt,backendName:"cpu",kernelFunc:pv},fv=nv((t=>Math.floor(t))),mv=sv(ee,fv),gv={kernelName:ee,backendName:"cpu",kernelFunc:mv},yv=nv((t=>Math.log(t))),bv=sv(pe,yv),xv={kernelName:pe,backendName:"cpu",kernelFunc:bv};function wv(t,e,n,r){const s=v(r,p(n));for(let n=0;n<s.length;++n){const r=n*e;let a=t[r];for(let n=0;n<e;++n){const e=t[r+n];e>a&&(a=e)}s[n]=a}return s}const vv=Ww(((t,e)=>t*e)),Iv=Jw(((t,e,n,r)=>({real:t*n-e*r,imag:t*r+e*n}))),kv=Yw(Se,vv,Iv),Nv={kernelName:Se,backendName:"cpu",kernelFunc:kv},Sv=Ww(((t,e)=>t!==e?1:0)),Ev=Yw(Ce,Sv,null,"bool"),Cv={kernelName:Ce,backendName:"cpu",kernelFunc:Ev},$v=nv((t=>1/Math.sqrt(t))),Tv=sv(Ge,$v),Av={kernelName:Ge,backendName:"cpu",kernelFunc:Tv};function Rv(t,e,n,r,s){const a=La(r,e,n),i=p(n),o=R(r);if(a){const n=Ba(e,o);return t.subarray(n,n+i)}const u=v(s,i);for(let s=0;s<i;++s){const a=B(z(s,n.length,R(n)).map(((t,n)=>t+e[n])),r.length,o);u[s]=t[a]}return u}function _v(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{begin:a,size:i}=r;_w(s,"slice");const[o,u]=za(s,a,i);$a(s,o,u);const l=Rv(n.data.get(s.dataId).values,o,u,s.shape,s.dtype);return n.makeTensorInfo(u,s.dtype,l)}const Dv={kernelName:qe,backendName:"cpu",kernelFunc:_v},Mv=Ww(((t,e)=>{const n=t-e;return n*n})),Fv=Yw(rn,Mv),Ov={kernelName:rn,backendName:"cpu",kernelFunc:Fv},Lv=Ww(((t,e)=>t-e)),Bv=Jw(((t,e,n,r)=>({real:t-n,imag:e-r}))),zv=Yw(an,Lv,Bv),Pv={kernelName:an,backendName:"cpu",kernelFunc:zv};function Wv(t,e,n,r,s){const a=e.length,i=p(e),o=R(e),u=R(s),l=v(n,p(s));for(let e=0;e<i;++e){const n=z(e,a,o),s=new Array(n.length);for(let t=0;t<s.length;t++)s[t]=n[r[t]];l[B(s,a,u)]=t[e]}return l}function Vv(t,e,n,r){const s=x(e,n)[0],a=[1,n[0],1];for(let t=0;t<s;t++)a[0]*=n[t];a[1]=n[s];for(let t=s+1;t<n.length;t++)a[2]*=n[t];const i={},o=new Int32Array(n[s]),u=new Wn(a,r,t),l=[],c=1===a[0]&&1===a[2];for(let e=0;e<n[s];e++){let n;if(c)n=t[e].toString();else{const t=[];for(let n=0;n<a[0];n++)for(let r=0;r<a[2];r++)t.push(u.get(n,e,r));n=t.join(",")}if(void 0!==i[n])o[e]=i[n];else{const t=Object.keys(i).length;i[n]=t,o[e]=t,l.push(e)}}const h=a.slice();h[1]=Object.keys(i).length;const p=new Wn(h,r);l.forEach(((t,e)=>{for(let n=0;n<a[0];n++)for(let r=0;r<a[2];r++)p.set(u.get(n,t,r),n,e,r)}));const d=n.slice();return d[s]=h[1],{outputValues:p.values,outputShape:d,indices:o}}Xa("cpu",(()=>new Bw),1);const Uv=rv(Kt,(t=>t>=0?t:Math.exp(t)-1)),Gv={kernelName:Kt,backendName:"cpu",kernelFunc:Uv},Hv=Ww(((t,e)=>t<0?e*t:t));function jv(t){const{inputs:e,backend:n}=t,{x:r,alpha:s}=e;_w([r,s],"prelu");const a=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,[o,u]=Hv(r.shape,s.shape,a,i,r.dtype);return n.makeTensorInfo(u,r.dtype,o)}const qv={kernelName:Me,backendName:"cpu",kernelFunc:jv},Kv=rv(Le,(t=>Math.max(0,t))),Xv={kernelName:Le,backendName:"cpu",kernelFunc:Kv},Yv=rv(We,(t=>Math.min(Math.max(0,t),6))),Jv={kernelName:We,backendName:"cpu",kernelFunc:Yv};function Zv(t,e,n,r){if("linear"===n)return Gw({inputs:{x:e},backend:t});if("relu"===n)return Kv({inputs:{x:e},backend:t});if("elu"===n)return Uv({inputs:{x:e},backend:t});if("relu6"===n)return Yv({inputs:{x:e},backend:t});if("prelu"===n)return jv({inputs:{x:e,alpha:r},backend:t});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function Qv(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{shape:a}=r,i=p(s.shape),o=b(a,i),l=p(o);u(i===l,(()=>`The new shape (${o}) has ${l} elements and the old shape (${s.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(s.dataId);const c=n.data.get(s.dataId);if(null!=c.complexTensorInfos){const t=c.complexTensorInfos.real,e=c.complexTensorInfos.imag;t.shape=o,e.shape=o}return{dataId:s.dataId,shape:o,dtype:s.dtype}}const tI={kernelName:Be,backendName:"cpu",kernelFunc:Qv};function eI(t){const{inputs:e,backend:n,attrs:r}=t,{a:s,b:a}=e,{transposeA:i,transposeB:o}=r;_w([s,a],"matMul");const l=s.shape.length,c=a.shape.length,h=i?s.shape[l-2]:s.shape[l-1],d=o?a.shape[c-1]:a.shape[c-2],f=i?s.shape[l-1]:s.shape[l-2],m=o?a.shape[c-2]:a.shape[c-1],g=s.shape.slice(0,-2),y=a.shape.slice(0,-2),b=p(g),x=p(y);u(l>=2&&c>=2&&(b===x||1===b||1===x),(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${g}) and (${y}).`));const w=(b>x?s.shape.slice(0,-2):a.shape.slice(0,-2)).concat([f,m]);u(h===d,(()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${s.shape} and ${a.shape} and transposeA=${i} and transposeB=${o} must match.`));const v=o?[x,m,d]:[x,d,m],I=Qv({inputs:{x:s},backend:n,attrs:{shape:i?[b,h,f]:[b,f,h]}}),k=Qv({inputs:{x:a},backend:n,attrs:{shape:v}}),N=i?I.shape[1]:I.shape[2],S=i?I.shape[2]:I.shape[1],E=o?k.shape[1]:k.shape[2],C=Math.max(b,x),$=n.data.get(I.dataId).values,T=n.data.get(k.dataId).values,A=R(I.shape),_=R(k.shape),[D,M,F]=i?[A[0],1,A[1]]:[A[0],A[1],1],[O,L,B]=o?[1,_[1],_[0]]:[_[1],1,_[0]],z=S*E,P=ua([C,S,E],I.dtype),W=P.values,V=n.blockSize;for(let t=0;t<C;t++)for(let e=0;e<S;e+=V)for(let n=0;n<E;n+=V)for(let r=0;r<N;r+=V){const s=Math.min(e+V,S),a=Math.min(n+V,E),i=Math.min(r+V,N);for(let o=e;o<s;o++)for(let e=n;e<a;e++){let n=0;for(let s=r;s<i;s++){const r=Math.min(t,b-1)*D,a=Math.min(t,x-1)*B;n+=$[r+o*M+s*F]*T[s*O+e*L+a]}W[t*z+(o*E+e)]+=n}}return n.disposeIntermediateTensorInfo(I),n.disposeIntermediateTensorInfo(k),n.makeTensorInfo(w,P.dtype,P.values)}const nI={kernelName:Nt,backendName:"cpu",kernelFunc:eI};const rI={kernelName:bn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{a:s,b:a,bias:i,preluActivationWeights:o}=e,{transposeA:u,transposeB:l,activation:c}=r;let h,p,d;const f=[];h=eI({inputs:{a:s,b:a},attrs:{transposeA:u,transposeB:l},backend:n}),i&&(p=tv({inputs:{a:h,b:i},backend:n}),f.push(h),h=p),c&&(d=Zv(n,h,c,o),f.push(h),h=d);for(const t of f)n.disposeIntermediateTensorInfo(t);return h}},sI=rv(ct,(t=>Math.acos(t))),aI={kernelName:ct,backendName:"cpu",kernelFunc:sI},iI=rv(ht,(t=>Math.acosh(t))),oI={kernelName:ht,backendName:"cpu",kernelFunc:iI},uI=rv(gt,(t=>Math.asin(t))),lI={kernelName:gt,backendName:"cpu",kernelFunc:uI},cI=rv(yt,(t=>Math.asinh(t))),hI={kernelName:yt,backendName:"cpu",kernelFunc:cI},pI=rv(bt,(t=>Math.atan(t))),dI={kernelName:bt,backendName:"cpu",kernelFunc:pI},fI=rv(xt,(t=>Math.atanh(t))),mI={kernelName:xt,backendName:"cpu",kernelFunc:fI};function gI(t,e,n,r,s,a){const i=s.strideHeight,o=s.strideWidth,u=s.dilationHeight,l=s.dilationWidth,c=s.effectiveFilterHeight,h=s.effectiveFilterWidth,p=s.padInfo.top,d=s.padInfo.left,f="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=ua(s.outShape,n),g=m.values,y=s.outShape[1]*s.outShape[2]*s.outShape[3],b=s.outShape[2]*s.outShape[3],x=s.outShape[3];for(let e=0;e<s.batchSize;++e){const n=e*y,m=e*r[0];for(let e=0;e<s.inChannels;++e)for(let y=0;y<s.outHeight;++y){const w=y*i-p,v=Math.max(0,w),I=Math.min(s.inHeight,c+w),k=n+y*b;for(let n=0;n<s.outWidth;++n){const i=n*o-d,c=Math.max(0,i),p=Math.min(s.inWidth,h+i);let y=f,b=0,w=0;for(let n=v;n<I;n+=u){const s=m+n*r[1];for(let n=c;n<p;n+=l){const i=t[s+n*r[2]+e];"max"===a&&i>y?y=i:"avg"===a&&(b+=i,w++)}if(isNaN(y))break}g[k+n*x+e]="avg"===a?b/w:y}}}return m}function yI(t,e,n,r,s=!1,a=!1){const i=ua(r.outShape,"int32"),o=r.strideHeight,u=r.strideWidth,l=r.dilationHeight,c=r.dilationWidth,h=r.effectiveFilterHeight,p=r.effectiveFilterWidth,d=r.padInfo.top,f=r.padInfo.left,m=ua(e,n,t);for(let t=0;t<r.batchSize;++t)for(let e=0;e<r.inChannels;++e)for(let n=0;n<r.outHeight;++n){const g=n*o-d;let y=g;for(;y<0;)y+=l;const b=Math.min(r.inHeight,h+g);for(let o=0;o<r.outWidth;++o){const h=o*u-f;let d=h;for(;d<0;)d+=c;const x=Math.min(r.inWidth,p+h);let w=Number.NEGATIVE_INFINITY,v=-1;for(let n=y;n<b;n+=l){const i=n-g;for(let o=d;o<x;o+=c){const u=o-h,l=m.get(t,n,o,e);l>w&&(w=l,v=s?a?((t*r.inHeight+n)*r.inWidth+o)*r.inChannels+e:(n*r.inWidth+o)*r.inChannels+e:i*p+u)}}i.set(v,t,n,o,e)}}return i}const bI={kernelName:vt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e;_w(s,"avgPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=r;u(Ti(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const c=xi(s.shape,a,i,1,o,l);let h;if(1===c.filterWidth&&1===c.filterHeight&&d(c.inShape,c.outShape))h=Gw({inputs:{x:s},backend:n});else{const t=n.data.get(s.dataId).values,e=R(s.shape),r=gI(t,s.shape,s.dtype,e,c,"avg");h=n.makeTensorInfo(c.outShape,s.dtype,r.values)}return h}};const xI={kernelName:It,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:a}=e,i=a;_w([s,a],"avgPoolBackprop");const{filterSize:o,strides:u,pad:l}=r,c=xi(i.shape,o,u,1,l),h=c.strideHeight,p=c.strideWidth,d=c.filterHeight,f=c.filterWidth,m=c.dilationHeight,g=c.dilationWidth,y=c.effectiveFilterHeight,b=c.effectiveFilterWidth,x=b-1-c.padInfo.left,w=y-1-c.padInfo.top,v=ua(i.shape,"float32"),I=1/(d*f),k=n.data.get(s.dataId).values,N=ua(s.shape,"float32",k);for(let t=0;t<c.batchSize;++t)for(let e=0;e<c.inChannels;++e)for(let n=0;n<c.inHeight;++n)for(let r=0;r<c.inWidth;++r){const s=n-w,a=r-x;let i=0;for(let n=0;n<y;n+=m){const r=(s+n)/h;if(!(r<0||r>=c.outHeight||Math.floor(r)!==r))for(let n=0;n<b;n+=g){const s=(a+n)/p;if(s<0||s>=c.outWidth||Math.floor(s)!==s)continue;i+=N.get(t,r,s,e)}}v.set(i*I,t,n,r,e)}return n.makeTensorInfo(v.shape,v.dtype,v.values)}};const wI={kernelName:re,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,scale:a,offset:i,mean:o,variance:l}=e;u(o.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),u(null==i||o.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),u(null==a||o.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),_w([s,o,l,a,i],"batchNorm");let{varianceEpsilon:c}=r;null==c&&(c=.001);const h=n.data.get(s.dataId).values,p=n.data.get(o.dataId).values,d=n.data.get(l.dataId).values,f=a?n.data.get(a.dataId).values:new Float32Array([1]),m=i?n.data.get(i.dataId).values:new Float32Array([0]),g=new Float32Array(h.length),y=m.length,b=f.length,x=d.length,w=p.length;let v=0,I=0,k=0,N=0;for(let t=0;t<h.length;++t)g[t]=m[v++]+(h[t]-p[I++])*f[k++]/Math.sqrt(d[N++]+c),v>=y&&(v=0),I>=w&&(I=0),k>=b&&(k=0),N>=x&&(N=0);return n.makeTensorInfo(s.shape,s.dtype,g)}},vI=rv(Tt,((t,e)=>{const n=e;return t>n.clipValueMax?n.clipValueMax:t<n.clipValueMin?n.clipValueMin:t})),II={kernelName:Tt,backendName:"cpu",kernelFunc:vI};function kI(t){const{inputs:e,backend:n}=t,{input:r}=e,s=n.data.get(r.dataId).complexTensorInfos.imag,a=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,a)}const NI={kernelName:ue,backendName:"cpu",kernelFunc:kI};function SI(t){const{inputs:e,backend:n,attrs:r}=t,{axis:s}=r,a=x(s,e[0].shape)[0];let i=Ui(e.map((t=>t.shape)),a);if(0===p(i))return n.makeTensorInfo(i,e[0].dtype,[]);const o=e.filter((t=>p(t.shape)>0));if(1===o.length)return o[0];if(Vi(o.map((t=>t.shape)),a),"complex64"===o[0].dtype){const t=o.map((t=>jw({inputs:{input:t},backend:n}))),e=o.map((t=>kI({inputs:{input:t},backend:n}))),r=SI({inputs:t,backend:n,attrs:{axis:a}}),s=SI({inputs:e,backend:n,attrs:{axis:a}}),i=Vw({inputs:{real:r,imag:s},backend:n});return t.forEach((t=>n.disposeIntermediateTensorInfo(t))),e.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),i}const u=o.map((t=>{const e=p(t.shape.slice(a));return Qv({inputs:{x:t},backend:n,attrs:{shape:[-1,e]}})}));i=Ui(u.map((t=>t.shape)),1);const l=v(o[0].dtype,p(i));if(1===u[0].shape[0]){let t=0;u.forEach((e=>{const r=n.data.get(e.dataId).values,s=p(e.shape);l.set(r,t),t+=s}))}else{let t=0;u.forEach((e=>{const r=n.data.get(e.dataId).values;let s=0;for(let n=0;n<e.shape[0];++n){const a=n*i[1]+t;for(let t=0;t<e.shape[1];++t)l[a+t]=r[s++]}t+=e.shape[1]}))}const c=Ui(o.map((t=>t.shape)),a),h=n.makeTensorInfo(c,e[0].dtype,l);return u.forEach((t=>n.disposeIntermediateTensorInfo(t))),h}const EI={kernelName:Rt,backendName:"cpu",kernelFunc:SI};function CI(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:a}=e,{strides:i,pad:o,dataFormat:u,dilations:l,dimRoundingMode:c}=r;_w([s,a],"conv2d");const h=Ai(u),p=vi(s.shape,a.shape,i,l,o,c,!1,h),d=p.filterHeight,f=p.filterWidth,m=p.dilationHeight,g=p.dilationWidth,y=p.padInfo.left,b=p.padInfo.top,x="channelsLast"===p.dataFormat,w=new Wn(p.outShape,s.dtype),v=R(s.shape),I=R(a.shape),k=v[0],N=x?v[1]:v[2],S=x?v[2]:1,E=x?1:v[1],C=w.strides[0],$=x?w.strides[1]:w.strides[2],T=x?w.strides[2]:1,A=x?1:w.strides[1],_=n.data.get(s.dataId).values,D=n.data.get(a.dataId).values,M=w.values;for(let t=0;t<p.batchSize;++t){const e=t*k,n=t*C;for(let t=0;t<p.outHeight;++t){const r=n+t*$,s=t*p.strideHeight-b;for(let t=0;t<d;++t){const n=s+t*m;if(n<0||n>=p.inHeight)continue;const a=t*I[0],i=e+n*N;for(let t=0;t<p.outWidth;++t){const e=r+t*T,n=t*p.strideWidth-y;for(let t=0;t<f;++t){const r=n+t*g;if(r<0||r>=p.inWidth)continue;const s=i+r*S;let o=a+t*I[1];for(let t=0;t<p.inChannels;++t){const n=_[s+t*E];for(let t=0;t<p.outChannels;++t)M[e+t*A]+=n*D[o+t];o+=p.outChannels}}}}}}return n.makeTensorInfo(w.shape,w.dtype,M)}const $I={kernelName:_t,backendName:"cpu",kernelFunc:CI};const TI={kernelName:Dt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,dy:a}=e,{strides:i,pad:o,dataFormat:u,dimRoundingMode:l,filterShape:c}=r;_w([s,a],"conv2dBackpropFilter");const h=Ai(u),p=vi(s.shape,c,i,1,o,l,!1,h),{strideHeight:d,strideWidth:f,filterHeight:m,filterWidth:g}=p,y="channelsLast"===p.dataFormat,b=new Wn(p.filterShape,"float32"),x=p.padInfo.left,w=p.padInfo.top,v=n.data.get(s.dataId).values,I=n.data.get(a.dataId).values,k=new Wn(s.shape,s.dtype,v),N=new Wn(a.shape,a.dtype,I);for(let t=0;t<m;++t){const e=Math.max(0,Math.ceil((w-t)/d)),n=Math.min(p.outHeight,(p.inHeight+w-t)/d);for(let r=0;r<g;++r){const s=Math.max(0,Math.ceil((x-r)/f)),a=Math.min(p.outWidth,(p.inWidth+x-r)/f);for(let i=0;i<p.inChannels;++i)for(let o=0;o<p.outChannels;++o){let u=0;for(let l=0;l<p.batchSize;++l)for(let c=e;c<n;++c){const e=t+c*d-w;for(let t=s;t<a;++t){const n=r+t*f-x;u+=y?k.get(l,e,n,i)*N.get(l,c,t,o):k.get(l,i,e,n)*N.get(l,o,c,t)}}b.set(u,t,r,i,o)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};const AI={kernelName:Mt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,filter:a}=e,{inputShape:i,strides:o,pad:u,dataFormat:l,dimRoundingMode:c}=r;_w([s,a],"conv2dBackpropInput");const h=R(a.shape),p=R(s.shape);let d=Ai(l);const f=vi(i,a.shape,o,1,u,c,!1,d),m=new Wn(f.inShape,"float32"),g=m.values,y=n.data.get(s.dataId).values,b=n.data.get(a.dataId).values,[x,w,v]=h,{batchSize:I,filterHeight:k,filterWidth:N,inChannels:S,inHeight:E,inWidth:C,outChannels:$,outHeight:T,outWidth:A,strideHeight:_,strideWidth:D}=f;d=f.dataFormat;const M=k-1-f.padInfo.top,F=N-1-f.padInfo.left,O="channelsLast"===d,L=m.strides[0],B=O?m.strides[1]:m.strides[2],z=O?m.strides[2]:1,P=O?1:m.strides[1],W=p[0],V=O?p[1]:p[2],U=O?p[2]:1,G=O?1:p[1];for(let t=0;t<I;++t)for(let e=0;e<S;++e)for(let n=0;n<E;++n){const r=n-M,s=Math.max(0,Math.ceil(r/_)),a=Math.min(T,(k+r)/_);for(let i=0;i<C;++i){const o=i-F,u=Math.max(0,Math.ceil(o/D)),l=Math.min(A,(N+o)/D);let c=0;for(let n=s;n<a;++n){const s=n*_-r;for(let r=u;r<l;++r){const a=W*t+V*n+U*r,i=x*(k-1-s)+w*(N-1-(r*D-o))+v*e;for(let t=0;t<$;++t){c+=y[a+G*t]*b[i+t]}}}g[L*t+B*n+z*i+P*e]=c}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}};const RI={kernelName:Ft,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:a}=e,{strides:i,pad:o,dilations:u}=r;_w([s,a],"conv3d");const l=Ii(s.shape,a.shape,i,u,o),{filterDepth:c,filterHeight:h,filterWidth:p,dilationDepth:d,dilationHeight:f,dilationWidth:m,padInfo:g}=l,y=g.front,b=g.left,x=g.top,w=new Wn(l.outShape,s.dtype),v=n.data.get(s.dataId).values,I=n.data.get(a.dataId).values,k=w.values,N=R(s.shape),S=R(a.shape);for(let t=0;t<l.batchSize;++t){const e=t*N[0],n=t*w.strides[0];for(let t=0;t<l.outDepth;++t){const r=n+t*w.strides[1],s=t*l.strideDepth-y;for(let t=0;t<c;++t){const n=s+t*d;if(n<0||n>=l.inDepth)continue;const a=t*S[0],i=e+n*N[1];for(let t=0;t<l.outHeight;++t){const e=r+t*w.strides[2],n=t*l.strideHeight-x;for(let t=0;t<h;++t){const r=n+t*f;if(r<0||r>=l.inHeight)continue;const s=a+t*S[1],o=i+r*N[2];for(let t=0;t<l.outWidth;++t){const n=e+t*l.outChannels,r=t*l.strideWidth-b;for(let t=0;t<p;++t){const e=r+t*m;if(e<0||e>=l.inWidth)continue;const a=s+t*S[2],i=o+e*l.inChannels;let u=a;for(let t=0;t<l.inChannels;++t){const e=v[i+t];for(let t=0;t<l.outChannels;++t)k[n+t]+=e*I[u+t];u+=l.outChannels}}}}}}}}return n.makeTensorInfo(w.shape,w.dtype,w.values)}};const _I={kernelName:Ot,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,dy:a}=e,{strides:i,pad:o,filterShape:u}=r;_w([s,a],"conv3dBackpropFilterV2");const l=R(s.shape),c=R(a.shape),h=Ii(s.shape,u,i,1,o),p=h.strideDepth,d=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,y=h.filterWidth,b=new Wn(h.filterShape,"float32"),x=b.values,[w,v,I,k]=b.strides,N=n.data.get(a.dataId).values,[S,E,C,$]=c,T=n.data.get(s.dataId).values,[A,_,D,M]=l,F=h.padInfo.front,O=h.padInfo.left,L=h.padInfo.top;for(let t=0;t<m;++t){const e=Math.max(0,Math.ceil((F-t)/p)),n=Math.min(h.outDepth,(h.inDepth+F-t)/p),r=t*w;for(let s=0;s<g;++s){const a=Math.max(0,Math.ceil((L-s)/d)),i=Math.min(h.outHeight,(h.inHeight+L-s)/d),o=s*v+r;for(let r=0;r<y;++r){const u=Math.max(0,Math.ceil((O-r)/f)),l=Math.min(h.outWidth,(h.inWidth+O-r)/f),c=r*I+o;for(let o=0;o<h.inChannels;++o){const m=o*k+c;for(let c=0;c<h.outChannels;++c){let g=0;for(let m=0;m<h.batchSize;++m){const h=m*A,y=m*S;for(let m=e;m<n;++m){const e=(t+m*p-F)*_+h,n=m*E+y;for(let t=a;t<i;++t){const a=(s+t*d-L)*D+e,i=t*C+n;for(let t=u;t<l;++t){const e=t*$+i;g+=T[(r+t*f-O)*M+a+o]*N[e+c]}}}}x[m+c]=g}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};const DI={kernelName:Lt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,filter:a}=e,{pad:i,strides:o,inputShape:u}=r;_w([s],"conv3dBackpropInputV2");const l=R(s.shape),c=R(a.shape),h=Ii(u,a.shape,o,1,i),p=new Wn(h.inShape,"float32"),d=p.values,[f,m,g,y]=p.strides,b=n.data.get(s.dataId).values,[x,w,v,I]=l,k=n.data.get(a.dataId).values,[N,S,E,C]=c,{batchSize:$,filterDepth:T,filterHeight:A,filterWidth:_,inChannels:D,inDepth:M,inHeight:F,inWidth:O,outChannels:L,outDepth:B,outHeight:z,outWidth:P,strideDepth:W,strideHeight:V,strideWidth:U}=h,G=T-1-h.padInfo.front,H=A-1-h.padInfo.top,j=_-1-h.padInfo.left;for(let t=0;t<$;++t)for(let e=0;e<D;++e)for(let n=0;n<M;++n){const r=n-G,s=Math.max(0,Math.ceil(r/W)),a=Math.min(B,(T+r)/W);for(let i=0;i<F;++i){const o=i-H,u=Math.max(0,Math.ceil(o/V)),l=Math.min(z,(A+o)/V);for(let c=0;c<O;++c){const h=c-j,p=Math.max(0,Math.ceil(h/U)),$=Math.min(P,(_+h)/U);let R=0;for(let n=s;n<a;++n){const s=n*W-r;for(let r=u;r<l;++r){const a=r*V-o;for(let i=p;i<$;++i){const o=x*t+w*n+v*r+I*i,u=N*(T-1-s)+S*(A-1-a)+E*(_-1-(i*U-h))+C*e;for(let t=0;t<L;++t){R+=b[o+t]*k[u+t]}}}}d[f*t+m*n+g*i+y*c+e]=R}}}return n.makeTensorInfo(p.shape,p.dtype,p.values)}},MI=rv(Bt,(t=>Math.cos(t))),FI={kernelName:Bt,backendName:"cpu",kernelFunc:MI},OI=rv(zt,(t=>Math.cosh(t))),LI={kernelName:zt,backendName:"cpu",kernelFunc:OI};function BI(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:a}=e,{strides:i,pad:o,dilations:l,dimRoundingMode:c}=r;_w([s,a],"depthwiseConv2DNative");const h=R(s.shape),p=R(a.shape);let d=l;null==d&&(d=[1,1]),u(Ti(i,d),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${d}'`));const f=vi(s.shape,a.shape,i,d,o,c,!0),{filterHeight:m,filterWidth:g,dilationHeight:y,dilationWidth:b,padInfo:x}=f,w=x.left,v=x.top,I=f.outChannels/f.inChannels,k=new Wn(f.outShape,s.dtype),N=n.data.get(s.dataId).values,S=n.data.get(a.dataId).values,E=k.values;for(let t=0;t<f.batchSize;++t){const e=t*h[0],n=t*k.strides[0];for(let t=0;t<f.outHeight;++t){const r=n+t*k.strides[1],s=t*f.strideHeight-w;for(let t=0;t<m;++t){const n=s+t*y;if(n<0||n>=f.inHeight)continue;const a=t*p[0],i=e+n*h[1];for(let t=0;t<f.outWidth;++t){const e=r+t*k.strides[2],n=t*f.strideWidth-v;for(let t=0;t<g;++t){const r=n+t*b;if(r<0||r>=f.inWidth)continue;const s=a+t*p[1],o=i+r*f.inChannels;let u=e,l=s;for(let t=0;t<f.inChannels;++t){const e=N[o+t];for(let t=0;t<I;++t)E[u+t]+=e*S[l+t];u+=I,l+=I}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}const zI={kernelName:Wt,backendName:"cpu",kernelFunc:BI};const PI={kernelName:Vt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,dy:a}=e,{strides:i,dilations:o,pad:u,dimRoundingMode:l,filterShape:c}=r;_w([s,a],"depthwiseConv2dNativeBackpropFilter");const h=vi(s.shape,c,i,o,u,l,!0),{strideHeight:p,strideWidth:d,filterHeight:f,filterWidth:m}=h,g=new Wn(h.filterShape,"float32"),y=h.padInfo.left,b=h.padInfo.top,x=h.outChannels/h.inChannels,w=n.data.get(s.dataId).values,v=new Wn(s.shape,s.dtype,w),I=n.data.get(a.dataId).values,k=new Wn(a.shape,a.dtype,I);for(let t=0;t<f;++t){const e=Math.max(0,Math.ceil((b-t)/p)),n=Math.min(h.outHeight,(h.inHeight+b-t)/p);for(let r=0;r<m;++r){const s=Math.max(0,Math.ceil((y-r)/d)),a=Math.min(h.outWidth,(h.inWidth+y-r)/d);for(let i=0;i<h.outChannels;++i){const o=Math.trunc(i/x),u=i%x;let l=0;for(let u=0;u<h.batchSize;++u)for(let c=e;c<n;++c){const e=t+c*p-b;for(let t=s;t<a;++t){const n=r+t*d-y;l+=v.get(u,e,n,o)*k.get(u,c,t,i)}}g.set(l,t,r,o,u)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}};const WI={kernelName:Ut,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,filter:a}=e,{strides:i,dilations:o,pad:u,dimRoundingMode:l,inputShape:c}=r;_w([s,a],"depthwiseConv2DNativeBackpropInput");const h=R(s.shape),p=R(a.shape),d=vi(c,a.shape,i,o,u,l,!0),f=new Wn(d.inShape,"float32"),m=f.values,[g,y,b]=f.strides,x=n.data.get(s.dataId).values,[w,v,I]=h,k=n.data.get(a.dataId).values,[N,S,E]=p,{batchSize:C,filterHeight:$,filterWidth:T,inChannels:A,inHeight:_,inWidth:D,outChannels:M,outHeight:F,outWidth:O,strideHeight:L,strideWidth:B}=d,z=$-1-d.padInfo.top,P=T-1-d.padInfo.left,W=M/A;for(let t=0;t<C;++t)for(let e=0;e<A;++e)for(let n=0;n<_;++n){const r=n-z,s=Math.max(0,Math.ceil(r/L)),a=Math.min(F,($+r)/L);for(let i=0;i<D;++i){const o=i-P,u=Math.max(0,Math.ceil(o/B)),l=Math.min(O,(T+o)/B);let c=0;for(let n=s;n<a;++n){const s=n*L-r;for(let r=u;r<l;++r){const a=w*t+v*n+I*r,i=N*($-1-s)+S*(T-1-(r*B-o))+E*e;for(let t=0;t<W;++t){c+=x[a+(e*W+t)]*k[i+t]}}}m[g*t+y*n+b*i+e]=c}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}},VI={kernelName:Gt,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r,filter:s}=t,{strides:a,pad:i,dilations:o}=n,u=e,l=u.data.get(r.dataId).values,c=r.shape.length,h=u.data.get(s.dataId).values,d=s.shape.length,{batchSize:f,inHeight:m,inWidth:g,inChannels:y,outHeight:b,outWidth:x,padInfo:w,strideHeight:v,strideWidth:k,filterHeight:N,filterWidth:S,dilationHeight:E,dilationWidth:C,outShape:$}=bi(r.shape,s.shape,a,i,"NHWC",o),T=p($),A=$.length,_=I(r.dtype,T);for(let t=0;t<f;++t)for(let e=0;e<b;++e){const n=e*v-w.top;for(let a=0;a<x;++a){const i=a*k-w.left;for(let o=0;o<y;++o){let u=Number.MIN_SAFE_INTEGER;for(let e=0;e<N;++e){const a=n+e*E;if(a>=0&&a<m)for(let n=0;n<S;++n){const p=i+n*C;if(p>=0&&p<g){const i=B([t,a,p,o],c,R(r.shape)),f=B([e,n,o],d,R(s.shape)),m=l[i]+h[f];m>u&&(u=m)}}}_[B([t,e,a,o],A,R($))]=u}}}return{dataId:u.write(Tn(_,r.dtype),$,r.dtype),shape:$,dtype:r.dtype}}},UI={kernelName:jt,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r,filter:s,dy:a}=t,{strides:i,pad:o,dilations:l}=n,c=e,h=D(r.shape,c.data.get(r.dataId).values),p=D(s.shape,c.data.get(s.dataId).values),{batchSize:d,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:w,strideWidth:v,filterHeight:I,filterWidth:k,dilationHeight:N,dilationWidth:S,outShape:E}=bi(r.shape,s.shape,i,o,"NHWC",l);u(a.rank===E.length,(()=>`Error in Dilation2DBackpropFilter, dy must have the same rank as output ${E.length}, but got ${a.rank}`));const C=D(E,c.data.get(a.dataId).values),$=O(s.shape,s.dtype);for(let t=0;t<d;++t)for(let e=0;e<y;++e){const n=e*w-x.top;for(let r=0;r<b;++r){const s=r*v-x.left;for(let a=0;a<g;++a){let i=Number.MIN_SAFE_INTEGER,o=0,u=0;for(let e=0;e<I;++e){const r=n+e*N;if(r>=0&&r<f)for(let n=0;n<k;++n){const l=s+n*S;if(l>=0&&l<m){const s=h[t][r][l][a]+p[e][n][a];s>i&&(i=s,o=e,u=n)}}}$[o][u][a]+=C[t][e][r][a]}}}return{dataId:c.write(Tn($,r.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},GI={kernelName:Ht,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r,filter:s,dy:a}=t,{strides:i,pad:o,dilations:l}=n,c=e,h=D(r.shape,c.data.get(r.dataId).values),p=D(s.shape,c.data.get(s.dataId).values),{batchSize:d,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:w,strideWidth:v,filterHeight:I,filterWidth:k,dilationHeight:N,dilationWidth:S,outShape:E}=bi(r.shape,s.shape,i,o,"NHWC",l);u(a.rank===E.length,(()=>`Error in Dilation2DBackpropInput, dy must have the same rank as output ${E.length}, but got ${a.rank}`));const C=D(E,c.data.get(a.dataId).values),$=O(r.shape,r.dtype);for(let t=0;t<d;++t)for(let e=0;e<y;++e){const n=e*w-x.top;for(let r=0;r<b;++r){const s=r*v-x.left;for(let a=0;a<g;++a){let i=Number.MIN_SAFE_INTEGER,o=n<0?0:n,u=s<0?0:s;for(let e=0;e<I;++e){const r=n+e*N;if(r>=0&&r<f)for(let n=0;n<k;++n){const l=s+n*S;if(l>=0&&l<m){const s=h[t][r][l][a]+p[e][n][a];s>i&&(i=s,o=r,u=l)}}}$[t][o][u][a]+=C[t][e][r][a]}}}return{dataId:c.write(Tn($,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},HI=Ww(((t,e)=>t/e)),jI=Yw(qt,HI),qI={kernelName:qt,backendName:"cpu",kernelFunc:jI},KI=rv(Xt,(t=>{const e=Math.sign(t),n=Math.abs(t),r=1/(1+.3275911*n);return e*(1-((((1.061405429*r-1.453152027)*r+1.421413741)*r-.284496736)*r+.254829592)*r*Math.exp(-n*n))})),XI={kernelName:Xt,backendName:"cpu",kernelFunc:KI};function YI(t,e,n){const r=t.shape,s=r[0],a=r[1],i=n.data.get(t.dataId),o=i.complexTensorInfos.real,u=i.complexTensorInfos.imag,l=[s,a],c=p(l),h=v("float32",c),d=v("float32",c);for(let t=0;t<s;t++){const r=_v({inputs:{x:o},backend:n,attrs:{begin:[t,0],size:[1,a]}}),s=_v({inputs:{x:u},backend:n,attrs:{begin:[t,0],size:[1,a]}}),i=Vw({inputs:{real:r,imag:s},backend:n}),{real:l,imag:c}=JI(i,e,n),p=Zc(l,c);for(let e=0;e<a;e++){const n=Qc(p,e);h[t*a+e]=n.real,d[t*a+e]=n.imag}n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i)}const f=n.makeTensorInfo(l,"float32",h),m=n.makeTensorInfo(l,"float32",d),g=Vw({inputs:{real:f,imag:m},backend:n});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}function JI(t,e,n){const r=p(t.shape),s=n.data.get(t.dataId),a=n.data.get(s.complexTensorInfos.real.dataId).values,i=n.data.get(s.complexTensorInfos.imag.dataId).values;if(0==((l=r)&l-1)){const s=ZI(a,i,r,e,n),l=[t.shape[0],t.shape[1]];if(e){const t=n.makeTensorInfo(l,"float32",s.real),e=n.makeTensorInfo(l,"float32",s.imag),a=n.makeTensorInfo([],"float32",(o=r,"string"===(u="float32")?Rn(o):Tn([o],u))),i=Gw({inputs:{x:a},backend:n}),c=qI.kernelFunc({inputs:{a:t,b:a},backend:n}),h=qI.kernelFunc({inputs:{a:e,b:i},backend:n}),p=n.data.get(c.dataId).values,d=n.data.get(h.dataId).values;return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),{real:p,imag:d}}return s}return function(t){const e=new Float32Array(t.length/2),n=new Float32Array(t.length/2);for(let r=0;r<t.length;r+=2)e[r/2]=t[r],n[r/2]=t[r+1];return{real:e,imag:n}}(function(t,e,n){const r=new Float32Array(2*e);for(let s=0;s<e;s++){let a=0,i=0;for(let r=0;r<e;r++){const o=eh(s*r,e,n),u=Qc(t,r);a+=u.real*o.real-u.imag*o.imag,i+=u.real*o.imag+u.imag*o.real}n&&(a/=e,i/=e),th(r,a,i,s)}return r}(Zc(a,i),r,e));var o,u,l}function ZI(t,e,n,r,s){if(1===n)return{real:t,imag:e};const a=Zc(t,e),i=n/2,o=function(t){const e=Math.ceil(t.length/4),n=new Float32Array(e),r=new Float32Array(e);for(let e=0;e<t.length;e+=4)n[Math.floor(e/4)]=t[e],r[Math.floor(e/4)]=t[e+1];return{real:n,imag:r}}(a),u=o.real,l=o.imag,c=[u.length],h=s.makeTensorInfo(c,"float32",u),p=s.makeTensorInfo(c,"float32",l),d=Vw({inputs:{real:h,imag:p},backend:s}),f=function(t){const e=Math.floor(t.length/4),n=new Float32Array(e),r=new Float32Array(e);for(let e=2;e<t.length;e+=4)n[Math.floor(e/4)]=t[e],r[Math.floor(e/4)]=t[e+1];return{real:n,imag:r}}(a),m=f.real,g=f.imag,y=[m.length],b=s.makeTensorInfo(y,"float32",m),x=s.makeTensorInfo(y,"float32",g),w=Vw({inputs:{real:b,imag:x},backend:s}),v=ZI(u,l,i,r,s),I=v.real,k=v.imag,N=[I.length],S=s.makeTensorInfo(N,"float32",I),E=s.makeTensorInfo(N,"float32",k),C=Vw({inputs:{real:S,imag:E},backend:s}),$=ZI(m,g,i,r,s),T=$.real,A=$.imag,R=[T.length],_=s.makeTensorInfo(R,"float32",T),D=s.makeTensorInfo(R,"float32",A),M=Vw({inputs:{real:_,imag:D},backend:s}),F=function(t,e){const n=new Float32Array(t/2),r=new Float32Array(t/2);for(let s=0;s<Math.ceil(t/2);s++){const a=(e?2:-2)*Math.PI*(s/t);n[s]=Math.cos(a),r[s]=Math.sin(a)}return{real:n,imag:r}}(n,r),O=[F.real.length],L=s.makeTensorInfo(O,"float32",F.real),B=s.makeTensorInfo(O,"float32",F.imag),z=Vw({inputs:{real:L,imag:B},backend:s}),P=kv({inputs:{a:z,b:M},backend:s}),W=tv({inputs:{a:C,b:P},backend:s}),V=zv({inputs:{a:C,b:P},backend:s}),U=jw({inputs:{input:W},backend:s}),G=jw({inputs:{input:V},backend:s}),H=kI({inputs:{input:W},backend:s}),j=kI({inputs:{input:V},backend:s}),q=SI({inputs:[U,G],backend:s,attrs:{axis:0}}),K=SI({inputs:[H,j],backend:s,attrs:{axis:0}}),X=s.data.get(q.dataId).values,Y=s.data.get(K.dataId).values;return s.disposeIntermediateTensorInfo(h),s.disposeIntermediateTensorInfo(p),s.disposeIntermediateTensorInfo(d),s.disposeIntermediateTensorInfo(b),s.disposeIntermediateTensorInfo(x),s.disposeIntermediateTensorInfo(w),s.disposeIntermediateTensorInfo(S),s.disposeIntermediateTensorInfo(E),s.disposeIntermediateTensorInfo(C),s.disposeIntermediateTensorInfo(_),s.disposeIntermediateTensorInfo(D),s.disposeIntermediateTensorInfo(M),s.disposeIntermediateTensorInfo(L),s.disposeIntermediateTensorInfo(B),s.disposeIntermediateTensorInfo(z),s.disposeIntermediateTensorInfo(P),s.disposeIntermediateTensorInfo(W),s.disposeIntermediateTensorInfo(V),s.disposeIntermediateTensorInfo(U),s.disposeIntermediateTensorInfo(H),s.disposeIntermediateTensorInfo(G),s.disposeIntermediateTensorInfo(j),s.disposeIntermediateTensorInfo(q),s.disposeIntermediateTensorInfo(K),{real:X,imag:Y}}const QI={kernelName:Zt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:r}=e,s=p(r.shape),a=r.shape[r.shape.length-1],i=Qv({inputs:{x:r},backend:n,attrs:{shape:[s/a,a]}}),o=YI(i,!1,n),u=Qv({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}};const tk={kernelName:Qt,backendName:"cpu",kernelFunc:function(t){const{backend:e,attrs:n}=t,{shape:r,value:s,dtype:a}=n,i=a||$(s),o=I(i,p(r));return function(t,e,n){t.fill(e)}(o,s),e.makeTensorInfo(r,i,o)}};const ek={kernelName:te,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:r}=t,s=n,a=v(r.dtype,p(r.shape)),[i,o,u,l]=r.shape,c=s.data.get(r.dataId).values;for(let t=0;t<i;t++){const e=t*u*o*l;for(let t=0;t<o;t++){const n=t*(u*l);for(let r=0;r<u;r++){const s=r*l;for(let o=0;o<l;o++){const h=[i,t,r,o][2],p=Math.round(u-h),d=e+n+s+o;let f=c[d];if(p>=0&&p<u){f=c[e+n+p*l+o]}a[d]=f}}}}return{dataId:s.write(a,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};const nk={kernelName:xn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:a,bias:i,preluActivationWeights:o}=e,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:p,activation:d}=r;let f=CI({inputs:{x:s,filter:a},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:p}});if(i){const t=f;f=tv({inputs:{a:f,b:i},backend:n}),n.disposeIntermediateTensorInfo(t)}if(d){const t=f;f=Zv(n,f,d,o),n.disposeIntermediateTensorInfo(t)}return f}};const rk={kernelName:wn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:a,bias:i,preluActivationWeights:o}=e,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:p,activation:d}=r;let f=BI({inputs:{x:s,filter:a},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:p}});if(i){const t=f;f=tv({inputs:{a:f,b:i},backend:n}),n.disposeIntermediateTensorInfo(t)}if(d){const t=f;f=Zv(n,f,d,o),n.disposeIntermediateTensorInfo(t)}return f}};const sk={kernelName:oe,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:r}=e,s=p(r.shape),a=r.shape[r.shape.length-1],i=Qv({inputs:{x:r},backend:n,attrs:{shape:[s/a,a]}}),o=YI(i,!0,n),u=Qv({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}},ak=rv(le,(t=>Number.isFinite(t)?1:0),"bool"),ik={kernelName:le,backendName:"cpu",kernelFunc:ak},ok=rv(ce,(t=>Math.abs(t)===1/0?1:0),"bool"),uk={kernelName:ce,backendName:"cpu",kernelFunc:ok},lk=rv(he,(t=>Number.isNaN(t)?1:0),"bool"),ck={kernelName:he,backendName:"cpu",kernelFunc:lk},hk=rv(de,(t=>Math.log1p(t))),pk={kernelName:de,backendName:"cpu",kernelFunc:hk},dk=rv(fe,(t=>t?0:1),"bool"),fk={kernelName:fe,backendName:"cpu",kernelFunc:dk},mk={kernelName:ge,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{reductionIndices:s,keepDims:a}=e,i=n;let o=r.shape;const u=o.length,l=x(s,o);let c=l;const h=ii(c,u);let d=i.data.get(r.dataId).values;if(null!=h){const t=new Array(u);for(let e=0;e<t.length;e++)t[e]=o[h[e]];d=Wv(d,o,r.dtype,h,t),c=ui(c.length,u),o=t}_w(r,"max"),ai("max",c,u);const[f,m]=ri(o,c),g=wv(d,p(m),f,r.dtype),y=i.write(g,f,r.dtype);let b=f;if(a){b=si(f,l)}return{dataId:y,shape:b,dtype:r.dtype}}};const gk={kernelName:be,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e;_w(s,"maxPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=r;u(Ti(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const c=xi(s.shape,a,i,1,o,l);let h;if(1===c.filterWidth&&1===c.filterHeight&&d(c.inShape,c.outShape))h=Gw({inputs:{x:s},backend:n});else{const t=n.data.get(s.dataId).values,e=R(s.shape),r=gI(t,s.shape,s.dtype,e,c,"max");h=n.makeTensorInfo(c.outShape,s.dtype,r.values)}return h}};const yk={kernelName:xe,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:a,output:i}=e,o=a;_w([a,i],"maxPoolBackprop");const{filterSize:u,strides:l,pad:c,dimRoundingMode:h}=r,p=xi(o.shape,u,l,1,c,h),d=n.data.get(o.dataId).values,f=ua(p.outShape,o.dtype,yI(d,o.shape,o.dtype,p).values),m=p.strideHeight,g=p.strideWidth,y=p.dilationHeight,b=p.dilationWidth,x=p.effectiveFilterHeight,w=p.effectiveFilterWidth,v=w-1-p.padInfo.left,I=x-1-p.padInfo.top,k=ua(o.shape,"float32"),N=n.data.get(s.dataId).values,S=ua(s.shape,"float32",N);for(let t=0;t<p.batchSize;++t)for(let e=0;e<p.inChannels;++e)for(let n=0;n<p.inHeight;++n)for(let r=0;r<p.inWidth;++r){const s=n-I,a=r-v;let i=0;for(let n=0;n<x;n+=y){const r=(s+n)/m;if(!(r<0||r>=p.outHeight||Math.floor(r)!==r))for(let s=0;s<w;s+=b){const o=(a+s)/g;if(o<0||o>=p.outWidth||Math.floor(o)!==o)continue;const u=x*w-1-f.get(t,r,o,e)===n*w+s?1:0;if(0===u)continue;i+=S.get(t,r,o,e)*u}}k.set(i,t,n,r,e)}return n.makeTensorInfo(k.shape,k.dtype,k.values)}};const bk={kernelName:ve,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{filterSize:s,strides:a,pad:i,includeBatchInIndex:o}=e,u=n;_w(r,"MaxPoolWithArgmax");const l=u.data.get(r.dataId).values,c=xi(r.shape,s,a,[1,1],i),[h,p]=function(t,e,n,r,s){const a=gI(t,0,n,R(e),s,"max"),i=yI(t,e,n,s,!0,r);return[a.values,i.values]}(l,r.shape,r.dtype,o,c),d=u.write(h,c.outShape,r.dtype),f=u.write(p,c.outShape,r.dtype);return[{dataId:d,shape:c.outShape,dtype:r.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}};const xk={kernelName:Ne,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{paddings:a,mode:i}=r;_w(s,"mirrorPad");const o=a.map(((t,e)=>t[0]+s.shape[e]+t[1])),u=a.map((t=>t[0])),l=a.map(((t,e)=>t[0]+s.shape[e])),c="reflect"===i?0:1,h=n.data.get(s.dataId).values,d=s.shape.length,f=R(s.shape),m=p(o),g=o.length,y=R(o),b=v(s.dtype,m);for(let t=0;t<m;t++){let e=z(t,g,y);for(let t=0;t<g;t++)e[t]<u[t]?e[t]=2*u[t]-e[t]-c:e[t]>=l[t]&&(e[t]=2*(l[t]-1)-e[t]+c);e=e.map(((t,e)=>t-u[e]));const n=B(e,d,f);b[t]=h[n]}return{dataId:n.write(b,o,s.dtype),shape:o,dtype:s.dtype}}},wk=uc,vk={kernelName:Te,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{boxes:r,scores:s}=t,{maxOutputSize:a,iouThreshold:i,scoreThreshold:o,padToMaxOutputSize:u}=n,l=e;_w(r,"NonMaxSuppressionPadded");const c=l.data.get(r.dataId).values,h=l.data.get(s.dataId).values,{selectedIndices:p,validOutputs:d}=wk(c,h,a,i,o,u);return[p,d]}},Ik=lc,kk={kernelName:Ae,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{boxes:r,scores:s}=t,{maxOutputSize:a,iouThreshold:i,scoreThreshold:o,softNmsSigma:u}=n,l=e;_w(r,"NonMaxSuppressionWithScore");const c=l.data.get(r.dataId).values,h=l.data.get(s.dataId).values,p=a,d=i,f=o,m=u,{selectedIndices:g,selectedScores:y}=Ik(c,h,p,d,f,m);return[g,y]}};const Nk={kernelName:De,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{paddings:a,constantValue:i}=r;_w(s,"pad");const o=a.map(((t,e)=>t[0]+s.shape[e]+t[1])),u=a.map((t=>t[0])),l=n.data.get(s.dataId).values,c=p(s.shape),h=s.shape.length,d=R(s.shape),f=p(o),m=o.length,g=R(o),y=v(s.dtype,f);0!==i&&y.fill(i);for(let t=0;t<c;t++){y[B(z(t,h,d).map(((t,e)=>t+u[e])),m,g)]=l[t]}return{dataId:n.write(y,o,s.dtype),shape:o,dtype:s.dtype}}},Sk=rv(Oe,(t=>1/t)),Ek={kernelName:Oe,backendName:"cpu",kernelFunc:Sk},Ck={kernelName:yn,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:r}=t,{radians:s,fillValue:a,center:i}=e,o=n,u=v(r.dtype,p(r.shape)),[l,c,h,d]=r.shape,[f,m]=Uc(i,c,h),g=Math.sin(s),y=Math.cos(s),b=o.data.get(r.dataId).values;for(let t=0;t<l;t++){const e=t*h*c*d;for(let t=0;t<c;t++){const n=t*(h*d);for(let r=0;r<h;r++){const s=r*d;for(let i=0;i<d;i++){const o=[l,t,r,i],p=o[2],x=o[1];let w=(p-f)*y-(x-m)*g,v=(p-f)*g+(x-m)*y;w=Math.round(w+f),v=Math.round(v+m);let I=a;if("number"!=typeof a&&(I=3===i?255:a[i]),w>=0&&w<h&&v>=0&&v<c){I=b[e+v*(h*d)+w*d+i]}u[e+n+s+i]=I}}}}return{dataId:o.write(u,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},$k=rv(Ue,(t=>{const e=Math.floor(t);return t-e<.5?Math.floor(t):t-e>.5?Math.ceil(t):e%2==0?e:e+1})),Tk={kernelName:Ue,backendName:"cpu",kernelFunc:$k},Ak=rv(je,(t=>t>=0?1.0507009873554805*t:1.7580993408473768*(Math.exp(t)-1))),Rk={kernelName:je,backendName:"cpu",kernelFunc:Ak},_k=rv(Je,(t=>1/(1+Math.exp(-t)))),Dk={kernelName:Je,backendName:"cpu",kernelFunc:_k},Mk=rv(Ye,(t=>t<0?-1:t>0?1:0)),Fk={kernelName:Ye,backendName:"cpu",kernelFunc:Mk},Ok=rv(Ke,(t=>Math.sin(t))),Lk={kernelName:Ke,backendName:"cpu",kernelFunc:Ok},Bk=rv(Xe,(t=>Math.sinh(t))),zk={kernelName:Xe,backendName:"cpu",kernelFunc:Bk},Pk=Math.log(1.1920928955078125e-7)+2,Wk=rv(Ze,(t=>{const e=t>-Pk,n=t<Pk,r=Math.exp(t);let s;return s=n?r:e?t:Math.log(1+r),s})),Vk={kernelName:Ze,backendName:"cpu",kernelFunc:Wk};function Uk(t){const{inputs:e,attrs:n,backend:r}=t,{x:s}=e,{perm:a}=n;_w(s,"transpose");const i=s.shape.length,o=new Array(i);for(let t=0;t<o.length;t++)o[t]=s.shape[a[t]];const u=Wv(r.data.get(s.dataId).values,s.shape,s.dtype,a,o);return{dataId:r.write(u,o,s.dtype),shape:o,dtype:s.dtype}}const Gk={kernelName:cn,backendName:"cpu",kernelFunc:Uk};const Hk={kernelName:tn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{blockShape:a,paddings:i}=r;_w([s],"spaceToBatchND");const o=p(a),u=[[0,0]];u.push(...i);for(let t=1+a.length;t<s.shape.length;++t)u.push([0,0]);const l=Nk.kernelFunc({inputs:{x:s},backend:n,attrs:{paddings:u,constantValue:0}}),c=Gc(l.shape,a,o,!1),h=Hc(c.length,a.length,!1),d=jc(l.shape,a,o,!1),f=Qv({inputs:{x:l},backend:n,attrs:{shape:c}}),m=Uk({inputs:{x:f},backend:n,attrs:{perm:h}}),g=Qv({inputs:{x:m},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}},jk=rv(Qe,(t=>Math.sqrt(t))),qk={kernelName:Qe,backendName:"cpu",kernelFunc:jk},Kk={kernelName:sn,backendName:"cpu",kernelFunc:({inputs:t,backend:e})=>{const{x:n}=t,r=e;_w(n,"square");const s=r.data.get(n.dataId).values,a=new Float32Array(s.length);for(let t=0;t<s.length;++t){const e=s[t];a[t]=e*e}return{dataId:r.write(a,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},Xk=rv(mn,((t,e)=>{const n=e;return isNaN(t)?NaN:t>0?1:n.alpha})),Yk={kernelName:mn,backendName:"cpu",kernelFunc:Xk},Jk=rv(on,(t=>Math.tan(t))),Zk={kernelName:on,backendName:"cpu",kernelFunc:Jk},Qk=rv(un,(t=>Math.tanh(t)));const tN=[rI,Pw,aI,oI,ev,lI,hI,dI,mI,bI,xI,nI,wI,Xw,ov,II,Uw,EI,TI,AI,$I,_I,DI,RI,FI,LI,zI,PI,WI,VI,GI,UI,qI,Gv,XI,cv,dv,QI,tk,ek,gv,nk,rk,Hw,sk,NI,ik,uk,ck,xv,pk,fk,gk,yk,bk,mk,xk,Nv,vk,kk,Cv,Nk,qv,qw,Ek,Xv,Jv,tI,Ck,Tk,Av,Rk,Dk,Fk,Lk,zk,Dv,Vk,Hk,qk,Kk,Ov,Yk,Pv,Zk,{kernelName:un,backendName:"cpu",kernelFunc:Qk},Gk,{kernelName:hn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,attrs:n,backend:r}=t,{axis:s}=n,{x:a}=e;_w(a,"unique");const i=r.data.get(a.dataId).values,{outputValues:o,outputShape:u,indices:l}=Vv(i,s,a.shape,a.dtype);return[r.makeTensorInfo(u,a.dtype,o),r.makeTensorInfo([l.length],"int32",l)]}}];for(const t of tN)En(t);const eN={},nN={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function rN(t){if(!(t in eN)){const e=function(t){if(1!==t&&2!==t)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const e=function(t){if("undefined"!=typeof OffscreenCanvas&&2===t)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(t);if(e.addEventListener("webglcontextlost",(e=>{e.preventDefault(),delete eN[t]}),!1),1===t)return e.getContext("webgl",nN)||e.getContext("experimental-webgl",nN);return e.getContext("webgl2",nN)}(t);if(null===e)return console.log("Could not get context for WebGL version",t),null;eN[t]=e}const e=eN[t];return e.isContextLost()?(delete eN[t],rN(t)):(e.disable(e.DEPTH_TEST),e.disable(e.STENCIL_TEST),e.disable(e.BLEND),e.disable(e.DITHER),e.disable(e.POLYGON_OFFSET_FILL),e.disable(e.SAMPLE_COVERAGE),e.enable(e.SCISSOR_TEST),e.enable(e.CULL_FACE),e.cullFace(e.BACK),eN[t])}var sN,aN,iN,oN,uN,lN;function cN(t,e){return[e,t]}function hN(t){const e=p(t);return m(Math.ceil(e/4))}function pN(t,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(t/2))]}function dN(t,e){const n=t;let r,s,a,i,o,u,l,c,h,p;return 2===U().getNumber("WEBGL_VERSION")?(r=n.R32F,s=n.R16F,a=n.RGBA16F,i=n.RGBA32F,o=n.RED,l=4,c=1,h=n.HALF_FLOAT,p=n.FLOAT):(r=t.RGBA,s=t.RGBA,a=t.RGBA,i=n.RGBA,o=t.RGBA,l=4,c=4,h=null!=e?e.HALF_FLOAT_OES:null,p=t.FLOAT),u=t.RGBA,{internalFormatFloat:r,internalFormatHalfFloat:s,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:i,textureFormatFloat:o,downloadTextureFormat:u,downloadUnpackNumChannels:l,defaultNumChannels:c,textureTypeHalfFloat:h,textureTypeFloat:p}}function fN(t,e){const n=e();return U().getBool("DEBUG")&&function(t){const e=t.getError();if(e!==t.NO_ERROR)throw new Error("WebGL Error: "+function(t,e){switch(e){case t.NO_ERROR:return"NO_ERROR";case t.INVALID_ENUM:return"INVALID_ENUM";case t.INVALID_VALUE:return"INVALID_VALUE";case t.INVALID_OPERATION:return"INVALID_OPERATION";case t.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case t.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case t.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${e}`}}(t,e))}(t),n}(aN=sN||(sN={}))[aN.DENSE=0]="DENSE",aN[aN.SHARED_BATCH=1]="SHARED_BATCH",(oN=iN||(iN={}))[oN.RENDER=0]="RENDER",oN[oN.UPLOAD=1]="UPLOAD",oN[oN.PIXELS=2]="PIXELS",oN[oN.DOWNLOAD=3]="DOWNLOAD",(lN=uN||(uN={}))[lN.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",lN[lN.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",lN[lN.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",lN[lN.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",lN[lN.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16";function mN(t){return!!(U().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===t||5.96e-8<Math.abs(t)&&Math.abs(t)<65504)}function gN(t,e){return SN(t,(()=>t.getExtension(e)),'Extension "'+e+'" not supported on this browser.')}function yN(t,e){const n=SN(t,(()=>t.createShader(t.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(fN(t,(()=>t.shaderSource(n,e))),fN(t,(()=>t.compileShader(n))),!1===t.getShaderParameter(n,t.COMPILE_STATUS))throw function(t,e){const n=bN.exec(e);if(null==n)return console.log(`Couldn't parse line number in error: ${e}`),void console.log(t);const r=+n[1],s=t.split("\n"),a=s.length.toString().length+2,i=s.map(((t,e)=>g((e+1).toString(),a)+t));let o=0;for(let t=0;t<i.length;t++)o=Math.max(i[t].length,o);const u=i.slice(0,r-1),l=i.slice(r-1,r),c=i.slice(r);console.log(u.join("\n")),console.log(e.split("\n")[0]),console.log(`%c ${g(l[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join("\n"))}(e,t.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}const bN=/ERROR: [0-9]+:([0-9]+):/g;function xN(t,e){if(fN(t,(()=>t.validateProgram(e))),!1===t.getProgramParameter(e,t.VALIDATE_STATUS))throw console.log(t.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function wN(t,e,n,r,s,a,i){const o=t.getAttribLocation(e,n);return-1!==o&&(fN(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,r))),fN(t,(()=>t.vertexAttribPointer(o,s,t.FLOAT,!1,a,i))),fN(t,(()=>t.enableVertexAttribArray(o))),!0)}function vN(t,e,n){!function(t,e){const n=t.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=e+t.TEXTURE0;if(r<t.TEXTURE0||r>n){throw new Error(`textureUnit must be in ${`[gl.TEXTURE0, gl.TEXTURE${n}]`}.`)}}(t,n),fN(t,(()=>t.activeTexture(t.TEXTURE0+n))),fN(t,(()=>t.bindTexture(t.TEXTURE_2D,e)))}function IN(t,e,n){fN(t,(()=>t.bindFramebuffer(t.FRAMEBUFFER,n))),fN(t,(()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,e,0)))}function kN(t,e){fN(t,(()=>t.bindFramebuffer(t.FRAMEBUFFER,e))),fN(t,(()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,null,0)))}function NN(t){const e=t.checkFramebufferStatus(t.FRAMEBUFFER);if(e!==t.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(t,e){switch(e){case t.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case t.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${e}`}}(t,e))}function SN(t,e,n){const r=fN(t,(()=>e()));if(null==r)throw new Error(n);return r}function EN(t,e=2){return p(t.slice(0,t.length-e))}function CN(t){if(0===t.length)throw Error("Cannot get rows and columns of an empty shape array.");return[t.length>1?t[t.length-2]:1,t[t.length-1]]}function $N(t){let e=[1,1,1];return 0===t.length||1===t.length&&1===t[0]||(e=[EN(t),...CN(t)]),e}function TN(t){return t%2==0}function AN(t,e){if(d(t=t.slice(-2),e=e.slice(-2)))return!0;if(!t.length||!e.length)return!0;if(0===t[0]||0===t[1]||0===e[0]||0===e[1])return!0;if(t.length!==e.length){const n=t.slice(-1)[0],r=e.slice(-1)[0];if(n===r)return!0;if(TN(n)&&TN(r)&&(1===t[0]||1===e[0]))return!0}return t[1]===e[1]&&TN(t[0])&&TN(e[0])}let RN,_N;function DN(t,e){return null!=t.getExtension(e)}function MN(t){try{if(null!=rN(t))return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function FN(t){if(0===t)return!1;const e=rN(t);if(1!==t){if(DN(e,"EXT_color_buffer_float"))return ON(e);const t="EXT_color_buffer_half_float";if(DN(e,t)){const n=e.getExtension(t);return function(t,e){const n=dN(t,e),r=t.createTexture();t.bindTexture(t.TEXTURE_2D,r);const s=1,a=1;t.texImage2D(t.TEXTURE_2D,0,n.internalFormatHalfFloat,s,a,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const i=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,i),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,r,0);const o=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(r),t.deleteFramebuffer(i),o}(e,n)}return!1}if(!DN(e,"OES_texture_float"))return!1;if(!DN(e,"WEBGL_color_buffer_float"))return!1;return ON(e)}function ON(t){const e=dN(t),n=t.createTexture();t.bindTexture(t.TEXTURE_2D,n);t.texImage2D(t.TEXTURE_2D,0,e.internalFormatFloat,1,1,0,e.textureFormatFloat,e.textureTypeFloat,null);const r=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,r),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,n,0);const s=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(n),t.deleteFramebuffer(r),s}function LN(t,e){Array.isArray(t)||(t=[t]),t.forEach((t=>{null!=t&&u("complex64"!==t.dtype,(()=>`${e} does not support complex64 tensors in the WebGL backend.`))}))}const BN=U();BN.registerFlag("HAS_WEBGL",(()=>BN.getNumber("WEBGL_VERSION")>0)),BN.registerFlag("WEBGL_VERSION",(()=>MN(2)?2:MN(1)?1:0)),BN.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),BN.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===BN.get("WEBGL_VERSION"))),BN.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),BN.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),BN.registerFlag("WEBGL_PACK",(()=>BN.getBool("HAS_WEBGL"))),BN.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>BN.getBool("WEBGL_PACK"))),BN.registerFlag("WEBGL_PACK_CLIP",(()=>BN.getBool("WEBGL_PACK"))),BN.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>!1)),BN.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>BN.getBool("WEBGL_PACK"))),BN.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>BN.getBool("WEBGL_PACK"))),BN.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>BN.getBool("WEBGL_PACK"))),BN.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>BN.getBool("WEBGL_PACK"))),BN.registerFlag("WEBGL_PACK_REDUCE",(()=>BN.getBool("WEBGL_PACK"))),BN.registerFlag("WEBGL_LAZILY_UNPACK",(()=>BN.getBool("WEBGL_PACK"))),BN.registerFlag("WEBGL_CONV_IM2COL",(()=>BN.getBool("WEBGL_PACK"))),BN.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(t){if(null==RN){const e=rN(t);RN=e.getParameter(e.MAX_TEXTURE_SIZE)}return RN}(BN.getNumber("WEBGL_VERSION")))),BN.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(t){if(null==_N){const e=rN(t);_N=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,_N)}(BN.getNumber("WEBGL_VERSION")))),BN.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const t=BN.getNumber("WEBGL_VERSION");return 0===t?0:function(t){if(0===t)return 0;let e;const n=rN(t);return e=DN(n,"EXT_disjoint_timer_query_webgl2")&&2===t?2:DN(n,"EXT_disjoint_timer_query")?1:0,e}(t)})),BN.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>BN.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!mr())),BN.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(t){if(0===t)return!1;const e=rN(t);if(1===t){if(!DN(e,"OES_texture_float"))return!1}else if(!DN(e,"EXT_color_buffer_float"))return!1;return ON(e)}(BN.getNumber("WEBGL_VERSION")))),BN.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!BN.getBool("WEBGL_FORCE_F16_TEXTURES")&&BN.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),BN.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>FN(BN.getNumber("WEBGL_VERSION")))),BN.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(t=BN.getNumber("WEBGL_VERSION"))&&null!=rN(t).fenceSync;var t})),BN.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>BN.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),BN.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(t=>{if(t<0&&-1!==t)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${t}.`)}));class zN{constructor(t,e){this.outputShape=[],this.outputShape=t,this.variableNames=e.map(((t,e)=>`T${e}`));const n=[];this.variableNames.forEach((t=>{n.push(`float v${t} = get${t}AtOutCoords();`)}));const r=this.variableNames.map((t=>`v${t}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class PN{constructor(t,e){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.variableNames=e.map(((t,e)=>`T${e}`));const n=[];this.variableNames.forEach((t=>{n.push(`vec4 v${t} = get${t}AtOutCoords();`)}));const r=this.variableNames.map((t=>`v${t}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}class WN{constructor(t,e,n){this.variableNames=["A"];const{windowSize:r,batchSize:s,outSize:a}=t;n||this.variableNames.push("bestIndicesA"),this.outputShape=[s,a];const i="max"===e?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${i} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}function VN(t,e){return["x","y","z","w","u","v"].slice(0,e).map((e=>`${t}.${e}`))}function UN(t,e){return 1===e?[t]:VN(t,e)}function GN(){let t,e,n,r,s,a,i,o,u,l;return 2===U().getNumber("WEBGL_VERSION")?(t="#version 300 es",e="in",n="out",r="in",s="texture",a="outputColor",i="out vec4 outputColor;",o="\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",u="",l="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(t="",e="attribute",n="varying",r="varying",s="texture2D",a="gl_FragColor",i="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",u="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",l="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:t,attribute:e,varyingVs:n,varyingFs:r,texture2D:s,output:a,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:u,defineRound:l}}function HN(t,e,n="index"){const r=R(e);return r.map(((e,s)=>`${`int ${t[s]} = ${n} / ${e}`}; ${s===r.length-1?`int ${t[s+1]} = ${n} - ${t[s]} * ${e}`:`index -= ${t[s]} * ${e}`};`)).join("")}function jN(t){const e=R(t).map((t=>t.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;\n  }\n`}const qN="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n";function KN(t,e,n,r){const s=[];t.forEach((t=>{const e=p(t.shapeInfo.logicalShape);t.shapeInfo.isUniform?s.push(`uniform float ${t.name}${e>1?`[${e}]`:""};`):(s.push(`uniform sampler2D ${t.name};`),s.push(`uniform int offset${t.name};`))}));const a=s.join("\n"),i=t.map((t=>function(t,e,n=!1){let r="";r+=n?YN(t):XN(t);const s=t.shapeInfo.logicalShape,a=e.logicalShape;s.length<=a.length&&(r+=n?function(t,e){const n=t.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",a=t.shapeInfo.logicalShape.length,i=e.logicalShape.length,o=uo(t.shapeInfo.logicalShape,e.logicalShape),u=sS(i),l=i-a;let c;const h=["x","y","z","w","u","v"];c=0===a?"":i<2&&o.length>=1?"coords = 0;":o.map((t=>`coords.${h[t+l]} = 0;`)).join("\n");let d="";d=i<2&&a>0?"coords":t.shapeInfo.logicalShape.map(((t,e)=>`coords.${h[e+l]}`)).join(", ");let f="return outputValue;";const m=1===p(t.shapeInfo.logicalShape),g=1===p(e.logicalShape);if(1!==a||m||g){if(m&&!g)f=1===i?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(o.length){const t=a-2,e=a-1;o.indexOf(t)>-1&&o.indexOf(e)>-1?f="return vec4(outputValue.x);":o.indexOf(t)>-1?f="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(e)>-1&&(f="return vec4(outputValue.xx, outputValue.zz);")}}else f="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${s}() {\n      ${u} coords = getOutputCoords();\n      ${c}\n      vec4 outputValue = get${r}(${d});\n      ${f}\n    }\n  `}(t,e):function(t,e){const n=t.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",a=e.texShape,i=t.shapeInfo.texShape,o=t.shapeInfo.logicalShape.length,u=e.logicalShape.length;if(!t.shapeInfo.isUniform&&o===u&&null==t.shapeInfo.flatOffset&&d(i,a))return`\n      float ${s}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const l=sS(u),c=uo(t.shapeInfo.logicalShape,e.logicalShape),h=u-o;let p;const f=["x","y","z","w","u","v"];p=0===o?"":u<2&&c.length>=1?"coords = 0;":c.map((t=>`coords.${f[t+h]} = 0;`)).join("\n");let m="";m=u<2&&o>0?"coords":t.shapeInfo.logicalShape.map(((t,e)=>`coords.${f[e+h]}`)).join(", ");return`\n    float ${s}() {\n      ${l} coords = getOutputCoords();\n      ${p}\n      return get${r}(${m});\n    }\n  `}(t,e));return r}(t,e,r))).join("\n"),o=e.texShape,u=GN(),l=function(t){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${t.texture2D}(textureSampler, uv).r;\n    }\n  `}(u);let c,h,f=function(t){return`${t.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${t.varyingFs} vec2 resultUV;\n    ${t.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${t.defineSpecialNaN}\n    ${t.defineSpecialInf}\n    ${t.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${JN}\n    ${ZN}\n    ${QN}\n  `}(u);e.isPacked?(c=function(t,e){switch(t.length){case 0:return eS();case 1:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(1===n[0])return`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${n[1]}.0);\n      }\n    `;if(1===n[1])return`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${n[0]}.0);\n      }\n    `;return`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      return 2 * (resTexRC.x * ${n[1]} + resTexRC.y);\n    }\n  `}(0,e);case 2:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(d(t,e))return`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${n[0]}, ${n[1]}));\n      }\n    `;const r=Math.ceil(t[1]/2);return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(t,e);case 3:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],r=Math.ceil(t[2]/2),s=r*Math.ceil(t[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(t,e);default:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],r=Math.ceil(t[t.length-1]/2),s=r*Math.ceil(t[t.length-2]/2);let a=s,i="",o="b, r, c";for(let e=2;e<t.length-1;e++)a*=t[t.length-e-1],i=`\n      int b${e} = index / ${a};\n      index -= b${e} * ${a};\n    `+i,o=`b${e}, `+o;return`\n    ivec${t.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      ${i}\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec${t.length}(${o});\n    }\n  `}(t,e)}}(e.logicalShape,o),h=function(t){return`\n    void setOutput(vec4 val) {\n      ${t.output} = val;\n    }\n  `}(u)):(c=function(t,e){switch(t.length){case 0:return eS();case 1:return function(t,e){if(1===e[0])return`\n      int getOutputCoords() {\n        return int(resultUV.x * ${e[1]}.0);\n      }\n    `;if(1===e[1])return`\n      int getOutputCoords() {\n        return int(resultUV.y * ${e[0]}.0);\n      }\n    `;return`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n      return resTexRC.x * ${e[1]} + resTexRC.y;\n    }\n  `}(0,e);case 2:return function(t,e){if(d(t,e))return`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));\n      }\n    `;if(1===t[1])return`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${e[0]}, ${e[1]}));\n        int index = resTexRC.x * ${e[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `;if(1===t[0])return`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${e[0]}, ${e[1]}));\n        int index = resTexRC.x * ${e[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `;return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      int r = index / ${t[1]};\n      int c = index - r * ${t[1]};\n      return ivec2(r, c);\n    }\n  `}(t,e);case 3:return function(t,e){const n=HN(["r","c","d"],t);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      ${n}\n      return ivec3(r, c, d);\n    }\n  `}(t,e);case 4:return function(t,e){const n=HN(["r","c","d","d2"],t);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      ${n}\n      return ivec4(r, c, d, d2);\n    }\n  `}(t,e);case 5:return function(t,e){const n=HN(["r","c","d","d2","d3"],t);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${e[0]},\n                             ${e[1]}));\n\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(t,e);case 6:return function(t,e){const n=HN(["r","c","d","d2","d3","d4"],t);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(t,e);default:throw new Error(`${t.length}-D output sampling is not yet supported`)}}(e.logicalShape,o),h=function(t){return`\n    void setOutput(float val) {\n      ${t.output} = vec4(val, 0, 0, 0);\n    }\n  `}(u)),r&&(f+=tS);return[f,l,h,a,c,i,n].join("\n")}function XN(t){const e=t.shapeInfo.logicalShape;switch(e.length){case 0:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1);if(t.shapeInfo.isUniform)return`float ${n}() {return ${e};}`;const[r,s]=t.shapeInfo.texShape;if(1===r&&1===s)return`\n      float ${n}() {\n        return sampleTexture(${e}, halfCR);\n      }\n    `;const[a,i]=t.shapeInfo.texShape,o=nS(e);return`\n    float ${n}() {\n      vec2 uv = uvFromFlat(${a}, ${i}, ${o});\n      return sampleTexture(${e}, uv);\n    }\n  `}(t);case 1:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1);if(t.shapeInfo.isUniform)return`\n      float ${n}(int index) {\n        ${rS(t)}\n      }\n    `;const r=t.shapeInfo.texShape,s=r[0],a=r[1];if(1===a&&1===s)return`\n      float ${n}(int index) {\n        return sampleTexture(${e}, halfCR);\n      }\n    `;const i=nS(e);if(1===a)return`\n      float ${n}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / ${s}.0);\n        return sampleTexture(${e}, uv);\n      }\n    `;if(1===s)return`\n      float ${n}(int index) {\n        vec2 uv = vec2((float(index + ${i}) + 0.5) / ${a}.0, 0.5);\n        return sampleTexture(${e}, uv);\n      }\n    `;return`\n    float ${n}(int index) {\n      vec2 uv = uvFromFlat(${s}, ${a}, index + ${i});\n      return sampleTexture(${e}, uv);\n    }\n  `}(t);case 2:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t.shapeInfo.texShape;if(null!=s&&d(e,s)){const t=s[0];return`\n    float ${r}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${s[1]}.0, ${t}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `}const{newShape:a,keptDims:i}=w(e),o=a;if(o.length<e.length){const e=["row","col"];return`\n      ${XN(aS(t,o))}\n      float ${r}(int row, int col) {\n        return ${r}(${iS(e,i)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${e[1]}, 1)));\n        ${rS(t)}\n      }\n    `;const u=s[0],l=s[1],c=nS(n);if(1===l)return`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${c}), vec3(${e[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `;if(1===u)return`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${c}), vec3(${e[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${l}.0, 0.5);\n      return sampleTexture(${n}, uv);\n    }\n  `;return`\n  float ${r}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${e[1]} + col + ${c};\n    vec2 uv = uvFromFlat(${u}, ${l}, index);\n    return sampleTexture(${n}, uv);\n  }\n`}(t);case 3:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e[1]*e[2],a=e[2],{newShape:i,keptDims:o}=w(e),u=i;if(u.length<e.length){const e=["row","col","depth"];return`\n        ${XN(aS(t,u))}\n        float ${r}(int row, int col, int depth) {\n          return ${r}(${iS(e,o)});\n        }\n      `}if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${s}, ${a}, 1)));\n        ${rS(t)}\n      }\n    `;const l=t.shapeInfo.texShape,c=l[0],h=l[1],p=t.shapeInfo.flatOffset;if(h===s&&null==p)return`\n        float ${r}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${a}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${h}.0, ${c}.0);\n          return sampleTexture(${n}, uv);\n        }\n      `;if(h===a&&null==p)return`\n    float ${r}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${e[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${h}.0, ${c}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `;const d=nS(n);return`\n      float ${r}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${s} + col * ${a} + depth + ${d};\n        vec2 uv = uvFromFlat(${c}, ${h}, index);\n        return sampleTexture(${n}, uv);\n      }\n  `}(t);case 4:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e[3],a=e[2]*s,i=e[1]*a,{newShape:o,keptDims:u}=w(e);if(o.length<e.length){const e=["row","col","depth","depth2"];return`\n      ${XN(aS(t,o))}\n      float ${r}(int row, int col, int depth, int depth2) {\n        return ${r}(${iS(e,u)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${i}, ${a}, ${s}, 1)));\n        ${rS(t)}\n      }\n    `;const l=t.shapeInfo.flatOffset,c=t.shapeInfo.texShape,h=c[0],p=c[1];if(p===i&&null==l)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${a}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(p===s&&null==l)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${e[1]*e[2]}, ${e[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const d=nS(n);return`\n    float ${r}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${i} + col * ${a} +\n          depth * ${s} + depth2;\n      vec2 uv = uvFromFlat(${h}, ${p}, index + ${d});\n      return sampleTexture(${n}, uv);\n    }\n  `}(t);case 5:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e[4],a=e[3]*s,i=e[2]*a,o=e[1]*i,{newShape:u,keptDims:l}=w(e);if(u.length<e.length){const e=["row","col","depth","depth2","depth3"];return`\n      ${XN(aS(t,u))}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${iS(e,l)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${i}, ${a}, ${s})) +\n          depth3;\n        ${rS(t)}\n      }\n    `;const c=t.shapeInfo.flatOffset,h=t.shapeInfo.texShape,p=h[0],d=h[1];if(d===o&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${i}, ${a}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${d}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(d===s&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${e[1]*e[2]*e[3]},\n               ${e[2]*e[3]}, ${e[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${d}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const f=nS(n);return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} + depth * ${a} +\n          depth2 * ${s} + depth3 + ${f};\n      vec2 uv = uvFromFlat(${p}, ${d}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(t);case 6:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:s,keptDims:a}=w(e);if(s.length<e.length){const e=["row","col","depth","depth2","depth3","depth4"];return`\n      ${XN(aS(t,s))}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${iS(e,a)});\n      }\n    `}const i=e[5],o=e[4]*i,u=e[3]*o,l=e[2]*u,c=e[1]*l;if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${c}, ${l}, ${u}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${i}, 1)));\n        ${rS(t)}\n      }\n    `;const h=t.shapeInfo.flatOffset,p=t.shapeInfo.texShape,d=p[0],f=p[1];if(f===c&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${l}, ${u}, ${o}, ${i})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===i&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${e[1]*e[2]*e[3]*e[4]},\n               ${e[2]*e[3]*e[4]},\n               ${e[3]*e[4]},\n               ${e[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const m=nS(n);return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${c} + col * ${l} + depth * ${u} +\n          depth2 * ${o} + depth3 * ${i} + depth4 + ${m};\n      vec2 uv = uvFromFlat(${d}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(t);default:throw new Error(`${e.length}-D input sampling is not yet supported`)}}function YN(t){switch(t.shapeInfo.logicalShape.length){case 0:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),r=GN();return`\n    vec4 ${n}() {\n      return ${r.texture2D}(${e}, halfCR);\n    }\n  `}(t);case 1:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),r=t.shapeInfo.texShape,s=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],a=GN();return`\n    vec4 ${n}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${s[0]}, ${s[1]}, index);\n      return ${a.texture2D}(${e}, uv);\n    }\n  `}(t);case 2:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t.shapeInfo.texShape,a=s[0],i=s[1],o=GN();if(null!=s&&d(e,s))return`\n      vec4 ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${i}.0, ${a}.0);\n\n        return ${o.texture2D}(${n}, uv);\n      }\n    `;const u=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],l=Math.ceil(e[1]/2);return`\n    vec4 ${r}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${l}, ${u[0]}, ${u[1]}, row, col);\n      return ${o.texture2D}(${n}, uv);\n    }\n  `}(t);case 3:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t.shapeInfo.texShape,a=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(1===e[0]){const n=[1,2],s=["b","row","col"];return`\n        ${YN(aS(t,e.slice(1)))}\n        vec4 ${r}(int b, int row, int col) {\n          return ${r}(${iS(s,n)});\n        }\n      `}const i=a[0],o=a[1],u=Math.ceil(e[2]/2),l=u*Math.ceil(e[1]/2),c=GN();return`\n    vec4 ${r}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${i}, ${o}, ${l}, ${u}, b, row, col);\n      return ${c.texture2D}(${n}, uv);\n    }\n  `}(t);default:return function(t){const e=t.shapeInfo.logicalShape,n=e.length,r=t.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=t.shapeInfo.texShape,i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],o=i[0],u=i[1],l=Math.ceil(e[n-1]/2);let c=l*Math.ceil(e[n-2]/2),h="int b, int row, int col",p=`b * ${c} + (row / 2) * ${l} + (col / 2)`;for(let t=2;t<n-1;t++)h=`int b${t}, `+h,c*=e[n-t-1],p=`b${t} * ${c} + `+p;const d=GN();return`\n    vec4 ${s}(${h}) {\n      int index = ${p};\n      int texR = index / ${u};\n      int texC = index - texR * ${u};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${u}, ${o});\n      return ${d.texture2D}(${r}, uv);\n    }\n  `}(t)}}const JN="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",ZN="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",QN="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",tS="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function eS(){return"\n    int getOutputCoords() {\n      return 0;\n    }\n  "}function nS(t){return`offset${t}`}function rS(t){const e=t.name,n=p(t.shapeInfo.logicalShape);return n<2?`return ${e};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${e}[i];\n      }\n    }\n  `}function sS(t){if(t<=1)return"int";if(2===t)return"ivec2";if(3===t)return"ivec3";if(4===t)return"ivec4";if(5===t)return"ivec5";if(6===t)return"ivec6";throw Error(`GPU for rank ${t} is not yet supported`)}function aS(t,e){const n=JSON.parse(JSON.stringify(t));return n.shapeInfo.logicalShape=e,n}function iS(t,e){return e.map((e=>t[e])).join(", ")}class oS{constructor(t,e,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,u(t.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const s=t[t.length-1],a=Math.ceil(s/e);this.outputShape=t.slice(0,-1),a>1&&this.outputShape.push(a),r||this.variableNames.push("bestIndicesA");const i=this.outputShape,o=i.length,l=sS(o),c=UN("coords",o);let h,p;if(1===a){p=o+1;const t=sS(p);h=`\n        ${t} sourceLocR = ${t}(${c.join()}, 0);\n        ++${c[o-1]};\n        ${t} sourceLocG = ${t}(${c.join()}, 0);\n        ++${c[o-2]};\n        ${t} sourceLocA = ${t}(${c.join()}, 0);\n        --${c[o-1]};\n        ${t} sourceLocB = ${t}(${c.join()}, 0);\n        --${c[o-2]};`}else p=o,h=`\n        ${l} sourceLocR = coords;\n        ++${c[o-1]};\n        ${l} sourceLocG = coords;\n        ++${c[o-2]};\n        ${l} sourceLocA = coords;\n        --${c[o-1]};\n        ${l} sourceLocB = coords;\n        --${c[o-2]};`;const d=["x","y","z","w","u","v"].slice(0,p),f="."+d[p-1],m=d.map((t=>"int "+t)),g=UN("sourceLocR",p-1).concat("inIdx.r"),y=UN("sourceLocG",p-1).concat("inIdx.g"),b=UN("sourceLocB",p-1).concat("inIdx.b"),x=UN("sourceLocA",p-1).concat("inIdx.a"),w="max"===n?"greaterThan":"lessThan",v=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${b.join()}),\n                             getBestIndicesAChannel(${x.join()})));`,I=`vec4(\n            getAChannel(${g.join()}),\n            hasNextCol ? getAChannel(${y.join()}) : 0.,\n            hasNextRow ? getAChannel(${b.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${x.join()}) : 0.)`,k=r?"":`\n      float getBestIndicesAChannel(${m.join()}) {\n        return getChannel(getBestIndicesA(${d.join()}),\n                                          vec2(${d.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${m.join()}) {\n        return getChannel(getA(${d.join()}),\n                               vec2(${d.slice(-2).join()}));\n      }\n      ${k}\n      void main() {\n        ${l} coords = getOutputCoords();\n        bool hasNextCol = ${c[o-1]} < ${i[o-1]-1};\n        bool hasNextRow = ${c[o-2]} < ${i[o-2]-1};\n        ${h}\n        ivec4 srcIdx = ivec4(sourceLocR${f}, sourceLocG${f},\n          sourceLocB${f}, sourceLocA${f}) * ${e};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${I};\n\n        for (int i = 0; i < ${e}; i++) {\n          inIdx = srcIdx;\n          ${v}\n          vec4 candidate = ${I};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${w}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}class uS{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,r=t.strideHeight,s=t.strideWidth,a=t.dilationHeight,i=t.dilationWidth,o=t.effectiveFilterHeight,u=t.effectiveFilterWidth,l=o-1-t.padInfo.top,c=u-1-t.padInfo.left,h=1/(e*n);this.userCode=`\n      const ivec2 pads = ivec2(${l}, ${c});\n      const float avgMultiplier = float(${h});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${a}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${u};\n            wC+= ${i}) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class lS{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterDepth,n=t.filterHeight,r=t.filterWidth,s=t.strideDepth,a=t.strideHeight,i=t.strideWidth,o=t.dilationDepth,u=t.dilationHeight,l=t.dilationWidth,c=t.effectiveFilterDepth,h=t.effectiveFilterHeight,p=t.effectiveFilterWidth,d=c-1-t.padInfo.front,f=h-1-t.padInfo.top,m=p-1-t.padInfo.left,g=1/(e*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${d}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${s}.0;\n\n          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${h};\n              wR += ${u}) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${p};\n                wC += ${l}) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const cS="return (a < 0.) ? b * a : a;";class hS{constructor(t,e,n){this.variableNames=["A","B"],this.outputShape=co(e,n),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${t}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}const pS="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";class dS{constructor(t,e,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=co(e,n);const s=this.outputShape.length;let a="";if(r)if(0===s||1===p(this.outputShape))a="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else{if(a=`\n          ${sS(s)} coords = getOutputCoords();\n        `,1===s)a+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const t=UN("coords",s);a+=`\n            bool nextRowOutOfBounds =\n              (${t[s-2]} + 1) >= ${this.outputShape[s-2]};\n            bool nextColOutOfBounds =\n              (${t[s-1]} + 1) >= ${this.outputShape[s-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${t}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${a}\n\n        setOutput(result);\n      }\n    `}}class fS{constructor(t){this.variableNames=["A"],this.outputShape=t,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}getCustomSetupFunc(t,e){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,t),n.gl.uniform1f(this.maxLoc,e)}}}class mS{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}getCustomSetupFunc(t,e){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,t),n.gl.uniform1f(this.maxLoc,e)}}}class gS{constructor(t){this.variableNames=["real","imag"],this.outputShape=t,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}class yS{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,n=t.strideWidth,r=t.padInfo.top,s=t.padInfo.left,a="channelsLast"===t.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yR = 0; yR < ${t.outHeight}; yR++) {\n            int xR = wR + yR * ${e} - ${r};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${t.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              if (${a}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class bS{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,r=t.strideHeight,s=t.strideWidth,a="channelsLast"===t.dataFormat,i=e-1-t.padInfo.top,o=n-1-t.padInfo.left,u=a?1:2,l=a?2:3,c=a?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${u}], coords[${l}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${e}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${e} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${t.outChannels}; d2++) {\n\n              if (${a}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class xS{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideDepth,n=t.strideHeight,r=t.strideWidth,s=t.padInfo.front,a=t.padInfo.top,i=t.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yF = 0; yF < ${t.outDepth}; yF++) {\n            int xF = wF + yF * ${e} - ${s};\n\n            if (xF < 0 || xF >= ${t.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${t.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${a};\n\n              if (xR < 0 || xR >= ${t.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${t.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${i};\n\n                if (xC < 0 || xC >= ${t.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class wS{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterDepth,n=t.filterHeight,r=t.filterWidth,s=t.strideDepth,a=t.strideHeight,i=t.strideWidth,o=e-1-t.padInfo.front,u=n-1-t.padInfo.top,l=r-1-t.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${u}, ${l});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${e}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${s}.0;\n\n          if (dyF < 0.0 || dyF >= ${t.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${e} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${t.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class vS{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,n=t.strideWidth,r=t.padInfo.top,s=t.padInfo.left,a=t.outChannels/t.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${a} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yR = 0; yR < ${t.outHeight}; yR++) {\n            int xR = wR + yR * ${e} - ${r};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${t.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class IS{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,r=t.strideHeight,s=t.strideWidth,a=e-1-t.padInfo.top,i=n-1-t.padInfo.left,o=t.outChannels/t.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${e}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${e} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class kS{constructor(t,e=!1,n=null,r=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;const s=t.padInfo.top,a=t.padInfo.left,i=t.strideHeight,o=t.strideWidth,u=t.dilationHeight,l=t.dilationWidth,c=t.filterHeight,h=t.filterWidth,p=4*Math.floor(t.inChannels/4),d=t.inChannels%4,f="channelsLast"===t.dataFormat,m=f?1:2,g=f?2:3,y=f?3:1;let b="",x="";n&&(b=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,x="result = activation(result);");const w=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.userCode=`\n      ${b}\n\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${s}, ${a});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${y}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${m}], coords[${g}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${c}; wR++) {\n          int xR = xRCorner + wR * ${u};\n\n          if (xR < 0 || xR >= ${t.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${h}; wC++) {\n            int xC = xCCorner + wC * ${l};\n\n            if (xC < 0 || xC >= ${t.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${p}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${f}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===d}) {\n\n              if (${f}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${p}) *\n                    getW(wR, wC, ${p}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${p}, xR, xC) *\n                    getW(wR, wC, ${p}, d2);\n              }\n\n            } else if (${2===d}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2)\n              );\n\n              if (${f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===d}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2),\n                getW(wR, wC, ${p} + 2, d2)\n              );\n\n              if (${f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1),\n                  getX(batch, xR, xC, ${p} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC),\n                  getX(batch, ${p} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${w}\n        ${x}\n        setOutput(result);\n      }\n    `}}class NS{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const e=t.padInfo.front,n=t.padInfo.top,r=t.padInfo.left,s=t.strideDepth,a=t.strideHeight,i=t.strideWidth,o=t.dilationDepth,u=t.dilationHeight,l=t.dilationWidth,c=t.filterDepth,h=t.filterHeight,p=t.filterWidth,d=4*Math.floor(t.inChannels/4),f=t.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${s}, ${a}, ${i});\n      const ivec3 pads = ivec3(${e}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${t.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${u};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${p}; wC++) {\n              int xC = xCCorner + wC * ${l};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${d}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${d}) *\n                  getW(wF, wR, wC, ${d}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${d}),\n                  getX(batch, xF, xR, xC, ${d} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${d}, d2),\n                  getW(wF, wR, wC, ${d} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${d}),\n                  getX(batch, xF, xR, xC, ${d} + 1),\n                  getX(batch, xF, xR, xC, ${d} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${d}, d2),\n                  getW(wF, wR, wC, ${d} + 1, d2),\n                  getW(wF, wR, wC, ${d} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class SS{constructor(t,e=!1,n=null,r=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;const s=t.inHeight,a=t.inWidth,i=t.padInfo.top,o=t.padInfo.left,u=t.strideHeight,l=t.strideWidth,c=t.dilationHeight,h=t.dilationWidth,p=t.filterHeight,d=t.filterWidth,f=t.outChannels/t.inChannels;let m="",g="";n&&(m=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,g="result = activation(result);");const y=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.userCode=`\n      ${m}\n\n      const ivec2 strides = ivec2(${u}, ${l});\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${f};\n        int q = d2 - d1 * ${f};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${p}; wR++) {\n          int xR = xRCorner + wR * ${c};\n\n          if (xR < 0 || xR >= ${s}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${d}; wC++) {\n            int xC = xCCorner + wC * ${h};\n\n            if (xC < 0 || xC >= ${a}) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${y}\n        ${g}\n        setOutput(result);\n      }\n    `}}class ES{constructor(t,e=!1,n=null,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.outShape;const s=t.inHeight,a=t.inWidth,i=t.padInfo.top,u=t.padInfo.left,l=t.strideHeight,c=t.strideWidth,h=t.dilationHeight,p=t.dilationWidth,d=t.filterHeight,f=t.filterWidth,m=f;let g="int xR; int xC; int xCOffset;";for(let t=0;t<d;t++)for(let e=0;e<f;e++)g+=`\n          vec4 xTexelR${t}C${2*e} = vec4(0.);\n          vec4 wR${t}C${e} = vec4(0.);\n          vec4 xR${t}C${e} = vec4(0.);`;for(let t=0;t<d;t++)for(let e=0;e<m;e++){const n=2*e;if(g+=`\n          xR = xRCorner + ${t*h};\n          xC = xCCorner + ${n*p};\n        `,1===c){if(n<f&&(g+=u%2==1?`\n                xCOffset = xC + 1;\n                if(xR >= 0 && xR < ${s} && xCOffset >= 0 && xCOffset < ${a}) {\n                  xTexelR${t}C${n} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ${a}) {\n                    xTexelR${t}C${n}.zw = vec2(0.);\n                  }\n                } else {\n                  xTexelR${t}C${n} = vec4(0.);\n                }\n\n                xCOffset = xC + 1 - 2;\n                if(xR >= 0 && xR < ${s} && xCOffset >= 0 && xCOffset < ${a}) {\n                  vec4 previous = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ${a}) {\n                    previous.zw = vec2(0.);\n                  }\n\n                  xR${t}C${n} = vec4(previous.zw, xTexelR${t}C${n}.xy);\n                } else {\n                  xR${t}C${n} = vec4(0, 0, xTexelR${t}C${n}.xy);\n                }\n              `:`\n                if(xR >= 0 && xR < ${s} && xC >= 0 && xC < ${a}) {\n                  xTexelR${t}C${n} = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR${t}C${n} = vec4(0.);\n                }\n\n                xR${t}C${n} = xTexelR${t}C${n};\n              `,n+1<f)){const e=u%2==0?o(p):p;p%2==0&&u%2==1||p%2!=0&&u%2!=1?(g+=`\n                  xCOffset = xC + ${u%2} + ${e};\n\n                  if(xR >= 0 && xR < ${s} &&\n                    xCOffset >= 0 && xCOffset < ${a}) {\n                    xTexelR${t}C${n+2} = getX(batch, xR, xCOffset, d1);\n                  }\n                `,p>1&&(g+=`\n                    xCOffset -= 2;\n                    if(xR >= 0 && xR < ${s} &&\n                      xCOffset >= 0 && xCOffset < ${a}) {\n                      xTexelR${t}C${n} = getX(batch, xR, xCOffset, d1);\n                    } else {\n                      xTexelR${t}C${n} = vec4(0.);\n                    }\n                  `),g+=`\n                  xR${t}C${n+1} = vec4(\n                    xTexelR${t}C${n}.zw, xTexelR${t}C${n+2}.xy);\n                `):g+=`\n                  xCOffset = xC + ${e};\n\n                  if(xR >= 0 && xR < ${s} &&\n                    xCOffset >= 0 && xCOffset < ${a}) {\n                    xTexelR${t}C${n+2} = getX(batch, xR, xCOffset, d1);\n                  }\n\n                  xR${t}C${n+1} = xTexelR${t}C${n+2};\n                `}}else n<f&&(g+=`\n              if(xR >= 0 && xR < ${s}) {\n            `,u%2==1?(g+=`\n                xCOffset = xC + 1 - ${c};\n                if(xCOffset >= 0 && xCOffset < ${a}) {\n                  xTexelR${t}C${n} = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR${t}C${n} = vec4(0.);\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < ${a}) {\n                  xTexelR${t}C${n+2} = getX(batch, xR, xC + 1, d1);\n                } else {\n                  xTexelR${t}C${n+2} = vec4(0.);\n                }\n\n                xR${t}C${n} = vec4(\n                  xTexelR${t}C${n}.zw, xTexelR${t}C${n+2}.zw);\n              `,n+1<f&&(g+=`\n                  vec4 final = vec4(0.);\n                  xCOffset = xC + 1 + ${c};\n                  if(xCOffset >= 0 && xCOffset < ${a}) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xR${t}C${n+1} = vec4(xTexelR${t}C${n+2}.xy, final.xy);\n                `)):(g+=`\n                if(xC >= 0 && xC < ${a}) {\n                  xTexelR${t}C${n} = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR${t}C${n} = vec4(0.);\n                }\n\n                xCOffset = xC + ${c};\n                if(xCOffset >= 0 && xCOffset < ${a}) {\n                  xTexelR${t}C${n+2} = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR${t}C${n+2} = vec4(0.);\n                }\n\n                xR${t}C${n} = vec4(\n                  xTexelR${t}C${n}.xy, xTexelR${t}C${n+2}.xy);\n              `,n+1<f&&(g+=`\n                  xR${t}C${n+1} = vec4(\n                    xTexelR${t}C${n}.zw, xTexelR${t}C${n+2}.zw);\n                `)),g+="}");n<f&&(g+=`\n            vec4 wTexelR${t}C${n} = getW(${t}, ${n}, d1, q);\n            wR${t}C${n} = vec4(wTexelR${t}C${n}.xz, wTexelR${t}C${n}.xz);\n          `,n+1<f&&(g+=`\n              vec4 wTexelR${t}C${n+1} = getW(${t}, ${n+1}, d1, q);\n              wR${t}C${n+1} =\n                vec4(wTexelR${t}C${n+1}.xz, wTexelR${t}C${n+1}.xz);`))}for(let t=0;t<d;t++)for(let e=0;e<f;e++)g+=`dotProd += xR${t}C${e} * wR${t}C${e};`;let y="",b="";n&&(y=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,b="result = activation(result);");const x=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.userCode=`\n      ${y}\n\n      const ivec2 strides = ivec2(${l}, ${c});\n      const ivec2 pads = ivec2(${i}, ${u});\n\n      void main() {\n\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2;\n        int q = 0;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        vec4 dotProd = vec4(0.);\n\n        ${g}\n\n        vec4 result = dotProd;\n        ${x}\n        ${b}\n        setOutput(result);\n      }\n    `}}class CS{constructor(t,e,n,r,s){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[a,i,o,u]=t,[l]=e,[c,h]=n;this.outputShape=[l,c,h,u];const p="bilinear"===r?1:0,[d,f]=[i-1+".0",o-1+".0"],[m,g,y]=c>1?[""+(i-1)/(c-1),"(y2-y1) * height_ratio",`y1*${d} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${d}`],[b,x,w]=h>1?[""+(o-1)/(h-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${b});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${a}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${x};\n\n        float in_y = ${y};\n        if( in_y < 0.0 || in_y > ${d} ) {\n          setOutput(float(${s}));\n          return;\n        }\n        float in_x = ${w};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${s}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${p} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}class $S{constructor(t,e,n){this.variableNames=["x"],this.outputShape=t;const r=t.length,s=e?"0.0":`getX(${TS(r,"coords")})`,a=t[t.length-1];let i="",o="";e?(i=n?"end != "+(a-1):"end != 0",o=n?"end + 1":"end - 1"):(i=n?`end + pow2 < ${a}`:"end >= pow2",o=n?"end + pow2":"end - pow2"),this.userCode=`\n      uniform float index;\n      void main() {\n        ${sS(r)} coords = getOutputCoords();\n        int end = ${AS(r,"coords")};\n        float val = ${s};\n        int pow2 = int(pow(2.0, index));\n        if (${i}) {\n          int idx = ${o};\n          ${AS(r,"coords")} = idx;\n          val += getX(${TS(r,"coords")});\n        }\n        setOutput(val);\n      }\n    `}getCustomSetupFunc(t){return(e,n)=>{null==this.index&&(this.index=e.getUniformLocation(n,"index")),e.gl.uniform1f(this.index,t)}}}function TS(t,e){if(1===t)return`${e}`;if(2===t)return`${e}.x, ${e}.y`;if(3===t)return`${e}.x, ${e}.y, ${e}.z`;if(4===t)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw Error(`Cumulative sum for rank ${t} is not yet supported`)}function AS(t,e){if(1===t)return`${e}`;if(2===t)return`${e}.y`;if(3===t)return`${e}.z`;if(4===t)return`${e}.w`;throw Error(`Cumulative sum for rank ${t} is not yet supported`)}class RS{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=sN.DENSE;const e=hN(t),n=GN();this.outputShape=t,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${HN(["r","c","d"],t)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${e[0]}, ${e[1]}));\n        int index = 4 * (resTexRC.x * ${e[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${n.output} = result;\n      }\n    `}}class _S{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=sN.DENSE;const e=hN(t),n=GN();this.outputShape=t,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${HN(["r","c","d"],t)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${e[0]}, ${e[1]}));\n        int index = 4 * (resTexRC.x * ${e[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${n.output} = result;\n      }\n    `}}class DS{constructor(t,e,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=t,this.blockSize=e,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${e};\n      int offset_h = imod(h, ${e});\n      int in_w = w / ${e};\n      int offset_w = imod(w, ${e});\n      int offset_d = (offset_h * ${e} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}class MS{constructor(t){this.variableNames=["X"],this.outputShape=[t,t],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}class FS{constructor(t){this.variableNames=["A"],this.outTexUsage=iN.DOWNLOAD;const e=GN();this.outputShape=t,this.userCode=`\n      ${qN}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${e.output} = encode_float(x);\n      }\n    `}}class OS{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=iN.DOWNLOAD;const e=GN();this.outputShape=t,this.userCode=`\n      ${qN}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${e.output} = encode_float(x);\n      }\n    `}}class LS{constructor(t,e,n=!1){this.variableNames=["A"];const r=GN(),[s,a]=e;this.outputShape=t;let i="result";n&&(i="floor(result * 255. + 0.5)"),this.userCode=`\n      ${jN(t)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / ${a};\n        int c = imod(flatIndex, ${a});\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(${a}.0, ${s}.0);\n        vec4 values = ${r.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${r.output} = vec4(${i}, 0., 0., 0.);\n      }\n    `}}class BS{constructor(t,e,n=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const r=GN(),[s,a]=e;this.outputShape=t;let i="",o="result";n&&(o="floor(result * 255. + 0.5)");for(let e=0;e<=1;e++)for(let n=0;n<=1;n++){const o=2*e+n;i+=`\n          localCoords = coords;\n          if(localCoords[2] + ${n} < ${t[2]}) {\n            localCoords[2] += ${n};\n            if(localCoords[1] + ${e} < ${t[1]}) {\n              localCoords[1] += ${e};\n\n              flatIndex = getFlatIndex(localCoords);\n              offset = imod(flatIndex, 4);\n\n              flatIndex = idiv(flatIndex, 4, 1.);\n\n              r = flatIndex / ${a};\n              c = imod(flatIndex, ${a});\n              uv = (vec2(c, r) + halfCR) / vec2(${a}.0, ${s}.0);\n              values = ${r.texture2D}(A, uv);\n\n              if(offset == 0) {\n                result[${o}] = values[0];\n              } else if(offset == 1) {\n                result[${o}] = values[1];\n              } else if(offset == 2) {\n                result[${o}] = values[2];\n              } else {\n                result[${o}] = values[3];\n              }\n            }\n          }\n        `}this.userCode=`\n      ${jN(t)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        vec4 result = vec4(0.);\n        int flatIndex, r, c, offset;\n        ivec3 localCoords;\n        vec2 uv;\n        vec4 values;\n\n        ${i}\n\n        ${r.output} = ${o};\n      }\n    `}}class zS{constructor(t,e){this.outputShape=[],this.variableNames=["x"],this.outputShape=t,this.userCode="\n      uniform float value;\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}getCustomSetupFunc(t){return(e,n)=>{null==this.valueLoc&&(this.valueLoc=e.getUniformLocationNoThrow(n,"value")),e.gl.uniform1f(this.valueLoc,t)}}}class PS{constructor(t,e,n){this.variableNames=["A","indices"];const r=t.slice();r[n]=e,this.outputShape=r,this.rank=r.length;const s=sS(this.rank),a=function(t,e){const n=t.length;if(n>4)throw Error(`Gather for rank ${n} is not yet supported`);if(1===n)return"int(getIndices(resRC))";const r=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let n=0;n<t.length;n++)n===e?s.push(`int(getIndices(${r[n]}))`):s.push(`${r[n]}`);return s.join()}(t,n);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        setOutput(getA(${a}));\n      }\n    `}}class WS{constructor(t,e,n){this.sliceDim=t,this.strides=e,this.variableNames=["x","indices"],this.outputShape=n;const r=sS(e.length),s=sS(n.length),a=this.sliceDim>1?"strides[j]":"strides";this.userCode=`\n        ${r} strides = ${r}(${this.strides});\n         void main() {\n          ${s} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${a};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}function VS(t){const e=GN();return function(t,e){const n=SN(t,(()=>t.createShader(t.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(fN(t,(()=>t.shaderSource(n,e))),fN(t,(()=>t.compileShader(n))),!1===t.getShaderParameter(n,t.COMPILE_STATUS))throw console.log(t.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(t,`${e.version}\n    precision highp float;\n    ${e.attribute} vec3 clipSpacePos;\n    ${e.attribute} vec2 uv;\n    ${e.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}function US(t){return function(t,e){const n=SN(t,(()=>t.createBuffer()),"Unable to create WebGLBuffer");return fN(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,n))),fN(t,(()=>t.bufferData(t.ARRAY_BUFFER,e,t.STATIC_DRAW))),n}(t,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function GS(t){return function(t,e){const n=SN(t,(()=>t.createBuffer()),"Unable to create WebGLBuffer");return fN(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,n))),fN(t,(()=>t.bufferData(t.ELEMENT_ARRAY_BUFFER,e,t.STATIC_DRAW))),n}(t,new Uint16Array([0,1,2,2,1,3]))}function HS(t,e,n,r,s,a){!function(t,e){const n=U().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t<=0||e<=0)throw new Error(`Requested texture size [${t}x${e}] is invalid.`);if(t>n||e>n)throw new Error(`Requested texture size [${t}x${e}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(e,n);const i=function(t){return SN(t,(()=>t.createTexture()),"Unable to create WebGLTexture.")}(t),o=t.TEXTURE_2D;return fN(t,(()=>t.bindTexture(o,i))),fN(t,(()=>t.texParameteri(o,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE))),fN(t,(()=>t.texParameteri(o,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE))),fN(t,(()=>t.texParameteri(o,t.TEXTURE_MIN_FILTER,t.NEAREST))),fN(t,(()=>t.texParameteri(o,t.TEXTURE_MAG_FILTER,t.NEAREST))),fN(t,(()=>t.texImage2D(o,0,r,e,n,0,s,a,null))),fN(t,(()=>t.bindTexture(t.TEXTURE_2D,null))),i}function jS(t){return t.internalFormatFloat}function qS(t){return t.internalFormatHalfFloat}function KS(t){return t.downloadTextureFormat}function XS(t){return t.internalFormatPackedFloat}function YS(t){return t.internalFormatPackedHalfFloat}function JS(t,e,n,r,s,a,i,o){const u=t,l=new Float32Array(function(t,e){const[n,r]=pN(t,e);return n*r*4}(a,i));return u.bindBuffer(u.PIXEL_PACK_BUFFER,e),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,l),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),l}class ZS{constructor(t){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const e=U().getNumber("WEBGL_VERSION");null!=t?(this.gl=t,function(t,e){eN[t]=e}(e,t)):this.gl=rN(e);let n="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(1===U().getNumber("WEBGL_VERSION")){const t="OES_texture_float",e="OES_texture_half_float";if(this.textureFloatExtension=gN(this.gl,t),DN(this.gl,e))this.textureHalfFloatExtension=gN(this.gl,e);else if(U().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),DN(this.gl,r))this.colorBufferHalfFloatExtension=gN(this.gl,r);else if(U().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",DN(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!DN(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=US(this.gl),this.indexBuffer=GS(this.gl),this.framebuffer=function(t){return SN(t,(()=>t.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=dN(this.gl,this.textureHalfFloatExtension)}get debug(){return U().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const t=this.gl;fN(t,(()=>t.finish())),fN(t,(()=>t.bindFramebuffer(t.FRAMEBUFFER,null))),fN(t,(()=>t.deleteFramebuffer(this.framebuffer))),fN(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,null))),fN(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null))),fN(t,(()=>t.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[s,a]=cN(e,n);return HS(t,s,a,jS(r),r.textureFormatFloat,t.FLOAT)}(this.gl,t,e,this.textureConfig)}createFloat16MatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[s,a]=cN(e,n);return HS(t,s,a,qS(r),r.textureFormatFloat,r.textureTypeHalfFloat)}(this.gl,t,e,this.textureConfig)}createUnsignedBytesMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[s,a]=cN(e,n);return HS(t,s,a,KS(r),t.RGBA,t.UNSIGNED_BYTE)}(this.gl,t,e,this.textureConfig)}uploadPixelDataToTexture(t,e){this.throwIfDisposed(),function(t,e,n){fN(t,(()=>t.bindTexture(t.TEXTURE_2D,e))),n.data instanceof Uint8Array?fN(t,(()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,n.width,n.height,0,t.RGBA,t.UNSIGNED_BYTE,n.data))):fN(t,(()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,n))),fN(t,(()=>t.bindTexture(t.TEXTURE_2D,null)))}(this.gl,t,e)}uploadDenseMatrixToTexture(t,e,n,r){this.throwIfDisposed(),function(t,e,n,r,s,a){let i,o,u;fN(t,(()=>t.bindTexture(t.TEXTURE_2D,e))),s instanceof Uint8Array?(i=new Uint8Array(n*r*4),o=t.UNSIGNED_BYTE,u=t.RGBA):(i=new Float32Array(n*r*4),o=t.FLOAT,u=a.internalFormatPackedFloat),i.set(s),fN(t,(()=>t.texImage2D(t.TEXTURE_2D,0,u,n,r,0,t.RGBA,o,i))),fN(t,(()=>t.bindTexture(t.TEXTURE_2D,null)))}(this.gl,t,e,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[s,a]=pN(e,n);return HS(t,s,a,YS(r),t.RGBA,r.textureTypeHalfFloat)}(this.gl,t,e,this.textureConfig)}createPackedMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[s,a]=pN(e,n);return HS(t,s,a,XS(r),t.RGBA,t.FLOAT)}(this.gl,t,e,this.textureConfig)}deleteMatrixTexture(t){this.throwIfDisposed(),this.outputTexture===t&&(kN(this.gl,this.framebuffer),this.outputTexture=null),fN(this.gl,(()=>this.gl.deleteTexture(t)))}downloadByteEncodedFloatMatrixFromOutputTexture(t,e,n){return this.downloadMatrixDriver(t,(()=>function(t,e,n,r){const[s,a]=cN(e,n),i=new Uint8Array(e*n*4);return fN(t,(()=>t.readPixels(0,0,s,a,r.downloadTextureFormat,t.UNSIGNED_BYTE,i))),new Float32Array(i.buffer)}(this.gl,e,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(t,e,n,r,s,a){return JS(this.gl,t,0,0,0,s,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(t,e){return function(t,e,n){const r=t,s=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,e),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,s),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),s}(this.gl,t,e)}createBufferFromTexture(t,e,n){this.bindTextureToFrameBuffer(t);const r=function(t,e,n,r){const s=t.createBuffer();fN(t,(()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,s)));const a=16*e*n;return fN(t,(()=>t.bufferData(t.PIXEL_PACK_BUFFER,a,t.STREAM_READ))),fN(t,(()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,0))),fN(t,(()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,null))),s}(this.gl,e,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const t=this.createFence(this.gl);return this.pollFence(t)}createFence(t){let e,n;if(U().getBool("WEBGL_FENCE_API_ENABLED")){const r=t,s=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);t.flush(),n=()=>{const t=r.clientWaitSync(s,0,0);return t===r.ALREADY_SIGNALED||t===r.CONDITION_SATISFIED},e=s}else U().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(e=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(e,U().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:e,isFencePassed:n}}downloadMatrixFromPackedTexture(t,e,n){return this.downloadMatrixDriver(t,(()=>function(t,e,n){const r=new Float32Array(e*n*4);return fN(t,(()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,r))),r}(this.gl,e,n)))}createProgram(t){this.throwIfDisposed();const e=this.gl,n=yN(e,t),r=VS(e),s=function(t){return SN(t,(()=>t.createProgram()),"Unable to create WebGLProgram.")}(e);return fN(e,(()=>e.attachShader(s,r))),fN(e,(()=>e.attachShader(s,n))),function(t,e){if(fN(t,(()=>t.linkProgram(e))),!1===t.getProgramParameter(e,t.LINK_STATUS))throw console.log(t.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}(e,s),this.debug&&xN(e,s),this.vertexAttrsAreBound||(this.setProgram(s),this.vertexAttrsAreBound=function(t,e,n){return fN(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,n))),wN(t,e,"clipSpacePos",n,3,20,0)&&wN(t,e,"uv",n,2,20,12)}(e,this.program,this.vertexBuffer)),s}deleteProgram(t){this.throwIfDisposed(),t===this.program&&(this.program=null),null!=t&&fN(this.gl,(()=>this.gl.deleteProgram(t)))}setProgram(t){this.throwIfDisposed(),this.program=t,null!=this.program&&this.debug&&xN(this.gl,this.program),fN(this.gl,(()=>this.gl.useProgram(t)))}getUniformLocation(t,e,n=!0){return this.throwIfDisposed(),n?function(t,e,n){return SN(t,(()=>t.getUniformLocation(e,n)),'uniform "'+n+'" not present in program.')}(this.gl,t,e):function(t,e,n){return t.getUniformLocation(e,n)}(this.gl,t,e)}getAttributeLocation(t,e){return this.throwIfDisposed(),fN(this.gl,(()=>this.gl.getAttribLocation(t,e)))}getUniformLocationNoThrow(t,e){return this.throwIfDisposed(),this.gl.getUniformLocation(t,e)}setInputMatrixTexture(t,e,n){this.throwIfDisposed(),this.throwIfNoProgram(),function(t,e,n,r){fN(t,(()=>vN(t,e,r))),fN(t,(()=>t.uniform1i(n,r)))}(this.gl,t,e,n)}setOutputMatrixTexture(t,e,n){this.setOutputMatrixTextureDriver(t,n,e)}setOutputPackedMatrixTexture(t,e,n){this.throwIfDisposed();const[r,s]=pN(e,n);this.setOutputMatrixTextureDriver(t,r,s)}setOutputMatrixWriteRegion(t,e,n,r){this.setOutputMatrixWriteRegionDriver(n,t,r,e)}setOutputPackedMatrixWriteRegion(t,e,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&xN(this.gl,this.program),NN(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const t=this.gl;this.debug&&this.debugValidate(),fN(t,(()=>t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),fN(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=gN(this.gl,2===U().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===U().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const t=this.gl,e=this.getQueryTimerExtensionWebGL2(),n=t.createQuery();return t.beginQuery(e.TIME_ELAPSED_EXT,n),n}const t=this.getQueryTimerExtensionWebGL1(),e=t.createQueryEXT();return t.beginQueryEXT(t.TIME_ELAPSED_EXT,e),e}endQuery(){if(2===U().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const t=this.gl,e=this.getQueryTimerExtensionWebGL2();return void t.endQuery(e.TIME_ELAPSED_EXT)}const t=this.getQueryTimerExtensionWebGL1();t.endQueryEXT(t.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(t){return await y((()=>this.disposed||this.isQueryAvailable(t,U().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(t,U().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(t,e){if(0===e)return null;if(2===e){const e=this.gl;return e.getQueryParameter(t,e.QUERY_RESULT)/1e6}{const e=this.getQueryTimerExtensionWebGL1();return e.getQueryObjectEXT(t,e.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(t,e){if(0===e)return!0;if(2===e){const e=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=e.getQueryParameter(t,e.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const e=this.getQueryTimerExtensionWebGL1(),n=e.getQueryObjectEXT(t,e.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(e.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(t){return new Promise((e=>{this.addItemToPoll((()=>t.isFencePassed()),(()=>e()))}))}pollItems(){const t=function(t){let e=0;for(;e<t.length;++e){if(!t[e]())break}return e-1}(this.itemsToPoll.map((t=>t.isDoneFn)));for(let e=0;e<=t;++e){const{resolveFn:t}=this.itemsToPoll[e];t()}this.itemsToPoll=this.itemsToPoll.slice(t+1)}addItemToPoll(t,e){this.itemsToPoll.push({isDoneFn:t,resolveFn:e}),this.itemsToPoll.length>1||y((()=>(this.pollItems(),0===this.itemsToPoll.length)))}bindTextureToFrameBuffer(t){this.throwIfDisposed(),IN(this.gl,t,this.framebuffer),this.debug&&NN(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(IN(this.gl,this.outputTexture,this.framebuffer),this.debug&&NN(this.gl)):kN(this.gl,this.framebuffer)}downloadMatrixDriver(t,e){this.bindTextureToFrameBuffer(t);const n=e();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(t,e,n){this.throwIfDisposed();const r=this.gl;IN(r,t,this.framebuffer),this.debug&&NN(r),this.outputTexture=t,fN(r,(()=>r.viewport(0,0,e,n))),fN(r,(()=>r.scissor(0,0,e,n)))}setOutputMatrixWriteRegionDriver(t,e,n,r){this.throwIfDisposed(),fN(this.gl,(()=>this.gl.scissor(t,e,n,r)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}function QS(t,e){if(t.length!==e.length)throw Error(`Binary was compiled with ${t.length} inputs, but was executed with ${e.length} inputs`);t.forEach(((t,n)=>{const r=t.logicalShape,s=e[n],a=s.shape;if(!d(r,a))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${a} must match`);if(t.isUniform&&s.isUniform)return;const i=t.texShape,o=s.isUniform?null:s.texData.texShape;if(!d(i,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${o} must match`)}))}class tE{constructor(t,e,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t;const{filterWidth:r,inChannels:s,strideWidth:a,strideHeight:i,padInfo:o,outWidth:u,dilationWidth:l,dilationHeight:c,dataFormat:h}=n,{left:p,top:d}=o,f=s*r,m=GN(),g="channelsLast"===h,y=g?0:1,b=g?1:2;let x="";for(let n=0;n<=1;n++)for(let r=0;r<=1;r++)x+=`\n          blockIndex = rc.y + ${r};\n          pos = rc.x + ${n};\n\n          if(blockIndex < ${t[1]} && pos < ${t[0]}) {\n            offsetY = int(blockIndex / (${u})) * ${i} - ${d};\n            d0 = offsetY + ${c} * (pos / ${f});\n\n            if(d0 < ${e[y]} && d0 >= 0) {\n\n              offsetX = int(mod(float(blockIndex), ${u}.) * ${a}. - ${p}.);\n              d1 = offsetX + ${l} * (int(mod(float(pos), ${f}.) / ${s}.));\n\n              if(d1 < ${e[b]} && d1 >= 0) {\n\n                ch = int(mod(float(pos), ${s}.));\n\n                if (${g}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*n+r}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*n+r}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${x}\n\n        ${m.output} = result;\n      }\n    `}}class eE{constructor(t,e,n,r,s){this.variableNames=["x"],this.outputShape=[];const a=e,i=t[3]-1;let o;this.outputShape=t;const u=`float(${n}) + float(${r}) * sum`;o=.5===s?`inversesqrt(${u})`:1===s?`1.0/(${u})`:`exp(log(${u}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${a}; j <= ${a}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}class nE{constructor(t,e,n,r,s){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=t,this.depth=t[3],this.depthRadius=e,this.bias=n,this.alpha=r,this.beta=s,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${e})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${e} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${s})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${s});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}class rE{constructor(t,e,n,r,s){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const a=e,i=t[3]-1;let o;this.outputShape=t;const u=`float(${n}) + float(${r}) * sum`;o=.5===s?`inversesqrt(${u})`:1===s?`1.0/(${u})`:`exp(log(${u}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${a};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${a}; j <= ${a}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}class sE{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideHeight,n=t.strideWidth,r=t.dilationHeight,s=t.effectiveFilterHeight,a=t.effectiveFilterWidth,i=s-1-t.padInfo.top,o=a-1-t.padInfo.left,u=s*a-1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${s};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${e}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${a}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${a} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class aE{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideDepth,n=t.strideHeight,r=t.strideWidth,s=t.dilationDepth,a=t.dilationHeight,i=t.dilationWidth,o=t.effectiveFilterDepth,u=t.effectiveFilterHeight,l=t.effectiveFilterWidth,c=o-1-t.padInfo.front,h=u-1-t.padInfo.top,p=l-1-t.padInfo.left,d=o*u*l-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${h}, ${p});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${s}) {\n          float dyD = float(dyDCorner + wD) / ${e}.0;\n\n          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${u};\n              wR += ${a}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${l};\n                wC += ${i}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${d} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${u} * ${l} +\n                  wR * ${l} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class iE{constructor(t,e,n,r=!1,s=!1,a=!1,i=null,o=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n;const u=r?t[1]:t[2],l=Math.ceil(u/2),c=r?"i * 2, rc.y":"rc.y, i * 2",h=s?"rc.z, i * 2":"i * 2, rc.z",p=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],d=s?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let f="",m="";i&&(f=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,m="result = activation(result);");const g=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights");let y="rc.x",b="rc.x";t[0]<e[0]?y=`int(min(float(rc.x), ${t[0]-1}.))`:e[0]<t[0]&&(b=`int(min(float(rc.x), ${e[0]-1}.))`),this.userCode=`\n      ${f}\n\n      const float sharedDimension = ${l}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${l}; i++) {\n          int batchA = ${y};\n          int batchB = ${b};\n          vec4 a = getMatrixA(batchA, ${c});\n          vec4 b = getMatrixB(batchB, ${h});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${p[0]} * ${d[0]});\n          result += (${p[1]} * ${d[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${g}\n\n        ${m}\n\n        setOutput(result);\n      }\n    `}}class oE{constructor(t,e,n){this.variableNames=["probs"],this.outputShape=[t,n],this.userCode=`\n      uniform float seed;\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${e-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${e-1}));\n      }\n    `}getCustomSetupFunc(t){return(e,n)=>{null==this.seedLoc&&(this.seedLoc=e.getUniformLocation(n,"seed")),e.gl.uniform1f(this.seedLoc,t)}}}class uE{constructor(t,e,n,r){this.variableNames=["indices"],this.outputShape=[t,e],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}class lE{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=t;const e=t.length;if(0===e)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const n=UN("rc",e),r=sS(e),s=function(t,e,n){if(1===t)return`rc > ${e[0]}`;let r="";for(let s=t-2;s<t;s++)r+=`${n[s]} >= ${e[s]}`,s<t-1&&(r+="||");return r}(e,t,n),a=function(t,e,n,r){if(1===t)return"";const s=r.slice(-2);return`\n    int r = ${s[0]};\n    int c = ${s[1]};\n    int rp1 = r + 1;\n    int cp1 = c + 1;\n\n    bool cEdge = cp1 >= ${e};\n    bool rEdge = rp1 >= ${n};\n  `}(e,t[t.length-1],t[t.length-2],n),i=function(t,e){const n=t.length,r=function(t,e){const n=[];for(let r=0;r<=1;r++)for(let s=0;s<=1;s++){let a=`${0===r?"r":"rp1"}, ${0===s?"c":"cp1"}`;for(let n=2;n<t;n++)a=`${e[e.length-1-n]},`+a;n.push(a)}return n}(n,e);if(1===n)return`getA(rc),\n            rc + 1 >= ${t[0]} ? 0. : getA(rc + 1),\n            0, 0`;return`getA(${r[0]}),\n          cEdge ? 0. : getA(${r[1]}),\n          rEdge ? 0. : getA(${r[2]}),\n          rEdge || cEdge ? 0. : getA(${r[3]})`}(t,n);this.userCode=`\n        void main() {\n          ${r} rc = getOutputCoords();\n\n          if(${s}) {\n            setOutput(vec4(0));\n          } else {\n            ${a}\n\n            setOutput(vec4(${i}));\n          }\n        }\n      `}}}class cE{constructor(t,e,n){this.variableNames=["x"],this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const r=t.length,s=sS(r),a=e.map((t=>t[0])).join(","),i=e.map(((e,n)=>e[0]+t[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${s} start = ${s}(${a});\n      ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(float(${n}));\n        } else {\n          ${s} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${a};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(float(${n}));\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class hE{constructor(t,e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const r=t.length,s=sS(r),a=e.map((t=>t[0])).join(","),i=e.map(((e,n)=>e[0]+t[n])).join(","),o=UN("rc",r),u=UN("source",r),l=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${u.slice(-2).join()})`,h=[`${s} rc = outputLoc;`,`${o[r-1]} += 1;\n       if(${l}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${o[r-2]} += 1;\n       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;\n         if(${l}) {`],p=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let d="";for(let t=0,e=1===r?2:4;t<e;t++)d+=`\n        ${h[t]}\n        if (${p}) {\n          result[${t}] = float(${n});\n        } else {\n          ${s} source = rc - start;\n          result[${t}] = getChannel(getX(${u.join()}), ${c});\n        }\n      `;d+=1===r?"} ":"}}",this.userCode=`\n      const ${s} start = ${s}(${a});\n      const ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}}class pE{constructor(t,e,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===e&&n)throw new Error("Cannot compute positions for average pool.");const a=t.filterWidth,i=t.strideHeight,o=t.strideWidth,u=t.dilationHeight,l=t.dilationWidth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,p=t.padInfo.top,d=t.padInfo.left;this.outputShape=t.outShape;const f="avg"===e,m=`((batch  * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + d`,g=`(xR * ${t.inWidth} + xC) * ${t.inChannels} + d`;let y="0.0";if(f||(y="-1.0 / 1e-20"),n){const e=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${p}, ${d});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${u}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${l}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${e} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?s?m:g:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let b=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===e&&(b="avgValue / count");const x=4*Math.floor(a/4),w=a%4,v=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${p}, ${d});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${t.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${u}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${t.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${x}; wC += 4) {\n            int xC = xCCorner + wC * ${l};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              getValue(batch, xR, xC + 3 * ${l}, d)\n            );\n\n            ${v}\n          }\n\n          int xC = xCCorner + ${x};\n          if (${1===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${2===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${3===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              initializationValue\n            );\n\n            ${v}\n          }\n        }\n        setOutput(${b});\n      }\n    `}}class dE{constructor(t,e,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===e&&n)throw new Error("Cannot compute positions for average pool.");const a=t.filterWidth,i=t.strideDepth,o=t.strideHeight,u=t.strideWidth,l=t.dilationDepth,c=t.dilationHeight,h=t.dilationWidth,p=t.effectiveFilterDepth,d=t.effectiveFilterHeight,f=t.effectiveFilterWidth,m=t.padInfo.front,g=t.padInfo.top,y=t.padInfo.left;this.outputShape=t.outShape;const b="avg"===e;let x="0.0";if(b||(x="-1.0 / 1e-20"),n){const e=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${u});\n        const ivec3 pads = ivec3(${m}, ${g}, ${y});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${p};\n              wD += ${l}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${t.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${d};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${t.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${t.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${e} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?s?`(((batch * ${t.inDepth} + xD) * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`((xD * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`wD * ${d} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let w=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===e&&(w="avgValue / count");const v=4*Math.floor(a/4),I=a%4,k=`\n      if (${b}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${u});\n      const ivec3 pads = ivec3(${m}, ${g}, ${y});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${t.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${p};\n            wD += ${l}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${t.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${d};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${v}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${k}\n            }\n\n            int xC = xCCorner + ${v};\n            if (${1===I}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${k}\n            } else if (${2===I}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${k}\n            } else if (${3===I}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${k}\n            }\n          }\n          setOutput(${w});\n        }\n      }\n    `}}class fE{constructor(t,e){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:a}=t;this.outputShape=[r,a];let i="0.0",o="";"prod"===e?i="1.0":"min"===e?(i="1.0 / 1e-20",o="min"):"max"===e&&(i="-1.0 / 1e-20",o="max");let u=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===e?u="sumValue":"prod"===e?u="prodValue":"all"===e?u="allValue":"any"===e&&(u="anyValue");const l=4*Math.floor(n/4),c=n%4;let h=`\n      if (${"sum"===e}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===e}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n      }\n    `,p="vec4";"all"===e?(i="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",p="bvec4"):"any"===e&&(i="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",p="bvec4");let d="";s%n>0&&(d=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${d}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${l}; i += 4) {\n          int inIdx = inOffset + i;\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${l};\n        if (${1===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${u});\n      }\n    `}}class mE{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t;let n="";for(let t=0;t<4;t++){let e="thisRC = rc;";t%2==1&&(e+="thisRC.z += 1;"),t>1&&(e+="thisRC.y += 1;"),n+=`\n        ${e}\n        ${t>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${t}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${t>0?"}":""}\n      `}var r;this.userCode=`\n      ${r=e,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${HN(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${jN(t)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${t[1]};\n        int cols = ${t[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class gE{constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e.shape;const[,r,s]=e.shape,[,a,i]=t.shape,o=[n&&a>1?r-1:r,n&&i>1?s-1:s],u=[n&&a>1?a-1:a,n&&i>1?i-1:i],l=o[0]/u[0],c=o[1]/u[1],h=1/l,p=1/c,d=2*Math.ceil(h)+2,f=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${d});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${s-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}class yE{constructor(t,e,n,r){this.variableNames=["A"],this.outputShape=[];const[s,a,i,o]=t;this.outputShape=[s,e,n,o];const u=[r&&e>1?a-1:a,r&&n>1?i-1:i],l=[r&&e>1?e-1:e,r&&n>1?n-1:n];this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/l[0]},\n          ${u[1]/l[1]});\n      const vec2 inputShapeRC = vec2(${a}.0, ${i}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = vec2(yRC) * effectiveInputOverOutputRatioRC;\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(sourceFracIndexRC);\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class bE{constructor(t,e,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,a,i,o]=t;this.outputShape=[s,e,n,o];const u=[r&&e>1?a-1:a,r&&n>1?i-1:i],l=[r&&e>1?e-1:e,r&&n>1?n-1:n];this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/l[0]},\n          ${u[1]/l[1]},\n          ${u[1]/l[1]});\n      const vec3 inputShapeRC = vec3(${a}.0, ${i}.0,\n                                     ${i}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = vec3(yRC) * effectiveInputOverOutputRatioRC;\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(sourceFracIndexRC);\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${o-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}class xE{constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e.shape;const[,r,s]=e.shape,[,a,i]=t.shape,o=[n&&a>1?r-1:r,n&&i>1?s-1:s],u=[n&&a>1?a-1:a,n&&i>1?i-1:i],l=o[0]/u[0],c=o[1]/u[1],h=1/l,p=1/c,d=2*Math.ceil(h)+2,f=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${d});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${u[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${u[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${s}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}class wE{constructor(t,e,n,r){this.variableNames=["A"],this.outputShape=[];const[s,a,i,o]=t;this.outputShape=[s,e,n,o];const u=[r&&e>1?a-1:a,r&&n>1?i-1:i],l=[r&&e>1?e-1:e,r&&n>1?n-1:n],c=r?"0.5":"0.0";this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/l[0]},\n          ${u[1]/l[1]});\n      const vec2 inputShapeRC = vec2(${a}.0, ${i}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = vec2(yRC) * effectiveInputOverOutputRatioRC;\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${c})));\n\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class vE{constructor(t,e){this.variableNames=["x"];const n=t.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=t,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${t[0]} - coord - 1));\n        }\n      `);const r=t.map(((n,r)=>(n=>-1!==e.indexOf(n)&&1!==t[n]?`${t[n]} - coords[${n}] - 1`:`coords[${n}]`)(r))).join(","),s=sS(n);this.userCode=`\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}class IE{constructor(t,e){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=t.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=t;const r=UN("rc",n),s=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,a=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,i=sS(n);function o(n){const r=t.map(((r,s)=>function(n,r){return-1!==e.indexOf(n)&&1!==t[n]?`${t[n]} - ${r[n]} - 1`:`${r[n]}`}(s,n)));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${t[0]} - rc - 1),\n            ${t[0]} - rc - 1);\n          if(${s}){\n              result.g = getChannel(getX(${t[0]} - (rc  + 1) - 1),\n                ${t[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(t){return o(t)}(r.slice())};\n          if(${s}){\n            result.g = ${function(t){return t[n-1]="("+t[n-1]+" + 1)",o(t)}(r.slice())};\n          }\n          if(${a}) {\n            result.b = ${function(t){return t[n-2]="("+t[n-2]+" + 1)",o(t)}(r.slice())};\n            if(${s}) {\n              result.a = ${function(t){return t[n-1]="("+t[n-1]+" + 1)",t[n-2]="("+t[n-2]+" + 1)",o(t)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}class kE{constructor(t,e,n,r,s,a,i=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;const o=sS(s.length),u=sS(a.length);let l="";1===n?l="i":2===n&&(l="i, j");const c=`getIndices(${l})`;let h="";1===r?h="i":2===r&&(h="i, coords[1]");const p=`getUpdates(${h})`,d=e>1?"strides[j]":"strides";this.userCode=`\n        ${o} strides = ${o}(${s});\n\n        void main() {\n          ${u} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${t}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${e}; j++) {\n              int index = round(${c});\n              flattenedIndex += index * ${d};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${p};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}class NE{constructor(t,e){this.variableNames=["x","segmentIds"];const n=t.windowSize,r=t.batchSize,s=t.inSize,a=t.numSegments,i=a*Math.ceil(s/n);this.outputShape=[r,i];const o=4*Math.floor(n/4),u=n%4,l="\n        sumValue += dot(values, segFilter);\n    ";let c="";s%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `);let h="";s%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${h}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${a})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${a})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${l}\n        } else if (${2===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${l}\n        } else if (${3===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}class SE{constructor(t,e,n){let r,s;if(this.variableNames=["c","a","b"],this.outputShape=e,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)s="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[],i=[];for(let r=0;r<e.length;r++)i.push(`${n[r]}`),r<t&&a.push(`${n[r]}`);r=a.join(),s=i.join()}const a=sS(n);this.userCode=`\n      void main() {\n        ${a} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${s}));\n        } else {\n          setOutput(getB(${s}));\n        }\n      }\n    `}}class EE{constructor(t){this.variableNames=["source"],this.outputShape=t,this.rank=t.length;const e=sS(this.rank),n=`uniform int start[${this.rank}];`,r=function(t){if(1===t)return"sourceLoc";if(t<=6)return CE.slice(0,t).map((t=>"sourceLoc."+t)).join(",");throw Error(`Slicing for rank ${t} is not yet supported`)}(this.rank);let s;s=`\n        ${e} sourceLoc;\n        ${e} coords = getOutputCoords();\n        ${t.map(((t,e)=>`sourceLoc.${CE[e]} = start[${e}] + coords.${CE[e]};`)).join("\n")}\n      `,this.userCode=`\n      ${n}\n      void main() {\n        ${s}\n        setOutput(getSource(${r}));\n      }\n    `}getCustomSetupFunc(t){if(t.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${t.length})`);return(e,n)=>{null==this.startLoc&&(this.startLoc=e.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||e.gl.uniform1iv(this.startLoc,t)}}}const CE=["x","y","z","w","u","v"];class $E{constructor(t){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.rank=t.length;const e=sS(this.rank),n=UN("coords",this.rank),r=UN("sourceLoc",this.rank),s=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,a=`getChannel(getSource(${r.join()}), ${s})`,i=`\n      result.x = ${a};\n      if (++${n[this.rank-1]} < ${t[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${a};\n        --${r[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${t[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${a};\n        if (++${n[this.rank-1]} < ${t[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${a};\n        }\n      }\n    `,u=this.rank<=4?`sourceLoc = coords +\n            ${e}(${t.map(((t,e)=>`start[${e}]`)).join()});`:t.map(((t,e)=>`${r[e]} = ${n[e]} + start[${e}];`)).join("\n");this.userCode=`\n      uniform int start[${this.rank}];\n      void main() {\n        ${e} coords = getOutputCoords();\n        ${e} sourceLoc;\n        ${u}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}getCustomSetupFunc(t){if(t.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${t.length})`);return(e,n)=>{null==this.startLoc&&(this.startLoc=e.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||e.gl.uniform1iv(this.startLoc,t)}}}class TE{constructor(t,e,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,s=sS(n.length),a=sS(n.length);let i="";if(1===r)i="coords * strides + begin";else{let t=0;i=n.map(((e,r)=>(t++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${t-1}] * strides[${r}] + begin[${r}]`))).join(",")}this.userCode=`\n      ${s} begin = ${s}(${t});\n      ${s} strides = ${s}(${e});\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}}class AE{constructor(t){this.gpgpu=t,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(t,e,n){const r=_E(e,n),s=DE(t,r,n);s in this.freeTextures||(this.freeTextures[s]=[]),s in this.usedTextures||(this.usedTextures[s]=[]);const a=RE(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[s].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();const t=this.freeTextures[s].shift();return this.usedTextures[s].push(t),t}let i;return r===uN.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(t[0],t[1]):r===uN.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(t[0],t[1]):r===uN.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(t[0],t[1]):r===uN.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(t[0],t[1]):r===uN.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(t[0],t[1])),this.usedTextures[s].push(i),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),i}releaseTexture(t,e,n,r){if(null==this.freeTextures)return;const s=_E(n,r),a=DE(e,s,r);a in this.freeTextures||(this.freeTextures[a]=[]);const i=RE(e,s,this.gpgpu.gl,this.gpgpu.textureConfig,r),o=U().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(t),this._numBytesAllocated-=i):(this.freeTextures[a].push(t),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const u=this.usedTextures[a],l=u.indexOf(t);if(l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u.splice(l,1),this.log()}log(){if(!this.logEnabled)return;const t=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${t})`);const e=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*e)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const t in this.freeTextures)this.freeTextures[t].forEach((t=>{this.gpgpu.deleteMatrixTexture(t)}));for(const t in this.usedTextures)this.usedTextures[t].forEach((t=>{this.gpgpu.deleteMatrixTexture(t)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function RE(t,e,n,r,s){const a=function(t,e){switch(t){case uN.PACKED_2X2_FLOAT32:return XS(e);case uN.PACKED_2X2_FLOAT16:return YS(e);case uN.UNPACKED_FLOAT32:return jS(e);case uN.UNPACKED_FLOAT16:return qS(e);case uN.PACKED_4X1_UNSIGNED_BYTE:return KS(e);default:throw new Error(`Unknown physical texture type ${t}`)}}(e,r);let i;if(s){const[e,n]=pN(t[0],t[1]);i=e*n}else{const[e,n]=cN(t[0],t[1]);i=e*n}return i*function(t,e){const n=t;if(e===n.R32F)return 4;if(e===n.R16F)return 2;if(e===n.RGBA32F)return 16;if(e===t.RGBA)return 16;if(e===n.RGBA16F)return 8;throw new Error(`Unknown internal format ${e}`)}(n,a)}function _E(t,e){if(t===iN.UPLOAD)return uN.PACKED_2X2_FLOAT32;if(t===iN.RENDER||null==t)return function(t){return U().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?t?uN.PACKED_2X2_FLOAT32:uN.UNPACKED_FLOAT32:t?uN.PACKED_2X2_FLOAT16:uN.UNPACKED_FLOAT16}(e);if(t===iN.DOWNLOAD||t===iN.PIXELS)return uN.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${t}`)}function DE(t,e,n){return`${t[0]}_${t[1]}_${e}_${n}`}class ME{constructor(t,e){this.variableNames=["A"];const n=new Array(t.length);for(let r=0;r<n.length;r++)n[r]=t[r]*e[r];this.outputShape=n,this.rank=n.length;const r=sS(this.rank),s=function(t){const e=t.length;if(e>5)throw Error(`Tile for rank ${e} is not yet supported`);if(1===e)return`imod(resRC, ${t[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let e=0;e<t.length;e++)r.push(`imod(${n[e]}, ${t[e]})`);return r.join()}(t);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${s}));\n      }\n    `}}class FE{constructor(t,e){this.variableNames=["A"],this.outputShape=t,this.userCode=`\n      float unaryOperation(float x) {\n        ${e}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const OE="return abs(x);",LE="if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",BE="if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",zE="return (x >= 0.0) ? x : (exp(x) - 1.0);";const PE="return -x;",WE="return ceil(x);",VE="return floor(x);",UE="return exp(x);",GE="return exp(x) - 1.0;",HE="return x;",jE="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",qE="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",KE="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n";class XE{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${e}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class YE{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=t;const e=t.length,n=UN("rc",e),r=sS(e),s=function(t,e){if(1===t)return"rc";let n="";for(let r=0;r<t;r++)n+=e[r],r<t-1&&(n+=",");return n}(e,n),a=n.slice(-2),i=e<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${s});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}}const JE=rh,ZE=sh,QE=ah,tC=yl,eC={};function nC(t,e=!1){if("linear"===t)return"return x;";if("relu"===t)return e?jE:LE;if("elu"===t)return e?KE:zE;if("relu6"===t)return e?qE:BE;if("prelu"===t)return e?pS:cS;throw new Error(`Activation ${t} has not been implemented for the WebGL backend.`)}class rC extends r{constructor(t){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.warnedAboutMemory=!1,this.warnedAboutCPUBackend=!1,this.pendingDeletes=0,this.disposed=!1,!U().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(null==t){const t=rN(U().getNumber("WEBGL_VERSION"));this.binaryCache=((e=U().getNumber("WEBGL_VERSION"))in eC||(eC[e]={}),eC[e]),this.gpgpu=new ZS(t),this.canvas=t.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=t,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=t.gl.canvas;var e;this.textureManager=new AE(this.gpgpu),this.numMBBeforeWarning=null==U().global.screen?1024:U().global.screen.height*U().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new n(this,Ga())}numDataIds(){return this.texData.numDataIds()+(this.cpuBackend?this.cpuBackend.numDataIds():0)-this.pendingDeletes}write(t,e,n){if((U().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||U().getBool("DEBUG"))&&this.checkNumericalProblems(t),"complex64"===n&&null!=t)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={};return this.texData.set(r,{shape:e,dtype:n,values:t,usage:iN.UPLOAD,refCount:1,complexParentRefCount:0}),r}incRef(t){this.texData.get(t).refCount++}decRef(t){if(this.texData.has(t)){this.texData.get(t).refCount--}}move(t,e,n,r){if(U().getBool("DEBUG")&&this.checkNumericalProblems(e),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(t,{shape:n,dtype:r,values:e,usage:iN.UPLOAD,refCount:1,complexParentRefCount:0})}disposeIntermediateTensorInfo(t){const e=t.dataId;if(this.texData.has(e)){const t=this.texData.get(e);t.refCount--,t.refCount<1&&this.disposeData(e)}}readSync(t){const e=this.texData.get(t),{values:n,dtype:r,complexTensorInfos:s,slice:a,shape:i,isPacked:o}=e;if(null!=a){let e;e=o?new XE(i,HE):new FE(i,HE);const n=this.runWebGLProgram(e,[{dataId:t,shape:i,dtype:r}],r),s=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(t);if("string"===r)return n;const u=null!=this.activeTimers;let l,c;if(u&&(l=An()),"complex64"===r){c=Zc(this.readSync(s.real.dataId),this.readSync(s.imag.dataId))}else c=this.getValuesFromTexture(t);return u&&(this.downloadWaitMs+=An()-l),this.convertAndCacheOnCPU(t,c)}async read(t){if(this.pendingRead.has(t)){const e=this.pendingRead.get(t);return new Promise((t=>e.push(t)))}const e=this.texData.get(t),{values:n,shape:r,slice:s,dtype:a,complexTensorInfos:i,isPacked:o}=e;if(null!=s){let e;e=o?new XE(r,HE):new FE(r,HE);const n=this.runWebGLProgram(e,[{dataId:t,shape:r,dtype:a}],a),s=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(t);if(!U().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===U().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u,l,c=null;if("complex64"!==a&&U().get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(t);const e=this.texData.get(u.dataId);c=this.gpgpu.createBufferFromTexture(e.texture,...hN(r))}if(this.pendingRead.set(t,[]),"complex64"!==a&&await this.gpgpu.createAndWaitForFence(),"complex64"===a){const t=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]);l=Zc(t[0],t[1])}else if(null==c)l=this.getValuesFromTexture(t);else{const t=p(r);l=this.gpgpu.downloadFloat32MatrixFromBuffer(c,t)}null!=u&&this.disposeIntermediateTensorInfo(u);const h=this.convertAndCacheOnCPU(t,l),d=this.pendingRead.get(t);return this.pendingRead.delete(t),d.forEach((t=>t(h))),this.pendingDisposal.has(t)&&(this.pendingDisposal.delete(t),this.disposeData(t),this.pendingDeletes--),h}checkNumericalProblems(t){if(null!=t)for(let e=0;e<t.length;e++){const n=t[e];if(!mN(n)){if(U().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(t){const{shape:e,dtype:n,isPacked:r}=this.texData.get(t),s=p(e);if(U().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(t),r=this.texData.get(n.dataId),a=this.gpgpu.downloadMatrixFromPackedTexture(r.texture,...hN(e)).subarray(0,s);return this.disposeIntermediateTensorInfo(n),a}const a=U().getBool("WEBGL_PACK")&&!0===r,i=a?$N(e):e,o=a?new OS(i):new FS(i),u=this.runWebGLProgram(o,[{shape:i,dtype:n,dataId:t}],"float32"),l=this.texData.get(u.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(l.texture,l.texShape[0],l.texShape[1]).subarray(0,s);return this.disposeIntermediateTensorInfo(u),c}async time(t){const e=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,t();const s=h(this.activeTimers.map((t=>t.query))).filter((t=>null!=t)),a=h(this.activeTimers.map((t=>t.name))).filter((t=>null!=t));this.activeTimers=e,r&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if(U().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const t=await Promise.all(s);i.kernelMs=function(t){let e=0;for(let n=0;n<t.length;n++)e+=t[n];return e}(t),i.getExtraProfileInfo=()=>t.map(((t,e)=>({name:a[e],ms:t}))).map((t=>`${t.name}: ${t.ms}`)).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return U().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:An(),endMs:null}}endTimer(t){return U().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),t):(t.endMs=An(),t)}async getQueryTime(t){if(U().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(t);const e=t;return e.endMs-e.startMs}disposeData(t){if(this.pendingDisposal.has(t))return;if(this.pendingRead.has(t))return this.pendingDisposal.add(t),void this.pendingDeletes++;if(!this.texData.has(t))return;if(this.texData.get(t).complexParentRefCount>0)return void this.texData.get(t).refCount--;this.releaseGPUData(t);const{complexTensorInfos:e}=this.texData.get(t);null!=e&&(this.texData.get(e.real.dataId).complexParentRefCount--,this.disposeIntermediateTensorInfo(e.real),this.texData.get(e.imag.dataId).complexParentRefCount--,this.disposeIntermediateTensorInfo(e.imag)),this.texData.delete(t)}releaseGPUData(t){const{texture:e,dtype:n,texShape:r,usage:s,isPacked:a,slice:i}=this.texData.get(t),o=i&&i.origDataId||t,u=this.dataRefCount.get(o);u>1?this.dataRefCount.set(o,u-1):(this.dataRefCount.delete(o),null!=e&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(e,r,s,a)));const l=this.texData.get(t);l.texture=null,l.texShape=null,l.isPacked=!1,l.slice=null}getTexture(t){return this.uploadToGPU(t),this.texData.get(t).texture}getDataInfo(t){return this.texData.get(t)}getCPUBackend(){return U().getBool("WEBGL_CPU_FORWARD")?(null==this.cpuBackend&&(this.cpuBackend=Ga().findBackend("cpu")),this.cpuBackend):null}shouldExecuteOnCPU(t,e=128){const n=this.getCPUBackend();return this.warnedAboutCPUBackend||null!=n||(console.warn("Your application contains ops that are small enough to be executed on the CPU backend, however the CPU backend cannot be found. Consider importing the CPU backend (@tensorflow/tfjs-backend-cpu) for better performance."),this.warnedAboutCPUBackend=!0),null!=n&&t.every((t=>null==this.texData.get(t.dataId).texture&&p(t.shape)<e))}getGPGPUContext(){return this.gpgpu}slice(t,e,n){if(this.shouldExecuteOnCPU([t])){const r=Rv(this.texData.get(t.dataId).values,e,n,t.shape,t.dtype);return this.makeOutput(n,t.dtype,r)}if(0===p(n))return ks([],n,t.dtype);const{isPacked:r}=this.texData.get(t.dataId),s=La(t.shape,e,n);if(r||!s){const r=U().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new $E(n):new EE(n),s=r.getCustomSetupFunc(e);return this.compileAndRun(r,[t],null,s)}return this.uploadToGPU(t.dataId),this.shallowSlice(t,e,n)}shallowSlice(t,e,n){const r=this.texData.get(t.dataId),s=this.makeOutput(n,t.dtype),a=this.texData.get(s.dataId);Object.assign(a,r),a.shape=n,a.dtype=t.dtype;let i=Ba(e,t.strides);r.slice&&(i+=r.slice.flatOffset),a.slice={flatOffset:i,origDataId:r.slice&&r.slice.origDataId||t.dataId};const o=this.dataRefCount.get(a.slice.origDataId)||1;return this.dataRefCount.set(a.slice.origDataId,o+1),s}stridedSlice(t,e,n,r){const s=this.tryRunOnCpuOrThrow([t],(()=>this.cpuBackend.stridedSlice(t,e,n,r)));if(s)return s;const a=Aa(e,n,r);if(a.some((t=>0===t)))return ks([],a);const i=new TE(e,r,a);return this.compileAndRun(i,[t])}reverse(t,e){const n=U().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new IE(t.shape,e):new vE(t.shape,e);return this.compileAndRun(n,[t])}neg(t){const e=this.tryRunOnCpuOrThrow([t],(()=>this.cpuBackend.neg(t)));if(e)return e;if(U().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,PE,t.dtype);const n=new FE(t.shape,PE);return this.compileAndRun(n,[t])}batchMatMul(t,e,n,r){const s=n?t.shape[2]:t.shape[1],a=r?e.shape[1]:e.shape[2],i=n?t.shape[1]:t.shape[2],o=Math.max(t.shape[0],e.shape[0]);if((1===s||1===a)&&i>1e3){n&&(t=Ia(t,[0,2,1])),r&&(e=Ia(e,[0,2,1]));const s=1===a?t:t.as3D(o,i,1),u=1===a?2:1,l=1===a?e.as3D(o,1,i):e;return Mo(s,l).sum(u,!0)}const u=sr(t.dtype,e.dtype),l=new iE(t.shape,e.shape,[o,s,a],n,r);return this.compileAndRun(l,[t,e],u)}fusedBatchMatMul({a:t,b:e,transposeA:n,transposeB:r,bias:s,activation:a,preluActivationWeights:i}){const o=n?t.shape[2]:t.shape[1],u=r?e.shape[1]:e.shape[2],l=Math.max(t.shape[0],e.shape[0]),c=sr(t.dtype,e.dtype),h=null!=s,p=null!=i,d=a?nC(a,!0):null,f=new iE(t.shape,e.shape,[l,o,u],n,r,h,d,p),m=[t,e];return s&&m.push(s),i&&m.push(i),this.compileAndRun(f,m,c)}localResponseNormalization4D(t,e,n,r,s){const a=U().getBool("WEBGL_PACK_NORMALIZATION")?new rE(t.shape,e,n,r,s):new eE(t.shape,e,n,r,s);return this.compileAndRun(a,[t])}LRNGrad(t,e,n,r,s,a,i){const o=new nE(e.shape,r,s,a,i);return this.compileAndRun(o,[e,n,t])}tile(t,e){if("string"===t.dtype){const n=this.readSync(t.dataId).map((t=>_n(t))),r=ua(t.shape,t.dtype,n);return ZE(r,e)}const n=new ME(t.shape,e);return this.compileAndRun(n,[t])}pad(t,e,n){const r=U().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new hE(t.shape,e,n):new cE(t.shape,e,n);return this.compileAndRun(r,[t])}gather(t,e,n){const r=this.tryRunOnCpuOrThrow([t,e],(()=>this.cpuBackend.gather(t,e,n)));if(r)return r;const s=new PS(t.shape,e.size,n);return this.compileAndRun(s,[t,e])}batchToSpaceND(t,e,n){u(t.rank<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const r=e.reduce(((t,e)=>t*e)),s=Gc(t.shape,e,r),a=Hc(s.length,e.length),i=jc(t.shape,e,r),o=qc(n,e.length),l=Kc(i,n,e.length);return Ia(t.reshape(s),a).reshape(i).slice(o,l)}spaceToBatchND(t,e,n){u(t.rank<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const r=e.reduce(((t,e)=>t*e)),s=[[0,0]];s.push(...n);for(let n=1+e.length;n<t.shape.length;++n)s.push([0,0]);const a=t.pad(s),i=Gc(a.shape,e,r,!1),o=Hc(i.length,e.length,!1),l=jc(a.shape,e,r,!1),c=Ia(a.reshape(i),o);return xa(c,l)}reduce(t,e,n){const r=t.shape[0],s=t.shape[1],a=So(s),i=Math.ceil(s/a),o=new fE({windowSize:a,inSize:s,batchSize:r,outSize:i},e),u=this.compileAndRun(o,[t],n);return 1===u.shape[1]?u:this.reduce(u,e,n)}argReduce(t,e,n=null){let r=t.shape[0],s=t.shape[1];null!=n&&(r=n.shape[0],s=n.shape[1]);const a=So(s),i={windowSize:a,inSize:s,batchSize:r,outSize:Math.ceil(s/a)},o=new WN(i,e,null==n),u=[t];null!=n&&u.push(n);const l=this.compileAndRun(o,u,"int32");return 1===l.shape[1]?l:this.argReduce(t,e,l)}argReducePacked(t,e,n=null){const r=null!=n?n.shape:t.shape,s=So(r[r.length-1]),a=new oS(r,s,e,null==n),i=null==n?[t]:[t,n],o=this.compileAndRun(a,i,"int32");return o.rank===t.rank?this.argReducePacked(t,e,o):o}sum(t,e){ai("sum",e,t.rank);const[n,r]=ri(t.shape,e),s=p(r),a=t.as2D(-1,s),i=ar(t.dtype);return this.reduce(a,"sum",i).reshape(n)}prod(t,e){const n=this.tryRunOnCpuOrThrow([t],(()=>this.cpuBackend.prod(t,e)));if(n)return n;const[r,s]=ri(t.shape,e),a=p(s),i=t.as2D(-1,a),o=ar(t.dtype);return this.reduce(i,"prod",o).reshape(r)}unsortedSegmentSum(t,e,n){let r=0;const s=ii([r],t.rank);let a=t;null!=s&&(a=Ia(t,s),r=ui(1,t.rank)[0]);const i=function(t,e,n){const r=[],s=t.length;for(let a=0;a<s;a++)a!==e?r.push(t[a]):r.push(n);return r}(a.shape,r,n),o=p([a.shape[r]]),u=a.as2D(-1,o),l=ar(t.dtype);let c=this.segOpCompute(u,"unsortedSegmentSum",e,l,n).reshape(i);return null!=s&&(c=Ia(c,oi(s))),c}segOpCompute(t,e,n,r,s){const a=t.shape[0],i=t.shape[1],o=function(t,e){let n,r=!1;for(t<=30?(n=t,r=!0):n=A(t,Math.floor(Math.sqrt(t)));!r;)n>e||n===t?r=!0:n=A(t,n+1);return n}(i,s),u=new NE({windowSize:o,inSize:i,batchSize:a,numSegments:s},e),l=this.compileAndRun(u,[t,n],r);return l.shape[1]===s?l:(n=Du(0,s).tile([i/o]),this.segOpCompute(l,e,n,r,s))}argMinMaxReduce(t,e,n){const r=[e];if(ai("arg"+n.charAt(0).toUpperCase()+n.slice(1),r,t.rank),!U().getBool("WEBGL_PACK_REDUCE")||t.rank<=2){const[e,s]=ri(t.shape,r),a=p(s),i=t.as2D(-1,a);return this.argReduce(i,n).reshape(e)}return this.argReducePacked(t,n)}argMin(t,e){return this.argMinMaxReduce(t,e,"min")}argMax(t,e){return this.argMinMaxReduce(t,e,"max")}cumsum(t,e,n,r){if(e!==t.rank-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${t.rank-1} but got axis=${e}`);const s=t.shape[e];let a=t;for(let e=0;e<=Math.ceil(Math.log2(s))-1;e++){const n=new $S(t.shape,!1,r),s=n.getCustomSetupFunc(e),i=a;a=this.compileAndRun(n,[a],a.dtype,s),i.dispose()}if(n){const e=new $S(t.shape,n,r),s=a;a=this.compileAndRun(e,[a]),s.dispose()}return a}equal(t,e){if(U().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(equal(a, b));\n","bool");const n=new hS("return float(a == b);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}less(t,e){const n=this.tryRunOnCpuOrThrow([t,e],(()=>this.cpuBackend.less(t,e)));if(n)return n;if(U().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(lessThan(a, b));\n","bool");const r=new hS("return float(a < b);",t.shape,e.shape);return this.compileAndRun(r,[t,e],"bool")}lessEqual(t,e){if(U().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(lessThanEqual(a, b));\n","bool");const n=new hS("return float(a <= b);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}greater(t,e){const n=this.tryRunOnCpuOrThrow([t,e],(()=>this.cpuBackend.greater(t,e)));if(n)return n;if(U().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(greaterThan(a, b));\n","bool");const r=new hS("return float(a > b);",t.shape,e.shape);return this.compileAndRun(r,[t,e],"bool")}greaterEqual(t,e){if(U().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(greaterThanEqual(a, b));\n","bool");const n=new hS("return float(a >= b);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}logicalNot(t){const e=new FE(t.shape,"return float(!(x >= 1.0));");return this.compileAndRun(e,[t])}logicalAnd(t,e){if(U().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n","bool");const n=new hS("return float(a >= 1.0 && b >= 1.0);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}logicalOr(t,e){if(U().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n","bool");const n=new hS("return float(a >= 1.0 || b >= 1.0);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}select(t,e,n){const r=new SE(t.rank,e.shape,e.rank);return this.compileAndRun(r,[t,e,n],sr(e.dtype,n.dtype))}where(t){Jc("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const e=t.dataSync();return tC(t.shape,e)}topk(t,e,n){const r=t.dataSync();return QE(r,t.shape,t.dtype,e,n)}min(t,e){ai("min",e,t.rank);const[n,r]=ri(t.shape,e),s=p(r),a=t.as2D(-1,s);return this.reduce(a,"min",a.dtype).reshape(n)}minimum(t,e){const n=this.tryRunOnCpuOrThrow([t,e],(()=>this.cpuBackend.minimum(t,e)));if(n)return n;const r=U().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new dS("\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",t.shape,e.shape):new hS("\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",t.shape,e.shape);return this.compileAndRun(r,[t,e])}mod(t,e){const n=U().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new dS("\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",t.shape,e.shape):new hS("if (b == 0.0) return NAN;\n  return mod(a, b);",t.shape,e.shape);return this.compileAndRun(n,[t,e])}maximum(t,e){const n=this.tryRunOnCpuOrThrow([t,e],(()=>this.cpuBackend.maximum(t,e)));if(n)return n;const r=U().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new dS("\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",t.shape,e.shape):new hS("\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",t.shape,e.shape);return this.compileAndRun(r,[t,e])}all(t,e){ai("all",e,t.rank);const[n,r]=ri(t.shape,e),s=p(r),a=t.as2D(-1,s);return this.reduce(a,"all",a.dtype).reshape(n)}any(t,e){ai("any",e,t.rank);const[n,r]=ri(t.shape,e),s=p(r),a=t.as2D(-1,s);return this.reduce(a,"any",a.dtype).reshape(n)}floorDiv(t,e){const n="int32";if(U().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",n);const r=new hS("\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",t.shape,e.shape);return this.compileAndRun(r,[t,e],n)}packedUnaryOp(t,e,n){const r=new XE(t.shape,e);return this.compileAndRun(r,[t],n)}packedBinaryOp(t,e,n,r,s=!1){const a=new dS(n,t.shape,e.shape,s);return this.compileAndRun(a,[t,e],r)}makeComplexComponentTensorInfo(t,e){return{dataId:e.dataId,dtype:e.dtype,shape:t.shape}}addN(t){if(1===t.length)return t[0];if(t.length>U().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const e=Math.floor(t.length/2),n=this.addN(t.slice(0,e)),r=this.addN(t.slice(e));return this.addN([n,r])}const e=t.map((t=>t.dtype)).reduce(((t,e)=>sr(t,e))),n=t.map((t=>t.shape)),r=U().getBool("WEBGL_PACK")?new PN(t[0].shape,n):new zN(t[0].shape,n);return this.compileAndRun(r,t,e)}pow(t,e){const n=U().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new dS("\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",t.shape,e.shape):new hS("\nif(a < 0.0 && floor(b) < b){\n  return NAN;\n}\nif (b == 0.0) {\n  return 1.0;\n}\nreturn (round(mod(b, 2.0)) != 1) ?\n    pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",t.shape,e.shape),r=sr(t.dtype,e.dtype);return this.compileAndRun(n,[t,e],r)}ceil(t){if(this.shouldExecuteOnCPU([t])){const e=av(this.texData.get(t.dataId).values,t.dtype);return this.makeOutput(t.shape,t.dtype,e)}if(U().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,WE,t.dtype);const e=new FE(t.shape,WE);return this.compileAndRun(e,[t])}floor(t){if(this.shouldExecuteOnCPU([t])){const e=fv(this.texData.get(t.dataId).values,t.dtype);return this.makeOutput(t.shape,t.dtype,e)}if(U().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,VE,t.dtype);const e=new FE(t.shape,VE);return this.compileAndRun(e,[t])}sign(t){const e=new FE(t.shape,"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n");return this.compileAndRun(e,[t])}isNaN(t){const e=new FE(t.shape,"return float(isnan(x));");return this.compileAndRun(e,[t],"bool")}isInf(t){const e=new FE(t.shape,"return float(isinf(x));");return this.compileAndRun(e,[t],"bool")}isFinite(t){const e=new FE(t.shape,"return float(!isnan(x) && !isinf(x));");return this.compileAndRun(e,[t],"bool")}round(t){const e=new FE(t.shape,"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n");return this.compileAndRun(e,[t])}exp(t){if(this.shouldExecuteOnCPU([t])){const e=uv(this.texData.get(t.dataId).values,t.dtype);return this.makeOutput(t.shape,t.dtype,e)}if(U().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,UE,t.dtype);const e=new FE(t.shape,UE);return this.compileAndRun(e,[t])}expm1(t){if(this.shouldExecuteOnCPU([t])){const e=hv(this.texData.get(t.dataId).values,t.dtype);return this.makeOutput(t.shape,t.dtype,e)}if(U().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,GE,t.dtype);const e=new FE(t.shape,GE);return this.compileAndRun(e,[t])}softmax(t,e){const n=x([e],t.shape),r=qo(t,n),s=si(r.shape,n),a=Ko(t,r.reshape(s)),i=this.exp(a),o=this.sum(i,n).reshape(s);return oo(i,o)}log(t){if(this.shouldExecuteOnCPU([t])){const e=yv(this.texData.get(t.dataId).values,t.dtype);return this.makeOutput(t.shape,t.dtype,e)}if(U().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,"\n  vec4 result = log(x);\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\n\n  return result;\n",t.dtype);const e=new FE(t.shape,"if (x < 0.0) return NAN;\n  return log(x);");return this.compileAndRun(e,[t])}log1p(t){const e=new FE(t.shape,"return log(1.0 + x);");return this.compileAndRun(e,[t])}sqrt(t){const e=new FE(t.shape,"return sqrt(x);");return this.compileAndRun(e,[t])}rsqrt(t){if(this.shouldExecuteOnCPU([t])){const e=$v(this.texData.get(t.dataId).values,t.dtype);return this.makeOutput(t.shape,t.dtype,e)}const e=new FE(t.shape,"return inversesqrt(x);");return this.compileAndRun(e,[t])}reciprocal(t){const e=new FE(t.shape,"return 1.0 / x;");return this.compileAndRun(e,[t])}relu(t){let e;return e=U().getBool("WEBGL_PACK")?new XE(t.shape,jE):new FE(t.shape,LE),this.compileAndRun(e,[t])}relu6(t){let e;return e=U().getBool("WEBGL_PACK")?new XE(t.shape,qE):new FE(t.shape,BE),this.compileAndRun(e,[t])}prelu(t,e){const n=U().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new dS(pS,t.shape,e.shape):new hS(cS,t.shape,e.shape);return this.compileAndRun(n,[t,e])}elu(t){if(U().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,KE,t.dtype);const e=new FE(t.shape,zE);return this.compileAndRun(e,[t])}eluDer(t,e){const n=U().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new dS("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",t.shape,e.shape):new hS("return (b >= 1.0) ? a : a * (b + 1.0);",t.shape,e.shape);return this.compileAndRun(n,[t,e])}selu(t){const e=new FE(t.shape,"\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = 1.7580993408473768;\n  float scale = 1.0507009873554805;\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n");return this.compileAndRun(e,[t])}clip(t,e,n){let r;r=U().getBool("WEBGL_PACK_CLIP")?new mS(t.shape):new fS(t.shape);const s=r.getCustomSetupFunc(e,n);return this.compileAndRun(r,[t],null,s)}abs(t){if(this.shouldExecuteOnCPU([t])&&"complex64"!==t.dtype){const e=zw(this.texData.get(t.dataId).values);return this.makeOutput(t.shape,t.dtype,e)}if(U().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,OE,t.dtype);const e=new FE(t.shape,OE);return this.compileAndRun(e,[t])}complexAbs(t){const e=this.texData.get(t.dataId),n=new gS(t.shape),r=[this.makeComplexComponentTensorInfo(t,e.complexTensorInfos.real),this.makeComplexComponentTensorInfo(t,e.complexTensorInfos.imag)];return this.compileAndRun(n,r)}sigmoid(t){const e=new FE(t.shape,"return 1.0 / (1.0 + exp(-1.0 * x));");return this.compileAndRun(e,[t])}softplus(t){const e=new FE(t.shape,"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n");return this.compileAndRun(e,[t])}asin(t){const e=new FE(t.shape,"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n");return this.compileAndRun(e,[t])}acos(t){const e=new FE(t.shape,"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n");return this.compileAndRun(e,[t])}atan(t){const e=new FE(t.shape,"if (isnan(x)) return x;\n  return atan(x);\n");return this.compileAndRun(e,[t])}sinh(t){const e=new FE(t.shape,"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n");return this.compileAndRun(e,[t])}cosh(t){const e=new FE(t.shape,"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n");return this.compileAndRun(e,[t])}tanh(t){const e=new FE(t.shape,"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n");return this.compileAndRun(e,[t])}asinh(t){const e=new FE(t.shape,"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));");return this.compileAndRun(e,[t])}acosh(t){const e=new FE(t.shape,"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\n  return log(x + sqrt(x * x - 1.0));");return this.compileAndRun(e,[t])}atanh(t){const e=new FE(t.shape,"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\n  return (log(1.0 + x) - log(1.0 - x)) / 2.0;");return this.compileAndRun(e,[t])}erf(t){const e=new FE(t.shape,'\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = 0.3275911;\n  float a1 = 0.254829592;\n  float a2 = -0.284496736;\n  float a3 = 1.421413741;\n  float a4 = -1.453152027;\n  float a5 = 1.061405429;\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n');return this.compileAndRun(e,[t])}step(t,e){const n=new FE(t.shape,function(t=0){return`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${t});\n  `}(e));return this.compileAndRun(n,[t])}conv2dByMatMul(t,e,n,r,s,a){const i=t.shape,o=this.texData.get(t.dataId),l=n.inChannels,c=i[0]*i[1]*i[2],h=n.outChannels,p="channelsLast"===n.dataFormat,d=(1===c||1===h)&&l>1e3,f=i[2]%2!=0&&!!o.isPacked;if(d||!U().getBool("WEBGL_LAZILY_UNPACK")||!U().getBool("WEBGL_PACK_BINARY_OPERATIONS")||!f){const o=p?i[0]*i[1]*i[2]:i[0]*i[2]*i[3],u=xa(t,[1,o,n.inChannels]),l=xa(e,[1,n.inChannels,n.outChannels]),c=this.fusedBatchMatMul({a:u,b:l,transposeA:false,transposeB:false,bias:r,activation:s,preluActivationWeights:a});return xa(c,n.outShape)}const m=p?i[0]*i[1]*(i[2]+1):i[0]*i[2]*(i[3]+1),g={dataId:t.dataId,shape:[1,m,n.inChannels],dtype:t.dtype},y=o.shape;o.shape=o.shape.slice(),o.shape[o.shape.length-2]++,u(AN(o.shape,g.shape),(()=>`packed reshape ${o.shape} to ${g.shape} isn't free`));const b=xa(e,[1,n.inChannels,n.outChannels]),x=this.fusedBatchMatMul({a:g,b:b,transposeA:false,transposeB:false,bias:r,activation:s,preluActivationWeights:a}),w=this.texData.get(x.dataId);return u(w.isPacked,(()=>"batchMatMul result is expected to be packed")),o.shape=y,w.shape=n.outShape,Ga().makeTensorFromDataId(x.dataId,n.outShape,x.dtype)}conv2dWithIm2Row(t,e,n,r,s,a){const{filterWidth:i,filterHeight:o,inChannels:u,outWidth:l,outHeight:c,dataFormat:h}=n,p="channelsLast"===h,d=i*o*u,f=c*l,m=[d,f],g=t.squeeze([0]),y=e.reshape([1,d,-1]),b=new tE(m,g.shape,n),x=this.compileAndRun(b,[g]).reshape([1,m[0],m[1]]),w=null!=r,v=null!=a,I=s?nC(s,!0):null,k=new iE(x.shape,y.shape,[1,f,n.outChannels],!0,!1,w,I,v),N=[x,y];r&&N.push(r),v&&N.push(a);const S=this.compileAndRun(k,N);return p?S.reshape([1,c,l,n.outChannels]):S.reshape([1,n.outChannels,c,l])}fusedConv2d({input:t,filter:e,convInfo:n,bias:r,activation:s,preluActivationWeights:a}){if(1===n.filterHeight&&1===n.filterWidth&&1===n.dilationHeight&&1===n.dilationWidth&&1===n.strideHeight&&1===n.strideWidth&&("SAME"===n.padInfo.type||"VALID"===n.padInfo.type))return this.conv2dByMatMul(t,e,n,r,s,a);if(U().getBool("WEBGL_CONV_IM2COL")&&1===t.shape[0])return this.conv2dWithIm2Row(t,e,n,r,s,a);const i=null!=r,o=null!=a,u=s?nC(s,!1):null,l=new kS(n,i,u,o),c=[t,e];return r&&c.push(r),a&&c.push(a),this.compileAndRun(l,c)}conv2d(t,e,n){if(1===n.filterHeight&&1===n.filterWidth&&1===n.dilationHeight&&1===n.dilationWidth&&1===n.strideHeight&&1===n.strideWidth&&("SAME"===n.padInfo.type||"VALID"===n.padInfo.type))return this.conv2dByMatMul(t,e,n);if(U().getBool("WEBGL_CONV_IM2COL")&&1===t.shape[0])return this.conv2dWithIm2Row(t,e,n);const r=new kS(n);return this.compileAndRun(r,[t,e])}conv2dDerInput(t,e,n){const r=new bS(n);return this.compileAndRun(r,[t,e])}conv2dDerFilter(t,e,n){const r=new yS(n);return this.compileAndRun(r,[t,e])}fusedDepthwiseConv2D({input:t,filter:e,convInfo:n,bias:r,activation:s,preluActivationWeights:a}){const i=U().getBool("WEBGL_PACK_DEPTHWISECONV")&&n.strideWidth<=2&&n.outChannels/n.inChannels==1,o=s?nC(s,i):null,u=[t,e],l=null!=r,c=null!=a;let h;return l&&u.push(r),c&&u.push(a),i?(h=new ES(n,l,o,c),this.compileAndRun(h,u)):(h=new SS(n,l,o,c),this.compileAndRun(h,u))}depthwiseConv2D(t,e,n){let r;return U().getBool("WEBGL_PACK_DEPTHWISECONV")&&n.strideWidth<=2&&n.outChannels/n.inChannels==1?(r=new ES(n),this.compileAndRun(r,[t,e])):(r=new SS(n),this.compileAndRun(r,[t,e]))}depthwiseConv2DDerInput(t,e,n){const r=new IS(n);return this.compileAndRun(r,[t,e])}depthwiseConv2DDerFilter(t,e,n){const r=new vS(n);return this.compileAndRun(r,[t,e])}conv3d(t,e,n){const r=new NS(n);return this.compileAndRun(r,[t,e])}conv3dDerInput(t,e,n){const r=new wS(n);return this.compileAndRun(r,[t,e])}conv3dDerFilter(t,e,n){const r=new xS(n);return this.compileAndRun(r,[t,e])}unstack(t,e){const n=t.shape[e],r=new Array(t.rank-1);let s=0;for(let n=0;n<t.rank;n++)n!==e&&(r[s++]=t.shape[n]);const a=new Array(t.rank).fill(0),i=t.shape.slice();i[e]=1;const o=new Array(n);for(let n=0;n<o.length;n++)a[e]=n,o[n]=this.slice(t,a,i).reshape(r);return o}avgPool3d(t,e){const n=new dE(e,"avg",!1);return this.compileAndRun(n,[t],"float32")}avgPool3dBackprop(t,e,n){const r=new lS(n);return this.compileAndRun(r,[t],e.dtype)}maxPool3d(t,e){const n=new dE(e,"max",!1);return this.compileAndRun(n,[t],"float32")}maxPool3dBackprop(t,e,n,r){const s=new dE(r,"max",!0),a=this.compileAndRun(s,[e]),i=new aE(r),o=this.compileAndRun(i,[t,a],e.dtype);return a.dispose(),o}resizeBilinear(t,e,n,r){const s=U().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new bE(t.shape,e,n,r):new yE(t.shape,e,n,r);return this.compileAndRun(s,[t],"float32")}resizeBilinearBackprop(t,e,n){const r=new gE(t,e,n);return this.compileAndRun(r,[t])}resizeNearestNeighbor(t,e,n,r){const s=new wE(t.shape,e,n,r);return this.compileAndRun(s,[t])}resizeNearestNeighborBackprop(t,e,n){const r=new xE(t,e,n);return this.compileAndRun(r,[t])}multinomial(t,e,n,r){const s=e?t:Yu(t),a=s.shape[0],i=s.shape[1],o=new oE(a,i,n),u=o.getCustomSetupFunc(r);return this.compileAndRun(o,[s],"int32",u)}oneHot(t,e,n,r){const s=new uE(t.size,e,n,r);return this.compileAndRun(s,[t])}diag(t){const e=new MS(t.size);return this.compileAndRun(e,[t])}cropAndResize(t,e,n,r,s,a){const i=new CS(t.shape,e.shape,r,s,a);return this.compileAndRun(i,[t,e,n],"float32")}depthToSpace(t,e,n){u(e>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${e}`));const r=t.shape[0],s="NHWC"===n?t.shape[1]:t.shape[2],a="NHWC"===n?t.shape[2]:t.shape[3],i="NHWC"===n?t.shape[3]:t.shape[1],o=s*e,l=a*e,c=i/(e*e),h=new DS("NHWC"===n?[r,o,l,c]:[r,c,o,l],e,n);return this.compileAndRun(h,[t])}split(t,e,n){return JE(t,e,n)}scatterND(t,e,n){const{sliceRank:r,numUpdates:s,sliceSize:a,strides:i,outputSize:o}=Ca(0,t,n),u=[o/a,a],l=t.reshape([s,r]),c=e.reshape([s,a]);if(0===o)return function(t,e){return dr.makeTensorFromDataId(t.dataId,e,t.dtype)}(ks([]),n);const h=Fo(0),p=new kE(s,r,l.rank,c.rank,i,u);return this.compileAndRun(p,[c,l,h]).reshape(n)}sparseToDense(t,e,n,r){const{sliceRank:s,numUpdates:a,strides:i,outputSize:o}=Ca(0,t,n),u=new kE(a,s,t.rank,e.rank,i,[o,1],!1);return this.compileAndRun(u,[e,t,r]).reshape(n)}gatherND(t,e){const n=e.shape,r=n[n.length-1],[s,a,i,o]=Sa(t,e),u=e.reshape([a,r]),l=t.reshape([t.size/i,i]),c=new WS(r,o,[a,i]);return this.compileAndRun(c,[l,u]).reshape(s)}fill(t,e,n){if("string"===(n=n||$(e))){const r=I(n,p(t));return r.fill(e),Ga().makeTensor(r,t,n,this)}{const r=new zS(t,e),s=r.getCustomSetupFunc(e);return this.compileAndRun(r,[],n,s)}}onesLike(t){if("string"===t.dtype)throw new Error("onesLike is not supported under string dtype");return this.fill(t.shape,1,t.dtype)}zerosLike(t){return this.fill(t.shape,"string"===t.dtype?"":0,t.dtype)}linspace(t,e,n){return nh(t,e,n)}makeTensorInfo(t,e,n){const r=this.write(n,t,e);return this.texData.get(r).usage=null,{dataId:r,shape:t,dtype:e}}makeOutput(t,e,n){const{dataId:r}=this.makeTensorInfo(t,e,n);return Ga().makeTensorFromDataId(r,t,e,this)}unpackTensor(t){const e=new YE(t.shape);return this.runWebGLProgram(e,[t],t.dtype)}packTensor(t){const e=new lE(t.shape);return this.runWebGLProgram(e,[t],t.dtype,null,!0)}packedReshape(t,e){const n=[EN(t.shape),...CN(t.shape)],r={dtype:t.dtype,shape:n,dataId:t.dataId},s=[EN(e),...CN(e)],a=new mE(s,n),i=this.runWebGLProgram(a,[r],t.dtype,null,!0);return{dataId:i.dataId,shape:e,dtype:i.dtype}}decode(t){const e=this.texData.get(t),{isPacked:n,shape:r,dtype:s}=e,a=$N(r);let i;i=n?new _S(a):new RS(a);return{dtype:s,shape:r,dataId:this.runWebGLProgram(i,[{shape:a,dtype:s,dataId:t}],s,null,!0).dataId}}runWebGLProgram(t,e,n,r,s=!1){const a=this.makeTensorInfo(t.outputShape,n),i=this.texData.get(a.dataId);if(t.packedOutput&&(i.isPacked=!0),t.outPackingScheme===sN.DENSE){const e=hN(t.outputShape);i.texShape=e.map((t=>2*t))}if(null!=t.outTexUsage&&(i.usage=t.outTexUsage),0===p(a.shape))return i.values=v(a.dtype,0),a;const o=[],u=e.map((e=>{if("complex64"===e.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(e.dataId);if(null==n.texture){if(!t.packedInputs&&p(e.shape)<=U().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:e.shape,texData:null,isUniform:!0,uniformValues:n.values};t.packedInputs&&(n.isPacked=!0,n.shape=e.shape)}else if(!!n.isPacked!=!!t.packedInputs)e=n.isPacked?this.unpackTensor(e):this.packTensor(e),o.push(e),n=this.texData.get(e.dataId);else if(n.isPacked&&!AN(n.shape,e.shape)){const t=e,r=e.shape;e.shape=n.shape,e=this.packedReshape(e,r),o.push(e),n=this.texData.get(e.dataId),t.shape=r}return this.uploadToGPU(e.dataId),{shape:e.shape,texData:n,isUniform:!1}}));this.uploadToGPU(a.dataId);const l={shape:a.shape,texData:i,isUniform:!1},c=function(t,e,n){let r="";e.concat(n).forEach((t=>{const e=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0,n=t.isUniform?"uniform":t.texData.texShape;r+=`${t.shape}_${n}_${e}`}));const s=t.userCode;let a=t.constructor.name;return a+="_"+r+"_"+s,a}(t,u,l),h=this.getAndSaveBinary(c,(()=>function(t,e,n,r){const s=e.userCode,a=n.map(((t,n)=>{const r={logicalShape:t.shape,texShape:t.isUniform?null:t.texData.texShape,isUniform:t.isUniform,isPacked:!t.isUniform&&t.texData.isPacked,flatOffset:null};return null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0&&(r.flatOffset=t.texData.slice.flatOffset),{name:e.variableNames[n],shapeInfo:r}})),i=a.map((t=>t.shapeInfo)),o={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},u=KN(a,o,s,e.packedInputs),l=t.createProgram(u);let c=null;const h=t.getUniformLocation(l,"NAN",!1);1===U().getNumber("WEBGL_VERSION")&&(c=t.getUniformLocation(l,"INFINITY",!1));const p={};for(let n=0;n<e.variableNames.length;n++){const r=e.variableNames[n],s=!1;p[r]=t.getUniformLocation(l,r,s),p[`offset${r}`]=t.getUniformLocation(l,`offset${r}`,s)}return{program:e,source:u,webGLProgram:l,uniformLocations:p,inShapeInfos:i,outShapeInfo:o,infLoc:c,nanLoc:h}}(this.gpgpu,t,u,l))),d=null!=this.activeTimers;let f;if(d&&(f=this.startTimer()),function(t,e,n,r,s){QS(e.inShapeInfos,n),QS([e.outShapeInfo],[r]);const a=r.texData.texture,i=r.texData.texShape;r.texData.isPacked?t.setOutputPackedMatrixTexture(a,i[0],i[1]):t.setOutputMatrixTexture(a,i[0],i[1]),t.setProgram(e.webGLProgram),1===U().getNumber("WEBGL_VERSION")&&null!==e.infLoc&&t.gl.uniform1f(e.infLoc,1/0),null!==e.nanLoc&&t.gl.uniform1f(e.nanLoc,NaN),n.forEach(((n,r)=>{const s=e.program.variableNames[r],a=e.uniformLocations[s],i=e.uniformLocations[`offset${s}`];if(null!=a)if(n.isUniform)if(p(n.shape)<2)t.gl.uniform1f(a,n.uniformValues[0]);else{let e=n.uniformValues;e instanceof Float32Array||(e=new Float32Array(e)),t.gl.uniform1fv(a,e)}else null!=n.texData.slice&&null!=i&&t.gl.uniform1i(i,n.texData.slice.flatOffset),t.setInputMatrixTexture(n.texData.texture,a,r)})),null!=s&&s(t,e.webGLProgram),t.executeProgram()}(this.gpgpu,h,u,l,r),o.forEach((t=>this.disposeIntermediateTensorInfo(t))),d&&(f=this.endTimer(f),this.activeTimers.push({name:t.constructor.name,query:this.getQueryTime(f)})),!U().getBool("WEBGL_LAZILY_UNPACK")&&i.isPacked&&!1===s){const t=this.unpackTensor(a);return this.disposeIntermediateTensorInfo(a),t}return a}compileAndRun(t,e,n,r,s=!1){n=n||e[0].dtype;const a=this.runWebGLProgram(t,e,n,r,s);return Ga().makeTensorFromDataId(a.dataId,a.shape,a.dtype)}getAndSaveBinary(t,e){return t in this.binaryCache||(this.binaryCache[t]=e()),this.binaryCache[t]}getTextureManager(){return this.textureManager}dispose(){if(!this.disposed){if(!U().getBool("IS_TEST")){Object.keys(this.binaryCache).forEach((t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]}))}this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0}}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=ja((()=>{if(!U().get("WEBGL_RENDER_FLOAT32_ENABLED")){const t=U().getBool("DEBUG");U().set("DEBUG",!1);const e=this.abs(Fo(1e-8)).dataSync()[0];if(U().set("DEBUG",t),e>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(t){const e=this.texData.get(t),{shape:n,dtype:r,values:s,texture:a,usage:i,isPacked:u}=e;if(null!=a)return;const l=null!=this.activeTimers;let c;l&&(c=An());let h=e.texShape;if(null==h&&(h=function(t,e=!1){let n=U().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e&&(n*=2,1===(t=t.map(((e,n)=>n>=t.length-2?o(t[n]):t[n]))).length&&(t=[2,t[0]])),2!==t.length){const e=w(t);t=e.newShape}let r=p(t);if(t.length<=1&&r<=n)return[1,r];if(2===t.length&&t[0]<=n&&t[1]<=n)return t;if(3===t.length&&t[0]*t[1]<=n&&t[2]<=n)return[t[0]*t[1],t[2]];if(3===t.length&&t[0]<=n&&t[1]*t[2]<=n)return[t[0],t[1]*t[2]];if(4===t.length&&t[0]*t[1]*t[2]<=n&&t[3]<=n)return[t[0]*t[1]*t[2],t[3]];if(4===t.length&&t[0]<=n&&t[1]*t[2]*t[3]<=n)return[t[0],t[1]*t[2]*t[3]];if(e){const e=EN(t);let n=2,s=2;return t.length&&([n,s]=CN(t)),r=e*(n/2)*(s/2),m(r).map((t=>2*t))}return m(r)}(n,u),e.texShape=h),null!=s){const t=$N(n);let a,i=h[1],o=h[0];const p=s instanceof Uint8Array;u?([i,o]=pN(h[0],h[1]),a=new BS(t,[o,i],p)):a=new LS(t,[o,i],p);const d=this.makeTensorInfo([o,i],r);this.texData.get(d.dataId).usage=p?iN.PIXELS:iN.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(d.dataId),i,o,s);const f=!0,m=this.runWebGLProgram(a,[d],r,null,f),g=this.texData.get(m.dataId);e.texture=g.texture,e.texShape=g.texShape,e.isPacked=g.isPacked,e.usage=g.usage,this.disposeIntermediateTensorInfo(d),this.texData.delete(m.dataId),e.values=null,l&&(this.uploadWaitMs+=An()-c)}else{const t=this.acquireTexture(h,i,r,u);e.texture=t}}convertAndCacheOnCPU(t,e){const n=this.texData.get(t),{dtype:r}=n;return this.releaseGPUData(t),null!=e&&(n.values=function(t,e){if("float32"===e||"complex64"===e)return t;if("int32"===e||"bool"===e){const n="int32"===e?new Int32Array(t.length):new Uint8Array(t.length);for(let e=0;e<n.length;++e)n[e]=Math.round(t[e]);return n}throw new Error(`Unknown dtype ${e}`)}(e,r)),n.values}acquireTexture(t,e,n,r){if(this.numBytesInGPU+=this.computeBytes(t,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const t=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${t} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(t,e,r)}computeBytes(t,e){return t[0]*t[1]*S(e)}tryRunOnCpuOrThrow(t,e){if(this.shouldExecuteOnCPU(t))try{return e()}catch(t){if(U().getBool("IS_TEST"))throw new Error("CPU forwarding failed")}return null}}function sC(t){const{inputs:e,backend:n}=t,{x:r}=e;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}gr()&&Xa("webgl",(()=>new rC),2);const aC={kernelName:ie,backendName:"webgl",kernelFunc:sC};function iC(t){const{inputs:e,backend:n}=t,{real:r,imag:s}=e,a=n.makeTensorInfo(r.shape,"complex64"),i=n.texData.get(a.dataId),o=sC({inputs:{x:r},backend:n});n.texData.get(o.dataId).complexParentRefCount++;const u=sC({inputs:{x:s},backend:n});return n.texData.get(u.dataId).complexParentRefCount++,i.complexTensorInfos={real:o,imag:u},a}const oC={kernelName:At,backendName:"webgl",kernelFunc:iC};function uC(t){return({inputs:e,backend:n})=>{const{x:r}=e,s=n,a=new FE(r.shape,t);return s.runWebGLProgram(a,[r],r.dtype)}}function lC({opSnippet:t,packedOpSnippet:e,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:s,dtype:a}){return({inputs:i,backend:o})=>{const{a:u,b:l}=i,c=o;if(r&&"complex64"===u.dtype){const e=c.texData.get(u.dataId),n=c.texData.get(l.dataId),[r,s]=[[e.complexTensorInfos.real,n.complexTensorInfos.real],[e.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((e=>{const[n,r]=e,s={dataId:n.dataId,dtype:n.dtype,shape:u.shape},a={dataId:r.dataId,dtype:r.dtype,shape:l.shape},i=new hS(t,u.shape,l.shape);return c.runWebGLProgram(i,[s,a],sr(n.dtype,r.dtype))})),a=iC({inputs:{real:r,imag:s},backend:c});return c.disposeIntermediateTensorInfo(r),c.disposeIntermediateTensorInfo(s),a}const h=a||sr(u.dtype,l.dtype);if(c.shouldExecuteOnCPU([u,l])&&null!=s){const t=c.texData.get(u.dataId),e=c.texData.get(l.dataId),[n,r]=s(u.shape,l.shape,t.values,e.values,h),a=c.makeTensorInfo(r,h);return c.texData.get(a.dataId).values=n,a}let p;return p=U().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=e?new dS(e,u.shape,l.shape,n):new hS(t,u.shape,l.shape),c.runWebGLProgram(p,[u,l],h)}}const cC="return a + b;",hC=lC({opSnippet:cC,packedOpSnippet:cC,supportsComplex:!0,cpuKernelImpl:Zw}),pC={kernelName:pt,backendName:"webgl",kernelFunc:hC},dC=lC({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),fC={kernelName:wt,backendName:"webgl",kernelFunc:dC};const mC={kernelName:vt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e;LN(s,"avgPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=r;u(Ti(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const c=xi(s.shape,a,i,1,o,l);if(1===c.filterWidth&&1===c.filterHeight&&d(c.inShape,c.outShape))return sC({inputs:{x:s},backend:n});const h=new pE(c,"avg",!1);return n.runWebGLProgram(h,[s],"float32")}};const gC={kernelName:It,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:a}=e,i=a;LN([s,a],"avgPoolBackprop");const{filterSize:o,strides:u,pad:l}=r,c=xi(i.shape,o,u,1,l),h=new uS(c);return n.runWebGLProgram(h,[s],i.dtype)}};class yC{constructor(t,e,n,r,s,a){this.outputShape=[],this.variableNames=["x","mean","variance"],co(t,e),co(t,n);let i="0.0";null!=r&&(co(t,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";null!=s&&(co(t,s),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${i};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${a}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class bC{constructor(t,e,n,r,s,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],co(t,e),co(t,n);let i="vec4(0.0)";null!=r&&(co(t,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=s&&(co(t,s),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`\n      void main() {\n        vec4 offset = ${i};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${a}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const xC={kernelName:re,backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r,mean:s,variance:a,offset:i,scale:o}=t;u(s.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),u(null==i||s.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),u(null==o||s.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:l}=n;null==l&&(l=.001);const c=[r,s,a];let h=null;null!=i&&(h=i.shape,c.push(i));let p=null;null!=o&&(p=o.shape,c.push(o));const d=U().getBool("WEBGL_PACK_NORMALIZATION")?new bC(r.shape,s.shape,a.shape,h,p,l):new yC(r.shape,s.shape,a.shape,h,p,l);return e.runWebGLProgram(d,c,c[0].dtype)}},wC=lC({opSnippet:"return float(a != b);",dtype:"bool"}),vC={kernelName:Ce,backendName:"webgl",kernelFunc:wC};function IC(t){const{inputs:e,backend:n}=t,{input:r}=e;return sC({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}const kC={kernelName:Fe,backendName:"webgl",kernelFunc:IC};const NC={kernelName:Ct,backendName:"webgl",kernelFunc:function t(e){const{inputs:n,backend:r,attrs:s}=e,{x:a}=n,{dtype:i}=s;if("complex64"===i){if("complex64"===a.dtype)return sC({inputs:{x:a},backend:r});const e=ru(a.shape),n=t({inputs:{x:a},backend:r,attrs:{dtype:"float32"}}),s=iC({inputs:{real:n,imag:e},backend:r});return e.dispose(),r.disposeIntermediateTensorInfo(n),s}if("complex64"===a.dtype){const e=IC({inputs:{input:a},backend:r}),n=t({inputs:{x:e},backend:r,attrs:{dtype:i}});return r.disposeIntermediateTensorInfo(e),n}if(!k(a.dtype,i)){const t=sC({inputs:{x:a},backend:r});return{dataId:t.dataId,shape:t.shape,dtype:i}}if("int32"===i)return function(t,e){const n=new FE(t.shape,"return float(int(x));"),r=e.runWebGLProgram(n,[t],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(a,r);if("bool"===i){const t=r.makeTensorInfo([],"bool",v("bool",1)),e=wC({inputs:{a:a,b:t},backend:r});return r.disposeIntermediateTensorInfo(t),e}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${i}`)}};class SC{constructor(t){this.outputShape=[],this.outputShape=Ui(t,1),this.variableNames=t.map(((t,e)=>`T${e}`));const e=new Array(t.length-1);e[0]=t[0][1];for(let n=1;n<e.length;n++)e[n]=e[n-1]+t[n][1];const n=[`if (yC < ${e[0]}) setOutput(getT0(yR, yC));`];for(let t=1;t<e.length;t++){const r=e[t-1];n.push(`else if (yC < ${e[t]}) setOutput(getT${t}(yR, yC-${r}));`)}const r=e.length,s=e[e.length-1];n.push(`else setOutput(getT${r}(yR, yC-${s}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class EC{constructor(t,e){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=Ui(t,e);const n=this.outputShape,r=n.length,s=sS(r),a=UN("coords",r),i=["x","y","z","w","u","v"].slice(0,r);this.variableNames=t.map(((t,e)=>`T${e}`));const o=new Array(t.length-1);o[0]=t[0][e];for(let n=1;n<o.length;n++)o[n]=o[n-1]+t[n][e];const u=i[e],l=i.slice(-2),c=i.join();let h=`if (${u} < ${o[0]}) {\n        return getChannel(\n            getT0(${c}), vec2(${l.join()}));\n        }`;for(let t=1;t<o.length;t++){const e=o[t-1];h+=`\n        if (${u} < ${o[t]}  && ${u} >= ${o[t-1]}) {\n          return getChannel(\n            getT${t}(${CC(i,u,e)}),\n            vec2(${CC(l,u,e)}));\n        }`}const p=o.length,d=o[o.length-1];h+=`\n        return getChannel(\n          getT${p}(${CC(i,u,d)}),\n          vec2(${CC(l,u,d)}));`,this.userCode=`\n      float getValue(${i.map((t=>"int "+t))}) {\n        ${h}\n      }\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${a}), 0., 0., 0.);\n\n        ${a[r-1]} = ${a[r-1]} + 1;\n        if (${a[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${a});\n        }\n\n        ${a[r-2]} = ${a[r-2]} + 1;\n        if (${a[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${a});\n        }\n\n        ${a[r-1]} = ${a[r-1]} - 1;\n        if (${a[r-2]} < ${n[r-2]} &&\n            ${a[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${a});\n        }\n        setOutput(result);\n      }\n    `}}function CC(t,e,n){const r=t.indexOf(e);return t.map(((t,e)=>e===r?`${t} - ${n}`:t)).join()}function $C(t){const{inputs:e,backend:n}=t,{input:r}=e;return sC({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}const TC={kernelName:ue,backendName:"webgl",kernelFunc:$C};function AC(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{shape:a}=r,i=n,o=p(s.shape),l=b(a,o),c=p(l);u(o===c,(()=>`The new shape (${l}) has ${c} elements and the old shape (${s.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`));const h=i.texData.get(s.dataId);return!h.isPacked||AN(s.shape,l)||null!==h.texture&&AN(h.shape,l)?(i.incRef(s.dataId),{dataId:s.dataId,shape:l,dtype:s.dtype}):function(t,e,n){const r=[EN(t.shape),...CN(t.shape)],s={dtype:t.dtype,shape:r,dataId:t.dataId},a=[EN(e),...CN(e)],i=new mE(a,r),o=n.runWebGLProgram(i,[s],t.dtype,null,!0);return{dataId:o.dataId,shape:e,dtype:o.dtype}}(s,l,i)}const RC={kernelName:Be,backendName:"webgl",kernelFunc:AC};function _C(t,e,n){const r=t[0].dtype;if("complex64"===r){const r=t.map((t=>IC({inputs:{input:t},backend:n}))),s=t.map((t=>$C({inputs:{input:t},backend:n}))),a=_C(r,e,n),i=_C(s,e,n),o=iC({inputs:{real:a,imag:i},backend:n});return r.forEach((t=>n.disposeIntermediateTensorInfo(t))),s.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),o}if(t.length>U().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const r=Math.floor(t.length/2),s=_C(t.slice(0,r),e,n),a=_C(t.slice(r),e,n),i=_C([s,a],e,n);return n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),i}if(U().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&t[0].shape.length>1){const s=new EC(t.map((t=>t.shape)),e);return n.runWebGLProgram(s,t,r)}const s=Ui(t.map((t=>t.shape)),e),a=t.map((t=>AC({inputs:{x:t},attrs:{shape:[-1,p(t.shape.slice(e))]},backend:n}))),i=new SC(a.map((t=>t.shape))),o=n.runWebGLProgram(i,a,r);a.forEach((t=>n.disposeIntermediateTensorInfo(t)));const u=AC({inputs:{x:o},attrs:{shape:s},backend:n});return n.disposeIntermediateTensorInfo(o),u}const DC={kernelName:Rt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{axis:s}=r,a=x(s,e[0].shape)[0],i=Ui(e.map((t=>t.shape)),a);if(0===p(i))return n.makeTensorInfo(i,e[0].dtype,[]);const o=e.filter((t=>p(t.shape)>0));return 1===o.length?o[0]:(Vi(o.map((t=>t.shape)),a),_C(o,a,n))}},MC=uC("if (isnan(x)) return x;\n  return cos(x);\n"),FC={kernelName:Bt,backendName:"webgl",kernelFunc:MC},OC=lC({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),LC={kernelName:qt,backendName:"webgl",kernelFunc:OC};class BC{constructor(t,e,n){this.variableNames=["real","imag"];const r=e[1];this.outputShape=e;const s=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=n?`${r}.0`:"1.0";let i;if("real"===t)i="return real * expR - imag * expI;";else{if("imag"!==t)throw new Error(`FFT component must be either "real" or "imag", got ${t}.`);i="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${s};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${i}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${a};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function zC(t,e,n){const r=n.texData.get(t.dataId),s=p(t.shape),a=t.shape[t.shape.length-1],i=AC({inputs:{x:t},backend:n,attrs:{shape:[s/a,a]}}).shape,o=new BC("real",i,e),u=new BC("imag",i,e),l=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:i},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:i}],c=n.runWebGLProgram(o,l,"float32"),h=n.runWebGLProgram(u,l,"float32"),d=iC({inputs:{real:c,imag:h},backend:n});n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h);const f=AC({inputs:{x:d},backend:n,attrs:{shape:t.shape}});return n.disposeIntermediateTensorInfo(f),f}const PC={kernelName:Zt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:r}=e;return zC(r,!1,n)}};class WC{constructor(t){this.variableNames=["Image"],this.outputShape=[];const e=t[2];this.outputShape=t,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${e} - x;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${e}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const VC={kernelName:te,backendName:"webgl",kernelFunc:({inputs:t,backend:e})=>{const{image:n}=t,r=e,s=new WC(n.shape);return r.runWebGLProgram(s,[n],n.dtype)}};class UC{constructor(t){this.variableNames=["A"];const e=GN(),[n,r]=t;this.outputShape=t,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${e.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class GC{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const e=GN(),[n,r]=t;this.outputShape=t,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${e.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${e.output} = result;\n      }\n    `}}const HC={kernelName:gn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t;let{pixels:s}=e;const{numChannels:a}=r,i="undefined"!=typeof HTMLVideoElement&&s instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&s instanceof HTMLImageElement,[u,l]=i?[s.videoWidth,s.videoHeight]:[s.width,s.height],c=[l,u],h=[l,u,a];(o||i)&&(null==jC&&(jC=document.createElement("canvas").getContext("2d")),jC.canvas.width=u,jC.canvas.height=l,jC.drawImage(s,0,0,u,l),s=jC.canvas);const p=n.makeTensorInfo(c,"int32");n.texData.get(p.dataId).usage=iN.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(p.dataId),s);const d=U().getBool("WEBGL_PACK")?new GC(h):new UC(h),f=n.runWebGLProgram(d,[p],"int32");return n.disposeData(p.dataId),f}};let jC;const qC={kernelName:oe,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:r}=e;return zC(r,!0,n)}};class KC{constructor(t,e){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:a}=t;this.outputShape=[r,a];const i=4*Math.floor(n/4),o=n%4;let u="sumValue += dot(values, ones);";if(null!=e){const t=1/e;u=`sumValue += dot(values * ${f(t)?t.toPrecision(2):t}, ones);`}let l="";s%n>0&&(l=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${l}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${u}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${u}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}function XC(t,e,n,r){const s=function(t){const e=[];for(;0===e.length||1!==e[e.length-1].outSize;){const n=e.length?e[e.length-1].outSize:t[1],r=So(n);e.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return e}(t.shape);let a=t;for(let i=0;i<s.length;i++){const{inSize:o,windowSize:u,outSize:l}=s[i];let c,h;c="mean"===n?0===i?new KC({windowSize:u,inSize:o,batchSize:t.shape[0],outSize:l},o):new KC({windowSize:u,inSize:o,batchSize:t.shape[0],outSize:l}):new fE({windowSize:u,inSize:o,batchSize:t.shape[0],outSize:l},n),h=a,a=r.runWebGLProgram(c,[a],e),h.dataId!==t.dataId&&r.disposeIntermediateTensorInfo(h)}return a}class YC{constructor(t,e){this.variableNames=["A"];const n=new Array(t.length);for(let r=0;r<n.length;r++)n[r]=t[e[r]];this.outputShape=n,this.rank=n.length;const r=sS(this.rank),s=function(t){const e=t.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(e);for(let e=0;e<t.length;e++)r[t[e]]=n[e];return r.join()}(e);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${s}));\n    }\n    `}}class JC{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(t.length);for(let r=0;r<n.length;r++)n[r]=t[e[r]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=sS(this.rank),s=VN("rc",this.rank),a=new Array(this.rank);for(let t=0;t<e.length;t++)a[e[t]]=s[t];const i=`vec2(${a.slice(-2).join()})`,o=`++${s[this.rank-1]} < ${n[this.rank-1]}`,u=`getChannel(getA(${a.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${u};\n      if(${o}) {\n        result[1] = ${u};\n      }\n      --${s[this.rank-1]};\n      if(++${s[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${u};\n        if(${o}) {\n          result[3] = ${u};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function ZC(t,e,n){const r=U().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new JC(t.shape,e):new YC(t.shape,e);return n.runWebGLProgram(r,[t],t.dtype)}const QC={kernelName:ge,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{reductionIndices:s,keepDims:a}=e,i=n,o=r.shape.length,u=x(s,r.shape);let l=u;const c=ii(l,o),h=null!=c,d=i.shouldExecuteOnCPU([r]);let f=r;if(h){if(d){const t=i.texData.get(f.dataId).values,e=new Array(o);for(let t=0;t<e.length;t++)e[t]=r.shape[c[t]];const n=Wv(t,r.shape,r.dtype,c,e);f=i.makeTensorInfo(e,r.dtype);i.texData.get(f.dataId).values=n}else f=ZC(r,c,i);l=ui(l.length,o)}ai("max",l,o);const[m,g]=ri(f.shape,l);let y,b=m;if(a&&(b=si(m,u)),d){const t=wv(i.texData.get(f.dataId).values,p(g),b,r.dtype);y=i.makeTensorInfo(b,r.dtype);i.texData.get(y.dataId).values=t}else y=function(t,e,n,r){const s=p(e),a=AC({inputs:{x:t},attrs:{shape:[p(t.shape)/s,s]},backend:r}),i=XC(a,t.dtype,"max",r),o=AC({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}(f,g,b,i);return h&&i.disposeIntermediateTensorInfo(f),y}};const t$={kernelName:be,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e;LN(s,"maxPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=r;u(Ti(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const c=xi(s.shape,a,i,1,o,l);if(1===c.filterWidth&&1===c.filterHeight&&d(c.inShape,c.outShape))return sC({inputs:{x:s},backend:n});const h=new pE(c,"max",!1);return n.runWebGLProgram(h,[s],s.dtype)}};const e$={kernelName:xe,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:a,output:i}=e,o=a;LN([a,i],"maxPoolBackprop");const{filterSize:u,strides:l,pad:c,dimRoundingMode:h}=r,p=xi(o.shape,u,l,1,c,h),d=new pE(p,"max",!0),f=n.runWebGLProgram(d,[o],o.dtype),m=new sE(p),g=n.runWebGLProgram(m,[s,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}};const n$={kernelName:ve,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{filterSize:s,strides:a,pad:i,includeBatchInIndex:o}=e,l=n;u(4===r.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`));const c=[1,1];u(Ti(a,c),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${c}'`));const h=xi(r.shape,s,a,c,i),[p,d]=function(t,e,n,r){let s=new pE(n,"max",!1);const a=r.runWebGLProgram(s,[t],"float32");return s=new pE(n,"max",!0,!0,e),[a,r.runWebGLProgram(s,[t],"float32")]}(r,o,h,l);return[p,d]}};const r$={kernelName:Ie,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{keepDims:s,axis:a}=e,i=n,o=r.shape.length,u=x(a,r.shape);let l=u;const c=ii(l,o),h=null!=c,d=i.shouldExecuteOnCPU([r]),f=[];let m=r;if(h){if(d){const t=i.texData.get(m.dataId).values,e=new Array(o);for(let t=0;t<e.length;t++)e[t]=r.shape[c[t]];const n=Wv(t,r.shape,r.dtype,c,e);m=i.makeTensorInfo(e,r.dtype);i.texData.get(m.dataId).values=n}else m=ZC(r,c,i);f.push(m),l=ui(l.length,o)}ai("sum",l,o);const[g,y]=ri(m.shape,l);let b=g;s&&(b=si(g,u));const w=function(t,e,n,r){const s=p(e),a=AC({inputs:{x:t},attrs:{shape:[p(t.shape)/s,s]},backend:r}),i=XC(a,"float32","mean",r),o=AC({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}(m,y,b,i);for(const t of f)i.disposeIntermediateTensorInfo(t);return w}};class s${constructor(t,e,n){this.variableNames=["x"],this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const r=t.length,s=sS(r),a=e.map((t=>t[0])).join(","),i=e.map(((e,n)=>e[0]+t[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),u="reflect"===n?0:1;this.userCode=1!==r?`\n      ${s} start = ${s}(${a});\n      ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${u};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};\n          }\n        }\n        ${s} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${a};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${u};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${u};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class a${constructor(t,e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const r=t.length,s=sS(r),a=e.map((t=>t[0])).join(","),i=e.map(((e,n)=>e[0]+t[n])).join(","),o=UN("rc",r),u=UN("source",r),l=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${u.slice(-2).join()})`,h="reflect"===n?0:1;let p="";if(1===r){const t=`\n        ${s} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${h};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${h};\n        }\n        source -= start;\n      `;p=`\n        ${s} rc = outputLoc;\n        ${t}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${l}) {\n          ${t}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n      `}else{const t=`\n        ${s} source = rc;\n        ${s} lt = ${s}(lessThan(source, start));\n        ${s} gte = ${s}(greaterThanEqual(source, end));\n        ${s} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${h}) +\n                gte * ((end - 1) * 2 - source + ${h});\n        source -= start;\n      `;p=`\n        ${s} rc = outputLoc;\n        ${t}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${l}) {\n          ${t}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${o[r-2]} += 1;\n        if(${o[r-2]} < ${this.outputShape[r-2]}) {\n          ${t}\n          result[2] = getChannel(getX(${u.join()}), ${c});\n          ${o[r-1]} += 1;\n          if(${l}) {\n            ${t}\n            result[3] = getChannel(getX(${u.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${s} start = ${s}(${a});\n      const ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}const i$={kernelName:Ne,backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r}=t,{paddings:s,mode:a}=n,i=U().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new a$(r.shape,s,a):new s$(r.shape,s,a);return e.runWebGLProgram(i,[r],r.dtype)}},o$="return areal * breal - aimag * bimag;",u$="return areal * bimag + aimag * breal;";class l${constructor(t,e,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=co(e,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${t}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const c$="return a * b;";const h$={kernelName:Se,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{a:r,b:s}=e,a=sr(r.dtype,s.dtype);if("complex64"===r.dtype){const t=n.texData.get(r.dataId),e=n.texData.get(s.dataId),a=new l$(o$,r.shape,s.shape),i=new l$(u$,r.shape,s.shape),o=[{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:r.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:s.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:s.shape}],u=n.runWebGLProgram(a,o,"float32"),l=n.runWebGLProgram(i,o,"float32"),c=iC({inputs:{real:u,imag:l},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),c}if(n.shouldExecuteOnCPU([r,s])){const t=n.texData.get(r.dataId),e=n.texData.get(s.dataId),[i,o]=vv(r.shape,s.shape,t.values,e.values,a),u=n.makeTensorInfo(o,a);return n.texData.get(u.dataId).values=i,u}let i;return i=U().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new dS(c$,r.shape,s.shape):new hS(c$,r.shape,s.shape),n.runWebGLProgram(i,[r,s],a)}},p$={kernelName:$e,backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{Jc("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{boxes:r,scores:s}=t,{maxOutputSize:a,iouThreshold:i,scoreThreshold:o}=n,u=e;return oc(u.readSync(r.dataId),u.readSync(s.dataId),a,i,o)}},d$=uc,f$={kernelName:Te,backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{Jc("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{boxes:r,scores:s}=t,{maxOutputSize:a,iouThreshold:i,scoreThreshold:o,padToMaxOutputSize:u}=n,l=e,c=l.readSync(r.dataId),h=l.readSync(s.dataId),{selectedIndices:p,validOutputs:d}=d$(c,h,a,i,o,u);return[p,d]}},m$=lc,g$={kernelName:Ae,backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{Jc("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{boxes:r,scores:s}=t,{maxOutputSize:a,iouThreshold:i,scoreThreshold:o,softNmsSigma:u}=n,l=e,c=l.readSync(r.dataId),h=l.readSync(s.dataId),p=a,d=i,f=o,m=u,{selectedIndices:g,selectedScores:y}=m$(c,h,p,d,f,m);return[g,y]}};class y${constructor(t,e,n,r){this.variableNames=["Image"],this.outputShape=[];const s=t[1],a=t[2],i=Math.sin(e).toFixed(3),o=Math.cos(e).toFixed(3);this.outputShape=t;const[u,l]=Uc(r,s,a),c=u.toFixed(3),h=l.toFixed(3);let p="";p="number"==typeof n?`float outputValue = ${n.toFixed(2)};`:`\n        vec3 fill = vec3(${n.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - ${c}) * ${o} - (float(y) - ${h}) * ${i};\n          float coordYFloat = (float(x) - ${c}) * ${i} + (float(y) - ${h}) * ${o};\n          int coordX = int(round(coordXFloat + ${c}));\n          int coordY = int(round(coordYFloat + ${h}));\n          ${p}\n          if(coordX >= 0 && coordX < ${a} && coordY >= 0 && coordY < ${s}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const b$={kernelName:yn,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:r}=t,{radians:s,fillValue:a,center:i}=e,o=n,u=new y$(r.shape,s,a,i);return o.runWebGLProgram(u,[r],r.dtype)}},x$=uC("if (isnan(x)) return x;\n  return sin(x);\n"),w$={kernelName:Ke,backendName:"webgl",kernelFunc:x$},v$={kernelName:sn,backendName:"webgl",kernelFunc:uC("return x * x;")},I$="return (a - b) * (a - b);",k$=lC({opSnippet:I$,packedOpSnippet:I$}),N$={kernelName:rn,backendName:"webgl",kernelFunc:k$},S$="return a - b;",E$=lC({opSnippet:S$,packedOpSnippet:S$,supportsComplex:!0,cpuKernelImpl:Lv}),C$={kernelName:an,backendName:"webgl",kernelFunc:E$},$$=uC("return tan(x);");const T$=[pC,fC,mC,gC,xC,NC,oC,DC,FC,LC,PC,VC,HC,aC,qC,TC,QC,t$,e$,n$,r$,i$,h$,p$,f$,g$,vC,kC,RC,b$,w$,v$,C$,N$,{kernelName:on,backendName:"webgl",kernelFunc:$$},{kernelName:cn,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{perm:s}=e,a=n,i=r.shape.length,o=new Array(i);for(let t=0;t<o.length;t++)o[t]=r.shape[s[t]];let u;if(a.shouldExecuteOnCPU([r])){const t=Wv(a.texData.get(r.dataId).values,r.shape,r.dtype,s,o);u=a.makeTensorInfo(o,r.dtype);a.texData.get(u.dataId).values=t}else u=ZC(r,s,a);return u}},{kernelName:hn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,attrs:n,backend:r}=t,{axis:s}=n,{x:a}=e;LN(a,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=r.readSync(a.dataId),{outputValues:o,outputShape:u,indices:l}=Vv(i,s,a.shape,a.dtype);return[r.makeTensorInfo(u,a.dtype,o),r.makeTensorInfo([l.length],"int32",l)]}}];for(const t of T$)En(t);var A$={};!function(t){function e(){if(e.prototype._singleton)throw new Error("WebMidi is a singleton, it cannot be instantiated directly.");(e.prototype._singleton=this)._inputs=[],this._outputs=[],this._userHandlers={},this._stateChangeQueue=[],this._processingStateChange=!1,this._midiInterfaceEvents=["connected","disconnected"],this._nrpnBuffer=[[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]],this._nrpnEventsEnabled=!0,this._nrpnTypes=["entry","increment","decrement"],this._notes=["C","C#","D","D#","E","F","F#","G","G#","A","A#","B"],this._semitones={C:0,D:2,E:4,F:5,G:7,A:9,B:11},Object.defineProperties(this,{MIDI_SYSTEM_MESSAGES:{value:{sysex:240,timecode:241,songposition:242,songselect:243,tuningrequest:246,sysexend:247,clock:248,start:250,continue:251,stop:252,activesensing:254,reset:255,midimessage:0,unknownsystemmessage:-1},writable:!1,enumerable:!0,configurable:!1},MIDI_CHANNEL_MESSAGES:{value:{noteoff:8,noteon:9,keyaftertouch:10,controlchange:11,channelmode:11,nrpn:11,programchange:12,channelaftertouch:13,pitchbend:14},writable:!1,enumerable:!0,configurable:!1},MIDI_REGISTERED_PARAMETER:{value:{pitchbendrange:[0,0],channelfinetuning:[0,1],channelcoarsetuning:[0,2],tuningprogram:[0,3],tuningbank:[0,4],modulationrange:[0,5],azimuthangle:[61,0],elevationangle:[61,1],gain:[61,2],distanceratio:[61,3],maximumdistance:[61,4],maximumdistancegain:[61,5],referencedistanceratio:[61,6],panspreadangle:[61,7],rollangle:[61,8]},writable:!1,enumerable:!0,configurable:!1},MIDI_CONTROL_CHANGE_MESSAGES:{value:{bankselectcoarse:0,modulationwheelcoarse:1,breathcontrollercoarse:2,footcontrollercoarse:4,portamentotimecoarse:5,dataentrycoarse:6,volumecoarse:7,balancecoarse:8,pancoarse:10,expressioncoarse:11,effectcontrol1coarse:12,effectcontrol2coarse:13,generalpurposeslider1:16,generalpurposeslider2:17,generalpurposeslider3:18,generalpurposeslider4:19,bankselectfine:32,modulationwheelfine:33,breathcontrollerfine:34,footcontrollerfine:36,portamentotimefine:37,dataentryfine:38,volumefine:39,balancefine:40,panfine:42,expressionfine:43,effectcontrol1fine:44,effectcontrol2fine:45,holdpedal:64,portamento:65,sustenutopedal:66,softpedal:67,legatopedal:68,hold2pedal:69,soundvariation:70,resonance:71,soundreleasetime:72,soundattacktime:73,brightness:74,soundcontrol6:75,soundcontrol7:76,soundcontrol8:77,soundcontrol9:78,soundcontrol10:79,generalpurposebutton1:80,generalpurposebutton2:81,generalpurposebutton3:82,generalpurposebutton4:83,reverblevel:91,tremololevel:92,choruslevel:93,celestelevel:94,phaserlevel:95,databuttonincrement:96,databuttondecrement:97,nonregisteredparametercoarse:98,nonregisteredparameterfine:99,registeredparametercoarse:100,registeredparameterfine:101},writable:!1,enumerable:!0,configurable:!1},MIDI_NRPN_MESSAGES:{value:{entrymsb:6,entrylsb:38,increment:96,decrement:97,paramlsb:98,parammsb:99,nullactiveparameter:127},writable:!1,enumerable:!0,configurable:!1},MIDI_CHANNEL_MODE_MESSAGES:{value:{allsoundoff:120,resetallcontrollers:121,localcontrol:122,allnotesoff:123,omnimodeoff:124,omnimodeon:125,monomodeon:126,polymodeon:127},writable:!1,enumerable:!0,configurable:!1},octaveOffset:{value:0,writable:!0,enumerable:!0,configurable:!1}}),Object.defineProperties(this,{supported:{enumerable:!0,get:function(){return"requestMIDIAccess"in navigator}},enabled:{enumerable:!0,get:function(){return void 0!==this.interface}.bind(this)},inputs:{enumerable:!0,get:function(){return this._inputs}.bind(this)},outputs:{enumerable:!0,get:function(){return this._outputs}.bind(this)},sysexEnabled:{enumerable:!0,get:function(){return!(!this.interface||!this.interface.sysexEnabled)}.bind(this)},nrpnEventsEnabled:{enumerable:!0,get:function(){return!!this._nrpnEventsEnabled}.bind(this),set:function(t){return this._nrpnEventsEnabled=t,this._nrpnEventsEnabled}},nrpnTypes:{enumerable:!0,get:function(){return this._nrpnTypes}.bind(this)},time:{enumerable:!0,get:function(){return performance.now()}}})}var n=new e;function r(t){var e=this;this._userHandlers={channel:{},system:{}},this._midiInput=t,Object.defineProperties(this,{connection:{enumerable:!0,get:function(){return e._midiInput.connection}},id:{enumerable:!0,get:function(){return e._midiInput.id}},manufacturer:{enumerable:!0,get:function(){return e._midiInput.manufacturer}},name:{enumerable:!0,get:function(){return e._midiInput.name}},state:{enumerable:!0,get:function(){return e._midiInput.state}},type:{enumerable:!0,get:function(){return e._midiInput.type}}}),this._initializeUserHandlers(),this._midiInput.onmidimessage=this._onMidiMessage.bind(this)}function s(t){var e=this;this._midiOutput=t,Object.defineProperties(this,{connection:{enumerable:!0,get:function(){return e._midiOutput.connection}},id:{enumerable:!0,get:function(){return e._midiOutput.id}},manufacturer:{enumerable:!0,get:function(){return e._midiOutput.manufacturer}},name:{enumerable:!0,get:function(){return e._midiOutput.name}},state:{enumerable:!0,get:function(){return e._midiOutput.state}},type:{enumerable:!0,get:function(){return e._midiOutput.type}}})}e.prototype.enable=function(t,e){this.enabled||(this.supported?navigator.requestMIDIAccess({sysex:e}).then(function(e){var n,r=[],s=[];this.interface=e,this._resetInterfaceUserHandlers(),this.interface.onstatechange=function(t){r.push(t)};for(var a=e.inputs.values(),i=a.next();i&&!i.done;i=a.next())s.push(i.value.open());for(var o=e.outputs.values(),u=o.next();u&&!u.done;u=o.next())s.push(u.value.open());function l(){clearTimeout(n),this._updateInputsAndOutputs(),this.interface.onstatechange=this._onInterfaceStateChange.bind(this),"function"==typeof t&&t.call(this),r.forEach(function(t){this._onInterfaceStateChange(t)}.bind(this))}n=setTimeout(l.bind(this),200),Promise&&Promise.all(s).catch((function(t){})).then(l.bind(this))}.bind(this),function(e){"function"==typeof t&&t.call(this,e)}.bind(this)):"function"==typeof t&&t(new Error("The Web MIDI API is not supported by your browser.")))},e.prototype.disable=function(){if(!this.supported)throw new Error("The Web MIDI API is not supported by your browser.");this.interface&&(this.interface.onstatechange=void 0),this.interface=void 0,this._inputs=[],this._outputs=[],this._nrpnEventsEnabled=!0,this._resetInterfaceUserHandlers()},e.prototype.addListener=function(t,e){if(!this.enabled)throw new Error("WebMidi must be enabled before adding event listeners.");if("function"!=typeof e)throw new TypeError("The 'listener' parameter must be a function.");if(!(0<=this._midiInterfaceEvents.indexOf(t)))throw new TypeError("The specified event type is not supported.");return this._userHandlers[t].push(e),this},e.prototype.hasListener=function(t,e){if(!this.enabled)throw new Error("WebMidi must be enabled before checking event listeners.");if("function"!=typeof e)throw new TypeError("The 'listener' parameter must be a function.");if(!(0<=this._midiInterfaceEvents.indexOf(t)))throw new TypeError("The specified event type is not supported.");for(var n=0;n<this._userHandlers[t].length;n++)if(this._userHandlers[t][n]===e)return!0;return!1},e.prototype.removeListener=function(t,e){if(!this.enabled)throw new Error("WebMidi must be enabled before removing event listeners.");if(void 0!==e&&"function"!=typeof e)throw new TypeError("The 'listener' parameter must be a function.");if(0<=this._midiInterfaceEvents.indexOf(t))if(e)for(var n=0;n<this._userHandlers[t].length;n++)this._userHandlers[t][n]===e&&this._userHandlers[t].splice(n,1);else this._userHandlers[t]=[];else{if(void 0!==t)throw new TypeError("The specified event type is not supported.");this._resetInterfaceUserHandlers()}return this},e.prototype.toMIDIChannels=function(t){var e;if("all"===t||void 0===t)e=["all"];else{if("none"===t)return[];e=Array.isArray(t)?t:[t]}return-1<e.indexOf("all")&&(e=[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]),e.map((function(t){return parseInt(t)})).filter((function(t){return 1<=t&&t<=16}))},e.prototype.getInputById=function(t){if(!this.enabled)throw new Error("WebMidi is not enabled.");t=String(t);for(var e=0;e<this.inputs.length;e++)if(this.inputs[e].id===t)return this.inputs[e];return!1},e.prototype.getOutputById=function(t){if(!this.enabled)throw new Error("WebMidi is not enabled.");t=String(t);for(var e=0;e<this.outputs.length;e++)if(this.outputs[e].id===t)return this.outputs[e];return!1},e.prototype.getInputByName=function(t){if(!this.enabled)throw new Error("WebMidi is not enabled.");for(var e=0;e<this.inputs.length;e++)if(~this.inputs[e].name.indexOf(t))return this.inputs[e];return!1},e.prototype.getOctave=function(t){if(null!=t&&0<=t&&t<=127)return Math.floor(Math.floor(t)/12-1)+Math.floor(n.octaveOffset)},e.prototype.getOutputByName=function(t){if(!this.enabled)throw new Error("WebMidi is not enabled.");for(var e=0;e<this.outputs.length;e++)if(~this.outputs[e].name.indexOf(t))return this.outputs[e];return!1},e.prototype.guessNoteNumber=function(t){var e=!1;if(t&&t.toFixed&&0<=t&&t<=127?e=Math.round(t):0<=parseInt(t)&&parseInt(t)<=127?e=parseInt(t):("string"==typeof t||t instanceof String)&&(e=this.noteNameToNumber(t)),!1===e)throw new Error("Invalid input value ("+t+").");return e},e.prototype.noteNameToNumber=function(t){"string"!=typeof t&&(t="");var e=t.match(/([CDEFGAB])(#{0,2}|b{0,2})(-?\d+)/i);if(!e)throw new RangeError("Invalid note name.");var r=n._semitones[e[1].toUpperCase()],s=12*(parseInt(e[3])+1-Math.floor(n.octaveOffset))+r;if(-1<e[2].toLowerCase().indexOf("b")?s-=e[2].length:-1<e[2].toLowerCase().indexOf("#")&&(s+=e[2].length),s<0||127<s)throw new RangeError("Invalid note name or note outside valid range.");return s},e.prototype._updateInputsAndOutputs=function(){this._updateInputs(),this._updateOutputs()},e.prototype._updateInputs=function(){for(var t=0;t<this._inputs.length;t++){for(var e=!0,n=this.interface.inputs.values(),s=n.next();s&&!s.done;s=n.next())if(this._inputs[t]._midiInput===s.value){e=!1;break}e&&this._inputs.splice(t,1)}this.interface&&this.interface.inputs.forEach(function(t){for(var e=!0,n=0;n<this._inputs.length;n++)this._inputs[n]._midiInput===t&&(e=!1);e&&this._inputs.push(new r(t))}.bind(this))},e.prototype._updateOutputs=function(){for(var t=0;t<this._outputs.length;t++){for(var e=!0,n=this.interface.outputs.values(),r=n.next();r&&!r.done;r=n.next())if(this._outputs[t]._midiOutput===r.value){e=!1;break}e&&this._outputs.splice(t,1)}this.interface&&this.interface.outputs.forEach(function(t){for(var e=!0,n=0;n<this._outputs.length;n++)this._outputs[n]._midiOutput===t&&(e=!1);e&&this._outputs.push(new s(t))}.bind(this))},e.prototype._onInterfaceStateChange=function(t){this._updateInputsAndOutputs();var e={timestamp:t.timeStamp,type:t.port.state};this.interface&&"connected"===t.port.state?"output"===t.port.type?e.port=this.getOutputById(t.port.id):"input"===t.port.type&&(e.port=this.getInputById(t.port.id)):e.port={connection:"closed",id:t.port.id,manufacturer:t.port.manufacturer,name:t.port.name,state:t.port.state,type:t.port.type},this._userHandlers[t.port.state].forEach((function(t){t(e)}))},e.prototype._resetInterfaceUserHandlers=function(){for(var t=0;t<this._midiInterfaceEvents.length;t++)this._userHandlers[this._midiInterfaceEvents[t]]=[]},r.prototype.on=r.prototype.addListener=function(t,e,r){var s=this;if(void 0===e&&(e="all"),Array.isArray(e)||(e=[e]),e.forEach((function(t){if("all"!==t&&!(1<=t&&t<=16))throw new RangeError("The 'channel' parameter is invalid.")})),"function"!=typeof r)throw new TypeError("The 'listener' parameter must be a function.");if(void 0!==n.MIDI_SYSTEM_MESSAGES[t])this._userHandlers.system[t]||(this._userHandlers.system[t]=[]),this._userHandlers.system[t].push(r);else{if(void 0===n.MIDI_CHANNEL_MESSAGES[t])throw new TypeError("The specified event type is not supported.");if(-1<e.indexOf("all")){e=[];for(var a=1;a<=16;a++)e.push(a)}this._userHandlers.channel[t]||(this._userHandlers.channel[t]=[]),e.forEach((function(e){s._userHandlers.channel[t][e]||(s._userHandlers.channel[t][e]=[]),s._userHandlers.channel[t][e].push(r)}))}return this},r.prototype.hasListener=function(t,e,r){var s=this;if("function"!=typeof r)throw new TypeError("The 'listener' parameter must be a function.");if(void 0===e&&(e="all"),e.constructor!==Array&&(e=[e]),void 0!==n.MIDI_SYSTEM_MESSAGES[t]){for(var a=0;a<this._userHandlers.system[t].length;a++)if(this._userHandlers.system[t][a]===r)return!0}else if(void 0!==n.MIDI_CHANNEL_MESSAGES[t]){if(-1<e.indexOf("all")){e=[];for(var i=1;i<=16;i++)e.push(i)}return!!this._userHandlers.channel[t]&&e.every((function(e){var n=s._userHandlers.channel[t][e];return n&&-1<n.indexOf(r)}))}return!1},r.prototype.removeListener=function(t,e,r){var s=this;if(void 0!==r&&"function"!=typeof r)throw new TypeError("The 'listener' parameter must be a function.");if(void 0===e&&(e="all"),e.constructor!==Array&&(e=[e]),void 0!==n.MIDI_SYSTEM_MESSAGES[t])if(void 0===r)this._userHandlers.system[t]=[];else for(var a=0;a<this._userHandlers.system[t].length;a++)this._userHandlers.system[t][a]===r&&this._userHandlers.system[t].splice(a,1);else if(void 0!==n.MIDI_CHANNEL_MESSAGES[t]){if(-1<e.indexOf("all")){e=[];for(var i=1;i<=16;i++)e.push(i)}if(!this._userHandlers.channel[t])return this;e.forEach((function(e){var n=s._userHandlers.channel[t][e];if(n)if(void 0===r)s._userHandlers.channel[t][e]=[];else for(var a=0;a<n.length;a++)n[a]===r&&n.splice(a,1)}))}else{if(void 0!==t)throw new TypeError("The specified event type is not supported.");this._initializeUserHandlers()}return this},r.prototype._initializeUserHandlers=function(){for(var t in n.MIDI_CHANNEL_MESSAGES)n.MIDI_CHANNEL_MESSAGES.hasOwnProperty(t)&&(this._userHandlers.channel[t]={});for(var e in n.MIDI_SYSTEM_MESSAGES)n.MIDI_SYSTEM_MESSAGES.hasOwnProperty(e)&&(this._userHandlers.system[e]=[])},r.prototype._onMidiMessage=function(t){if(0<this._userHandlers.system.midimessage.length){var e={target:this,data:t.data,timestamp:t.timeStamp,type:"midimessage"};this._userHandlers.system.midimessage.forEach((function(t){t(e)}))}t.data[0]<240?(this._parseChannelEvent(t),this._parseNrpnEvent(t)):t.data[0]<=255&&this._parseSystemEvent(t)},r.prototype._parseNrpnEvent=function(t){var e,r,s=t.data[0]>>4,a=15&t.data[0],i=1+a;if(1<t.data.length&&(e=t.data[1],r=2<t.data.length?t.data[2]:void 0),n.nrpnEventsEnabled&&s===n.MIDI_CHANNEL_MESSAGES.controlchange&&(e>=n.MIDI_NRPN_MESSAGES.increment&&e<=n.MIDI_NRPN_MESSAGES.parammsb||e===n.MIDI_NRPN_MESSAGES.entrymsb||e===n.MIDI_NRPN_MESSAGES.entrylsb)){var o={target:this,type:"controlchange",data:t.data,timestamp:t.timeStamp,channel:i,controller:{number:e,name:this.getCcNameByNumber(e)},value:r};if(o.controller.number===n.MIDI_NRPN_MESSAGES.parammsb&&o.value!=n.MIDI_NRPN_MESSAGES.nullactiveparameter)n._nrpnBuffer[a]=[],n._nrpnBuffer[a][0]=o;else if(1===n._nrpnBuffer[a].length&&o.controller.number===n.MIDI_NRPN_MESSAGES.paramlsb)n._nrpnBuffer[a].push(o);else if(2!==n._nrpnBuffer[a].length||o.controller.number!==n.MIDI_NRPN_MESSAGES.increment&&o.controller.number!==n.MIDI_NRPN_MESSAGES.decrement&&o.controller.number!==n.MIDI_NRPN_MESSAGES.entrymsb)if(3===n._nrpnBuffer[a].length&&n._nrpnBuffer[a][2].number===n.MIDI_NRPN_MESSAGES.entrymsb&&o.controller.number===n.MIDI_NRPN_MESSAGES.entrylsb)n._nrpnBuffer[a].push(o);else if(3<=n._nrpnBuffer[a].length&&n._nrpnBuffer[a].length<=4&&o.controller.number===n.MIDI_NRPN_MESSAGES.parammsb&&o.value===n.MIDI_NRPN_MESSAGES.nullactiveparameter)n._nrpnBuffer[a].push(o);else if(4<=n._nrpnBuffer[a].length&&n._nrpnBuffer[a].length<=5&&o.controller.number===n.MIDI_NRPN_MESSAGES.paramlsb&&o.value===n.MIDI_NRPN_MESSAGES.nullactiveparameter){n._nrpnBuffer[a].push(o);var u=[];n._nrpnBuffer[a].forEach((function(t){u.push(t.data)}));var l=n._nrpnBuffer[a][0].value<<7|n._nrpnBuffer[a][1].value,c=n._nrpnBuffer[a][2].value;6===n._nrpnBuffer[a].length&&(c=n._nrpnBuffer[a][2].value<<7|n._nrpnBuffer[a][3].value);var h="";switch(n._nrpnBuffer[a][2].controller.number){case n.MIDI_NRPN_MESSAGES.entrymsb:h=n._nrpnTypes[0];break;case n.MIDI_NRPN_MESSAGES.increment:h=n._nrpnTypes[1];break;case n.MIDI_NRPN_MESSAGES.decrement:h=n._nrpnTypes[2];break;default:throw new Error("The NPRN type was unidentifiable.")}var p={timestamp:o.timestamp,channel:o.channel,type:"nrpn",data:u,controller:{number:l,type:h,name:"Non-Registered Parameter "+l},value:c};n._nrpnBuffer[a]=[],this._userHandlers.channel[p.type]&&this._userHandlers.channel[p.type][p.channel]&&this._userHandlers.channel[p.type][p.channel].forEach((function(t){t(p)}))}else n._nrpnBuffer[a]=[];else n._nrpnBuffer[a].push(o)}},r.prototype._parseChannelEvent=function(t){var e,r,s=t.data[0]>>4,a=1+(15&t.data[0]);1<t.data.length&&(e=t.data[1],r=2<t.data.length?t.data[2]:void 0);var i={target:this,data:t.data,timestamp:t.timeStamp,channel:a};s===n.MIDI_CHANNEL_MESSAGES.noteoff||s===n.MIDI_CHANNEL_MESSAGES.noteon&&0===r?(i.type="noteoff",i.note={number:e,name:n._notes[e%12],octave:n.getOctave(e)},i.velocity=r/127,i.rawVelocity=r):s===n.MIDI_CHANNEL_MESSAGES.noteon?(i.type="noteon",i.note={number:e,name:n._notes[e%12],octave:n.getOctave(e)},i.velocity=r/127,i.rawVelocity=r):s===n.MIDI_CHANNEL_MESSAGES.keyaftertouch?(i.type="keyaftertouch",i.note={number:e,name:n._notes[e%12],octave:n.getOctave(e)},i.value=r/127):s===n.MIDI_CHANNEL_MESSAGES.controlchange&&0<=e&&e<=119?(i.type="controlchange",i.controller={number:e,name:this.getCcNameByNumber(e)},i.value=r):s===n.MIDI_CHANNEL_MESSAGES.channelmode&&120<=e&&e<=127?(i.type="channelmode",i.controller={number:e,name:this.getChannelModeByNumber(e)},i.value=r):s===n.MIDI_CHANNEL_MESSAGES.programchange?(i.type="programchange",i.value=e):s===n.MIDI_CHANNEL_MESSAGES.channelaftertouch?(i.type="channelaftertouch",i.value=e/127):s===n.MIDI_CHANNEL_MESSAGES.pitchbend?(i.type="pitchbend",i.value=((r<<7)+e-8192)/8192):i.type="unknownchannelmessage",this._userHandlers.channel[i.type]&&this._userHandlers.channel[i.type][a]&&this._userHandlers.channel[i.type][a].forEach((function(t){t(i)}))},r.prototype.getCcNameByNumber=function(t){if(!(0<=(t=Math.floor(t))&&t<=119))throw new RangeError("The control change number must be between 0 and 119.");for(var e in n.MIDI_CONTROL_CHANGE_MESSAGES)if(n.MIDI_CONTROL_CHANGE_MESSAGES.hasOwnProperty(e)&&t===n.MIDI_CONTROL_CHANGE_MESSAGES[e])return e},r.prototype.getChannelModeByNumber=function(t){if(!(120<=(t=Math.floor(t))&&status<=127))throw new RangeError("The control change number must be between 120 and 127.");for(var e in n.MIDI_CHANNEL_MODE_MESSAGES)if(n.MIDI_CHANNEL_MODE_MESSAGES.hasOwnProperty(e)&&t===n.MIDI_CHANNEL_MODE_MESSAGES[e])return e},r.prototype._parseSystemEvent=function(t){var e=t.data[0],r={target:this,data:t.data,timestamp:t.timeStamp};e===n.MIDI_SYSTEM_MESSAGES.sysex?r.type="sysex":e===n.MIDI_SYSTEM_MESSAGES.timecode?r.type="timecode":e===n.MIDI_SYSTEM_MESSAGES.songposition?r.type="songposition":e===n.MIDI_SYSTEM_MESSAGES.songselect?(r.type="songselect",r.song=t.data[1]):e===n.MIDI_SYSTEM_MESSAGES.tuningrequest?r.type="tuningrequest":e===n.MIDI_SYSTEM_MESSAGES.clock?r.type="clock":e===n.MIDI_SYSTEM_MESSAGES.start?r.type="start":e===n.MIDI_SYSTEM_MESSAGES.continue?r.type="continue":e===n.MIDI_SYSTEM_MESSAGES.stop?r.type="stop":e===n.MIDI_SYSTEM_MESSAGES.activesensing?r.type="activesensing":e===n.MIDI_SYSTEM_MESSAGES.reset?r.type="reset":r.type="unknownsystemmessage",this._userHandlers.system[r.type]&&this._userHandlers.system[r.type].forEach((function(t){t(r)}))},s.prototype.send=function(t,e,n){if(!(128<=t&&t<=255))throw new RangeError("The status byte must be an integer between 128 (0x80) and 255 (0xFF).");void 0===e&&(e=[]),Array.isArray(e)||(e=[e]);var r=[];return e.forEach((function(t){var e=Math.floor(t);if(!(0<=e&&e<=255))throw new RangeError("Data bytes must be integers between 0 (0x00) and 255 (0xFF).");r.push(e)})),this._midiOutput.send([t].concat(r),parseFloat(n)||0),this},s.prototype.sendSysex=function(t,e,r){if(!n.sysexEnabled)throw new Error("Sysex message support must first be activated.");return r=r||{},t=[].concat(t),e.forEach((function(t){if(t<0||127<t)throw new RangeError("The data bytes of a sysex message must be integers between 0 (0x00) and 127 (0x7F).")})),e=t.concat(e,n.MIDI_SYSTEM_MESSAGES.sysexend),this.send(n.MIDI_SYSTEM_MESSAGES.sysex,e,this._parseTimeParameter(r.time)),this},s.prototype.sendTimecodeQuarterFrame=function(t,e){return e=e||{},this.send(n.MIDI_SYSTEM_MESSAGES.timecode,t,this._parseTimeParameter(e.time)),this},s.prototype.sendSongPosition=function(t,e){e=e||{};var r=(t=Math.floor(t)||0)>>7&127,s=127&t;return this.send(n.MIDI_SYSTEM_MESSAGES.songposition,[r,s],this._parseTimeParameter(e.time)),this},s.prototype.sendSongSelect=function(t,e){if(e=e||{},!(0<=(t=Math.floor(t))&&t<=127))throw new RangeError("The song number must be between 0 and 127.");return this.send(n.MIDI_SYSTEM_MESSAGES.songselect,[t],this._parseTimeParameter(e.time)),this},s.prototype.sendTuningRequest=function(t){return t=t||{},this.send(n.MIDI_SYSTEM_MESSAGES.tuningrequest,void 0,this._parseTimeParameter(t.time)),this},s.prototype.sendClock=function(t){return t=t||{},this.send(n.MIDI_SYSTEM_MESSAGES.clock,void 0,this._parseTimeParameter(t.time)),this},s.prototype.sendStart=function(t){return t=t||{},this.send(n.MIDI_SYSTEM_MESSAGES.start,void 0,this._parseTimeParameter(t.time)),this},s.prototype.sendContinue=function(t){return t=t||{},this.send(n.MIDI_SYSTEM_MESSAGES.continue,void 0,this._parseTimeParameter(t.time)),this},s.prototype.sendStop=function(t){return t=t||{},this.send(n.MIDI_SYSTEM_MESSAGES.stop,void 0,this._parseTimeParameter(t.time)),this},s.prototype.sendActiveSensing=function(t){return t=t||{},this.send(n.MIDI_SYSTEM_MESSAGES.activesensing,[],this._parseTimeParameter(t.time)),this},s.prototype.sendReset=function(t){return t=t||{},this.send(n.MIDI_SYSTEM_MESSAGES.reset,void 0,this._parseTimeParameter(t.time)),this},s.prototype.stopNote=function(t,e,r){if("all"===t)return this.sendChannelMode("allnotesoff",0,e,r);var s=64;return(r=r||{}).rawVelocity?!isNaN(r.velocity)&&0<=r.velocity&&r.velocity<=127&&(s=r.velocity):!isNaN(r.velocity)&&0<=r.velocity&&r.velocity<=1&&(s=127*r.velocity),this._convertNoteToArray(t).forEach(function(t){n.toMIDIChannels(e).forEach(function(e){this.send((n.MIDI_CHANNEL_MESSAGES.noteoff<<4)+(e-1),[t,Math.round(s)],this._parseTimeParameter(r.time))}.bind(this))}.bind(this)),this},s.prototype.playNote=function(t,e,r){var s,a=64;if((r=r||{}).rawVelocity?!isNaN(r.velocity)&&0<=r.velocity&&r.velocity<=127&&(a=r.velocity):!isNaN(r.velocity)&&0<=r.velocity&&r.velocity<=1&&(a=127*r.velocity),s=this._parseTimeParameter(r.time),this._convertNoteToArray(t).forEach(function(t){n.toMIDIChannels(e).forEach(function(e){this.send((n.MIDI_CHANNEL_MESSAGES.noteon<<4)+(e-1),[t,Math.round(a)],s)}.bind(this))}.bind(this)),!isNaN(r.duration)){r.duration<=0&&(r.duration=0);var i=64;r.rawVelocity?!isNaN(r.release)&&0<=r.release&&r.release<=127&&(i=r.release):!isNaN(r.release)&&0<=r.release&&r.release<=1&&(i=127*r.release),this._convertNoteToArray(t).forEach(function(t){n.toMIDIChannels(e).forEach(function(e){this.send((n.MIDI_CHANNEL_MESSAGES.noteoff<<4)+(e-1),[t,Math.round(i)],(s||n.time)+r.duration)}.bind(this))}.bind(this))}return this},s.prototype.sendKeyAftertouch=function(t,e,r,s){var a=this;if(s=s||{},e<1||16<e)throw new RangeError("The channel must be between 1 and 16.");(isNaN(r)||r<0||1<r)&&(r=.5);var i=Math.round(127*r);return this._convertNoteToArray(t).forEach((function(t){n.toMIDIChannels(e).forEach((function(e){a.send((n.MIDI_CHANNEL_MESSAGES.keyaftertouch<<4)+(e-1),[t,i],a._parseTimeParameter(s.time))}))})),this},s.prototype.sendControlChange=function(t,e,r,s){if(s=s||{},"string"==typeof t){if(void 0===(t=n.MIDI_CONTROL_CHANGE_MESSAGES[t]))throw new TypeError("Invalid controller name.")}else if(!(0<=(t=Math.floor(t))&&t<=119))throw new RangeError("Controller numbers must be between 0 and 119.");if(!(0<=(e=Math.floor(e)||0)&&e<=127))throw new RangeError("Controller value must be between 0 and 127.");return n.toMIDIChannels(r).forEach(function(r){this.send((n.MIDI_CHANNEL_MESSAGES.controlchange<<4)+(r-1),[t,e],this._parseTimeParameter(s.time))}.bind(this)),this},s.prototype._selectRegisteredParameter=function(t,e,r){var s=this;if(t[0]=Math.floor(t[0]),!(0<=t[0]&&t[0]<=127))throw new RangeError("The control65 value must be between 0 and 127");if(t[1]=Math.floor(t[1]),!(0<=t[1]&&t[1]<=127))throw new RangeError("The control64 value must be between 0 and 127");return n.toMIDIChannels(e).forEach((function(){s.sendControlChange(101,t[0],e,{time:r}),s.sendControlChange(100,t[1],e,{time:r})})),this},s.prototype._selectNonRegisteredParameter=function(t,e,r){var s=this;if(t[0]=Math.floor(t[0]),!(0<=t[0]&&t[0]<=127))throw new RangeError("The control63 value must be between 0 and 127");if(t[1]=Math.floor(t[1]),!(0<=t[1]&&t[1]<=127))throw new RangeError("The control62 value must be between 0 and 127");return n.toMIDIChannels(e).forEach((function(){s.sendControlChange(99,t[0],e,{time:r}),s.sendControlChange(98,t[1],e,{time:r})})),this},s.prototype._setCurrentRegisteredParameter=function(t,e,r){var s=this;if((t=[].concat(t))[0]=Math.floor(t[0]),!(0<=t[0]&&t[0]<=127))throw new RangeError("The msb value must be between 0 and 127");return n.toMIDIChannels(e).forEach((function(){s.sendControlChange(6,t[0],e,{time:r})})),t[1]=Math.floor(t[1]),0<=t[1]&&t[1]<=127&&n.toMIDIChannels(e).forEach((function(){s.sendControlChange(38,t[1],e,{time:r})})),this},s.prototype._deselectRegisteredParameter=function(t,e){var r=this;return n.toMIDIChannels(t).forEach((function(){r.sendControlChange(101,127,t,{time:e}),r.sendControlChange(100,127,t,{time:e})})),this},s.prototype.setRegisteredParameter=function(t,e,r,s){var a=this;if(s=s||{},!Array.isArray(t)){if(!n.MIDI_REGISTERED_PARAMETER[t])throw new Error("The specified parameter is not available.");t=n.MIDI_REGISTERED_PARAMETER[t]}return n.toMIDIChannels(r).forEach((function(){a._selectRegisteredParameter(t,r,s.time),a._setCurrentRegisteredParameter(e,r,s.time),a._deselectRegisteredParameter(r,s.time)})),this},s.prototype.setNonRegisteredParameter=function(t,e,r,s){var a=this;if(s=s||{},!(0<=t[0]&&t[0]<=127&&0<=t[1]&&t[1]<=127))throw new Error("Position 0 and 1 of the 2-position parameter array must both be between 0 and 127.");return e=[].concat(e),n.toMIDIChannels(r).forEach((function(){a._selectNonRegisteredParameter(t,r,s.time),a._setCurrentRegisteredParameter(e,r,s.time),a._deselectRegisteredParameter(r,s.time)})),this},s.prototype.incrementRegisteredParameter=function(t,e,r){var s=this;if(r=r||{},!Array.isArray(t)){if(!n.MIDI_REGISTERED_PARAMETER[t])throw new Error("The specified parameter is not available.");t=n.MIDI_REGISTERED_PARAMETER[t]}return n.toMIDIChannels(e).forEach((function(){s._selectRegisteredParameter(t,e,r.time),s.sendControlChange(96,0,e,{time:r.time}),s._deselectRegisteredParameter(e,r.time)})),this},s.prototype.decrementRegisteredParameter=function(t,e,r){if(r=r||{},!Array.isArray(t)){if(!n.MIDI_REGISTERED_PARAMETER[t])throw new TypeError("The specified parameter is not available.");t=n.MIDI_REGISTERED_PARAMETER[t]}return n.toMIDIChannels(e).forEach(function(){this._selectRegisteredParameter(t,e,r.time),this.sendControlChange(97,0,e,{time:r.time}),this._deselectRegisteredParameter(e,r.time)}.bind(this)),this},s.prototype.setPitchBendRange=function(t,e,r,s){var a=this;if(s=s||{},!(0<=(t=Math.floor(t)||0)&&t<=127))throw new RangeError("The semitones value must be between 0 and 127");if(!(0<=(e=Math.floor(e)||0)&&e<=127))throw new RangeError("The cents value must be between 0 and 127");return n.toMIDIChannels(r).forEach((function(){a.setRegisteredParameter("pitchbendrange",[t,e],r,{time:s.time})})),this},s.prototype.setModulationRange=function(t,e,r,s){var a=this;if(s=s||{},!(0<=(t=Math.floor(t)||0)&&t<=127))throw new RangeError("The semitones value must be between 0 and 127");if(!(0<=(e=Math.floor(e)||0)&&e<=127))throw new RangeError("The cents value must be between 0 and 127");return n.toMIDIChannels(r).forEach((function(){a.setRegisteredParameter("modulationrange",[t,e],r,{time:s.time})})),this},s.prototype.setMasterTuning=function(t,e,r){var s=this;if(r=r||{},(t=parseFloat(t)||0)<=-65||64<=t)throw new RangeError("The value must be a decimal number larger than -65 and smaller than 64.");var a=Math.floor(t)+64,i=t-Math.floor(t),o=(i=Math.round((i+1)/2*16383))>>7&127,u=127&i;return n.toMIDIChannels(e).forEach((function(){s.setRegisteredParameter("channelcoarsetuning",a,e,{time:r.time}),s.setRegisteredParameter("channelfinetuning",[o,u],e,{time:r.time})})),this},s.prototype.setTuningProgram=function(t,e,r){var s=this;if(r=r||{},!(0<=(t=Math.floor(t))&&t<=127))throw new RangeError("The program value must be between 0 and 127");return n.toMIDIChannels(e).forEach((function(){s.setRegisteredParameter("tuningprogram",t,e,{time:r.time})})),this},s.prototype.setTuningBank=function(t,e,r){var s=this;if(r=r||{},!(0<=(t=Math.floor(t)||0)&&t<=127))throw new RangeError("The bank value must be between 0 and 127");return n.toMIDIChannels(e).forEach((function(){s.setRegisteredParameter("tuningbank",t,e,{time:r.time})})),this},s.prototype.sendChannelMode=function(t,e,r,s){if(s=s||{},"string"==typeof t){if(!(t=n.MIDI_CHANNEL_MODE_MESSAGES[t]))throw new TypeError("Invalid channel mode message name.")}else if(!(120<=(t=Math.floor(t))&&t<=127))throw new RangeError("Channel mode numerical identifiers must be between 120 and 127.");if((e=Math.floor(e)||0)<0||127<e)throw new RangeError("Value must be an integer between 0 and 127.");return n.toMIDIChannels(r).forEach(function(r){this.send((n.MIDI_CHANNEL_MESSAGES.channelmode<<4)+(r-1),[t,e],this._parseTimeParameter(s.time))}.bind(this)),this},s.prototype.sendProgramChange=function(t,e,r){var s=this;if(r=r||{},t=Math.floor(t),isNaN(t)||t<0||127<t)throw new RangeError("Program numbers must be between 0 and 127.");return n.toMIDIChannels(e).forEach((function(e){s.send((n.MIDI_CHANNEL_MESSAGES.programchange<<4)+(e-1),[t],s._parseTimeParameter(r.time))})),this},s.prototype.sendChannelAftertouch=function(t,e,r){var s=this;r=r||{},t=parseFloat(t),(isNaN(t)||t<0||1<t)&&(t=.5);var a=Math.round(127*t);return n.toMIDIChannels(e).forEach((function(t){s.send((n.MIDI_CHANNEL_MESSAGES.channelaftertouch<<4)+(t-1),[a],s._parseTimeParameter(r.time))})),this},s.prototype.sendPitchBend=function(t,e,r){var s=this;if(r=r||{},isNaN(t)||t<-1||1<t)throw new RangeError("Pitch bend value must be between -1 and 1.");var a=Math.round((t+1)/2*16383),i=a>>7&127,o=127&a;return n.toMIDIChannels(e).forEach((function(t){s.send((n.MIDI_CHANNEL_MESSAGES.pitchbend<<4)+(t-1),[o,i],s._parseTimeParameter(r.time))})),this},s.prototype._parseTimeParameter=function(t){var e,r=parseFloat(t);return"string"==typeof t&&"+"===t.substring(0,1)?r&&0<r&&(e=n.time+r):r>n.time&&(e=r),e},s.prototype._convertNoteToArray=function(t){var e=[];return Array.isArray(t)||(t=[t]),t.forEach((function(t){e.push(n.guessNoteNumber(t))})),e},A$?A$=n:t.WebMidi||(t.WebMidi=n)}(A$);const R$=2*Math.PI;const _$="accordion-mp3\nacoustic_bass-mp3\nacoustic_grand_piano-mp3\nacoustic_guitar_nylon-mp3\nacoustic_guitar_steel-mp3\nagogo-mp3\nalto_sax-mp3\napplause-mp3\nbagpipe-mp3\nbanjo-mp3\nbaritone_sax-mp3\nbassoon-mp3\nbird_tweet-mp3\nblown_bottle-mp3\nbrass_section-mp3\nbreath_noise-mp3\nbright_acoustic_piano-mp3\ncelesta-mp3\ncello-mp3\nchoir_aahs-mp3\nchurch_organ-mp3\nclarinet-mp3\nclavinet-mp3\ncontrabass-mp3\ndistortion_guitar-mp3\ndrawbar_organ-mp3\ndulcimer-mp3\nelectric_bass_finger-mp3\nelectric_bass_pick-mp3\nelectric_grand_piano-mp3\nelectric_guitar_clean-mp3\nelectric_guitar_jazz-mp3\nelectric_guitar_muted-mp3\nelectric_piano_1-mp3\nelectric_piano_2-mp3\nenglish_horn-mp3\nfiddle-mp3\nflute-mp3\nfrench_horn-mp3\nfretless_bass-mp3\nfx_1_rain-mp3\nfx_2_soundtrack-mp3\nfx_3_crystal-mp3\nfx_4_atmosphere-mp3\nfx_5_brightness-mp3\nfx_6_goblins-mp3\nfx_7_echoes-mp3\nfx_8_scifi-mp3\nglockenspiel-mp3\nguitar_fret_noise-mp3\nguitar_harmonics-mp3\ngunshot-mp3\nharmonica-mp3\nharpsichord-mp3\nhelicopter-mp3\nhonkytonk_piano-mp3\nkalimba-mp3\nkoto-mp3\nlead_1_square-mp3\nlead_2_sawtooth-mp3\nlead_3_calliope-mp3\nlead_4_chiff-mp3\nlead_5_charang-mp3\nlead_6_voice-mp3\nlead_7_fifths-mp3\nlead_8_bass__lead-mp3\nmarimba-mp3\nmelodic_tom-mp3\nmusic_box-mp3\nmuted_trumpet-mp3\noboe-mp3\nocarina-mp3\norchestra_hit-mp3\norchestral_harp-mp3\noverdriven_guitar-mp3\npad_1_new_age-mp3\npad_2_warm-mp3\npad_3_polysynth-mp3\npad_4_choir-mp3\npad_5_bowed-mp3\npad_6_metallic-mp3\npad_7_halo-mp3\npad_8_sweep-mp3\npan_flute-mp3\npercussive_organ-mp3\npiccolo-mp3\npizzicato_strings-mp3\nrecorder-mp3\nreed_organ-mp3\nreverse_cymbal-mp3\nrock_organ-mp3\nseashore-mp3\nshakuhachi-mp3\nshamisen-mp3\nshanai-mp3\nsitar-mp3\nslap_bass_1-mp3\nslap_bass_2-mp3\nsoprano_sax-mp3\nsteel_drums-mp3\nstring_ensemble_1-mp3\nstring_ensemble_2-mp3\nsynth_bass_1-mp3\nsynth_bass_2-mp3\nsynth_brass_1-mp3\nsynth_brass_2-mp3\nsynth_choir-mp3\nsynth_drum-mp3\nsynth_strings_1-mp3\nsynth_strings_2-mp3\ntaiko_drum-mp3\ntango_accordion-mp3\ntelephone_ring-mp3\ntenor_sax-mp3\ntimpani-mp3\ntinkle_bell-mp3\ntremolo_strings-mp3\ntrombone-mp3\ntrumpet-mp3\ntuba-mp3\ntubular_bells-mp3\nvibraphone-mp3\nviola-mp3\nviolin-mp3\nvoice_oohs-mp3\nwhistle-mp3\nwoodblock-mp3\nxylophone-mp3".split("\n"),D$=()=>_$[Math.floor(Math.random()*_$.length)];let M$,F$,O$,L$,B$,z$,P$,W$,V$,U$=0,G$=!1,H$=!1;const j$=()=>{const t=requestAnimationFrame(j$);return W$.getByteFrequencyData(O$),t},q$=()=>{const t=B$.gain.value+.1*(U$-B$.gain.value);B$.gain.setValueAtTime(t,M$.currentTime),B$.gain.value===U$||requestAnimationFrame(q$)};const K$=(t="mp3",e=".")=>{const n=["A","Ab","B","Bb","C","D","Db","E","Eb","F","G","Gb"],r=[];for(let s=0;s<n.length;++s){const a=n[s];"A"===a&&r.push(`A0${e}${t}`);for(let n=1;n<8;++n)r.push(`${a}${n}${e}${t}`);"C"===a&&r.push(`C8${e}${t}`)}return r},X$=K$("",""),Y$=(t="alto_sax-mp3",e="./FluidR3_GM")=>{const n=`${e}/${t}`;return K$().map((t=>async function(t){const e=await fetch(t),n=await e.arrayBuffer();return await M$.decodeAudioData(n)}(`${n}/${t}`)))};const J$=async t=>async function(t){return new Promise((async(e,n)=>{t=t||document.createElement("video");const r=await navigator.mediaDevices.getUserMedia({audio:!1,video:{facingMode:"user",width:640,height:640}});t.onloadedmetadata=n=>{t.play(),t.width=t.videoWidth,t.height=t.videoHeight,console.log("Video camera",t),e(r)},t.srcObject=r}))}(t);const Z$=async t=>async function(t){return new Promise((async(e,n)=>{const r=()=>{t.width=t.naturalWidth,t.height=t.naturalHeight};t.naturalWidth>0?(r(),e(t)):(t.onloaded=()=>{r(),e(t)},t.onerror=t=>n(t))}))}(t),Q$=document.querySelector("canvas"),tT=Q$.getContext("2d"),eT=Q$.width,nT=Q$.height;tT.save();const rT=(t,e=4,n="red",r=!0)=>{tT.fillStyle=n,tT.strokeStyle=n,tT.moveTo(t[0][0],t[0][1]),tT.beginPath();for(let n=0,s=t.length;n<s;n++){const s=t[n][0],a=t[n][1];tT.arc(s,a,e,0,R$),r&&tT.lineTo(s,a)}tT.fill(),r&&tT.stroke()},sT=(t,e="blue")=>{tT.fillStyle=e;for(let e=0;e<t.length;e++){const n=t[e][0],r=t[e][1],s=t[e][2],a=1+.8*Math.abs(s);tT.beginPath(),tT.arc(n,r,a,0,R$),tT.fill()}},aT={dots:"red",mouth:"rgba(255,0,0,0.5)",lipsUpperInner:"pink",lipsLowerInner:"pink",midwayBetweenEyes:"blue",leftEyeLower0:"red",rightEyeLower0:"red",leftEyeIris:"yellow",rightEyeIris:"yellow"},iT=(t,e=aT)=>{const{scaledMesh:n,annotations:r}=t,{lipsUpperInner:s,lipsLowerInner:a}=r;rT(s,e.lipsUpperInner),rT(a,e.lipsLowerInner),((t,e,n="yellow")=>{const r=[t,e],s=t[5],a=e[5],i=a[1]-s[1];tT.fillStyle=n,tT.beginPath(),tT.moveTo(t[0][0],t[0][1]);for(let t=0,e=r.length;t<e;t++){const e=r[t];for(let t=0,n=e.length;t<n;t++){const n=e[t][0],r=e[t][1];tT.lineTo(n,r)}}tT.fill(),tT.fillStyle="blue",tT.beginPath(),tT.arc(s[0],s[1],5,0,R$),tT.fill(),tT.beginPath(),tT.arc(a[0],a[1],5,0,R$),tT.fill(),tT.beginPath(),tT.moveTo(s[0],s[1]),tT.strokeStyle="orange",tT.fillStyle="orange",tT.lineTo(a[0],a[1]),tT.stroke(),tT.font="12px Oxanium",tT.textAlign="center",tT.fillText(`${Math.floor(i)}px`,a[0],a[1]-20)})(s,a,e.mouth);const{leftEyeIris:i,rightEyeIris:o}=r;sT(i,e.leftEyeIris),sT(o,e.rightEyeIris);const{leftEyeLower0:u,rightEyeLower0:l,midwayBetweenEyes:c}=r;rT(c,e.midwayBetweenEyes),rT(u,e.leftEyeLower0),rT(l,e.rightEyeLower0)},oT=function(t){return t*t*t};class uT{constructor(t,e,n,r={}){this.name=t,this.counter=0,this.gainNode=e.createGain(),this.gainNode.gain.value=0,this.gainNode.connect(n),this.button=document.getElementById(t),this.button.addEventListener("click",(t=>{this.loadInstrument(D$()),t.preventDefault()})),console.log("Created new person",this,"connecting to",n),this.options=Object.assign({},aT,r)}get instrumentName(){return this.instrument?this.instrument.title:"loading"}update(t){if(this.counter++,!t)return;if(((t,e="brown")=>{const{scaledMesh:n}=t;tT.fillStyle=e;for(let t=0;t<n.length;t++){const e=n[t][0],r=n[t][1],s=n[t][2],a=1+.01*Math.abs(100-s);tT.beginPath(),tT.arc(e,r,a,0,R$),tT.fill()}})(t,options.dots),iT(t,options),this.counter%10==0){const{bottomRight:e,topLeft:n}=t.boundingBox;this.button.style.setProperty("--person-a-x",`calc(${n[0]})`),this.button.style.setProperty("--person-a-y",n[1]),this.button.style.setProperty("--person-a-w",e[0]-n[0]),this.button.style.setProperty("--person-a-h",e[1]-n[1])}const e=t.mouthRange/40,n=Math.abs(t.yaw),r=t.pitch,s=(i=0,(a=e)>(o=1)?o:a<i?i:a);var a,i,o;const u=oT(s);if(this.instrument&&s>.3){const t=Math.floor(n*X$.length),e=this.instrument[X$[t]];((t,e=0,n=z$,r={loop:!1})=>{const s=M$.createBufferSource();s.buffer=t,s.loop=r.loop,s.connect(n),s.onended=()=>{s.disconnect(),H$=!1},"suspended"===M$.state&&M$.resume(),0==e?s.start():s.start(0,M$.currentTime-e),H$=!0})(e,0,this.gainNode);this.midiChannel&&this.midiChannel.playNote(e),this.gainNode.gain.value=u}else this.gainNode.gain.value=0;return{yaw:n,pitch:r,lipPercentage:e}}async loadInstrument(t){this.instrument=await(async(t="alto_sax-mp3",e="./FluidR3_GM",n)=>{const r={title:t},s=await Promise.all(Y$(t,e));return X$.forEach(((t,e)=>{r[t.split(".")[0]]=s[e]})),r})(t)}setMidi(t){this.midi=t}}const lT=document.querySelector("main"),cT=document.querySelector("video"),hT=document.querySelector("img"),pT=document.getElementById("feedback"),dT=(document.getElementById("button-instrument"),[]);let fT,mT,gT,yT,bT=hT;let xT=null;const wT=(t,e=200)=>{xT!=t&&function(t,e){let n;return(...r)=>{clearTimeout(n),n=setTimeout((()=>t(...r)),e)}}((()=>{pT.innerHTML=t,xT=t}),e)()},vT=async()=>{const t=D$();wT(`Loading ${t}`);const e=dT[0];return e&&(await e.loadInstrument(t),wT(`${t} loaded!`)),t};Q$.addEventListener("mousedown",vT),cT.addEventListener("mousedown",vT);lT.classList.add("loading"),wT("Initialising...<br> Please wait"),async function(t){await dr.ready(),wT("Loading Face Landmarks Detection model");const e=await function(t,e){return void 0===t&&(t=Af.mediapipeFacemesh),void 0===e&&(e={}),Yd(this,void 0,void 0,(function(){return Jd(this,(function(n){if(t===Af.mediapipeFacemesh)return[2,Sf(e)];throw new Error(t+" is not a valid package name.")}))}))}(Af.mediapipeFacemesh,t);console.log("Loaded model",e),wT("Loading model");const n=async(t,r)=>{const s=await async function(t){const e=await t.estimateFaces({input:bT});if(e.length>0)for(let t=0,n=e.length;t<n;t++){const n=e[t],{boundingBox:r,mesh:s,scaledMesh:a,annotations:i}=n,{leftEyeIris:o,rightEyeIris:u}=i,{leftEyeLower0:l,rightEyeLower0:c,midwayBetweenEyes:h}=i,p=o[0],d=u[0],f=h[0],m=p[2]<d[2],g=(l[0][0],c[0][0],h[0][0],.5-Math.atan(f[2],-1*f[0])/(2*Math.PI)),y=.5-Math.asin(f[1])/Math.PI,b=1;n.pitch=y,n.roll=b,n.yaw=g;const{rightCheek:x,leftCheek:w,silhouette:v}=i;rT(v,5,"rgba(255,255,0,0.5)",!0),n.lookingRight=m;const{lipsUpperInner:I,lipsLowerInner:k}=i,N=I[5],S=k[5][1]-N[1];n.mouthRange=S,n.happiness=0}return e}(e);if(s.length>0){s[0];tT.drawImage(bT,0,0),((t,e)=>{const n=eT/e*2;let r,s=0;for(var a=0;a<e;a++)r=t[a],tT.fillStyle="hsla("+r/nT*360+",50%,50%,0.8)",tT.fillRect(s,nT-r,n,r),s+=n+1})(O$,F$),r&&r(s)}else r&&r(null);t&&requestAnimationFrame((()=>n(t,r)))};return n}({maxFaces:1,shouldLoadIrisModel:!0}).then((async t=>{try{wT("Attempting to locate camera..."),fT=await J$(cT),wT("Camera located!",0),lT.style.setProperty("--width",cT.width),lT.style.setProperty("--height",cT.height),mT=await Z$(hT),wT("Image downloaded...<br> Please wait"),M$=new(window.AudioContext||window.webkitAudioContext),B$=M$.createGain(),B$.gain.value=0,L$=M$.createOscillator(),L$.type="sine",V$=M$.createDynamicsCompressor(),z$=M$.createDelay(100),P$=M$.createGain(),z$.delayTime.value=.01,P$.gain.value=.1,W$=M$.createAnalyser(),W$.minDecibels=-90,W$.maxDecibels=-10,W$.smoothingTimeConstant=.85,W$.fftSize=2048,F$=W$.fftSize,W$.fftSize=256,F$=W$.frequencyBinCount,O$=new Uint8Array(F$),L$.frequency.value=261.63,L$.connect(z$),z$.connect(P$),P$.connect(z$),z$.connect(B$),B$.connect(V$),V$.connect(W$),W$.connect(M$.destination),gT=z$,wT("Audio Available...<br>Instrument undefined Sounds downloaded",0);const t=await vT();wT(t+" Samples available...<br>Instrument Sounds downloaded"),await void 0,wT("MIDI Available?<br>Stand By",0)}catch(t){console.error("Bummer",t),wT("Something went wrong :(<br>"+t)}bT=cT,Q$.width=bT.width,Q$.height=bT.height,lT.classList.add(bT.nodeName.toLowerCase()),lT.classList.remove("loading"),wT("Open your mouth to begin!");let e=0;U$=1,q$(),t(bT===cT,(t=>{let n="";if(e++,t){const e=0,r=t[e],s=(t=>{if(null==dT[t]){const t=new uT("person-a",M$,gT,{dots:"green",leftEyeIris:"blue",rightEyeIris:"blue"});return t.loadInstrument(D$()),dT.push(t),t}return dT[t]})(e);if(!(r&&r.faceInViewConfidence>.9))return G$&&(G$=!1,L$.disconnect()),wT("I need to see your face!"),void lT.classList.toggle("active",!1);lT.classList.toggle("active",!0),!G$&&("suspended"===M$.state&&M$.resume(),L$.connect(z$),G$=!0,j$());const{yaw:a,pitch:i,lipPercentage:o}=s.update(r);n+=`<br>PITCH:${Math.ceil(360*r.pitch)} ROLL:${Math.ceil(360*r.roll)} YAW:${Math.ceil(360*r.yaw)} MOUTH:${Math.ceil(100*o)}% - ${s.instrumentName}`}wT(e<50?"Smile to begin!":e<150?"Look at the screen and open your mouth!":e<250?"Click your face to change instruments!":n)}))}));var IT,kT=(IT=A$)&&IT.__esModule?IT.default:IT;kT.enable((t=>{t?console.log("WebMidi could not be enabled.",t):console.log("WebMidi enabled!"),console.log(kT.inputs),console.log(kT.outputs),kT.addListener("connected",(function(t){console.log(t)})),kT.addListener("disconnected",(function(t){console.log(t)})),console.log(kT.time),yT=kT.getOutputById("123456789"),yT=kT.getOutputByName("Axiom Pro 25 Ext Out"),yT=kT.outputs[0]}));const NT=`<select>${_$.map((t=>`<option value="${t}">${t}</option>`)).join("")}</select>`;document.documentElement.appendChild(document.createDocumentFragment(NT))}();
//# sourceMappingURL=index.33b13dc0.js.map
