function t(t,e,n){Object.defineProperty(t,e,{get:n,enumerable:!0})}var e="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class n{constructor(t,e){this.backend=t,this.dataMover=e,this.data=new WeakMap,this.dataIdsCount=0}get(t){return this.data.has(t)||this.dataMover.moveData(this.backend,t),this.data.get(t)}set(t,e){this.dataIdsCount++,this.data.set(t,e)}has(t){return this.data.has(t)}delete(t){return this.dataIdsCount--,this.data.delete(t)}numDataIds(){return this.dataIdsCount}}class r{time(t){return s("time")}read(t){return s("read")}readSync(t){return s("readSync")}numDataIds(){return s("numDataIds")}disposeData(t){return s("disposeData")}write(t,e,n){return s("write")}move(t,e,n,r){return s("move")}memory(){return s("memory")}floatPrecision(){return s("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}batchMatMul(t,e,n,r){return s("batchMatMul")}fusedBatchMatMul({a:t,b:e,transposeA:n,transposeB:r,bias:a,activation:i,preluActivationWeights:o}){return s("fusedBatchMatMul")}slice(t,e,n){return s("slice")}stridedSlice(t,e,n,r){return s("stridedSlice")}unstack(t,e){return s("unstack")}reverse(t,e){return s("reverse")}concat(t,e){return s("concat")}neg(t){return s("neg")}add(t,e){return s("add")}addN(t){return s("addN")}subtract(t,e){return s("subtract")}multiply(t,e){return s("multiply")}realDivide(t,e){return s("realDivide")}floorDiv(t,e){return s("floorDiv")}sum(t,e){return s("sum")}prod(t,e){return s("prod")}unsortedSegmentSum(t,e,n){return s("unsortedSegmentSum")}argMin(t,e){return s("argMin")}argMax(t,e){return s("argMax")}equal(t,e){return s("equal")}notEqual(t,e){return s("notEqual")}less(t,e){return s("less")}lessEqual(t,e){return s("lessEqual")}greater(t,e){return s("greater")}greaterEqual(t,e){return s("greaterEqual")}logicalNot(t){return s("logicalNot")}logicalAnd(t,e){return s("logicalAnd")}logicalOr(t,e){return s("logicalOr")}where(t){return s("where")}select(t,e,n){return s("select")}topk(t,e,n){return s("topk")}min(t,e){return s("min")}minimum(t,e){return s("minimum")}mod(t,e){return s("mod")}max(t,e){return s("max")}maximum(t,e){return s("maximum")}all(t,e){return s("all")}any(t,e){return s("any")}squaredDifference(t,e){return s("squaredDifference")}ceil(t){return s("ceil")}floor(t){return s("floor")}round(t){return s("round")}sign(t){return s("sign")}isNaN(t){return s("isNaN")}isInf(t){return s("isInf")}isFinite(t){return s("isFinite")}pow(t,e){return s("pow")}exp(t){return s("exp")}expm1(t){return s("expm1")}softmax(t,e){return s("softmax")}log(t){return s("log")}log1p(t){return s("log1p")}sqrt(t){return s("sqrt")}rsqrt(t){return s("rsqrt")}square(t){return s("square")}reciprocal(t){return s("reciprocal")}relu(t){return s("relu")}relu6(t){return s("relu6")}prelu(t,e){return s("prelu")}elu(t){return s("elu")}eluDer(t,e){return s("eluDer")}selu(t){return s("selu")}int(t){return s("int")}clip(t,e,n){return s("clip")}abs(t){return s("abs")}complexAbs(t){return s("complexAbs")}sigmoid(t){return s("sigmoid")}softplus(t){return s("softplus")}sin(t){return s("sin")}cos(t){return s("cos")}tan(t){return s("tan")}asin(t){return s("asin")}acos(t){return s("acos")}atan(t){return s("atan")}atan2(t,e){return s("atan2")}sinh(t){return s("sinh")}cosh(t){return s("cosh")}tanh(t){return s("tanh")}asinh(t){return s("asinh")}acosh(t){return s("acosh")}atanh(t){return s("atanh")}erf(t){return s("erf")}step(t,e){return s("step")}fusedConv2d({input:t,filter:e,convInfo:n,bias:r,activation:a,preluActivationWeights:i}){return s("fusedConv2d")}conv2d(t,e,n){return s("conv2d")}conv2dDerInput(t,e,n){return s("conv2dDerInput")}conv2dDerFilter(t,e,n){return s("conv2dDerFilter")}fusedDepthwiseConv2D({input:t,filter:e,convInfo:n,bias:r,activation:a,preluActivationWeights:i}){return s("fusedDepthwiseConv2D")}depthwiseConv2D(t,e,n){return s("depthwiseConv2D")}depthwiseConv2DDerInput(t,e,n){return s("depthwiseConv2DDerInput")}depthwiseConv2DDerFilter(t,e,n){return s("depthwiseConv2DDerFilter")}conv3d(t,e,n){return s("conv3d")}conv3dDerInput(t,e,n){return s("conv3dDerInput")}conv3dDerFilter(t,e,n){return s("conv3dDerFilter")}maxPool(t,e){return s("maxPool")}maxPoolBackprop(t,e,n,r){return s("maxPoolBackprop")}avgPool(t,e){return s("avgPool")}avgPoolBackprop(t,e,n){return s("avgPoolBackprop")}avgPool3d(t,e){return s("avgPool3d")}avgPool3dBackprop(t,e,n){return s("avgPool3dBackprop")}maxPool3d(t,e){return s("maxPool3d")}maxPool3dBackprop(t,e,n,r){return s("maxPool3dBackprop")}reshape(t,e){return s("reshape")}cast(t,e){return s("cast")}tile(t,e){return s("tile")}pad(t,e,n){return s("pad")}transpose(t,e){return s("transpose")}gather(t,e,n){return s("gather")}gatherND(t,e){return s("gatherND")}scatterND(t,e,n){return s("scatterND")}batchToSpaceND(t,e,n){return s("batchToSpaceND")}spaceToBatchND(t,e,n){return s("spaceToBatchND")}resizeBilinear(t,e,n,r){return s("resizeBilinear")}resizeBilinearBackprop(t,e,n){return s("resizeBilinearBackprop")}resizeNearestNeighbor(t,e,n,r){return s("resizeNearestNeighbor")}resizeNearestNeighborBackprop(t,e,n){return s("resizeNearestNeighborBackprop")}batchNorm(t,e,n,r,a,i){return s("batchNorm")}localResponseNormalization4D(t,e,n,r,a){return s("localResponseNormalization4D")}LRNGrad(t,e,n,r,a,i,o){return s("LRNGrad")}multinomial(t,e,n,r){return s("multinomial")}oneHot(t,e,n,r){return s("oneHot")}cumsum(t,e,n,r){return s("cumsum")}nonMaxSuppression(t,e,n,r,a){return s("nonMaxSuppression")}fft(t){return s("fft")}ifft(t){return s("ifft")}complex(t,e){return s("complex")}real(t){return s("real")}imag(t){return s("imag")}cropAndResize(t,e,n,r,a,i){return s("cropAndResize")}depthToSpace(t,e,n){return s("depthToSpace")}split(t,e,n){return s("split")}sparseToDense(t,e,n,r){return s("sparseToDense")}diag(t){return s("diag")}fill(t,e,n){return s("fill")}onesLike(t){return s("onesLike")}zerosLike(t){return s("zerosLike")}linspace(t,e,n){return s("linspace")}dispose(){return s("dispose")}}function s(t){throw new Error(`'${t}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function a(t){let e=t.length,n=0,r=0;for(;e>0;)r=Math.random()*e|0,e--,n=t[e],t[e]=t[r],t[r]=n}function i(t,e,n){return Math.max(t,Math.min(e,n))}function o(t){return t%2==0?t:t+1}function u(t,e){if(!t)throw new Error("string"==typeof e?e:e())}function l(t,e,n=""){u(d(t,e),(()=>n+` Shapes ${t} and ${e} must match`))}function c(t){u(null!=t,(()=>"The input to the tensor constructor must be a non-null value."))}function h(t,e=[],n=!1){if(null==e&&(e=[]),Array.isArray(t)||N(t)&&!n)for(let r=0;r<t.length;++r)h(t[r],e,n);else e.push(t);return e}function p(t){if(0===t.length)return 1;let e=t[0];for(let n=1;n<t.length;n++)e*=t[n];return e}function d(t,e){if(t===e)return!0;if(null==t||null==e)return!1;if(t.length!==e.length)return!1;for(let n=0;n<t.length;n++)if(t[n]!==e[n])return!1;return!0}function f(t){return t%1==0}function m(t){const e=Math.ceil(Math.sqrt(t));return[e,Math.ceil(t/e)]}function g(t,e){return e<=t.length?t:t+" ".repeat(e-t.length)}function y(t,e=(t=>0),n){return new Promise(((r,s)=>{let a=0;const i=()=>{if(t())return void r();a++;const o=e(a);null!=n&&a>=n?s():setTimeout(i,o)};i()}))}function b(t,e){let n=1,r=-1;for(let e=0;e<t.length;++e)if(t[e]>=0)n*=t[e];else if(-1===t[e]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${e}`);r=e}else if(t[e]<0)throw Error(`Shapes can not be < 0. Found ${t[e]} at dim ${e}`);if(-1===r){if(e>0&&e!==n)throw Error(`Size(${e}) must match the product of shape ${t}`);return t}if(0===n)throw Error(`Cannot infer the missing size in [${t}] when there are 0 elements`);if(e%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${n}`);const s=t.slice();return s[r]=e/n,s}function x(t,e){const n=e.length;return u((t=null==t?e.map(((t,e)=>e)):[].concat(t)).every((t=>t>=-n&&t<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${t}`)),u(t.every((t=>f(t))),(()=>`All values in axis param must be integers but got axis ${t}`)),t.map((t=>t<0?n+t:t))}function w(t,e){const n=[],r=[],s=null!=e&&Array.isArray(e)&&0===e.length,a=null==e||s?null:x(e,t).sort();let i=0;for(let e=0;e<t.length;++e){if(null!=a){if(a[i]===e&&1!==t[e])throw new Error(`Can't squeeze axis ${e} since its dim '${t[e]}' is not 1`);(null==a[i]||a[i]>e)&&1===t[e]&&(n.push(t[e]),r.push(e)),a[i]<=e&&i++}1!==t[e]&&(n.push(t[e]),r.push(e))}return{newShape:n,keptDims:r}}function v(t,e){let n=null;if(null==t||"float32"===t)n=new Float32Array(e);else if("int32"===t)n=new Int32Array(e);else{if("bool"!==t)throw new Error(`Unknown data type ${t}`);n=new Uint8Array(e)}return n}function I(t,e){let n=null;if(null==t||"float32"===t)n=new Float32Array(e);else if("int32"===t)n=new Int32Array(e);else if("bool"===t)n=new Uint8Array(e);else{if("string"!==t)throw new Error(`Unknown data type ${t}`);n=new Array(e)}return n}function k(t,e){return"complex64"!==e&&(("float32"!==e||"complex64"===t)&&(("int32"!==e||"float32"===t||"complex64"===t)&&("bool"!==e||"bool"!==t)))}function N(t){return t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array}function S(t){if("float32"===t||"int32"===t)return 4;if("complex64"===t)return 8;if("bool"===t)return 1;throw new Error(`Unknown dtype ${t}`)}function C(t){return"string"==typeof t||t instanceof String}function E(t){return"number"==typeof t}function T(t){return Array.isArray(t)?T(t[0]):t instanceof Float32Array?"float32":t instanceof Int32Array||t instanceof Uint8Array?"int32":E(t)?"float32":C(t)?"string":"boolean"==typeof t?"bool":"float32"}function _(t){return!!(t&&t.constructor&&t.call&&t.apply)}function $(t,e){for(let n=e;n<t;++n)if(t%n==0)return n;return t}function A(t){const e=t.length;if(e<2)return[];const n=new Array(e-1);n[e-2]=t[e-1];for(let r=e-3;r>=0;--r)n[r]=n[r+1]*t[r+1];return n}function R(t,e,n){const r=new Array;if(1===e.length){const s=e[0];for(let e=0;e<s;e++)r[e]=n[t+e]}else{const s=e[0],a=e.slice(1),i=a.reduce(((t,e)=>t*e));for(let e=0;e<s;e++)r[e]=R(t+e*i,a,n)}return r}function M(t,e){if(0===t.length)return e[0];const n=t.reduce(((t,e)=>t*e));if(0===n)return[];if(n!==e.length)throw new Error(`[${t}] does not match the input size ${e.length}.`);return R(0,t,e)}function D(t,e){const n=O(t,e);for(let t=0;t<n.length;t++)n[t]=1;return n}function O(t,e){if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e)return new Uint8Array(t);throw new Error(`Unknown data type ${e}`)}function F(t,e){const n=t.reduce(((t,e)=>t*e),1);if(null==e||"float32"===e)return M(t,new Float32Array(n));if("int32"===e)return M(t,new Int32Array(n));if("bool"===e)return M(t,new Uint8Array(n));throw new Error(`Unknown data type ${e}`)}function L(t){t.forEach((e=>{u(Number.isInteger(e)&&e>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${t}].`))}))}function B(t,e,n){if(0===e)return 0;if(1===e)return t[0];let r=t[t.length-1];for(let e=0;e<t.length-1;++e)r+=n[e]*t[e];return r}function z(t,e,n){if(0===e)return[];if(1===e)return[t];const r=new Array(e);for(let e=0;e<r.length-1;++e)r[e]=Math.floor(t/n[e]),t-=r[e]*n[e];return r[r.length-1]=t,r}function P(t){return t&&t.then&&"function"==typeof t.then}class V{constructor(t){this.global=t,this.flags={},this.flagRegistry={},this.urlFlags={},this.populateURLFlags()}setPlatform(t,e){null!=this.platform&&console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`),this.platformName=t,this.platform=e}registerFlag(t,e,n){if(this.flagRegistry[t]={evaluationFn:e,setHook:n},null!=this.urlFlags[t]){const e=this.urlFlags[t];console.warn(`Setting feature override from URL ${t}: ${e}.`),this.set(t,e)}}async getAsync(t){return t in this.flags||(this.flags[t]=await this.evaluateFlag(t)),this.flags[t]}get(t){if(t in this.flags)return this.flags[t];const e=this.evaluateFlag(t);if(P(e))throw new Error(`Flag ${t} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[t]=e,this.flags[t]}getNumber(t){return this.get(t)}getBool(t){return this.get(t)}getFlags(){return this.flags}get features(){return this.flags}set(t,e){if(null==this.flagRegistry[t])throw new Error(`Cannot set flag ${t} as it has not been registered.`);this.flags[t]=e,null!=this.flagRegistry[t].setHook&&this.flagRegistry[t].setHook(e)}evaluateFlag(t){if(null==this.flagRegistry[t])throw new Error(`Cannot evaluate flag '${t}': no evaluation function found.`);return this.flagRegistry[t].evaluationFn()}setFlags(t){this.flags=Object.assign({},t)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const t=function(t){const e={};return t.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((t,...n)=>(function(t,e,n){t[decodeURIComponent(e)]=decodeURIComponent(n||"")}(e,n[0],n[1]),n.join("=")))),e}(this.global.location.search);if("tfjsflags"in t){t.tfjsflags.split(",").forEach((t=>{const[e,n]=t.split(":");this.urlFlags[e]=function(t,e){if("true"===(e=e.toLowerCase())||"false"===e)return"true"===e;if(""+ +e===e)return+e;throw new Error(`Could not parse value flag value ${e} for flag ${t}.`)}(e,n)}))}}}function W(){return U}let U=null;var G,H,j,q,K,X,Y,J,Z=!1;function Q(){throw new Error("setTimeout has not been defined")}function tt(){throw new Error("clearTimeout has not been defined")}function et(t){if(j===setTimeout)return setTimeout(t,0);if((j===Q||!j)&&setTimeout)return j=setTimeout,setTimeout(t,0);try{return j(t,0)}catch(e){try{return j.call(null,t,0)}catch(e){return j.call(this,t,0)}}}function nt(){X&&Y&&(X=!1,Y.length?K=Y.concat(K):J=-1,K.length&&rt())}function rt(){if(!X){var t=et(nt);X=!0;for(var e=K.length;e;){for(Y=K,K=[];++J<e;)Y&&Y[J].run();J=-1,e=K.length}Y=null,X=!1,function(t){if(q===clearTimeout)return clearTimeout(t);if((q===tt||!q)&&clearTimeout)return q=clearTimeout,clearTimeout(t);try{q(t)}catch(e){try{return q.call(null,t)}catch(e){return q.call(this,t)}}}(t)}}function st(t,e){this.fun=t,this.array=e}function at(){}function it(){return Z||(Z=!0,G={},H=G={},function(){try{j="function"==typeof setTimeout?setTimeout:Q}catch(t){j=Q}try{q="function"==typeof clearTimeout?clearTimeout:tt}catch(t){q=tt}}(),K=[],X=!1,J=-1,H.nextTick=function(t){var e=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)e[n-1]=arguments[n];K.push(new st(t,e)),1!==K.length||X||et(rt)},st.prototype.run=function(){this.fun.apply(null,this.array)},H.title="browser",H.browser=!0,H.env={},H.argv=[],H.version="",H.versions={},H.on=at,H.addListener=at,H.once=at,H.off=at,H.removeListener=at,H.removeAllListeners=at,H.emit=at,H.prependListener=at,H.prependOnceListener=at,H.listeners=function(t){return[]},H.binding=function(t){throw new Error("process.binding is not supported")},H.cwd=function(){return"/"},H.chdir=function(t){throw new Error("process.chdir is not supported")},H.umask=function(){return 0}),G}var ot=it();let ut;function lt(){if(null==ut){let t;if("undefined"!=typeof window)t=window;else if(void 0!==e)t=e;else if(void 0!==ot)t=ot;else{if("undefined"==typeof self)throw new Error("Could not find a global object");t=self}ut=t}return ut}function ct(t,e){const n=function(){const t=lt();return null==t._tfGlobals&&(t._tfGlobals=new Map),t._tfGlobals}();if(n.has(t))return n.get(t);{const r=e();return n.set(t,r),n.get(t)}}const ht=ct("kernelRegistry",(()=>new Map)),pt=ct("gradRegistry",(()=>new Map));function dt(t,e){const n=bt(t,e);return ht.get(n)}function ft(t){return pt.get(t)}function mt(t){const e=ht.entries(),n=[];for(;;){const{done:r,value:s}=e.next();if(r)break;const[a,i]=s,[o]=a.split("_");o===t&&n.push(i)}return n}function gt(t){const{kernelName:e,backendName:n}=t,r=bt(e,n);ht.has(r)&&console.warn(`The kernel '${e}' for backend '${n}' is already registered`),ht.set(r,t)}function yt(t){const{kernelName:e}=t;pt.has(e)&&W().getBool("DEBUG")&&console.warn(`Overriding the gradient for '${e}'`),pt.set(e,t)}function bt(t,e){return`${e}_${t}`}function xt(t,e){if("string"===e)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(t)&&(t=h(t)),W().getBool("DEBUG")&&function(t,e){for(let n=0;n<t.length;n++){const r=t[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${e} being uploaded contains ${r}.`)}}(t,e),function(t,e){return t instanceof Float32Array&&"float32"===e||t instanceof Int32Array&&"int32"===e||t instanceof Uint8Array&&"bool"===e}(t,e))return t;if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e){const e=new Uint8Array(t.length);for(let n=0;n<e.length;++n)0!==Math.round(t[n])&&(e[n]=1);return e}throw new Error(`Unknown data type ${e}`)}function wt(){return W().platform.now()}function vt(t,e="utf-8"){return e=e||"utf-8",W().platform.encode(t,e)}function It(t,e="utf-8"){return e=e||"utf-8",W().platform.decode(t,e)}class kt{constructor(t,e){this.backendTimer=t,this.logger=e,null==e&&(this.logger=new St)}profileKernel(t,e,n){let r;const s=this.backendTimer.time((()=>{r=n()}));for(let e=0;e<r.length;e++){const n=r[e];n.data().then((e=>{Nt(e,n.dtype,t)}))}return{kernelName:t,outputs:r,inputs:e,timeMs:s.then((t=>t.kernelMs)),extraInfo:s.then((t=>null!=t.getExtraProfileInfo?t.getExtraProfileInfo():""))}}logKernelProfile(t){const{kernelName:e,outputs:n,timeMs:r,inputs:s,extraInfo:a}=t;n.forEach((t=>{Promise.all([t.data(),r,a]).then((n=>{this.logger.logKernelProfile(e,t,n[0],n[1],s,n[2])}))}))}}function Nt(t,e,n){if("float32"!==e)return!1;for(let e=0;e<t.length;e++){const r=t[e];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}class St{logKernelProfile(t,e,n,r,s,a){const i="number"==typeof r?g(`${r}ms`,9):r.error,o=g(t,25),u=e.rank,l=e.size,c=g(e.shape.toString(),14);let h="";for(const t in s){const n=s[t];if(null!=n){const r=n.shape||e.shape,s=r.length;h+=`${t}: ${s}D ${s>0?r:""} `}}console.log(`%c${o}\t%c${i}\t%c${u}D ${c}\t%c${l}\t%c${h}\t%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function Ct(t,e,n,r){const s=A(e),a=function(t,e,n,r){const s=p(e),a=r[r.length-1],i=new Array(a).fill(0),o=e.length,u="complex64"===n?$t(t):t;if(o>1)for(let t=0;t<s/a;t++){const e=t*a;for(let t=0;t<a;t++)i[t]=Math.max(i[t],Et(u[e+t],0,n).length)}return i}(t,e,n,s),i=e.length,o=_t(t,e,n,s,a),u=["Tensor"];return r&&(u.push(`  dtype: ${n}`),u.push(`  rank: ${i}`),u.push(`  shape: [${e}]`),u.push("  values:")),u.push(o.map((t=>"    "+t)).join("\n")),u.join("\n")}function Et(t,e,n){let r;return r=Array.isArray(t)?`${parseFloat(t[0].toFixed(7))} + ${parseFloat(t[1].toFixed(7))}j`:C(t)?`'${t}'`:"bool"===n?Tt(t):parseFloat(t.toFixed(7)).toString(),g(r,e)}function Tt(t){return 0===t?"false":"true"}function _t(t,e,n,r,s,a=!0){const i="complex64"===n?2:1,o=e[0],u=e.length;if(0===u){if("complex64"===n){return[Et($t(t)[0],0,n)]}return"bool"===n?[Tt(t[0])]:[t[0].toString()]}if(1===u){if(o>20){const e=3*i;let r=Array.from(t.slice(0,e)),a=Array.from(t.slice((o-3)*i,o*i));return"complex64"===n&&(r=$t(r),a=$t(a)),["["+r.map(((t,e)=>Et(t,s[e],n))).join(", ")+", ..., "+a.map(((t,e)=>Et(t,s[o-3+e],n))).join(", ")+"]"]}return["["+("complex64"===n?$t(t):Array.from(t)).map(((t,e)=>Et(t,s[e],n))).join(", ")+"]"]}const l=e.slice(1),c=r.slice(1),h=r[0]*i,p=[];if(o>20){for(let e=0;e<3;e++){const r=e*h,a=r+h;p.push(..._t(t.slice(r,a),l,n,c,s,!1))}p.push("...");for(let e=o-3;e<o;e++){const r=e*h,a=r+h;p.push(..._t(t.slice(r,a),l,n,c,s,e===o-1))}}else for(let e=0;e<o;e++){const r=e*h,a=r+h;p.push(..._t(t.slice(r,a),l,n,c,s,e===o-1))}const d=2===u?",":"";p[0]="["+p[0]+d;for(let t=1;t<p.length-1;t++)p[t]=" "+p[t]+d;let f=",\n";for(let t=2;t<u;t++)f+="\n";return p[p.length-1]=" "+p[p.length-1]+"]"+(a?"":f),p}function $t(t){const e=[];for(let n=0;n<t.length;n+=2)e.push([t[n],t[n+1]]);return e}class At{constructor(t,e,n){if(this.dtype=e,this.shape=t.slice(),this.size=p(t),null!=n){const t=n.length;u(t===this.size,(()=>`Length of values '${t}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===e)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||I(e,this.size),this.strides=A(t)}set(t,...e){0===e.length&&(e=[0]),u(e.length===this.rank,(()=>`The number of provided coordinates (${e.length}) must match the rank (${this.rank})`));const n=this.locToIndex(e);this.values[n]=t}get(...t){0===t.length&&(t=[0]);let e=0;for(const n of t){if(n<0||n>=this.shape[e]){const e=`Requested out of range element at ${t}.   Buffer shape=${this.shape}`;throw new Error(e)}e++}let n=t[t.length-1];for(let e=0;e<t.length-1;++e)n+=this.strides[e]*t[e];return this.values[n]}locToIndex(t){if(0===this.rank)return 0;if(1===this.rank)return t[0];let e=t[t.length-1];for(let n=0;n<t.length-1;++n)e+=this.strides[n]*t[n];return e}indexToLoc(t){if(0===this.rank)return[];if(1===this.rank)return[t];const e=new Array(this.shape.length);for(let n=0;n<e.length-1;++n)e[n]=Math.floor(t/this.strides[n]),t-=e[n]*this.strides[n];return e[e.length-1]=t,e}get rank(){return this.shape.length}toTensor(){return Rt().makeTensor(this.values,this.shape,this.dtype)}}let Rt=null,Mt=null,Dt=null;class Ot{constructor(t,e,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=t.slice(),this.dtype=e||"float32",this.size=p(t),this.strides=A(t),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const t=await this.data();return Mt.buffer(this.shape,this.dtype,t)}bufferSync(){return Mt.buffer(this.shape,this.dtype,this.dataSync())}async array(){const t=await this.data();return M(this.shape,t)}arraySync(){return M(this.shape,this.dataSync())}async data(){this.throwIfDisposed();const t=Rt().read(this.dataId);if("string"===this.dtype){const e=await t;try{return e.map((t=>It(t)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return t}dataSync(){this.throwIfDisposed();const t=Rt().readSync(this.dataId);if("string"===this.dtype)try{return t.map((t=>It(t)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return t}async bytes(){this.throwIfDisposed();const t=await Rt().read(this.dataId);return"string"===this.dtype?t:new Uint8Array(t.buffer)}dispose(){this.isDisposed||(Rt().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(t=!1){return Mt.print(this,t)}clone(){return this.throwIfDisposed(),Mt.clone(this)}toString(t=!1){return Ct(this.dataSync(),this.shape,this.dtype,t)}cast(t){return this.throwIfDisposed(),Mt.cast(this,t)}variable(t=!0,e,n){return this.throwIfDisposed(),Rt().makeVariable(this,t,e,n)}}Object.defineProperty(Ot,Symbol.hasInstance,{value:t=>!!t&&null!=t.data&&null!=t.dataSync&&null!=t.throwIfDisposed});class Ft extends Ot{constructor(t,e,n,r){super(t.shape,t.dtype,t.dataId,r),this.trainable=e,this.name=n}assign(t){if(t.dtype!==this.dtype)throw new Error(`dtype of the new value (${t.dtype}) and previous value (${this.dtype}) must match`);if(!d(t.shape,this.shape))throw new Error(`shape of the new value (${t.shape}) and previous value (${this.shape}) must match`);Rt().disposeTensor(this),this.dataId=t.dataId,Rt().incRef(this,null)}dispose(){Rt().disposeVariable(this),this.isDisposedInternal=!0}}var Lt,Bt,zt,Pt,Vt,Wt,Ut,Gt,Ht,jt;Object.defineProperty(Ft,Symbol.hasInstance,{value:t=>t instanceof Ot&&null!=t.assign&&t.assign instanceof Function}),(Bt=Lt||(Lt={})).R0="R0",Bt.R1="R1",Bt.R2="R2",Bt.R3="R3",Bt.R4="R4",Bt.R5="R5",Bt.R6="R6",(Pt=zt||(zt={})).float32="float32",Pt.int32="int32",Pt.bool="int32",Pt.complex64="complex64",(Wt=Vt||(Vt={})).float32="float32",Wt.int32="int32",Wt.bool="bool",Wt.complex64="complex64",(Gt=Ut||(Ut={})).float32="float32",Gt.int32="float32",Gt.bool="float32",Gt.complex64="complex64",(jt=Ht||(Ht={})).float32="complex64",jt.int32="complex64",jt.bool="complex64",jt.complex64="complex64";const qt={float32:Ut,int32:zt,bool:Vt,complex64:Ht};function Kt(t,e){if("string"===t||"string"===e){if("string"===t&&"string"===e)return"string";throw new Error(`Can not upcast ${t} with ${e}`)}return qt[t][e]}function Xt(t){return Kt(t,"int32")}function Yt(t,e){if(t.dtype===e.dtype)return[t,e];const n=Kt(t.dtype,e.dtype);return[t.cast(n),e.cast(n)]}function Jt(t,e){return e.some((e=>e.id===t.id))}function Zt(t){const e=[];return Qt(t,e,new Set),e}function Qt(t,e,n){if(null==t)return;if(t instanceof Ot)return void e.push(t);if(r=t,!Array.isArray(r)&&"object"!=typeof r)return;var r;const s=t;for(const t in s){const r=s[t];n.has(r)||(n.add(r),Qt(r,e,n))}}class te{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null}}dispose(){for(const t in this.registeredVariables)this.registeredVariables[t].dispose()}}class ee{constructor(t){this.ENV=t,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new te}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:t,asyncInit:e}=this.initializeBackendsAndReturnBest();if(e)throw new Error(`The highest priority backend '${t}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(t)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(t){if(!(t in this.registry)){if(!(t in this.registryFactory))return null;{const{asyncInit:e}=this.initializeBackend(t);if(e)return null}}return this.registry[t]}findBackendFactory(t){return t in this.registryFactory?this.registryFactory[t].factory:null}registerBackend(t,e,n=1){return t in this.registryFactory?(console.warn(`${t} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[t]={factory:e,priority:n},!0)}async setBackend(t){if(null==this.registryFactory[t])throw new Error(`Backend name '${t}' not found in registry`);if(this.backendName=t,null==this.registry[t]){this.backendInstance=null;const{success:e,asyncInit:n}=this.initializeBackend(t);if(!(n?await e:e))return!1}return this.backendInstance=this.registry[t],this.setupRegisteredKernels(),this.profiler=new kt(this.backendInstance),!0}setupRegisteredKernels(){mt(this.backendName).forEach((t=>{null!=t.setupFunc&&t.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(t){mt(t).forEach((e=>{null!=e.disposeFunc&&e.disposeFunc(this.registry[t])}))}initializeBackend(t){const e=this.registryFactory[t];if(null==e)throw new Error(`Cannot initialize backend ${t}, no registration found.`);try{const n=e.factory();if(!n||n instanceof r||"function"!=typeof n.then)return this.registry[t]=n,{success:!0,asyncInit:!1};{const e=++this.pendingBackendInitId,r=n.then((n=>!(e<this.pendingBackendInitId)&&(this.registry[t]=n,this.pendingBackendInit=null,!0))).catch((n=>(e<this.pendingBackendInitId||(this.pendingBackendInit=null,console.warn(`Initialization of backend ${t} failed`),console.warn(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(e){return console.warn(`Initialization of backend ${t} failed`),console.warn(e.stack||e.message),{success:!1,asyncInit:!1}}}removeBackend(t){if(!(t in this.registryFactory))throw new Error(`${t} backend not found in registry`);this.backendName===t&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,t in this.registry&&(this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t]),delete this.registryFactory[t],this.backendName===t&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((t,e)=>this.registryFactory[e].priority-this.registryFactory[t].priority))}initializeBackendsAndReturnBest(){const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e],{success:r,asyncInit:s}=this.initializeBackend(n);if(s||r)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(t,e){const n=this.state.tensorInfo.get(e),r=n.backend,s=this.readSync(e);r.disposeData(e),n.backend=t,t.move(e,s,n.shape,n.dtype),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(t,e){let n,r=null;if(null==e){if("function"!=typeof t)throw new Error("Please provide a function to tidy()");e=t}else{if("string"!=typeof t&&!(t instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof e)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=t}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=e(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(t,e,n){t();try{const t=n();return e(),t}catch(t){throw e(),t}}nextTensorId(){return ee.nextTensorId++}nextVariableId(){return ee.nextVariableId++}clone(t){const e=this.makeTensorFromDataId(t.dataId,t.shape,t.dtype),n={x:t};return this.addTapeNode(this.state.activeScope.name,n,[e],(t=>({x:()=>{const e="float32",n={x:t},r={dtype:e};return re.runKernelFunc((n=>n.cast(t,e)),n,null,"Cast",r)}})),[],{}),e}runKernel(t,e,n,r,s){return this.runKernelFunc(null,e,null,t,n,r,s)}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(t,e,n){const r=this.backend.numDataIds();let s=0;n.forEach((t=>{s+="complex64"===t.dtype?3:1}));const a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=r-e-s-a;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${t}'`)}runKernelFunc(t,e,n,r,s,a,i){let o,u=[];const l=this.isTapeOn();null==r&&(r=null!=this.state.activeScope?this.state.activeScope.name:"");const c=this.state.numBytes,h=this.state.numTensors;let p;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);const d=dt(r,this.backendName);let f,m;if(null!=d)p=()=>{const t=this.backend.numDataIds();f=d.kernelFunc({inputs:e,attrs:s,backend:this.backend});const n=Array.isArray(f)?f:[f];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(r,t,n);const o=n.map((({dataId:t,shape:e,dtype:n})=>this.makeTensorFromDataId(t,e,n)));if(l){let t=this.getTensorsForGradient(r,e,o);if(null==t){null==i&&(i=[]);const e=o.filter(((t,e)=>i[e]));t=(a||[]).slice().concat(e)}u=this.saveTensorsForBackwardMode(t)}return o};else{const e=t=>{l&&(u=t.map((t=>this.keep(this.clone(t)))))};p=()=>{const n=this.backend.numDataIds();f=this.tidy((()=>t(this.backend,e)));const s=Array.isArray(f)?f:[f];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(r,n,s),s}}return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(m=this.profiler.profileKernel(r,e,(()=>p())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(m),o=m.outputs):o=p()})),l&&this.addTapeNode(r,e,o,n,u,s),this.state.profiling&&this.state.activeProfile.kernels.push({name:r,bytesAdded:this.state.numBytes-c,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-h,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(e).map((t=>null!=e[t]?e[t].shape:null)),outputShapes:o.map((t=>t.shape)),kernelTimeMs:m.timeMs,extraInfo:m.extraInfo}),Array.isArray(f)?o:o[0]}saveTensorsForBackwardMode(t){return t.map((t=>this.keep(this.clone(t))))}getTensorsForGradient(t,e,n){const r=ft(t);if(null!=r){const t=r.inputsToSave||[],s=r.outputsToSave||[];let a;r.saveAllInputs?(u(Array.isArray(e),(()=>"saveAllInputs is true, expected inputs to be an array.")),a=Object.keys(e).map((t=>e[t]))):a=t.map((t=>e[t]));const i=n.filter(((t,e)=>s[e]));return a.concat(i)}return null}makeTensor(t,e,n,r){if(null==t)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let s=t;"string"===n&&C(t[0])&&(s=t.map((t=>vt(t))));const a=r.write(s,e,n),i=new Ot(e,n,a,this.nextTensorId());if(this.incRef(i,r),"string"===n){const t=this.state.tensorInfo.get(a),e=function(t){if(null==t)return 0;let e=0;return t.forEach((t=>e+=t.length)),e}(s);this.state.numBytes+=e-t.bytes,t.bytes=e}return i}makeTensorFromDataId(t,e,n,r){const s=new Ot(e,n=n||"float32",t,this.nextTensorId());return this.incRef(s,r),s}makeVariable(t,e=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==t.dtype&&(t=t.cast(r));const s=new Ft(t,e,n,this.nextTensorId());if(null!=this.state.registeredVariables[s.name])throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}incRef(t,e){const n=this.state.tensorInfo.has(t.dataId)?this.state.tensorInfo.get(t.dataId).refCount:0;if(this.state.numTensors++,"string"===t.dtype&&this.state.numStringTensors++,0===n){this.state.numDataBuffers++;let n=0;"complex64"!==t.dtype&&"string"!==t.dtype&&(n=t.size*S(t.dtype)),this.state.tensorInfo.set(t.dataId,{backend:e||this.backend,dtype:t.dtype,shape:t.shape,bytes:n,refCount:0}),this.state.numBytes+=n}this.state.tensorInfo.get(t.dataId).refCount++,t instanceof Ft||this.track(t)}disposeTensor(t){if(!this.state.tensorInfo.has(t.dataId))return;this.state.numTensors--,"string"===t.dtype&&this.state.numStringTensors--;const e=this.state.tensorInfo.get(t.dataId);e.refCount<=1?("complex64"!==t.dtype&&(this.state.numBytes-=e.bytes),this.state.numDataBuffers--,e.backend.disposeData(t.dataId),this.state.tensorInfo.delete(t.dataId)):this.state.tensorInfo.get(t.dataId).refCount--}disposeVariables(){for(const t in this.state.registeredVariables){const e=this.state.registeredVariables[t];this.disposeVariable(e)}}disposeVariable(t){this.disposeTensor(t),null!=this.state.registeredVariables[t.name]&&delete this.state.registeredVariables[t.name]}memory(){const t=this.backend.memory();return t.numTensors=this.state.numTensors,t.numDataBuffers=this.state.numDataBuffers,t.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(t.unreliable=!0,null==t.reasons&&(t.reasons=[]),t.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),t}async profile(t){this.state.profiling=!0;const e=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await t(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((t=>t.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-e,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const t of this.state.activeProfile.kernels)t.kernelTimeMs=await t.kernelTimeMs,t.extraInfo=await t.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(t,e,n,r,s,a){const i={id:this.state.nextTapeNodeId++,kernelName:t,inputs:e,outputs:n,saved:s},o=ft(t);null!=o&&(r=o.gradFunc),null!=r&&(i.gradient=t=>(t=t.map(((t,e)=>{if(null==t){const t=n[e],r=O(t.size,t.dtype);return this.makeTensor(r,t.shape,t.dtype)}return t})),r(t.length>1?t:t[0],s,a))),this.state.activeTape.push(i)}keep(t){return t.kept=!0,t}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(t){const e={track:[],name:"unnamed scope",id:this.state.nextScopeId++};t&&(e.name=t),this.state.scopeStack.push(e),this.state.activeScope=e}endScope(t){const e=Zt(t),n=new Set(e.map((t=>t.id)));for(let t=0;t<this.state.activeScope.track.length;t++){const e=this.state.activeScope.track[t];e.kept||n.has(e.id)||e.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],e.forEach((t=>{t.kept||t.scopeId!==r.id||this.track(t)}))}gradients(t,e,n,r=!1){if(u(e.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const s=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",t)));u(s instanceof Ot,(()=>"The result y returned by f() must be a tensor."));const a=function(t,e,n){const r={},s={};for(let t=0;t<e.length;t++)r[e[t].id]=!0;for(let n=0;n<t.length;n++){const a=t[n],i=a.inputs;for(const t in i){const n=i[t];let o=!1;for(let t=0;t<e.length;t++)if(r[n.id]){a.outputs.forEach((t=>r[t.id]=!0)),o=!0,s[a.id]=!0;break}if(o)break}}const a={};a[n.id]=!0;const i={};for(let e=t.length-1;e>=0;e--){const n=t[e],r=n.inputs;for(let t=0;t<n.outputs.length;t++)if(a[n.outputs[t].id]){for(const t in r)a[r[t].id]=!0,i[n.id]=!0;break}}const o=[];for(let e=0;e<t.length;e++){const n=t[e];if(s[n.id]&&i[n.id]){const t={};for(const e in n.inputs){const s=n.inputs[e];r[s.id]&&(t[e]=s)}const e=Object.assign({},n);e.inputs=t,e.outputs=n.outputs,o.push(e)}}return o}(this.state.activeTape,e,s);if(!r&&0===a.length&&e.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const t={};t[s.id]=null==n?function(t){const e=D(p(t),"float32");return re.makeTensor(e,t,"float32")}(s.shape):n,function(t,e,n,r){for(let s=e.length-1;s>=0;s--){const a=e[s],i=[];if(a.outputs.forEach((e=>{const n=t[e.id];null!=n?i.push(n):i.push(null)})),null==a.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${a.kernelName}.`);const o=a.gradient(i);for(const e in a.inputs){if(!(e in o))throw new Error(`Cannot backprop through input ${e}. Available gradients found: ${Object.keys(o)}.`);const s=n((()=>o[e]()));if("float32"!==s.dtype)throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input ${e} must have 'float32' dtype, but has '${s.dtype}'`);const i=a.inputs[e];if(!d(s.shape,i.shape))throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input '${e}' has shape '${s.shape}', which does not match the shape of the input '${i.shape}'`);if(null==t[i.id])t[i.id]=s;else{const e=t[i.id];t[i.id]=r(e,s),e.dispose()}}}}(t,a,(t=>this.tidy(t)),se);const r=e.map((e=>t[e.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((t=>{for(const e of t.saved)e.dispose()})),this.state.activeTape=null),{value:s,grads:r}}))}customGrad(t){return u(_(t),(()=>"The f passed in customGrad(f) must be a function.")),(...e)=>{let n;u(e.every((t=>t instanceof Ot)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const r={};return e.forEach(((t,e)=>{r[e]=t})),this.runKernelFunc(((r,s)=>(n=t(...e,s),u(n.value instanceof Ot,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),u(_(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value)),r,((t,r)=>{const s=n.gradFunc(t,r),a=Array.isArray(s)?s:[s];u(a.length===e.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),u(a.every((t=>t instanceof Ot)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const i={};return a.forEach(((t,e)=>{i[e]=()=>t})),i}))}}readSync(t){return this.state.tensorInfo.get(t).backend.readSync(t)}read(t){return this.state.tensorInfo.get(t).backend.read(t)}async time(t){const e=wt(),n=await this.backend.time(t);return n.wallMs=wt()-e,n}track(t){return null!=this.state.activeScope&&(t.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(t)),t}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new te;for(const t in this.registry)this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function ne(){const t=lt();if(null==t._tfengine){const e=new V(t);t._tfengine=new ee(e)}var e;return e=t._tfengine.ENV,U=e,Rt=()=>t._tfengine,t._tfengine}ee.nextTensorId=0,ee.nextVariableId=0;const re=ne();function se(t,e){const n={a:t,b:e};return re.runKernelFunc(((n,r)=>{const s=n.add(t,e);return r([t,e]),s}),n,null,"Add")}function ae(){if("undefined"!=typeof navigator&&null!=navigator){const t=navigator.userAgent||navigator.vendor||window.opera;return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function ie(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}var oe=it();const ue=W();ue.registerFlag("DEBUG",(()=>!1),(t=>{t&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),ue.registerFlag("IS_BROWSER",(()=>ie())),ue.registerFlag("IS_NODE",(()=>void 0!==oe&&void 0!==oe.versions&&void 0!==oe.versions.node)),ue.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),ue.registerFlag("PROD",(()=>!1)),ue.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>ue.getBool("DEBUG"))),ue.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),ue.registerFlag("IS_TEST",(()=>!1));for(var le=function(t){var e,n,r=function(t){var e=t.length;if(e%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var n=t.indexOf("=");-1===n&&(n=e);return[n,n===e?0:4-n%4]}(t),s=r[0],a=r[1],i=new de(function(t,e,n){return 3*(e+n)/4-n}(0,s,a)),o=0,u=a>0?s-4:s;for(n=0;n<u;n+=4)e=pe[t.charCodeAt(n)]<<18|pe[t.charCodeAt(n+1)]<<12|pe[t.charCodeAt(n+2)]<<6|pe[t.charCodeAt(n+3)],i[o++]=e>>16&255,i[o++]=e>>8&255,i[o++]=255&e;2===a&&(e=pe[t.charCodeAt(n)]<<2|pe[t.charCodeAt(n+1)]>>4,i[o++]=255&e);1===a&&(e=pe[t.charCodeAt(n)]<<10|pe[t.charCodeAt(n+1)]<<4|pe[t.charCodeAt(n+2)]>>2,i[o++]=e>>8&255,i[o++]=255&e);return i},ce=function(t){for(var e,n=t.length,r=n%3,s=[],a=16383,i=0,o=n-r;i<o;i+=a)s.push(ge(t,i,i+a>o?o:i+a));1===r?(e=t[n-1],s.push(he[e>>2]+he[e<<4&63]+"==")):2===r&&(e=(t[n-2]<<8)+t[n-1],s.push(he[e>>10]+he[e>>4&63]+he[e<<2&63]+"="));return s.join("")},he=[],pe=[],de="undefined"!=typeof Uint8Array?Uint8Array:Array,fe=0,me="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".length;fe<me;++fe)he[fe]="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"[fe],pe["ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".charCodeAt(fe)]=fe;function ge(t,e,n){for(var r,s,a=[],i=e;i<n;i+=3)r=(t[i]<<16&16711680)+(t[i+1]<<8&65280)+(255&t[i+2]),a.push(he[(s=r)>>18&63]+he[s>>12&63]+he[s>>6&63]+he[63&s]);return a.join("")}pe["-".charCodeAt(0)]=62,pe["_".charCodeAt(0)]=63;var ye=function(t,e,n,r,s){var a,i,o=8*s-r-1,u=(1<<o)-1,l=u>>1,c=-7,h=n?s-1:0,p=n?-1:1,d=t[e+h];for(h+=p,a=d&(1<<-c)-1,d>>=-c,c+=o;c>0;a=256*a+t[e+h],h+=p,c-=8);for(i=a&(1<<-c)-1,a>>=-c,c+=r;c>0;i=256*i+t[e+h],h+=p,c-=8);if(0===a)a=1-l;else{if(a===u)return i?NaN:1/0*(d?-1:1);i+=Math.pow(2,r),a-=l}return(d?-1:1)*i*Math.pow(2,a-r)},be=function(t,e,n,r,s,a){var i,o,u,l=8*a-s-1,c=(1<<l)-1,h=c>>1,p=23===s?Math.pow(2,-24)-Math.pow(2,-77):0,d=r?0:a-1,f=r?1:-1,m=e<0||0===e&&1/e<0?1:0;for(e=Math.abs(e),isNaN(e)||e===1/0?(o=isNaN(e)?1:0,i=c):(i=Math.floor(Math.log(e)/Math.LN2),e*(u=Math.pow(2,-i))<1&&(i--,u*=2),(e+=i+h>=1?p/u:p*Math.pow(2,1-h))*u>=2&&(i++,u/=2),i+h>=c?(o=0,i=c):i+h>=1?(o=(e*u-1)*Math.pow(2,s),i+=h):(o=e*Math.pow(2,h-1)*Math.pow(2,s),i=0));s>=8;t[n+d]=255&o,d+=f,o/=256,s-=8);for(i=i<<s|o,l+=s;l>0;t[n+d]=255&i,d+=f,i/=256,l-=8);t[n+d-f]|=128*m},xe="function"==typeof Symbol&&"function"==typeof Symbol.for?Symbol.for("nodejs.util.inspect.custom"):null,we=Ie;function ve(t){if(t>2147483647)throw new RangeError('The value "'+t+'" is invalid for option "size"');var e=new Uint8Array(t);return Object.setPrototypeOf(e,Ie.prototype),e}function Ie(t,e,n){if("number"==typeof t){if("string"==typeof e)throw new TypeError('The "string" argument must be of type string. Received type number');return Se(t)}return ke(t,e,n)}function ke(t,e,n){if("string"==typeof t)return function(t,e){"string"==typeof e&&""!==e||(e="utf8");if(!Ie.isEncoding(e))throw new TypeError("Unknown encoding: "+e);var n=0|_e(t,e),r=ve(n),s=r.write(t,e);s!==n&&(r=r.slice(0,s));return r}(t,e);if(ArrayBuffer.isView(t))return function(t){if(tn(t,Uint8Array)){var e=new Uint8Array(t);return Ee(e.buffer,e.byteOffset,e.byteLength)}return Ce(t)}(t);if(null==t)throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof t);if(tn(t,ArrayBuffer)||t&&tn(t.buffer,ArrayBuffer))return Ee(t,e,n);if("undefined"!=typeof SharedArrayBuffer&&(tn(t,SharedArrayBuffer)||t&&tn(t.buffer,SharedArrayBuffer)))return Ee(t,e,n);if("number"==typeof t)throw new TypeError('The "value" argument must not be of type number. Received type number');var r=t.valueOf&&t.valueOf();if(null!=r&&r!==t)return Ie.from(r,e,n);var s=function(t){if(Ie.isBuffer(t)){var e=0|Te(t.length),n=ve(e);return 0===n.length||t.copy(n,0,0,e),n}if(void 0!==t.length)return"number"!=typeof t.length||en(t.length)?ve(0):Ce(t);if("Buffer"===t.type&&Array.isArray(t.data))return Ce(t.data)}(t);if(s)return s;if("undefined"!=typeof Symbol&&null!=Symbol.toPrimitive&&"function"==typeof t[Symbol.toPrimitive])return Ie.from(t[Symbol.toPrimitive]("string"),e,n);throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof t)}function Ne(t){if("number"!=typeof t)throw new TypeError('"size" argument must be of type number');if(t<0)throw new RangeError('The value "'+t+'" is invalid for option "size"')}function Se(t){return Ne(t),ve(t<0?0:0|Te(t))}function Ce(t){for(var e=t.length<0?0:0|Te(t.length),n=ve(e),r=0;r<e;r+=1)n[r]=255&t[r];return n}function Ee(t,e,n){if(e<0||t.byteLength<e)throw new RangeError('"offset" is outside of buffer bounds');if(t.byteLength<e+(n||0))throw new RangeError('"length" is outside of buffer bounds');var r;return r=void 0===e&&void 0===n?new Uint8Array(t):void 0===n?new Uint8Array(t,e):new Uint8Array(t,e,n),Object.setPrototypeOf(r,Ie.prototype),r}function Te(t){if(t>=2147483647)throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+2147483647..toString(16)+" bytes");return 0|t}function _e(t,e){if(Ie.isBuffer(t))return t.length;if(ArrayBuffer.isView(t)||tn(t,ArrayBuffer))return t.byteLength;if("string"!=typeof t)throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof t);var n=t.length,r=arguments.length>2&&!0===arguments[2];if(!r&&0===n)return 0;for(var s=!1;;)switch(e){case"ascii":case"latin1":case"binary":return n;case"utf8":case"utf-8":return Je(t).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*n;case"hex":return n>>>1;case"base64":return Ze(t).length;default:if(s)return r?-1:Je(t).length;e=(""+e).toLowerCase(),s=!0}}function $e(t,e,n){var r=!1;if((void 0===e||e<0)&&(e=0),e>this.length)return"";if((void 0===n||n>this.length)&&(n=this.length),n<=0)return"";if((n>>>=0)<=(e>>>=0))return"";for(t||(t="utf8");;)switch(t){case"hex":return Ue(this,e,n);case"utf8":case"utf-8":return Pe(this,e,n);case"ascii":return Ve(this,e,n);case"latin1":case"binary":return We(this,e,n);case"base64":return ze(this,e,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return Ge(this,e,n);default:if(r)throw new TypeError("Unknown encoding: "+t);t=(t+"").toLowerCase(),r=!0}}function Ae(t,e,n){var r=t[e];t[e]=t[n],t[n]=r}function Re(t,e,n,r,s){if(0===t.length)return-1;if("string"==typeof n?(r=n,n=0):n>2147483647?n=2147483647:n<-2147483648&&(n=-2147483648),en(n=+n)&&(n=s?0:t.length-1),n<0&&(n=t.length+n),n>=t.length){if(s)return-1;n=t.length-1}else if(n<0){if(!s)return-1;n=0}if("string"==typeof e&&(e=Ie.from(e,r)),Ie.isBuffer(e))return 0===e.length?-1:Me(t,e,n,r,s);if("number"==typeof e)return e&=255,"function"==typeof Uint8Array.prototype.indexOf?s?Uint8Array.prototype.indexOf.call(t,e,n):Uint8Array.prototype.lastIndexOf.call(t,e,n):Me(t,[e],n,r,s);throw new TypeError("val must be string, number or Buffer")}function Me(t,e,n,r,s){var a,i=1,o=t.length,u=e.length;if(void 0!==r&&("ucs2"===(r=String(r).toLowerCase())||"ucs-2"===r||"utf16le"===r||"utf-16le"===r)){if(t.length<2||e.length<2)return-1;i=2,o/=2,u/=2,n/=2}function l(t,e){return 1===i?t[e]:t.readUInt16BE(e*i)}if(s){var c=-1;for(a=n;a<o;a++)if(l(t,a)===l(e,-1===c?0:a-c)){if(-1===c&&(c=a),a-c+1===u)return c*i}else-1!==c&&(a-=a-c),c=-1}else for(n+u>o&&(n=o-u),a=n;a>=0;a--){for(var h=!0,p=0;p<u;p++)if(l(t,a+p)!==l(e,p)){h=!1;break}if(h)return a}return-1}function De(t,e,n,r){n=Number(n)||0;var s=t.length-n;r?(r=Number(r))>s&&(r=s):r=s;var a=e.length;r>a/2&&(r=a/2);for(var i=0;i<r;++i){var o=parseInt(e.substr(2*i,2),16);if(en(o))return i;t[n+i]=o}return i}function Oe(t,e,n,r){return Qe(Je(e,t.length-n),t,n,r)}function Fe(t,e,n,r){return Qe(function(t){for(var e=[],n=0;n<t.length;++n)e.push(255&t.charCodeAt(n));return e}(e),t,n,r)}function Le(t,e,n,r){return Qe(Ze(e),t,n,r)}function Be(t,e,n,r){return Qe(function(t,e){for(var n,r,s,a=[],i=0;i<t.length&&!((e-=2)<0);++i)r=(n=t.charCodeAt(i))>>8,s=n%256,a.push(s),a.push(r);return a}(e,t.length-n),t,n,r)}function ze(t,e,n){return 0===e&&n===t.length?ce(t):ce(t.slice(e,n))}function Pe(t,e,n){n=Math.min(t.length,n);for(var r=[],s=e;s<n;){var a,i,o,u,l=t[s],c=null,h=l>239?4:l>223?3:l>191?2:1;if(s+h<=n)switch(h){case 1:l<128&&(c=l);break;case 2:128==(192&(a=t[s+1]))&&(u=(31&l)<<6|63&a)>127&&(c=u);break;case 3:a=t[s+1],i=t[s+2],128==(192&a)&&128==(192&i)&&(u=(15&l)<<12|(63&a)<<6|63&i)>2047&&(u<55296||u>57343)&&(c=u);break;case 4:a=t[s+1],i=t[s+2],o=t[s+3],128==(192&a)&&128==(192&i)&&128==(192&o)&&(u=(15&l)<<18|(63&a)<<12|(63&i)<<6|63&o)>65535&&u<1114112&&(c=u)}null===c?(c=65533,h=1):c>65535&&(c-=65536,r.push(c>>>10&1023|55296),c=56320|1023&c),r.push(c),s+=h}return function(t){var e=t.length;if(e<=4096)return String.fromCharCode.apply(String,t);var n="",r=0;for(;r<e;)n+=String.fromCharCode.apply(String,t.slice(r,r+=4096));return n}(r)}Ie.TYPED_ARRAY_SUPPORT=function(){try{var t=new Uint8Array(1),e={foo:function(){return 42}};return Object.setPrototypeOf(e,Uint8Array.prototype),Object.setPrototypeOf(t,e),42===t.foo()}catch(t){return!1}}(),Ie.TYPED_ARRAY_SUPPORT||"undefined"==typeof console||"function"!=typeof console.error||console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."),Object.defineProperty(Ie.prototype,"parent",{enumerable:!0,get:function(){if(Ie.isBuffer(this))return this.buffer}}),Object.defineProperty(Ie.prototype,"offset",{enumerable:!0,get:function(){if(Ie.isBuffer(this))return this.byteOffset}}),Ie.poolSize=8192,Ie.from=function(t,e,n){return ke(t,e,n)},Object.setPrototypeOf(Ie.prototype,Uint8Array.prototype),Object.setPrototypeOf(Ie,Uint8Array),Ie.alloc=function(t,e,n){return function(t,e,n){return Ne(t),t<=0?ve(t):void 0!==e?"string"==typeof n?ve(t).fill(e,n):ve(t).fill(e):ve(t)}(t,e,n)},Ie.allocUnsafe=function(t){return Se(t)},Ie.allocUnsafeSlow=function(t){return Se(t)},Ie.isBuffer=function(t){return null!=t&&!0===t._isBuffer&&t!==Ie.prototype},Ie.compare=function(t,e){if(tn(t,Uint8Array)&&(t=Ie.from(t,t.offset,t.byteLength)),tn(e,Uint8Array)&&(e=Ie.from(e,e.offset,e.byteLength)),!Ie.isBuffer(t)||!Ie.isBuffer(e))throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(t===e)return 0;for(var n=t.length,r=e.length,s=0,a=Math.min(n,r);s<a;++s)if(t[s]!==e[s]){n=t[s],r=e[s];break}return n<r?-1:r<n?1:0},Ie.isEncoding=function(t){switch(String(t).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},Ie.concat=function(t,e){if(!Array.isArray(t))throw new TypeError('"list" argument must be an Array of Buffers');if(0===t.length)return Ie.alloc(0);var n;if(void 0===e)for(e=0,n=0;n<t.length;++n)e+=t[n].length;var r=Ie.allocUnsafe(e),s=0;for(n=0;n<t.length;++n){var a=t[n];if(tn(a,Uint8Array))s+a.length>r.length?Ie.from(a).copy(r,s):Uint8Array.prototype.set.call(r,a,s);else{if(!Ie.isBuffer(a))throw new TypeError('"list" argument must be an Array of Buffers');a.copy(r,s)}s+=a.length}return r},Ie.byteLength=_e,Ie.prototype._isBuffer=!0,Ie.prototype.swap16=function(){var t=this.length;if(t%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var e=0;e<t;e+=2)Ae(this,e,e+1);return this},Ie.prototype.swap32=function(){var t=this.length;if(t%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var e=0;e<t;e+=4)Ae(this,e,e+3),Ae(this,e+1,e+2);return this},Ie.prototype.swap64=function(){var t=this.length;if(t%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var e=0;e<t;e+=8)Ae(this,e,e+7),Ae(this,e+1,e+6),Ae(this,e+2,e+5),Ae(this,e+3,e+4);return this},Ie.prototype.toString=function(){var t=this.length;return 0===t?"":0===arguments.length?Pe(this,0,t):$e.apply(this,arguments)},Ie.prototype.toLocaleString=Ie.prototype.toString,Ie.prototype.equals=function(t){if(!Ie.isBuffer(t))throw new TypeError("Argument must be a Buffer");return this===t||0===Ie.compare(this,t)},Ie.prototype.inspect=function(){var t="";return t=this.toString("hex",0,50).replace(/(.{2})/g,"$1 ").trim(),this.length>50&&(t+=" ... "),"<Buffer "+t+">"},xe&&(Ie.prototype[xe]=Ie.prototype.inspect),Ie.prototype.compare=function(t,e,n,r,s){if(tn(t,Uint8Array)&&(t=Ie.from(t,t.offset,t.byteLength)),!Ie.isBuffer(t))throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof t);if(void 0===e&&(e=0),void 0===n&&(n=t?t.length:0),void 0===r&&(r=0),void 0===s&&(s=this.length),e<0||n>t.length||r<0||s>this.length)throw new RangeError("out of range index");if(r>=s&&e>=n)return 0;if(r>=s)return-1;if(e>=n)return 1;if(this===t)return 0;for(var a=(s>>>=0)-(r>>>=0),i=(n>>>=0)-(e>>>=0),o=Math.min(a,i),u=this.slice(r,s),l=t.slice(e,n),c=0;c<o;++c)if(u[c]!==l[c]){a=u[c],i=l[c];break}return a<i?-1:i<a?1:0},Ie.prototype.includes=function(t,e,n){return-1!==this.indexOf(t,e,n)},Ie.prototype.indexOf=function(t,e,n){return Re(this,t,e,n,!0)},Ie.prototype.lastIndexOf=function(t,e,n){return Re(this,t,e,n,!1)},Ie.prototype.write=function(t,e,n,r){if(void 0===e)r="utf8",n=this.length,e=0;else if(void 0===n&&"string"==typeof e)r=e,n=this.length,e=0;else{if(!isFinite(e))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");e>>>=0,isFinite(n)?(n>>>=0,void 0===r&&(r="utf8")):(r=n,n=void 0)}var s=this.length-e;if((void 0===n||n>s)&&(n=s),t.length>0&&(n<0||e<0)||e>this.length)throw new RangeError("Attempt to write outside buffer bounds");r||(r="utf8");for(var a=!1;;)switch(r){case"hex":return De(this,t,e,n);case"utf8":case"utf-8":return Oe(this,t,e,n);case"ascii":case"latin1":case"binary":return Fe(this,t,e,n);case"base64":return Le(this,t,e,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return Be(this,t,e,n);default:if(a)throw new TypeError("Unknown encoding: "+r);r=(""+r).toLowerCase(),a=!0}},Ie.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};function Ve(t,e,n){var r="";n=Math.min(t.length,n);for(var s=e;s<n;++s)r+=String.fromCharCode(127&t[s]);return r}function We(t,e,n){var r="";n=Math.min(t.length,n);for(var s=e;s<n;++s)r+=String.fromCharCode(t[s]);return r}function Ue(t,e,n){var r=t.length;(!e||e<0)&&(e=0),(!n||n<0||n>r)&&(n=r);for(var s="",a=e;a<n;++a)s+=nn[t[a]];return s}function Ge(t,e,n){for(var r=t.slice(e,n),s="",a=0;a<r.length-1;a+=2)s+=String.fromCharCode(r[a]+256*r[a+1]);return s}function He(t,e,n){if(t%1!=0||t<0)throw new RangeError("offset is not uint");if(t+e>n)throw new RangeError("Trying to access beyond buffer length")}function je(t,e,n,r,s,a){if(!Ie.isBuffer(t))throw new TypeError('"buffer" argument must be a Buffer instance');if(e>s||e<a)throw new RangeError('"value" argument is out of bounds');if(n+r>t.length)throw new RangeError("Index out of range")}function qe(t,e,n,r,s,a){if(n+r>t.length)throw new RangeError("Index out of range");if(n<0)throw new RangeError("Index out of range")}function Ke(t,e,n,r,s){return e=+e,n>>>=0,s||qe(t,0,n,4),be(t,e,n,r,23,4),n+4}function Xe(t,e,n,r,s){return e=+e,n>>>=0,s||qe(t,0,n,8),be(t,e,n,r,52,8),n+8}Ie.prototype.slice=function(t,e){var n=this.length;(t=~~t)<0?(t+=n)<0&&(t=0):t>n&&(t=n),(e=void 0===e?n:~~e)<0?(e+=n)<0&&(e=0):e>n&&(e=n),e<t&&(e=t);var r=this.subarray(t,e);return Object.setPrototypeOf(r,Ie.prototype),r},Ie.prototype.readUintLE=Ie.prototype.readUIntLE=function(t,e,n){t>>>=0,e>>>=0,n||He(t,e,this.length);for(var r=this[t],s=1,a=0;++a<e&&(s*=256);)r+=this[t+a]*s;return r},Ie.prototype.readUintBE=Ie.prototype.readUIntBE=function(t,e,n){t>>>=0,e>>>=0,n||He(t,e,this.length);for(var r=this[t+--e],s=1;e>0&&(s*=256);)r+=this[t+--e]*s;return r},Ie.prototype.readUint8=Ie.prototype.readUInt8=function(t,e){return t>>>=0,e||He(t,1,this.length),this[t]},Ie.prototype.readUint16LE=Ie.prototype.readUInt16LE=function(t,e){return t>>>=0,e||He(t,2,this.length),this[t]|this[t+1]<<8},Ie.prototype.readUint16BE=Ie.prototype.readUInt16BE=function(t,e){return t>>>=0,e||He(t,2,this.length),this[t]<<8|this[t+1]},Ie.prototype.readUint32LE=Ie.prototype.readUInt32LE=function(t,e){return t>>>=0,e||He(t,4,this.length),(this[t]|this[t+1]<<8|this[t+2]<<16)+16777216*this[t+3]},Ie.prototype.readUint32BE=Ie.prototype.readUInt32BE=function(t,e){return t>>>=0,e||He(t,4,this.length),16777216*this[t]+(this[t+1]<<16|this[t+2]<<8|this[t+3])},Ie.prototype.readIntLE=function(t,e,n){t>>>=0,e>>>=0,n||He(t,e,this.length);for(var r=this[t],s=1,a=0;++a<e&&(s*=256);)r+=this[t+a]*s;return r>=(s*=128)&&(r-=Math.pow(2,8*e)),r},Ie.prototype.readIntBE=function(t,e,n){t>>>=0,e>>>=0,n||He(t,e,this.length);for(var r=e,s=1,a=this[t+--r];r>0&&(s*=256);)a+=this[t+--r]*s;return a>=(s*=128)&&(a-=Math.pow(2,8*e)),a},Ie.prototype.readInt8=function(t,e){return t>>>=0,e||He(t,1,this.length),128&this[t]?-1*(255-this[t]+1):this[t]},Ie.prototype.readInt16LE=function(t,e){t>>>=0,e||He(t,2,this.length);var n=this[t]|this[t+1]<<8;return 32768&n?4294901760|n:n},Ie.prototype.readInt16BE=function(t,e){t>>>=0,e||He(t,2,this.length);var n=this[t+1]|this[t]<<8;return 32768&n?4294901760|n:n},Ie.prototype.readInt32LE=function(t,e){return t>>>=0,e||He(t,4,this.length),this[t]|this[t+1]<<8|this[t+2]<<16|this[t+3]<<24},Ie.prototype.readInt32BE=function(t,e){return t>>>=0,e||He(t,4,this.length),this[t]<<24|this[t+1]<<16|this[t+2]<<8|this[t+3]},Ie.prototype.readFloatLE=function(t,e){return t>>>=0,e||He(t,4,this.length),ye(this,t,!0,23,4)},Ie.prototype.readFloatBE=function(t,e){return t>>>=0,e||He(t,4,this.length),ye(this,t,!1,23,4)},Ie.prototype.readDoubleLE=function(t,e){return t>>>=0,e||He(t,8,this.length),ye(this,t,!0,52,8)},Ie.prototype.readDoubleBE=function(t,e){return t>>>=0,e||He(t,8,this.length),ye(this,t,!1,52,8)},Ie.prototype.writeUintLE=Ie.prototype.writeUIntLE=function(t,e,n,r){(t=+t,e>>>=0,n>>>=0,r)||je(this,t,e,n,Math.pow(2,8*n)-1,0);var s=1,a=0;for(this[e]=255&t;++a<n&&(s*=256);)this[e+a]=t/s&255;return e+n},Ie.prototype.writeUintBE=Ie.prototype.writeUIntBE=function(t,e,n,r){(t=+t,e>>>=0,n>>>=0,r)||je(this,t,e,n,Math.pow(2,8*n)-1,0);var s=n-1,a=1;for(this[e+s]=255&t;--s>=0&&(a*=256);)this[e+s]=t/a&255;return e+n},Ie.prototype.writeUint8=Ie.prototype.writeUInt8=function(t,e,n){return t=+t,e>>>=0,n||je(this,t,e,1,255,0),this[e]=255&t,e+1},Ie.prototype.writeUint16LE=Ie.prototype.writeUInt16LE=function(t,e,n){return t=+t,e>>>=0,n||je(this,t,e,2,65535,0),this[e]=255&t,this[e+1]=t>>>8,e+2},Ie.prototype.writeUint16BE=Ie.prototype.writeUInt16BE=function(t,e,n){return t=+t,e>>>=0,n||je(this,t,e,2,65535,0),this[e]=t>>>8,this[e+1]=255&t,e+2},Ie.prototype.writeUint32LE=Ie.prototype.writeUInt32LE=function(t,e,n){return t=+t,e>>>=0,n||je(this,t,e,4,4294967295,0),this[e+3]=t>>>24,this[e+2]=t>>>16,this[e+1]=t>>>8,this[e]=255&t,e+4},Ie.prototype.writeUint32BE=Ie.prototype.writeUInt32BE=function(t,e,n){return t=+t,e>>>=0,n||je(this,t,e,4,4294967295,0),this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=255&t,e+4},Ie.prototype.writeIntLE=function(t,e,n,r){if(t=+t,e>>>=0,!r){var s=Math.pow(2,8*n-1);je(this,t,e,n,s-1,-s)}var a=0,i=1,o=0;for(this[e]=255&t;++a<n&&(i*=256);)t<0&&0===o&&0!==this[e+a-1]&&(o=1),this[e+a]=(t/i>>0)-o&255;return e+n},Ie.prototype.writeIntBE=function(t,e,n,r){if(t=+t,e>>>=0,!r){var s=Math.pow(2,8*n-1);je(this,t,e,n,s-1,-s)}var a=n-1,i=1,o=0;for(this[e+a]=255&t;--a>=0&&(i*=256);)t<0&&0===o&&0!==this[e+a+1]&&(o=1),this[e+a]=(t/i>>0)-o&255;return e+n},Ie.prototype.writeInt8=function(t,e,n){return t=+t,e>>>=0,n||je(this,t,e,1,127,-128),t<0&&(t=255+t+1),this[e]=255&t,e+1},Ie.prototype.writeInt16LE=function(t,e,n){return t=+t,e>>>=0,n||je(this,t,e,2,32767,-32768),this[e]=255&t,this[e+1]=t>>>8,e+2},Ie.prototype.writeInt16BE=function(t,e,n){return t=+t,e>>>=0,n||je(this,t,e,2,32767,-32768),this[e]=t>>>8,this[e+1]=255&t,e+2},Ie.prototype.writeInt32LE=function(t,e,n){return t=+t,e>>>=0,n||je(this,t,e,4,2147483647,-2147483648),this[e]=255&t,this[e+1]=t>>>8,this[e+2]=t>>>16,this[e+3]=t>>>24,e+4},Ie.prototype.writeInt32BE=function(t,e,n){return t=+t,e>>>=0,n||je(this,t,e,4,2147483647,-2147483648),t<0&&(t=4294967295+t+1),this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=255&t,e+4},Ie.prototype.writeFloatLE=function(t,e,n){return Ke(this,t,e,!0,n)},Ie.prototype.writeFloatBE=function(t,e,n){return Ke(this,t,e,!1,n)},Ie.prototype.writeDoubleLE=function(t,e,n){return Xe(this,t,e,!0,n)},Ie.prototype.writeDoubleBE=function(t,e,n){return Xe(this,t,e,!1,n)},Ie.prototype.copy=function(t,e,n,r){if(!Ie.isBuffer(t))throw new TypeError("argument should be a Buffer");if(n||(n=0),r||0===r||(r=this.length),e>=t.length&&(e=t.length),e||(e=0),r>0&&r<n&&(r=n),r===n)return 0;if(0===t.length||0===this.length)return 0;if(e<0)throw new RangeError("targetStart out of bounds");if(n<0||n>=this.length)throw new RangeError("Index out of range");if(r<0)throw new RangeError("sourceEnd out of bounds");r>this.length&&(r=this.length),t.length-e<r-n&&(r=t.length-e+n);var s=r-n;return this===t&&"function"==typeof Uint8Array.prototype.copyWithin?this.copyWithin(e,n,r):Uint8Array.prototype.set.call(t,this.subarray(n,r),e),s},Ie.prototype.fill=function(t,e,n,r){if("string"==typeof t){if("string"==typeof e?(r=e,e=0,n=this.length):"string"==typeof n&&(r=n,n=this.length),void 0!==r&&"string"!=typeof r)throw new TypeError("encoding must be a string");if("string"==typeof r&&!Ie.isEncoding(r))throw new TypeError("Unknown encoding: "+r);if(1===t.length){var s=t.charCodeAt(0);("utf8"===r&&s<128||"latin1"===r)&&(t=s)}}else"number"==typeof t?t&=255:"boolean"==typeof t&&(t=Number(t));if(e<0||this.length<e||this.length<n)throw new RangeError("Out of range index");if(n<=e)return this;var a;if(e>>>=0,n=void 0===n?this.length:n>>>0,t||(t=0),"number"==typeof t)for(a=e;a<n;++a)this[a]=t;else{var i=Ie.isBuffer(t)?t:Ie.from(t,r),o=i.length;if(0===o)throw new TypeError('The value "'+t+'" is invalid for argument "value"');for(a=0;a<n-e;++a)this[a+e]=i[a%o]}return this};var Ye=/[^+/0-9A-Za-z-_]/g;function Je(t,e){var n;e=e||1/0;for(var r=t.length,s=null,a=[],i=0;i<r;++i){if((n=t.charCodeAt(i))>55295&&n<57344){if(!s){if(n>56319){(e-=3)>-1&&a.push(239,191,189);continue}if(i+1===r){(e-=3)>-1&&a.push(239,191,189);continue}s=n;continue}if(n<56320){(e-=3)>-1&&a.push(239,191,189),s=n;continue}n=65536+(s-55296<<10|n-56320)}else s&&(e-=3)>-1&&a.push(239,191,189);if(s=null,n<128){if((e-=1)<0)break;a.push(n)}else if(n<2048){if((e-=2)<0)break;a.push(n>>6|192,63&n|128)}else if(n<65536){if((e-=3)<0)break;a.push(n>>12|224,n>>6&63|128,63&n|128)}else{if(!(n<1114112))throw new Error("Invalid code point");if((e-=4)<0)break;a.push(n>>18|240,n>>12&63|128,n>>6&63|128,63&n|128)}}return a}function Ze(t){return le(function(t){if((t=(t=t.split("=")[0]).trim().replace(Ye,"")).length<2)return"";for(;t.length%4!=0;)t+="=";return t}(t))}function Qe(t,e,n,r){for(var s=0;s<r&&!(s+n>=e.length||s>=t.length);++s)e[s+n]=t[s];return s}function tn(t,e){return t instanceof e||null!=t&&null!=t.constructor&&null!=t.constructor.name&&t.constructor.name===e.name}function en(t){return t!=t}var nn=function(){for(var t="0123456789abcdef",e=new Array(256),n=0;n<16;++n)for(var r=16*n,s=0;s<16;++s)e[r+s]=t[n]+t[s];return e}();function rn(t,e){let n=t;if(N(t))return"string"===e?[]:[t.length];if(!Array.isArray(t))return[];const r=[];for(;Array.isArray(n)||N(n)&&"string"!==e;)r.push(n.length),n=n[0];return Array.isArray(t)&&W().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&sn(t,r,[]),r}function sn(t,e,n){if(n=n||[],!Array.isArray(t)&&!N(t))return void u(0===e.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${e[0]} elements`));u(e.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${t.length} elements`)),u(t.length===e[0],(()=>`Element arr[${n.join("][")}] should have ${e[0]} elements, but has ${t.length} elements`));const r=e.slice(1);for(let e=0;e<t.length;++e)sn(t[e],r,n.concat(e))}function an(t,e,n,r){if(null!=t&&("numeric"!==t&&t!==e||"numeric"===t&&"string"===e))throw new Error(`Argument '${n}' passed to '${r}' must be ${t} tensor, but got ${e} tensor`)}function on(t,e,n,r="numeric"){if(t instanceof Ot)return an(r,t.dtype,e,n),t;let s=T(t);if("string"!==s&&["bool","int32","float32"].indexOf(r)>=0&&(s=r),an(r,s,e,n),null==t||!N(t)&&!Array.isArray(t)&&"number"!=typeof t&&"boolean"!=typeof t&&"string"!=typeof t){const r=null==t?"null":t.constructor.name;throw new Error(`Argument '${e}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const a=rn(t,s);N(t)||Array.isArray(t)||(t=[t]);const i="string"!==s?xt(t,s):h(t,[],!0);return re.makeTensor(i,a,s)}function un(t,e,n,r="numeric"){if(!Array.isArray(t))throw new Error(`Argument ${e} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return t.map(((t,r)=>on(t,`${e}[${r}]`,n)),r)}function ln(t){const e=Object.keys(t);if(1!==e.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${e.length} keys.`);let n=e[0];const r=t[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+="__op";const s=(...t)=>{re.startScope(n);try{const e=r(...t);return P(e)&&console.error("Cannot return a Promise inside of tidy."),re.endScope(e),e}catch(t){throw re.endScope(null),t}};return Object.defineProperty(s,"name",{value:n,configurable:!0}),s}const cn=ln({complex_:function(t,e){const n=on(t,"real","complex"),r=on(e,"imag","complex");l(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);const s={real:n,imag:r};return re.runKernelFunc((t=>t.complex(n,r)),s,null,"Complex")}});function hn(t,e,n,r){if(null==r&&(r=T(t)),"complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!N(t)&&!Array.isArray(t)&&"number"!=typeof t&&"boolean"!=typeof t&&"string"!=typeof t)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=e){L(e);const t=p(e),r=p(n);u(t===r,(()=>`Based on the provided shape, [${e}], the tensor should have ${t} values but has ${r}`));for(let t=0;t<n.length;++t){const r=n[t],s=t!==n.length-1||r!==p(e.slice(t));u(n[t]===e[t]||!s,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${e}). `))}}return N(t)||Array.isArray(t)||(t=[t]),e=e||n,t="string"!==r?xt(t,r):h(t,[],!0),re.makeTensor(t,e,r)}function pn(t,e,n){return hn(t,e,rn(t,n),n)}const dn={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};var fn=we;async function mn(t,e){const n=[],r=[],s=Array.isArray(t)?t.map((t=>t.name)):Object.keys(t);for(let a=0;a<s.length;++a){const i=s[a],o=Array.isArray(t)?t[a].tensor:t[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);const u={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const t=new Promise((async t=>{const e=await o.bytes(),n=e.reduce(((t,e)=>t+e.length),0)+4*e.length,r=new Uint8Array(n);let s=0;for(let t=0;t<e.length;t++){const n=e[t],a=new Uint8Array(new Uint32Array([n.length]).buffer);r.set(a,s),s+=4,r.set(n,s),s+=n.length}t(r)}));r.push(t)}else r.push(o.data());null!=e&&(u.group=e),n.push(u)}return{data:gn(await Promise.all(r)),specs:n}}function gn(t){if(null===t)throw new Error(`Invalid input value: ${JSON.stringify(t)}`);let e=0;const n=[];t.forEach((t=>{if(e+=t.byteLength,n.push(t.byteLength===t.buffer.byteLength?t:new t.constructor(t)),!(t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${t.constructor.name}`)}));const r=new Uint8Array(e);let s=0;return n.forEach((t=>{r.set(new Uint8Array(t.buffer),s),s+=t.byteLength})),r.buffer}const yn=void 0!==fn&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function bn(t){return yn?fn.byteLength(t):new Blob([t]).size}function xn(t){if(1===t.length)return t[0];let e=0;t.forEach((t=>{e+=t.byteLength}));const n=new Uint8Array(e);let r=0;return t.forEach((t=>{n.set(new Uint8Array(t),r),r+=t.byteLength})),n.buffer}function wn(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==t.modelTopology?0:bn(JSON.stringify(t.modelTopology)),weightSpecsBytes:null==t.weightSpecs?0:bn(JSON.stringify(t.weightSpecs)),weightDataBytes:null==t.weightData?0:t.weightData.byteLength}}function vn(){const t=function(){const t=t=>{let e=t<<13,n=0;for(;0==(8388608&e);)n-=8388608,e<<=1;return e&=-8388609,n+=947912704,e|n},e=new Uint32Array(2048);e[0]=0;for(let n=1;n<1024;n++)e[n]=t(n);for(let t=1024;t<2048;t++)e[t]=939524096+(t-1024<<13);return e}(),e=function(){const t=new Uint32Array(64);t[0]=0,t[31]=1199570944,t[32]=2147483648,t[63]=3347054592;for(let e=1;e<31;e++)t[e]=e<<23;for(let e=33;e<63;e++)t[e]=2147483648+(e-32<<23);return t}(),n=function(){const t=new Uint32Array(64);for(let e=0;e<64;e++)t[e]=1024;return t[0]=t[32]=0,t}();return r=>{const s=new ArrayBuffer(4*r.length),a=new Uint32Array(s);for(let s=0;s<r.length;s++){const i=r[s],o=t[n[i>>10]+(1023&i)]+e[i>>10];a[s]=o}return new Float32Array(s)}}class In{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==In.instance&&(In.instance=new In),In.instance}static registerSaveRouter(t){In.getInstance().saveRouters.push(t)}static registerLoadRouter(t){In.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return In.getHandlers(t,"save")}static getLoadHandlers(t,e){return In.getHandlers(t,"load",e)}static getHandlers(t,e,n){const r=[];return("load"===e?In.getInstance().loadRouters:In.getInstance().saveRouters).forEach((e=>{const s=e(t,n);null!==s&&r.push(s)})),r}}const kn=t=>In.getSaveHandlers(t);function Nn(){if(!W().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const t="undefined"==typeof window?self:window,e=t.indexedDB||t.mozIndexedDB||t.webkitIndexedDB||t.msIndexedDB||t.shimIndexedDB;if(null==e)throw new Error("The current browser does not appear to support IndexedDB.");return e}function Sn(t){const e=t.result;e.createObjectStore("models_store",{keyPath:"modelPath"}),e.createObjectStore("model_info_store",{keyPath:"modelPath"})}class Cn{constructor(t){if(this.indexedDB=Nn(),null==t||!t)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=t}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,t)}async load(){return this.databaseAction(this.modelPath)}databaseAction(t,e){return new Promise(((t,n)=>{const r=this.indexedDB.open("tensorflowjs",1);r.onupgradeneeded=()=>Sn(r),r.onsuccess=()=>{const s=r.result;if(null==e){const e=s.transaction("models_store","readonly"),r=e.objectStore("models_store").get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return s.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));t(r.result.modelArtifacts)},r.onerror=t=>(s.close(),n(r.error)),e.oncomplete=()=>s.close()}else{const r=wn(e),a=s.transaction("model_info_store","readwrite");let i=a.objectStore("model_info_store");const o=i.put({modelPath:this.modelPath,modelArtifactsInfo:r});let u;o.onsuccess=()=>{u=s.transaction("models_store","readwrite");const o=u.objectStore("models_store").put({modelPath:this.modelPath,modelArtifacts:e,modelArtifactsInfo:r});o.onsuccess=()=>t({modelArtifactsInfo:r}),o.onerror=t=>{i=a.objectStore("model_info_store");const e=i.delete(this.modelPath);e.onsuccess=()=>(s.close(),n(o.error)),e.onerror=t=>(s.close(),n(o.error))}},o.onerror=t=>(s.close(),n(o.error)),a.oncomplete=()=>{null==u?s.close():u.oncomplete=()=>s.close()}}},r.onerror=t=>n(r.error)}))}}Cn.URL_SCHEME="indexeddb://";const En=t=>{return W().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(Cn.URL_SCHEME)?(e=t.slice(Cn.URL_SCHEME.length),new Cn(e)):null;var e};In.registerSaveRouter(En),In.registerLoadRouter(En);class Tn{constructor(){this.indexedDB=Nn()}async listModels(){return new Promise(((t,e)=>{const n=this.indexedDB.open("tensorflowjs",1);n.onupgradeneeded=()=>Sn(n),n.onsuccess=()=>{const r=n.result,s=r.transaction("model_info_store","readonly"),a=s.objectStore("model_info_store").getAll();a.onsuccess=()=>{const e={};for(const t of a.result)e[t.modelPath]=t.modelArtifactsInfo;t(e)},a.onerror=t=>(r.close(),e(a.error)),s.oncomplete=()=>r.close()},n.onerror=t=>e(n.error)}))}async removeModel(t){var e;return t=(e=t).startsWith(Cn.URL_SCHEME)?e.slice(Cn.URL_SCHEME.length):e,new Promise(((e,n)=>{const r=this.indexedDB.open("tensorflowjs",1);r.onupgradeneeded=()=>Sn(r),r.onsuccess=()=>{const s=r.result,a=s.transaction("model_info_store","readwrite"),i=a.objectStore("model_info_store"),o=i.get(t);let u;o.onsuccess=()=>{if(null==o.result)return s.close(),n(new Error(`Cannot find model with path '${t}' in IndexedDB.`));{const r=i.delete(t),a=()=>{u=s.transaction("models_store","readwrite");const r=u.objectStore("models_store").delete(t);r.onsuccess=()=>e(o.result.modelArtifactsInfo),r.onerror=t=>n(o.error)};r.onsuccess=a,r.onerror=t=>(a(),s.close(),n(o.error))}},o.onerror=t=>(s.close(),n(o.error)),a.oncomplete=()=>{null==u?s.close():u.oncomplete=()=>s.close()}},r.onerror=t=>n(r.error)}))}}const _n="tensorflowjs_models",$n="info",An="model_topology",Rn="weight_specs",Mn="weight_data",Dn="model_metadata";function On(t){return{info:[_n,t,$n].join("/"),topology:[_n,t,An].join("/"),weightSpecs:[_n,t,Rn].join("/"),weightData:[_n,t,Mn].join("/"),modelMetadata:[_n,t,Dn].join("/")}}function Fn(t){const e=t.split("/");if(e.length<3)throw new Error(`Invalid key format: ${t}`);return e.slice(1,e.length-1).join("/")}class Ln{constructor(t){if(!W().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==t||!t)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=t,this.keys=On(this.modelPath)}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const e=JSON.stringify(t.modelTopology),n=JSON.stringify(t.weightSpecs),r=wn(t);try{return this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,e),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(t){if(yn)return fn.from(t).toString("base64");const e=new Uint8Array(t);let n="";for(let t=0,r=e.length;t<r;t++)n+=String.fromCharCode(e[t]);return btoa(n)}(t.weightData)),this.LS.setItem(this.keys.modelMetadata,JSON.stringify({format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,userDefinedMetadata:t.userDefinedMetadata})),{modelArtifactsInfo:r}}catch(t){throw this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const t=JSON.parse(this.LS.getItem(this.keys.info));if(null==t)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==t.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const e={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);e.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);e.weightSpecs=r;const s=this.LS.getItem(this.keys.modelMetadata);if(null!=s){const t=JSON.parse(s);e.format=t.format,e.generatedBy=t.generatedBy,e.convertedBy=t.convertedBy,e.userDefinedMetadata=t.userDefinedMetadata}const a=this.LS.getItem(this.keys.weightData);if(null==a)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return e.weightData=function(t){if(yn){const e=fn.from(t,"base64");return e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength)}const e=atob(t),n=new Uint8Array(e.length);for(let t=0;t<e.length;++t)n.set([e.charCodeAt(t)],t);return n.buffer}(a),e}}Ln.URL_SCHEME="localstorage://";const Bn=t=>{return W().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(Ln.URL_SCHEME)?(e=t.slice(Ln.URL_SCHEME.length),new Ln(e)):null;var e};In.registerSaveRouter(Bn),In.registerLoadRouter(Bn);class zn{constructor(){u(W().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),u("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const t={},e=_n+"/",n="/"+$n;for(let r=0;r<this.LS.length;++r){const s=this.LS.key(r);if(s.startsWith(e)&&s.endsWith(n)){t[Fn(s)]=JSON.parse(this.LS.getItem(s))}}return t}async removeModel(t){var e;const n=On(t=(e=t).startsWith(Ln.URL_SCHEME)?e.slice(Ln.URL_SCHEME.length):e);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${t}'`);const r=JSON.parse(this.LS.getItem(n.info));return this.LS.removeItem(n.info),this.LS.removeItem(n.topology),this.LS.removeItem(n.weightSpecs),this.LS.removeItem(n.weightData),r}}class Pn{constructor(){this.managers={}}static getInstance(){return null==Pn.instance&&(Pn.instance=new Pn),Pn.instance}static registerManager(t,e){u(null!=t,(()=>"scheme must not be undefined or null.")),t.endsWith("://")&&(t=t.slice(0,t.indexOf("://"))),u(t.length>0,(()=>"scheme must not be an empty string."));const n=Pn.getInstance();u(null==n.managers[t],(()=>`A model store manager is already registered for scheme '${t}'.`)),n.managers[t]=e}static getManager(t){const e=this.getInstance().managers[t];if(null==e)throw new Error(`Cannot find model manager for scheme '${t}'`);return e}static getSchemes(){return Object.keys(this.getInstance().managers)}}class Vn{fetch(t,e){return fetch(t,e)}now(){return performance.now()}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error(`Browser's encoder only supports utf-8, but got ${e}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(t)}decode(t,e){return new TextDecoder(e).decode(t)}}if(W().get("IS_BROWSER")){W().setPlatform("browser",new Vn);try{Pn.registerManager(Ln.URL_SCHEME,new zn)}catch(t){}try{Pn.registerManager(Cn.URL_SCHEME,new Tn)}catch(t){}}var Wn=it(),Un=!1;function Gn(){return Un||(Un=!0),{}}const Hn=()=>Gn();let jn;class qn{constructor(){this.util=Gn(),this.textEncoder=new this.util.TextEncoder}fetch(t,e){return null!=W().global.fetch?W().global.fetch(t,e):(null==jn&&(jn=Hn()),jn(t,e))}now(){const t=Wn.hrtime();return 1e3*t[0]+t[1]/1e6}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error(`Node built-in encoder only supports utf-8, but got ${e}`);return this.textEncoder.encode(t)}decode(t,e){return 0===t.length?"":new this.util.TextDecoder(e).decode(t)}}function Kn(t,e="float32",n){return e=e||"float32",L(t),new At(t,e,n)}W().get("IS_NODE")&&W().setPlatform("node",new qn);const Xn=ln({cast_:function(t,e){const n=on(t,"x","cast");if(!function(t){return"bool"===t||"complex64"===t||"float32"===t||"int32"===t||"string"===t}(e))throw new Error(`Failed to cast to unknown dtype ${e}`);if("string"===e&&"string"!==n.dtype||"string"!==e&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const r={x:n},s={dtype:e};return re.runKernelFunc((t=>t.cast(n,e)),r,null,"Cast",s)}});const Yn=ln({clone_:function(t){const e=on(t,"x","clone",null),n={x:e};return re.runKernelFunc((()=>re.makeTensorFromDataId(e.dataId,e.shape,e.dtype)),n,null,"Identity")}});ne();Mt={buffer:Kn,cast:Xn,clone:Yn,print:function(t,e=!1){console.log(t.toString(e))}};function Jn(t){return new Promise((t=>setTimeout(t))).then(t)}class Zn{constructor(t){if(!W().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");t.startsWith(Zn.URL_SCHEME)&&(t=t.slice(Zn.URL_SCHEME.length)),null!=t&&0!==t.length||(t="model"),this.modelTopologyFileName=t+".json",this.weightDataFileName=t+".weights.bin"}async save(t){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const e=window.URL.createObjectURL(new Blob([t.weightData],{type:"application/octet-stream"}));if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=[{paths:["./"+this.weightDataFileName],weights:t.weightSpecs}],r={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,weightsManifest:n},s=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),a=null==this.jsonAnchor?document.createElement("a"):this.jsonAnchor;if(a.download=this.modelTopologyFileName,a.href=s,await Jn((()=>a.dispatchEvent(new MouseEvent("click")))),null!=t.weightData){const t=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;t.download=this.weightDataFileName,t.href=e,await Jn((()=>t.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:wn(t)}}}}Zn.URL_SCHEME="downloads://";function Qn(t,e,n,r){!function(t){u(null!=t&&Array.isArray(t)&&t.length>0,(()=>"promises must be a none empty array"))}(t),function(t,e){u(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${t}`)),u(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${e}`)),u(e>=t,(()=>`startFraction must be no more than endFraction, but got startFraction ${t} and endFraction ${e}`))}(n=null==n?0:n,r=null==r?1:r);let s=0;return Promise.all(t.map((a=>(a.then((a=>{const i=n+ ++s/t.length*(r-n);return e(i),a})),a))))}In.registerSaveRouter((t=>W().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(Zn.URL_SCHEME)?function(t="model"){return new Zn(t)}(t.slice(Zn.URL_SCHEME.length)):null));class tr{constructor(t,e){if(this.DEFAULT_METHOD="POST",null==e&&(e={}),this.weightPathPrefix=e.weightPathPrefix,this.onProgress=e.onProgress,this.weightUrlConverter=e.weightUrlConverter,null!=e.fetchFunc?(u("function"==typeof e.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=e.fetchFunc):this.fetch=W().platform.fetch,u(null!=t&&t.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(t)&&u(2===t.length,(()=>`URL paths for http must have a length of 2, (actual length is ${t.length}).`)),this.path=t,null!=e.requestInit&&null!=e.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=e.requestInit||{}}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const e=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);e.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:t.weightSpecs}],r={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,userDefinedMetadata:t.userDefinedMetadata,weightsManifest:n};e.body.append("model.json",new Blob([JSON.stringify(r)],{type:"application/json"}),"model.json"),null!=t.weightData&&e.body.append("model.weights.bin",new Blob([t.weightData],{type:"application/octet-stream"}),"model.weights.bin");const s=await this.fetch(this.path,e);if(s.ok)return{modelArtifactsInfo:wn(t),responses:[s]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${s.status}.`)}async load(){const t=await this.fetch(this.path,this.requestInit);if(!t.ok)throw new Error(`Request to ${this.path} failed with status code ${t.status}. Please verify this URL points to the model JSON of the model to load.`);let e;try{e=await t.json()}catch(t){let e=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?e+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":e+=" Please make sure the server is serving valid JSON for this request.",new Error(e)}const n=e.modelTopology,r=e.weightsManifest,s=e.generatedBy,a=e.convertedBy,i=e.format,o=e.userDefinedMetadata;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);let u,l;if(null!=r){const t=await this.loadWeights(r);[u,l]=t}const c={modelTopology:n,weightSpecs:u,weightData:l,userDefinedMetadata:o,generatedBy:s,convertedBy:a,format:i},h=e.modelInitializer;return h&&(c.modelInitializer=h),c}async loadWeights(t){const e=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(t){const e=t.lastIndexOf("/"),n=t.lastIndexOf("?"),r=t.substring(0,e),s=n>e?t.substring(n):"";return[r+"/",s]}(e),s=this.weightPathPrefix||n,a=[];for(const e of t)a.push(...e.weights);const i=[],o=[];for(const e of t)for(const t of e.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(t)):i.push(s+t+r);this.weightUrlConverter&&i.push(...await Promise.all(o));return[a,xn(await async function(t,e){null==e&&(e={});const n=null==e.fetchFunc?W().platform.fetch:e.fetchFunc,r=t.map((t=>n(t,e.requestInit,{isBinary:!0}))),s=(null==e.onProgress?await Promise.all(r):await Qn(r,e.onProgress,0,.5)).map((t=>t.arrayBuffer()));return null==e.onProgress?await Promise.all(s):await Qn(s,e.onProgress,.5,1)}(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function er(t){return null!=t.match(tr.URL_SCHEME_REGEX)}tr.URL_SCHEME_REGEX=/^https?:\/\//;const nr=(t,e)=>{if("undefined"==typeof fetch&&(null==e||null==e.fetchFunc))return null;{let n=!0;if(n=Array.isArray(t)?t.every((t=>er(t))):er(t),n)return rr(t,e)}return null};function rr(t,e){return new tr(t,e)}function sr(t,e){return rr(t,e)}In.registerSaveRouter(nr),In.registerLoadRouter(nr);const ar=ln({reshape_:function(t,e){const n=on(t,"x","reshape",null),r={x:n},s={shape:e};return re.runKernelFunc(((t,r)=>(e=b(e,n.size),u(n.size===p(e),(()=>"new shape and old shape must have the same number of elements.")),r([n]),t.reshape(n,e))),r,null,"Reshape",s)}});const ir=ln({matMul_:function(t,e,n=!1,r=!1){let s=on(t,"a","matMul"),a=on(e,"b","matMul");[s,a]=Yt(s,a);const i={a:s,b:a},o={transposeA:n,transposeB:r};return re.runKernelFunc(((t,e)=>{e([s,a]);const i=n?s.shape[s.rank-2]:s.shape[s.rank-1],o=r?a.shape[a.rank-1]:a.shape[a.rank-2],l=n?s.shape[s.rank-1]:s.shape[s.rank-2],c=r?a.shape[a.rank-2]:a.shape[a.rank-1],h=s.shape.slice(0,-2),d=a.shape.slice(0,-2),f=p(h),m=p(d),g=f===m||1===f||1===m;u(s.rank>=2&&a.rank>=2&&g,(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${h}) and (${d}).`)),u(i===o,(()=>`Error in matMul: inner shapes (${i}) and (${o}) of Tensors with shapes ${s.shape} and ${a.shape} and transposeA=${n} and transposeB=${r} must match.`));const y=(f>m?h:d).concat([l,c]),b=ar(s,n?[f,i,l]:[f,l,i]),x=ar(a,r?[m,c,o]:[m,o,c]),w=t.batchMatMul(b,x,n,r);return ar(w,y)}),i,null,"BatchMatMul",o)}});const or=ln({oneHot_:function(t,e,n=1,r=0){if(e<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${e}`);const s=on(t,"indices","oneHot","int32"),a=[...s.shape,e],i={indices:s},o={depth:e,onValue:n,offValue:r};return re.runKernelFunc(((t,i)=>(i([s]),ar(t.oneHot(ar(s,[s.size]),e,n,r),a))),i,null,"OneHot",o)}});const ur=ln({transpose_:function(t,e){const n=on(t,"x","transpose");if(null==e&&(e=n.shape.map(((t,e)=>e)).reverse()),u(n.rank===e.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${e}.`)),e.forEach((t=>{u(t>=0&&t<n.rank,(()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+` but got ${e}`))})),n.rank<=1)return n.clone();const r={x:n},s={perm:e};return re.runKernelFunc((t=>t.transpose(n,e)),r,null,"Transpose",s)}});ln({confusionMatrix_:function(t,e,n){const r=on(t,"labels","confusionMatrix"),s=on(e,"predictions","confusionMatrix");u(null==n||n>0&&Number.isInteger(n),(()=>`If provided, numClasses must be a positive integer, but got ${n}`)),u(1===r.rank,(()=>`Expected the rank of labels to be 1, but got ${r.rank}`)),u(1===s.rank,(()=>`Expected the rank of predictions to be 1, but got ${s.rank}`)),u(r.shape[0]===s.shape[0],(()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${s.shape[0]}. Labels and predictions should have the same number of elements.`)),u(n>0&&Number.isInteger(n),(()=>`numClasses is required to be a positive integer, but got ${n}`));const a=or(Xn(r,"int32"),n),i=or(Xn(s,"int32"),n),o=ur(a),l=ir(o,i);return Xn(l,"int32")}});let lr;const cr=ln({fromPixels_:function(t,e=3){if(e>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==t)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,s=!1,a=!1,i=!1;if(t.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&t instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&t instanceof HTMLVideoElement)s=!0;else if("undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement)a=!0;else{if(null==t.getContext)throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${t.constructor.name}`);i=!0}if(s){const e=2;if(s&&t.readyState<e)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(null!=dt("FromPixels",re.backendName)){const n={pixels:t},r={numChannels:e};return re.runKernel("FromPixels",n,r)}const[o,u]=s?[t.videoWidth,t.videoHeight]:[t.width,t.height];let l,h;if(i?l=t.getContext("2d").getImageData(0,0,o,u).data:r||n?l=t.data:(a||s)&&(null==lr&&(lr=document.createElement("canvas").getContext("2d")),lr.canvas.width=o,lr.canvas.height=u,lr.drawImage(t,0,0,o,u),l=lr.getImageData(0,0,o,u).data),4===e)h=new Int32Array(l);else{const t=o*u;h=new Int32Array(t*e);for(let n=0;n<t;n++)for(let t=0;t<e;++t)h[n*e+t]=l[4*n+t]}return function(t,e,n){if(c(t),null!=e&&3!==e.length)throw new Error("tensor3d() requires shape to have three numbers");const r=rn(t,n);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return hn(t,e,r,n)}(h,[u,o,e],"int32")}});function hr(t,e){if(t.rank<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==e.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[e.rank-1]>t.rank)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[e.rank-1]} vs. ${t.rank}`);if(0===t.size)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${t.shape}.`);const n=e.shape,r=n[n.length-1];let s=1;for(let t=0;t<n.length-1;++t)s*=n[t];const a=t.shape,i=n.slice();i.pop();let o=1;for(let e=r;e<t.rank;++e)o*=a[e],i.push(a[e]);const u=[...A(t.shape).map((t=>t/o)),1].slice(0,r);return[i,s,o,u]}function pr(t,e,n){if(e.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(t.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${t.rank}.`);if("int32"!==e.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${e.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===e.size)throw new Error(`Indices specified for empty output. indices shape: ${e.shape}`);if(0===t.size)throw new Error(`Updates specified for empty output. updates shape: ${t.shape}`)}!function(t,e,n){const r=e.rank>1?e.shape[e.rank-1]:1,s=e.rank>1?e.rank-1:1,a=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${e.shape}, shape: ${t}, sliceDim: ${r}, and batchDim: ${s}.`;if(n.rank<s)throw new Error(a+` update.rank < ${s}. `);if(t.length<r+(n.rank-s))throw new Error(a+` Output shape length < ${r+(n.rank-s)}`);if(n.rank!==s+t.length-r)throw new Error(a+" update.rank != "+(s+t.length-r));for(let t=0;t<s;++t)if(n.shape[t]!==e.shape[t])throw new Error(a+` updates.shape[${t}] (${n.shape[t]}) != indices.shape[${t}] (${e.shape[t]}).`);for(let e=0;e<n.rank-s;++e)if(n.shape[e+s]!==t[e+r])throw new Error(a+` updates.shape[${e+s}] (${n.shape[e+s]}) != shape[${e+s}] (${t[e+s]})`)}(n,e,t)}function dr(t,e,n){const r=e.shape.length,s=r>1?e.shape[r-1]:1,a=n.length;let i=1;for(let t=s;t<a;++t)i*=n[t];const o=s<1?1:s;return{sliceRank:s,numUpdates:p(e.shape)/o,sliceSize:i,strides:[...A(n.slice(0,s)),1],outputSize:p(n)}}function fr(t,e,n){const r=t.shape.length;u(r===e.length,(()=>`Error in slice${r}D: Length of begin ${e} must match the rank of the array (${r}).`)),u(r===n.length,(()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`));for(let s=0;s<r;++s)u(e[s]+n[s]<=t.shape[s],(()=>`Error in slice${r}D: begin[${s}] + size[${s}] (${e[s]+n[s]}) would overflow input.shape[${s}] (${t.shape[s]})`))}function mr(t){const e=[];let n=0;for(;t>0;)1&t&&e.push(n),t/=2,n++;return e}function gr(t,e,n){const r=[];for(let s=0;s<t.length;s++)r[s]=Math.ceil((e[s]-t[s])/n[s]);return r}function yr(t,e,n){return n<=t?n:n-(e-1)}function br(t,e){const n=[];for(let r=0;r<t;r++)n.push(e+r);return n}function xr(t,e,n,r,s,a,o,u,l){const c=t.length;let h=new Array(c),p=new Array(c),d=new Array(c);if(e.length&&n>0){const l=e[0],c=n+1;h=function(t,e,n,r,s){const a=[...s],i=br(n,e);for(let s=0;s<a.length;s++)if(i.indexOf(s)>-1)a[s]=0;else{const i=yr(e,n,s);let o=r[i];t&1<<i&&(o=0),a[s]=o}return a}(o,l,c,r,t),p=function(t,e,n,r,s){const a=[...s],o=br(n,e);for(let s=0;s<a.length;s++)if(o.indexOf(s)>-1)a[s]=Number.MAX_SAFE_INTEGER;else{const i=yr(e,n,s);let o=r[i];t&1<<i&&(o=Number.MAX_SAFE_INTEGER),a[s]=o}for(let t=0;t<a.length;t++){const e=s[t];a[t]<0&&(a[t]+=e),a[t]=i(0,a[t],s[t])}return a}(u,l,c,s,t),d=function(t,e,n,r){const s=[...t];for(let t=s.length;t<r.length;t++)s.push(1);for(let t=0;t<n;t++)0===t?s[e]=1:(s.splice(e,0,1),s.pop());return s}(a,l,c,t)}else for(let e=0;e<c;e++)h[e]=vr(o,r,a,t,e,l),p[e]=Ir(u,s,a,t,e,l),d[e]=wr(a,e,l);return{begin:h,end:p,strides:d}}function wr(t,e,n){let r=t[e];return(n&1<<e||null==r)&&(r=1),r}function vr(t,e,n,r,s,a){let o=e[s];const u=n[s]||1;(t&1<<s||a&1<<s||null==o)&&(o=u>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const l=r[s];return o<0&&(o+=l),o=i(0,o,l-1),o}function Ir(t,e,n,r,s,a){let o=e[s];const u=n[s]||1;(t&1<<s||a&1<<s||null==o)&&(o=u>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const l=r[s];return o<0&&(o+=l),o=u>0?i(0,o,l):i(-1,o,l-1),o}function kr(t,e,n){let r=n.length;for(let t=0;t<n.length;t++)if(n[t]>1){r=t;break}for(let s=r+1;s<n.length;s++)if(e[s]>0||n[s]!==t[s])return!1;return!0}function Nr(t,e){let n=t.length>0?t[t.length-1]:1;for(let r=0;r<t.length-1;r++)n+=t[r]*e[r];return n}function Sr(t,e,n){let r;const s=t.shape.length;let a;return r="number"==typeof e?[e,...new Array(s-1).fill(0)]:e.length<s?e.concat(new Array(s-e.length).fill(0)):e.slice(),r.forEach((t=>{u(-1!==t,(()=>"slice() does not support negative begin indexing."))})),a=null==n?new Array(s).fill(-1):"number"==typeof n?[n,...new Array(s-1).fill(-1)]:n.length<s?n.concat(new Array(s-n.length).fill(-1)):n,a=a.map(((e,n)=>e>=0?e:(u(-1===e,(()=>`Negative size values should be exactly -1 but got ${e} for the slice() size at index ${n}.`)),t.shape[n]-r[n]))),[r,a]}class Cr{getClassName(){return this.constructor.className}static fromConfig(t,e){return new t(e)}}class Er{constructor(){this.classNameMap={}}static getMap(){return null==Er.instance&&(Er.instance=new Er),Er.instance}static register(t){Er.getMap().classNameMap[t.className]=[t,t.fromConfig]}}function Tr(t){u(null!=t.className,(()=>"Class being registered does not have the static className property defined.")),u("string"==typeof t.className,(()=>"className is required to be a string, but got type "+typeof t.className)),u(t.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),Er.register(t)}function _r(t){W().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(t+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function $r(){return re}function Ar(){return re.memory()}function Rr(t,e){return re.tidy(t,e)}function Mr(t){Zt(t).forEach((t=>t.dispose()))}function Dr(t){return re.keep(t)}function Or(t,e,n=1){return re.registerBackend(t,e,n)}function Fr(t){return re.customGrad(t)}Dt=_r;const Lr=ln({abs_:function(t){const e=on(t,"x","abs"),n={x:e};return re.runKernelFunc(((t,n)=>(n([e]),"complex64"===e.dtype?t.complexAbs(e):t.abs(e))),n,null,"Abs")}});const Br=ln({acos_:function(t){const e=on(t,"x","acos"),n={x:e};return re.runKernelFunc(((t,n)=>{const r=t.acos(e);return n([e]),r}),n,null,"Acos")}});const zr=ln({acosh_:function(t){const e=on(t,"x","acosh"),n={x:e};return re.runKernelFunc(((t,n)=>{const r=t.acosh(e);return n([e]),r}),n,null,"Acosh")}});const Pr=ln({add_:function(t,e){let n=on(t,"a","add"),r=on(e,"b","add");[n,r]=Yt(n,r);const s={a:n,b:r};return re.runKernelFunc(((t,e)=>{const s=t.add(n,r);return e([n,r]),s}),s,null,"Add")}});const Vr=ln({addN_:function(t){u(Array.isArray(t),(()=>"The argument passed to tf.addN() must be a list of tensors")),u(t.length>=1,(()=>`Must pass at least one tensor to tf.addN(), but got ${t.length}`));const e=t.map(((t,e)=>on(t,`tensors${e}`,"addN"))),n=e[0];e.forEach((t=>{if(t.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),e.forEach((t=>{if(!d(t.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));const r=e;return re.runKernelFunc(((t,n)=>{const r=t.addN(e);return n(e),r}),r,null,"AddN")}});function Wr(t,e){for(let n=0;n<t.length;++n)if(t[t.length-n-1]!==e-1-n)return!1;return!0}function Ur(t,e){const n=[],r=t.length;for(let s=0;s<r;s++)-1===e.indexOf(s)&&n.push(t[s]);return[n,e.map((e=>t[e]))]}function Gr(t,e){return function(t,e,n){const r=t.length+e.length,s=[];let a=0,i=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?s.push(t[a++]):s.push(e[i++]);return s}(t,e.map((t=>1)),e)}function Hr(t,e,n){u(Wr(e,n),(()=>`${t} supports only inner-most axes for now. Got axes ${e} and rank-${n} input.`))}function jr(t,e){if(Wr(t,e))return null;const n=[];for(let r=0;r<e;++r)-1===t.indexOf(r)&&n.push(r);return t.forEach((t=>n.push(t))),n}function qr(t){return t.map(((t,e)=>[e,t])).sort(((t,e)=>t[1]-e[1])).map((t=>t[0]))}function Kr(t,e){const n=[];for(let r=e-t;r<e;++r)n.push(r);return n}const Xr=ln({all_:function(t,e=null,n=!1){let r=on(t,"x","all","bool");const s={x:r},a={axis:e,keepDims:n};return re.runKernelFunc((t=>{const s=x(e,r.shape);let a=s;const i=jr(a,r.rank);null!=i&&(r=ur(r,i),a=Kr(a.length,r.rank));const o=t.all(r,a);if(n){const t=Gr(o.shape,s);return ar(o,t)}return o}),s,null,"All",a)}});const Yr=ln({any_:function(t,e=null,n=!1){let r=on(t,"x","any","bool");const s={x:r},a={axis:e,keepDims:n};return re.runKernelFunc((t=>{const s=x(e,r.shape);let a=s;const i=jr(a,r.rank);null!=i&&(r=ur(r,i),a=Kr(a.length,r.rank));const o=t.any(r,a);if(n){const t=Gr(o.shape,s);return ar(o,t)}return o}),s,null,"Any",a)}});const Jr=ln({argMax_:function(t,e=0){let n=on(t,"x","argMax");const r={x:n},s={axis:e};return re.runKernelFunc(((t,r)=>{r([n]);let s=x(e,n.shape);const a=jr(s,n.rank);return null!=a&&(n=ur(n,a),s=Kr(s.length,n.rank)),t.argMax(n,s[0])}),r,null,"ArgMax",s)}});const Zr=ln({argMin_:function(t,e=0){let n=on(t,"x","argMin");const r={x:n},s={axis:e};return re.runKernelFunc(((t,r)=>{r([n]),null==e&&(e=0);let s=x(e,n.shape);const a=jr(s,n.rank);return null!=a&&(n=ur(n,a),s=Kr(s.length,n.rank)),t.argMin(n,s[0])}),r,null,"ArgMin",s)}});const Qr=ln({asin_:function(t){const e=on(t,"x","asin"),n={x:e};return re.runKernelFunc(((t,n)=>{const r=t.asin(e);return n([e]),r}),n,null,"Asin")}});const ts=ln({asinh_:function(t){const e=on(t,"x","asinh"),n={x:e};return re.runKernelFunc(((t,n)=>{const r=t.asinh(e);return n([e]),r}),n,null,"Asinh")}});const es=ln({atan_:function(t){const e=on(t,"x","atan"),n={x:e};return re.runKernelFunc(((t,n)=>{const r=t.atan(e);return n([e]),r}),n,null,"Atan")}});const ns=ln({atan2_:function(t,e){let n=on(t,"a","atan2"),r=on(e,"b","atan2");[n,r]=Yt(n,r);const s={a:n,b:r};return re.runKernelFunc(((t,e)=>{const s=t.atan2(n,r);return e([n,r]),s}),s,null,"Atan2")}});const rs=ln({atanh_:function(t){const e=on(t,"x","atanh"),n={x:e};return re.runKernelFunc(((t,n)=>{const r=t.atanh(e);return n([e]),r}),n,null,"Atanh")}});function ss(t,e,n,r,s="NHWC",a){return os(t,[...e,t[3]],n,a,r,null,null,gs(s))}function as(t,e,n,r,s,a,i="channelsLast"){const[o,u]=cs(e);let l;if("channelsLast"===i)l=[o,u,t[3],t[3]];else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);l=[o,u,t[1],t[1]]}return os(t,l,n,r,s,a,!1,i)}function is(t,e,n,r,s,a,i="NDHWC"){const[o,u,l]=hs(e);let c,h;if("NDHWC"===i)h="channelsLast",c=[o,u,l,t[4],t[4]];else{if("NCDHW"!==i)throw new Error(`Unknown dataFormat ${i}`);h="channelsFirst",c=[o,u,l,t[1],t[1]]}return us(t,c,n,r,s,!1,h,a)}function os(t,e,n,r,s,a,i=!1,o="channelsLast"){let[l,c,h,p]=[-1,-1,-1,-1];if("channelsLast"===o)[l,c,h,p]=t;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[l,p,c,h]=t}const[d,m,,g]=e,[y,b]=cs(n),[x,w]=cs(r),v=ps(d,x),I=ps(m,w),{padInfo:k,outHeight:N,outWidth:S}=function(t,e,n,r,s,a,i,o,l){let c,h,p;if("number"==typeof t){c={top:t,bottom:t,left:t,right:t,type:0===t?"VALID":"NUMBER"};const s=function(t,e,n,r,s){null==r&&(r=ls(t,e,n));const a=t[0],i=t[1],o=ds((a-e+2*r)/n+1,s);u(f(o),(()=>`The output # of rows (${o}) must be an integer. Change the stride and/or zero pad parameters`));const l=ds((i-e+2*r)/n+1,s);return u(f(l),(()=>`The output # of columns (${l}) must be an integer. Change the stride and/or zero pad parameters`)),[o,l]}([e,n],a,r,t,o);h=s[0],p=s[1]}else if("same"===t){h=Math.ceil(e/r),p=Math.ceil(n/s);const t=Math.max(0,(h-1)*r+a-e),o=Math.max(0,(p-1)*s+i-n),u=Math.floor(t/2),l=t-u,d=Math.floor(o/2);c={top:u,bottom:l,left:d,right:o-d,type:"SAME"}}else if("valid"===t)c={top:0,bottom:0,left:0,right:0,type:"VALID"},h=Math.ceil((e-a+1)/r),p=Math.ceil((n-i+1)/s);else{if("object"!=typeof t)throw Error(`Unknown padding parameter: ${t}`);{const u="channelsLast"===l?t[1][0]:t[2][0],d="channelsLast"===l?t[1][1]:t[2][1],f="channelsLast"===l?t[2][0]:t[3][0],m="channelsLast"===l?t[2][1]:t[3][1];c={top:u,bottom:d,left:f,right:m,type:0===u&&0===d&&0===f&&0===m?"VALID":"EXPLICIT"},h=ds((e-a+u+d)/r+1,o),p=ds((n-i+f+m)/s+1,o)}}return{padInfo:c,outHeight:h,outWidth:p}}(s,c,h,y,b,v,I,a,o),C=i?g*p:g;let E;return"channelsFirst"===o?E=[l,C,N,S]:"channelsLast"===o&&(E=[l,N,S,C]),{batchSize:l,dataFormat:o,inHeight:c,inWidth:h,inChannels:p,outHeight:N,outWidth:S,outChannels:C,padInfo:k,strideHeight:y,strideWidth:b,filterHeight:d,filterWidth:m,effectiveFilterHeight:v,effectiveFilterWidth:I,dilationHeight:x,dilationWidth:w,inShape:t,outShape:E,filterShape:e}}function us(t,e,n,r,s,a=!1,i="channelsLast",o){let[l,c,h,p,d]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[l,c,h,p,d]=t;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[l,d,c,h,p]=t}const[m,g,y,,b]=e,[x,w,v]=hs(n),[I,k,N]=hs(r),S=ps(m,I),C=ps(g,k),E=ps(y,N),{padInfo:T,outDepth:_,outHeight:$,outWidth:A}=function(t,e,n,r,s,a,i,o,l,c,h){let p,d,m,g;if("number"==typeof t){p={top:t,bottom:t,left:t,right:t,front:t,back:t,type:0===t?"VALID":"NUMBER"};const a=function(t,e,n,r,s,a){null==s&&(s=ls(t,e,r));const i=t[0],o=t[1],l=t[2],c=ds((i-e+2*s)/r+1,a);u(f(c),(()=>`The output # of depths (${c}) must be an integer. Change the stride and/or zero pad parameters`));const h=ds((o-e+2*s)/r+1,a);u(f(h),(()=>`The output # of rows (${h}) must be an integer. Change the stride and/or zero pad parameters`));const p=ds((l-e+2*s)/r+1,a);return u(f(p),(()=>`The output # of columns (${p}) must be an integer. Change the stride and/or zero pad parameters`)),[c,h,p,n]}([e,n,r,1],o,1,s,t,h);d=a[0],m=a[1],g=a[2]}else if("same"===t){d=Math.ceil(e/s),m=Math.ceil(n/a),g=Math.ceil(r/i);const t=(d-1)*s+o-e,u=(m-1)*a+l-n,h=(g-1)*i+c-r,f=Math.floor(t/2),y=t-f,b=Math.floor(u/2),x=u-b,w=Math.floor(h/2);p={top:b,bottom:x,left:w,right:h-w,front:f,back:y,type:"SAME"}}else{if("valid"!==t)throw Error(`Unknown padding parameter: ${t}`);p={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},d=Math.ceil((e-o+1)/s),m=Math.ceil((n-l+1)/a),g=Math.ceil((r-c+1)/i)}return{padInfo:p,outDepth:d,outHeight:m,outWidth:g}}(s,c,h,p,x,w,v,S,C,E,o),R=a?b*d:b;let M;return"channelsFirst"===i?M=[l,R,_,$,A]:"channelsLast"===i&&(M=[l,_,$,A,R]),{batchSize:l,dataFormat:i,inDepth:c,inHeight:h,inWidth:p,inChannels:d,outDepth:_,outHeight:$,outWidth:A,outChannels:R,padInfo:T,strideDepth:x,strideHeight:w,strideWidth:v,filterDepth:m,filterHeight:g,filterWidth:y,effectiveFilterDepth:S,effectiveFilterHeight:C,effectiveFilterWidth:E,dilationDepth:I,dilationHeight:k,dilationWidth:N,inShape:t,outShape:M,filterShape:e}}function ls(t,e,n,r=1){const s=ps(e,r);return Math.floor((t[0]*(n-1)-n+s)/2)}function cs(t){return"number"==typeof t?[t,t,t]:2===t.length?[t[0],t[1],1]:t}function hs(t){return"number"==typeof t?[t,t,t]:t}function ps(t,e){return e<=1?t:t+(t-1)*(e-1)}function ds(t,e){if(!e)return t;switch(e){case"round":return Math.round(t);case"ceil":return Math.ceil(t);case"floor":return Math.floor(t);default:throw new Error(`Unknown roundingMode ${e}`)}}function fs(t){const[e,n,r]=cs(t);return 1===e&&1===n&&1===r}function ms(t,e){return fs(t)||fs(e)}function gs(t){if("NHWC"===t)return"channelsLast";if("NCHW"===t)return"channelsFirst";throw new Error(`Unknown dataFormat ${t}`)}const ys=ln({avgPool_:function(t,e,n,r,s){const a=on(t,"x","avgPool","float32");u(ms(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let i=a,o=!1;3===a.rank&&(o=!0,i=ar(a,[1,a.shape[0],a.shape[1],a.shape[2]])),u(4===i.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`)),null!=s&&u(f(r),(()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`));const l={x:i},c={filterSize:e,strides:n,pad:r,dimRoundingMode:s};let h=re.runKernelFunc(((t,a)=>{const o=as(i.shape,e,n,1,r,s);return a([i]),1===o.filterWidth&&1===o.filterHeight&&d(o.inShape,o.outShape)?i.clone():t.avgPool(i,o)}),l,null,"AvgPool",c);return h=Xn(h,a.dtype),o?ar(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});const bs=ln({avgPool3d_:function(t,e,n,r,s,a="NDHWC",i){null==i?i=[1,1,1]:_r("dilations is deprecated, this field will be gone in v3.0.0.");const o=on(t,"x","avgPool3d","float32");let l=o,c=!1;4===o.rank&&(c=!0,l=ar(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),u(5===l.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${l.rank}.`)),u("NDHWC"===a,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`)),u(ms(n,i),(()=>`Error in avgPool3d: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`)),null!=s&&u(f(r),(()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`));const h={x:l},p={filterSize:e,strides:n,pad:r,dimRoundingMode:s,dataFormat:a,dilations:i};let d=re.runKernelFunc(((t,o)=>{null==i&&(i=[1,1,1]);const u=is(l.shape,e,n,i,r,s,a);return o([l]),t.avgPool3d(l,u)}),h,null,"AvgPool3D",p);return d=Xn(d,l.dtype),c?ar(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});const xs=ln({batchToSpaceND_:function(t,e,n){const r=on(t,"x","batchToSpaceND"),s=e.reduce(((t,e)=>t*e));u(r.rank>=1+e.length,(()=>`input rank is ${r.rank} but should be > than blockShape.length ${e.length}`)),u(n.length===e.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${e.length}`)),u(r.shape[0]%s==0,(()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${s}`));const a={x:r},i={blockShape:e,crops:n};return re.runKernelFunc((t=>t.batchToSpaceND(r,e,n)),a,null,"BatchToSpaceND",i)}});function ws(t){return null==t?null:0===t.rank?ar(t,[t.size]):1===t.rank?t:2===t.rank?ar(t,[1,1,t.shape[0],t.shape[1]]):3===t.rank?ar(t,[1,t.shape[0],t.shape[1],t.shape[2]]):t}const vs=ln({batchNorm_:function(t,e,n,r,s,a){null==a&&(a=.001);const i=on(t,"x","batchNorm"),o=on(e,"mean","batchNorm"),l=on(n,"variance","batchNorm");let c,h;null!=s&&(c=on(s,"scale","batchNorm")),null!=r&&(h=on(r,"offset","batchNorm")),u(o.rank===l.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),u(null==h||o.rank===h.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),u(null==c||o.rank===c.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const p=function(t){let e;return e=0===t.rank||1===t.rank?ar(t,[1,1,1,t.size]):2===t.rank?ar(t,[1,1,t.shape[0],t.shape[1]]):3===t.rank?ar(t,[1,t.shape[0],t.shape[1],t.shape[2]]):t,e}(i),d={x:p,scale:c,offset:h,mean:o,variance:l},f={varianceEpsilon:a},m=re.runKernelFunc(((t,e)=>(e([p,o,l,c]),t.batchNorm(p,ws(o),ws(l),ws(h),ws(c),a))),d,null,"FusedBatchNorm",f);return ar(m,i.shape)}});const Is=ln({batchNorm2d_:function(t,e,n,r,s,a){const i=on(t,"x","batchNorm"),o=on(e,"mean","batchNorm"),l=on(n,"variance","batchNorm");let c,h;return null!=s&&(c=on(s,"scale","batchNorm")),null!=r&&(h=on(r,"offset","batchNorm")),u(2===i.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`)),u(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`)),u(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=c&&u(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${c.rank}.`)),null!=h&&u(2===h.rank||1===h.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${h.rank}.`)),vs(i,o,l,h,c,a)}});const ks=ln({batchNorm3d_:function(t,e,n,r,s,a){const i=on(t,"x","batchNorm"),o=on(e,"mean","batchNorm"),l=on(n,"variance","batchNorm");let c,h;return null!=s&&(c=on(s,"scale","batchNorm")),null!=r&&(h=on(r,"offset","batchNorm")),u(3===i.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`)),u(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`)),u(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=c&&u(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${c.rank}.`)),null!=h&&u(3===h.rank||1===h.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${h.rank}.`)),vs(i,o,l,h,c,a)}});const Ns=ln({batchNorm4d_:function(t,e,n,r,s,a){const i=on(t,"x","batchNorm"),o=on(e,"mean","batchNorm"),l=on(n,"variance","batchNorm");let c,h;return null!=s&&(c=on(s,"scale","batchNorm")),null!=r&&(h=on(r,"offset","batchNorm")),u(4===i.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`)),u(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`)),u(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=c&&u(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${c.rank}.`)),null!=h&&u(4===h.rank||1===h.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${h.rank}.`)),vs(i,o,l,h,c,a)}});const Ss=ln({broadcastTo_:function(t,e){let n=on(t,"broadcastTo","x");const r=n.shape;if(e.some((t=>!(t>0)||t%1!=0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${e}].`);if(e.length<n.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${n.rank}.`);if(e.length>n.rank){const t=n.shape.slice();for(;t.length<e.length;)t.unshift(1);n=ar(n,t)}const s=n.shape,a=Array.from(e);for(let t=e.length-1;t>=0;t--)if(s[t]===e[t])a[t]=1;else if(1!==n.shape[t])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${e}].`);if(0===a.map(((t,e)=>t>1?e:-1)).filter((t=>t>=0)).length)return Yn(n);const i={x:n},o={shape:e,inputShape:s};return re.runKernelFunc((t=>t.tile(n,a)),i,null,"BroadcastTo",o)}});const Cs=ln({ceil_:function(t){const e=on(t,"x","ceil"),n={x:e};return re.runKernelFunc((t=>t.ceil(e)),n,null,"Ceil")}});const Es=ln({clipByValue_:function(t,e,n){const r=on(t,"x","clipByValue");u(e<=n,(()=>`Error in clip: min (${e}) must be less than or equal to max (${n}).`));const s={x:r},a={clipValueMin:e,clipValueMax:n};return re.runKernelFunc(((t,s)=>{const a=t.clip(r,e,n);return s([r]),a}),s,null,"ClipByValue",a)}});function Ts(t,e){const n=t[0].length;t.forEach(((t,e)=>{u(t.length===n,(()=>`Error in concat${n}D: rank of tensors[${e}] must be the same as the rank of the rest (${n})`))})),u(e>=0&&e<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const r=t[0];t.forEach(((t,s)=>{for(let a=0;a<n;a++)u(a===e||t[a]===r[a],(()=>`Error in concat${n}D: Shape of tensors[${s}] (${t}) does not match the shape of the rest (${r}) along the non-concatenated axis ${s}.`))}))}function _s(t,e){const n=t[0].slice();for(let r=1;r<t.length;r++)n[e]+=t[r][e];return n}const $s=ln({concat_:function(t,e=0){u(t.length>=1,(()=>"Pass at least one tensor to concat"));let n=un(t,"tensors","concat");"complex64"===n[0].dtype&&n.forEach((t=>{if("complex64"!==t.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${t.dtype}. `)}));const r=n,s={axis:e};return re.runKernelFunc(((t,r)=>{const s=x(e,n[0].shape)[0],a=_s(n.map((t=>t.shape)),s);if(0===p(a))return pn([],a);if(n=n.filter((t=>t.size>0)),1===n.length)return n[0];Ts(n.map((t=>t.shape)),s);const i=t.concat(n,s);return r(n),i}),r,null,"Concat",s)}});const As=ln({concat1d_:function(t){return $s(t,0)}});const Rs=ln({concat2d_:function(t,e){return $s(t,e)}});const Ms=ln({concat3d_:function(t,e){return $s(t,e)}});const Ds=ln({concat4d_:function(t,e){return $s(t,e)}});const Os=ln({conv2d_:function(t,e,n,r,s="NHWC",a=[1,1],i){const o=on(t,"x","conv2d"),l=on(e,"filter","conv2d");let c=o,h=!1;3===o.rank&&(h=!0,c=ar(o,[1,o.shape[0],o.shape[1],o.shape[2]])),u(4===c.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${c.rank}.`)),u(4===l.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`)),null!=i&&u(f(r),(()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`));const p="NHWC"===s?c.shape[3]:c.shape[1];u(p===l.shape[2],(()=>`Error in conv2d: depth of input (${p}) must match input depth for filter ${l.shape[2]}.`)),u(ms(n,a),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`));const d={x:c,filter:l},m={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i},g=re.runKernelFunc(((t,e)=>{const o=gs(s),u=os(c.shape,l.shape,n,a,r,i,!1,o),h=t.conv2d(c,l,u);return e([c,l]),h}),d,null,"Conv2D",m);return h?ar(g,[g.shape[1],g.shape[2],g.shape[3]]):g}});const Fs=ln({conv1d_:function(t,e,n,r,s="NWC",a=1,i){const o=on(t,"x","conv1d"),l=on(e,"filter","conv1d");let c=o,h=!1;2===o.rank&&(h=!0,c=ar(o,[1,o.shape[0],o.shape[1]])),u(3===c.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${c.rank}.`)),u(3===l.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`)),null!=i&&u(f(r),(()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`)),u(c.shape[2]===l.shape[1],(()=>`Error in conv1d: depth of input (${c.shape[2]}) must match input depth for filter ${l.shape[1]}.`)),u(ms(n,a),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${a}'`)),u("NWC"===s,(()=>`Error in conv1d: got dataFormat of ${s} but only NWC is currently supported.`));const p=ar(l,[1,l.shape[0],l.shape[1],l.shape[2]]),d=ar(c,[c.shape[0],1,c.shape[1],c.shape[2]]),m=Os(d,p,[1,n],r,"NHWC",[1,a],i);return ar(m,h?[m.shape[2],m.shape[3]]:[m.shape[0],m.shape[2],m.shape[3]])}});const Ls=ln({conv2DBackpropInput_:function(t,e,n,r,s,a="NHWC",i){u(t.length===e.rank,(()=>`Length of inShape (${t.length}) and rank of dy (${e.rank}) must match`));let o=t,l=e,c=!1;3===e.rank&&(c=!0,l=ar(e,[1,e.shape[0],e.shape[1],e.shape[2]]),o=[1,t[0],t[1],t[2]]),u(4===o.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`)),u(4===l.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`)),u(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const h="NHWC"===a?o[3]:o[1],p="NHWC"===a?l.shape[3]:l.shape[1];u(h===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${h}) must match input depth for filter ${n.shape[2]}.`)),u(p===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${p}) must match output depth for filter ${n.shape[3]}.`)),null!=i&&u(f(s),(()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`));const d={dy:l,filter:n},m={strides:r,pad:s,dataFormat:a,dimRoundingMode:i,inputShape:o},g=re.runKernelFunc(((t,e)=>{const u=gs(a),c=os(o,n.shape,r,1,s,i,!1,u),h=t.conv2dDerInput(l,n,c);return e([l,n]),h}),d,null,"Conv2DBackpropInput",m);return c?ar(g,[g.shape[1],g.shape[2],g.shape[3]]):g}});const Bs=ln({conv2dTranspose_:function(t,e,n,r,s,a){const i=on(t,"x","conv2dTranspose"),o=on(e,"filter","conv2dTranspose");return Ls(n,i,o,r,s,"NHWC",a)}});const zs=ln({conv3d_:function(t,e,n,r,s="NDHWC",a=[1,1,1]){const i=on(t,"x","conv3d"),o=on(e,"filter","conv3d");let l=i,c=!1;4===i.rank&&(c=!0,l=ar(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),u(5===l.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`)),u(5===o.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`)),u(l.shape[4]===o.shape[3],(()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`)),u(ms(n,a),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),u("NDHWC"===s,(()=>`Error in conv3d: got dataFormat of ${s} but only NDHWC is currently supported.`));const h={x:l,filter:o},p={strides:n,pad:r,dataFormat:s,dilations:a},d=re.runKernelFunc(((t,e)=>{const s=us(l.shape,o.shape,n,a,r),i=t.conv3d(l,o,s);return e([l,o]),i}),h,null,"Conv3D",p);return c?ar(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});const Ps=ln({cos_:function(t){const e=on(t,"x","cos"),n={x:e};return re.runKernelFunc(((t,n)=>{const r=t.cos(e);return n([e]),r}),n,null,"Cos")}});const Vs=ln({cosh_:function(t){const e=on(t,"x","cosh"),n={x:e};return re.runKernelFunc(((t,n)=>{const r=t.cosh(e);return n([e]),r}),n,null,"Cosh")}});const Ws=ln({cumsum_:function(t,e=0,n=!1,r=!1){const s=on(t,"x","cumsum"),a={x:s},i={axis:e,exclusive:n,reverse:r};return re.runKernelFunc(((t,a)=>{const i=jr([e],s.rank);let o=s;null!=i&&(o=ur(s,i));const u=Kr(1,s.rank)[0];let l=t.cumsum(o,u,n,r);if(a([s]),null!=i){const t=qr(i);l=ur(l,t)}return l}),a,null,"Cumsum",i)}});const Us=ln({depthToSpace_:function(t,e,n="NHWC"){const r=on(t,"x","depthToSpace"),s="NHWC"===n?r.shape[1]:r.shape[2],a="NHWC"===n?r.shape[2]:r.shape[3],i="NHWC"===n?r.shape[3]:r.shape[1];u(s*e>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${e}  for depthToSpace with input shape\n    ${r.shape}`)),u(a*e>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${e} for depthToSpace with input shape\n        ${r.shape}`)),u(i%(e*e)==0,(()=>`Dimension size must be evenly divisible by ${e*e} but is ${i} for depthToSpace with input shape ${r.shape}`));const o={x:r},l={blockSize:e,dataFormat:n};return re.runKernelFunc((t=>t.depthToSpace(r,e,n)),o,null,"DepthToSpace",l)}});const Gs=ln({depthwiseConv2d_:function(t,e,n,r,s="NHWC",a=[1,1],i){const o=on(t,"x","depthwiseConv2d"),l=on(e,"filter","depthwiseConv2d");let c=o,h=!1;3===o.rank&&(h=!0,c=ar(o,[1,o.shape[0],o.shape[1],o.shape[2]])),u(4===c.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${c.rank}.`)),u(4===l.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`)),u(c.shape[3]===l.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${c.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`)),null!=i&&u(f(r),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`));const p={x:c,filter:l},d={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i},m=re.runKernelFunc(((t,e)=>{null==a&&(a=[1,1]),u(ms(n,a),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`));const s=os(c.shape,l.shape,n,a,r,i,!0),o=t.depthwiseConv2D(c,l,s);return e([c,l]),o}),p,null,"DepthwiseConv2dNative",d);return h?ar(m,[m.shape[1],m.shape[2],m.shape[3]]):m}});const Hs=ln({dilation2d_:function(t,e,n,r,s=[1,1],a="NHWC"){const i=on(t,"x","dilation2d"),o=on(e,"filter","dilation2d");u(3===i.rank||4===i.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`)),u(3===o.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`)),u("NHWC"===a,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${a}`));let l=i,c=!1;3===i.rank&&(l=ar(i,[1,i.shape[0],i.shape[1],i.shape[2]]),c=!0);const h={x:l,filter:o},p={strides:n,pad:r,dilations:s},d=re.runKernel("Dilation2D",h,p);return c?ar(d,[d.shape[1],d.shape[2],d.shape[3]]):d}});const js=ln({floorDiv_:function(t,e){let n=on(t,"a","floorDiv"),r=on(e,"b","floorDiv");[n,r]=Yt(n,r);const s={a:n,b:r};return re.runKernelFunc(((t,e)=>{const s=t.floorDiv(n,r);return e([n,r]),s}),s,null,"FloorDiv")}});const qs=ln({div_:function(t,e){let n=on(t,"a","div"),r=on(e,"b","div");if([n,r]=Yt(n,r),"int32"===n.dtype&&"int32"===r.dtype)return js(n,r);const s={a:n,b:r};return re.runKernelFunc(((t,e)=>{const s=t.realDivide(n,r);return e([n,r]),s}),s,null,"Div",{})}});function Ks(t,e){const n=t.length,r=[];for(let s=0;s<n;s++){const a=n-1-s,i=t[a]||1;(e[e.length-1-s]||1)>1&&1===i&&r.unshift(a)}return r}function Xs(t,e){const n=[];for(let r=0;r<e.length;r++){const s=t[t.length-r-1],a=e.length-r-1,i=e[a];(null==s||1===s&&i>1)&&n.unshift(a)}return n}function Ys(t,e){const n=[],r=Math.max(t.length,e.length);for(let s=0;s<r;s++){let r=t[t.length-s-1];null==r&&(r=1);let a=e[e.length-s-1];if(null==a&&(a=1),1===r)n.unshift(a);else if(1===a)n.unshift(r);else{if(r!==a){throw Error(`Operands could not be broadcast together with shapes ${t} and ${e}.`)}n.unshift(r)}}return n}const Js=ln({equal_:function(t,e){let n=on(t,"a","equal"),r=on(e,"b","equal");[n,r]=Yt(n,r),Ys(n.shape,r.shape);const s={a:n,b:r};return re.runKernelFunc((t=>t.equal(n,r)),s,null,"Equal")}});const Zs=ln({where_:function(t,e,n){const r=on(e,"a","where"),s=on(n,"b","where"),a=on(t,"condition","where","bool"),i=Ys(r.shape,s.shape),o=Ss(r,i),c=Ss(s,i);1===a.rank&&u(a.shape[0]===r.shape[0],(()=>"The first dimension of `a` must match the size of `condition`.")),1!==a.rank&&l(a.shape,c.shape,"Error in where: ");const h={condition:a,t:o,e:c};return re.runKernelFunc(((t,e)=>{const n=t.select(a,o,c);return e([a]),n}),h,null,"SelectV2")}});const Qs=ln({zerosLike_:function(t){const e=on(t,"x","zerosLike"),n={x:e};return re.runKernelFunc((t=>t.zerosLike(e)),n,null,"ZerosLike")}});const ta=ln({divNoNan_:function(t,e){let n=on(t,"a","div"),r=on(e,"b","div");[n,r]=Yt(n,r);const s=qs(n,r),a=Qs(s),i=Js(r,a);return Zs(i,a,s)}});const ea=ln({elu_:function(t){const e=on(t,"x","elu"),n={x:e};return re.runKernelFunc(((t,n)=>{const r=t.elu(e);return n([r]),r}),n,null,"Elu")}});const na=ln({erf_:function(t){let e=on(t,"x","erf");u("int32"===e.dtype||"float32"===e.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===e.dtype&&(e=Xn(e,"float32"));const n={x:e};return re.runKernelFunc(((t,n)=>{const r=t.erf(e);return n([e]),r}),n,null,"Erf")}});const ra=ln({exp_:function(t){const e=on(t,"x","exp"),n={x:e};return re.runKernelFunc(((t,n)=>{const r=t.exp(e);return n([r]),r}),n,null,"Exp")}});const sa=ln({expandDims_:function(t,e=0){const n=on(t,"x","expandDims",null);u(e<=n.rank,(()=>"Axis must be <= rank of the tensor"));const r=n.shape.slice();return e<0&&(u(-(n.rank+1)<=e,(()=>`Axis must be in the interval [${-(n.rank+1)}, ${n.rank}]`)),e=n.rank+e+1),r.splice(e,0,1),ar(n,r)}});const aa=ln({expm1_:function(t){const e=on(t,"x","expm1"),n={x:e};return re.runKernelFunc(((t,n)=>{const r=t.expm1(e);return n([e]),r}),n,null,"Expm1")}});const ia=ln({tile_:function(t,e){const n=on(t,"x","tile",null);u(n.rank===e.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${e}.`));const r=[n],s={x:n},a={reps:e};return re.runKernelFunc(((t,r)=>{const s=t.tile(n,e);return r([n]),s}),s,null,"Tile",a,r)}});const oa=ln({eye_:function(t,e,n,r="float32"){null==e&&(e=t);const s=Kn([t,e],r),a=t<=e?t:e;for(let t=0;t<a;++t)s.set(1,t,t);const i=ar(s.toTensor(),[t,e]);if(null==n)return i;if(1===n.length)return ia(sa(i,0),[n[0],1,1]);if(2===n.length)return ia(sa(sa(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return ia(sa(sa(sa(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});function ua(t,e,n){const r={shape:t,value:e,dtype:n};return re.runKernelFunc((r=>r.fill(t,e,n)),{},null,"Fill",r)}const la=ln({floor_:function(t){const e=on(t,"x","floor"),n={x:e};return re.runKernelFunc((t=>t.floor(e)),n,null,"Floor")}});function ca(t){return t<=30?t:$(t,Math.floor(Math.sqrt(t)))}const ha=ln({gather_:function(t,e,n=0){const r=on(t,"x","gather"),s=on(e,"indices","gather","int32"),a={x:r,indices:s},i={axis:n};return re.runKernelFunc(((t,e)=>{const a=x(n,r.shape)[0],i=function(t,e,n){const r=t.shape[n],s=[];let a=1,i=1;for(let e=0;e<n;e++)s.push(t.shape[e]),a*=t.shape[e];for(let t=0;t<e.rank;t++)s.push(e.shape[t]);for(let e=n+1;e<t.rank;e++)s.push(t.shape[e]),i*=t.shape[e];return{batchSize:a,sliceSize:i,dimSize:r,outputShape:s}}(r,s,a),o=t.gather(r,ar(s,[s.size]),a);return e([r,s]),ar(o,i.outputShape)}),a,null,"GatherV2",i)}});const pa=ln({greater_:function(t,e){let n=on(t,"a","greater"),r=on(e,"b","greater");[n,r]=Yt(n,r),Ys(n.shape,r.shape);const s={a:n,b:r};return re.runKernelFunc((t=>t.greater(n,r)),s,null,"Greater")}});const da=ln({greaterEqual_:function(t,e){let n=on(t,"a","greaterEqual"),r=on(e,"b","greaterEqual");[n,r]=Yt(n,r),Ys(n.shape,r.shape);const s={a:n,b:r};return re.runKernelFunc(((t,e)=>{const s=t.greaterEqual(n,r);return e([n,r]),s}),s,null,"GreaterEqual")}});const fa=ln({imag_:function(t){const e=on(t,"input","imag"),n={input:e};return re.runKernelFunc((t=>t.imag(e)),n,null,"Imag")}});const ma=ln({isFinite_:function(t){const e=on(t,"x","isFinite"),n={x:e};return re.runKernelFunc((t=>t.isFinite(e)),n,null,"IsFinite")}});const ga=ln({isInf_:function(t){const e=on(t,"x","isInf"),n={x:e};return re.runKernelFunc((t=>t.isInf(e)),n,null,"IsInf")}});const ya=ln({isNaN_:function(t){const e=on(t,"x","isNaN"),n={x:e};return re.runKernelFunc((t=>t.isNaN(e)),n,null,"IsNan")}});const ba=ln({maximum_:function(t,e){let n=on(t,"a","maximum"),r=on(e,"b","maximum");[n,r]=Yt(n,r),"bool"===n.dtype&&(n=Xn(n,"int32"),r=Xn(r,"int32")),Ys(n.shape,r.shape);const s={a:n,b:r};return re.runKernelFunc(((t,e)=>{const s=t.maximum(n,r);return e([n,r]),s}),s,null,"Maximum")}});const xa=ln({mul_:function(t,e){let n=on(t,"a","mul"),r=on(e,"b","mul");[n,r]=Yt(n,r);const s={a:n,b:r};return re.runKernelFunc(((t,e)=>{const s=t.multiply(n,r);return e([n,r]),s}),s,null,"Multiply")}});function wa(t,e){if((N(t)&&"string"!==e||Array.isArray(t))&&"complex64"!==e)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===e&&N(t)&&!(t instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return hn(t,[],[],e)}const va=ln({leakyRelu_:function(t,e=.2){const n=on(t,"x","leakyRelu");return ba(xa(wa(e),n),n)}});const Ia=ln({less_:function(t,e){let n=on(t,"a","less"),r=on(e,"b","less");[n,r]=Yt(n,r),Ys(n.shape,r.shape);const s={a:n,b:r};return re.runKernelFunc((t=>t.less(n,r)),s,null,"Less")}});const ka=ln({lessEqual_:function(t,e){let n=on(t,"a","lessEqual"),r=on(e,"b","lessEqual");[n,r]=Yt(n,r),Ys(n.shape,r.shape);const s={a:n,b:r};return re.runKernelFunc(((t,e)=>{const s=t.lessEqual(n,r);return e([n,r]),s}),s,null,"LessEqual")}});function Na(t,e,n){if(n<=0)throw new Error("The number of values should be positive.");const r={start:t,stop:e,num:n};return re.runKernelFunc((r=>r.linspace(t,e,n)),{},null,"LinSpace",r)}const Sa=ln({localResponseNormalization_:function(t,e=5,n=1,r=1,s=.5){const a=on(t,"x","localResponseNormalization");u(4===a.rank||3===a.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${a.rank}.`)),u(f(e),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`));let i=a,o=!1;3===a.rank&&(o=!0,i=ar(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const l={x:i},c={depthRadius:e,bias:n,alpha:r,beta:s},h=re.runKernelFunc(((t,a)=>{const o=t.localResponseNormalization4D(i,e,n,r,s);return a([i,o]),o}),l,null,"LRN",c);return o?ar(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});const Ca=ln({log_:function(t){const e=on(t,"x","log"),n={x:e};return re.runKernelFunc(((t,n)=>{const r=t.log(e);return n([e]),r}),n,null,"Log")}});const Ea=ln({log1p_:function(t){const e=on(t,"x","log1p"),n={x:e};return re.runKernelFunc(((t,n)=>{const r=t.log1p(e);return n([e]),r}),n,null,"Log1p")}});const Ta=ln({neg_:function(t){const e=on(t,"x","neg"),n={x:e};return re.runKernelFunc((t=>t.neg(e)),n,null,"Negate")}});const _a=ln({sigmoid_:function(t){const e=on(t,"x","sigmoid"),n={x:e};return re.runKernelFunc(((t,n)=>{const r=t.sigmoid(e);return n([r]),r}),n,null,"Sigmoid")}});const $a=ln({softplus_:function(t){const e=on(t,"x","softplus"),n={x:e};return re.runKernelFunc(((t,n)=>{const r=t.softplus(e);return n([e]),r}),n,null,"Softplus")}});const Aa=ln({logSigmoid_:function(t){const e=on(t,"x","logSigmoid");return Fr((t=>({value:Ta($a(Ta(t))),gradFunc:e=>xa(e,_a(Ta(t)))})))(e)}});const Ra=ln({max_:function(t,e=null,n=!1){const r=on(t,"x","max"),s={x:r},a={reductionIndices:e,keepDims:n};return re.runKernelFunc(((t,s)=>{let a=x(e,r.shape);const i=jr(a,r.rank);let o=r;null!=i&&(o=ur(r,i),a=Kr(a.length,o.rank));const u=t.max(o,a);null!=i&&o.dispose();let l=u;if(n){const t=Gr(l.shape,x(e,r.shape));l=ar(l,t),u.dispose()}return s([r,l]),l}),s,null,"Max",a)}});const Ma=ln({sub_:function(t,e){let n=on(t,"a","sub"),r=on(e,"b","sub");[n,r]=Yt(n,r);const s={a:n,b:r};return re.runKernelFunc(((t,e)=>{const s=t.subtract(n,r);return e([n,r]),s}),s,null,"Sub")}});const Da=ln({sum_:function(t,e=null,n=!1){let r=on(t,"x","sum");"bool"===r.dtype&&(r=Xn(r,"int32"));const s={x:r},a={axis:e,keepDims:n};return re.runKernelFunc(((t,s)=>{s([r]);const a=x(e,r.shape),i=jr(a,r.rank);let o=a,u=r;null!=i&&(u=ur(r,i),o=Kr(o.length,r.rank));let l=t.sum(u,o);if(n){const t=Gr(l.shape,a);l=ar(l,t)}return l}),s,null,"Sum",a)}});const Oa=ln({logSoftmax_:function(t,e=-1){const n=on(t,"logits","logSoftmax");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${e}`);const r={logits:n},s={axis:e};return re.runKernelFunc(((n,r)=>{const s=Ra(t,e,!0),a=Ma(t,s),i=Ma(Xn(a,"float32"),Ca(Da(ra(a),e,!0)));return r([i]),i}),r,null,"LogSoftmax",s)}});const Fa=ln({logicalAnd_:function(t,e){const n=on(t,"a","logicalAnd","bool"),r=on(e,"b","logicalAnd","bool");Ys(n.shape,r.shape);const s={a:n,b:r};return re.runKernelFunc((t=>t.logicalAnd(n,r)),s,null,"LogicalAnd")}});const La=ln({logicalNot_:function(t){const e=on(t,"x","logicalNot","bool"),n={x:e};return re.runKernelFunc((t=>t.logicalNot(e)),n,null,"LogicalNot")}});const Ba=ln({logicalOr_:function(t,e){const n=on(t,"a","logicalOr","bool"),r=on(e,"b","logicalOr","bool");Ys(n.shape,r.shape);const s={a:n,b:r};return re.runKernelFunc((t=>t.logicalOr(n,r)),s,null,"LogicalOr")}});const za=ln({maxPool_:function(t,e,n,r,s){const a=on(t,"x","maxPool");let i=a,o=!1;3===a.rank&&(o=!0,i=ar(a,[1,a.shape[0],a.shape[1],a.shape[2]])),u(4===i.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`)),u(ms(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),null!=s&&u(f(r),(()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`));const l={x:i},c={filterSize:e,strides:n,pad:r,dimRoundingMode:s},h=re.runKernelFunc(((t,a)=>{const o=as(i.shape,e,n,1,r,s);let u;return u=1===o.filterWidth&&1===o.filterHeight&&d(o.inShape,o.outShape)?i.clone():t.maxPool(i,o),a([i,u]),u}),l,null,"MaxPool",c);return o?ar(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});const Pa=ln({maxPool3d_:function(t,e=[1,1,1],n,r,s,a="NDHWC",i){null==i?i=[1,1,1]:_r("dilations is deprecated, this field will be gone in v3.0.0.");const o=on(t,"x","maxPool3d");let l=o,c=!1;4===o.rank&&(c=!0,l=ar(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),u(5===l.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${l.rank}.`)),u("NDHWC"===a,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`)),u(ms(n,i),(()=>`Error in maxPool3d: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`)),null!=s&&u(f(r),(()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`));const h={x:l},p={filterSize:e,strides:n,pad:r,dimRoundingMode:s,dataFormat:a,dilations:i},d=re.runKernelFunc(((t,o)=>{null==i&&(i=[1,1,1]);const u=is(l.shape,e,n,i,r,s,a),c=t.maxPool3d(l,u);return o([l,c]),c}),h,null,"MaxPool3D",p);return c?ar(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});const Va=ln({maxPoolWithArgmax_:function(t,e,n,r,s=!1){const a={x:on(t,"x","maxPoolWithArgmax")},i={filterSize:e,strides:n,pad:r,includeBatchInIndex:s},o=re.runKernel("MaxPoolWithArgmax",a,i);return{result:o[0],indexes:o[1]}}});function Wa(t,e="float32"){if("complex64"===e){const e=Wa(t,"float32"),n=Wa(t,"float32");return cn(e,n)}const n=O(p(t),e);return re.makeTensor(n,t,e)}function Ua(t,e="float32"){if("complex64"===e){const e=Ua(t,"float32"),n=Wa(t,"float32");return cn(e,n)}const n=D(p(t),e);return re.makeTensor(n,t,e)}const Ga=ln({mean_:function(t,e=null,n=!1){const r=on(t,"x","mean"),s=x(e,r.shape),a=p(Ur(r.shape,s)[1]),i={x:r},o={axis:e,keepDims:n},u=()=>{const t=wa(a),s=t.dtype===r.dtype?r:Xn(r,t.dtype),i=qs(s,t);return Da(i,e,n)};return Fr((t=>({value:re.runKernelFunc(u,i,null,"Mean",o),gradFunc:e=>{const n=t.shape.slice();s.forEach((t=>{n[t]=1}));const r=ar(e,n);return qs(xa(r,Ua(t.shape,"float32")),a)}})))(r)}});const Ha=ln({min_:function(t,e=null,n=!1){const r=on(t,"x","min"),s={x:r},a={axis:e,keepDims:n};return re.runKernelFunc(((t,s)=>{const a=x(e,r.shape);let i=a;const o=jr(i,r.rank);let u=r;null!=o&&(u=ur(r,o),i=Kr(i.length,r.rank));const l=t.min(u,i);null!=o&&u.dispose();let c=l;if(n){const t=Gr(c.shape,a);c=ar(l,t),l.dispose()}return s([r,c]),c}),s,null,"Min",a)}});const ja=ln({minimum_:function(t,e){let n=on(t,"a","minimum"),r=on(e,"b","minimum");[n,r]=Yt(n,r),"bool"===n.dtype&&(n=Xn(n,"int32"),r=Xn(r,"int32")),Ys(n.shape,r.shape);const s={a:n,b:r};return re.runKernelFunc(((t,e)=>{const s=t.minimum(n,r);return e([n,r]),s}),s,null,"Minimum")}});const qa=ln({mirrorPad_:function(t,e,n){u("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const r=on(t,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");u(e.length===r.rank,(()=>`Padding doesn't match input. Must be ${r.rank}. Got ${e.length}.`));const s="reflect"===n?1:0;for(let t=0;t<r.rank;t++)u(2===e[t].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),u(e[t][0]>=0&&e[t][0]<=r.shape[t]-s&&e[t][1]>=0&&e[t][1]<=r.shape[t]-s,(()=>`Padding in dimension ${t} cannot be greater than or equal to ${r.shape[t]-s} or less than 0 for input of shape ${r.shape}`));const a={paddings:e,mode:n},i={x:r};return re.runKernel("MirrorPad",i,a)}});const Ka=ln({mod_:function(t,e){let n=on(t,"a","mod"),r=on(e,"b","mod");[n,r]=Yt(n,r);const s={a:n,b:r};return re.runKernelFunc(((t,e)=>{const s=t.mod(n,r);return e([n,r]),s}),s,null,"Mod")}});const Xa=ln({square_:function(t){const e=on(t,"x","square"),n=[e];return re.runKernelFunc(((t,n)=>(n([e]),t.square(e))),{x:e},null,"Square",{},n,[])}});const Ya=ln({moments_:function(t,e=null,n=!1){const r=x(e,(t=on(t,"x","moments")).shape),s=Ga(t,r,n);let a=s.shape;n||(a=Gr(s.shape,r));const i=Xa(Ma(Xn(t,"float32"),ar(s,a)));return{mean:s,variance:Ga(i,r,n)}}});const Ja=ln({multinomial_:function(t,e,n,r=!1){const s=on(t,"logits","multinomial"),a=s.size,i=s.rank;if(a<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${a}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);n=n||Math.random();const o=1===i?ar(s,[1,-1]):s,u=re.runKernelFunc((t=>t.multinomial(o,r,e,n)),{logits2D:o});return 1===i?ar(u,[u.size]):u}});const Za=ln({notEqual_:function(t,e){let n=on(t,"a","notEqual"),r=on(e,"b","notEqual");[n,r]=Yt(n,r),Ys(n.shape,r.shape);const s={a:n,b:r};return re.runKernelFunc((t=>t.notEqual(n,r)),s,null,"NotEqual")}});const Qa=ln({real_:function(t){const e=on(t,"input","real"),n={input:e};return re.runKernelFunc((t=>t.real(e)),n,null,"Real")}});const ti=ln({onesLike_:function(t){const e=on(t,"x","onesLike"),n={x:e};return re.runKernelFunc(((t,n)=>{if("complex64"===e.dtype){const t=ti(Qa(e)),n=Qs(fa(e));return cn(t,n)}return t.onesLike(e)}),n,null,"OnesLike")}});const ei=ln({pad_:function(t,e,n=0){const r=on(t,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const s={paddings:e,constantValue:n},a={x:r};return re.runKernelFunc(((t,s)=>(s([r]),t.pad(r,e,n))),a,null,"PadV2",s)}});const ni=ln({pow_:function(t,e){let n=on(t,"base","pow"),r=on(e,"exp","pow");[n,r]=Yt(n,r);const s={a:n,b:r};return re.runKernelFunc(((t,e)=>{const s=t.pow(n,r);return e([n,r,s]),s}),s,null,"Pow")}});const ri=ln({prelu_:function(t,e){const n=on(t,"x","prelu"),r=on(e,"alpha","prelu"),s={x:n,alpha:r};return re.runKernelFunc(((t,e)=>{const s=t.prelu(n,r);return e([n,r]),s}),s,null,"Prelu")}});const si=ln({prod_:function(t,e=null,n=!1){let r=on(t,"x","prod");"bool"===r.dtype&&(r=Xn(r,"int32"));const s={x:r},a={axis:e,keepDims:n};return re.runKernelFunc((t=>{const s=x(e,r.shape),a=jr(s,r.rank);let i=s,o=r;null!=a&&(o=ur(r,a),i=Kr(i.length,r.rank));let u=t.prod(o,i);if(n){const t=Gr(u.shape,s);u=ar(u,t)}return u}),s,null,"Prod",a)}});var ai={},ii=function(){var t={exports:this};return function(t,e,n){function r(t){var e,n=this,r=(e=4022871197,function(t){t=t.toString();for(var n=0;n<t.length;n++){var r=.02519603282416938*(e+=t.charCodeAt(n));r-=e=r>>>0,e=(r*=e)>>>0,e+=4294967296*(r-=e)}return 2.3283064365386963e-10*(e>>>0)});n.next=function(){var t=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=t-(n.c=0|t)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(t),n.s0<0&&(n.s0+=1),n.s1-=r(t),n.s1<0&&(n.s1+=1),n.s2-=r(t),n.s2<0&&(n.s2+=1),r=null}function s(t,e){return e.c=t.c,e.s0=t.s0,e.s1=t.s1,e.s2=t.s2,e}function a(t,e){var n=new r(t),a=e&&e.state,i=n.next;return i.int32=function(){return 4294967296*n.next()|0},i.double=function(){return i()+11102230246251565e-32*(2097152*i()|0)},i.quick=i,a&&("object"==typeof a&&s(a,n),i.state=function(){return s(n,{})}),i}e&&e.exports?e.exports=a:n&&n.amd?n((function(){return a})):this.alea=a}(0,"object"==typeof t&&t,!1),t.exports}.call({}),oi=function(){var t={exports:this};return function(t,e,n){function r(t){var e=this,n="";e.x=0,e.y=0,e.z=0,e.w=0,e.next=function(){var t=e.x^e.x<<11;return e.x=e.y,e.y=e.z,e.z=e.w,e.w^=e.w>>>19^t^t>>>8},t===(0|t)?e.x=t:n+=t;for(var r=0;r<n.length+64;r++)e.x^=0|n.charCodeAt(r),e.next()}function s(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e}function a(t,e){var n=new r(t),a=e&&e.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},i.int32=n.next,i.quick=i,a&&("object"==typeof a&&s(a,n),i.state=function(){return s(n,{})}),i}e&&e.exports?e.exports=a:n&&n.amd?n((function(){return a})):this.xor128=a}(0,"object"==typeof t&&t,!1),t.exports}.call({}),ui=function(){var t={exports:this};return function(t,e,n){function r(t){var e=this,n="";e.next=function(){var t=e.x^e.x>>>2;return e.x=e.y,e.y=e.z,e.z=e.w,e.w=e.v,(e.d=e.d+362437|0)+(e.v=e.v^e.v<<4^t^t<<1)|0},e.x=0,e.y=0,e.z=0,e.w=0,e.v=0,t===(0|t)?e.x=t:n+=t;for(var r=0;r<n.length+64;r++)e.x^=0|n.charCodeAt(r),r==n.length&&(e.d=e.x<<10^e.x>>>4),e.next()}function s(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e.v=t.v,e.d=t.d,e}function a(t,e){var n=new r(t),a=e&&e.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},i.int32=n.next,i.quick=i,a&&("object"==typeof a&&s(a,n),i.state=function(){return s(n,{})}),i}e&&e.exports?e.exports=a:n&&n.amd?n((function(){return a})):this.xorwow=a}(0,"object"==typeof t&&t,!1),t.exports}.call({}),li=function(){var t={exports:this};return function(t,e,n){function r(t){var e=this;e.next=function(){var t,n,r=e.x,s=e.i;return t=r[s],n=(t^=t>>>7)^t<<24,n^=(t=r[s+1&7])^t>>>10,n^=(t=r[s+3&7])^t>>>3,n^=(t=r[s+4&7])^t<<7,t=r[s+7&7],n^=(t^=t<<13)^t<<9,r[s]=n,e.i=s+1&7,n},function(t,e){var n,r=[];if(e===(0|e))r[0]=e;else for(e=""+e,n=0;n<e.length;++n)r[7&n]=r[7&n]<<15^e.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],t.x=r,t.i=0,n=256;n>0;--n)t.next()}(e,t)}function s(t,e){return e.x=t.x.slice(),e.i=t.i,e}function a(t,e){null==t&&(t=+new Date);var n=new r(t),a=e&&e.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},i.int32=n.next,i.quick=i,a&&(a.x&&s(a,n),i.state=function(){return s(n,{})}),i}e&&e.exports?e.exports=a:n&&n.amd?n((function(){return a})):this.xorshift7=a}(0,"object"==typeof t&&t,!1),t.exports}.call({}),ci=function(){var t={exports:this};return function(t,e,n){function r(t){var e=this;e.next=function(){var t,n,r=e.w,s=e.X,a=e.i;return e.w=r=r+1640531527|0,n=s[a+34&127],t=s[a=a+1&127],n^=n<<13,t^=t<<17,n^=n>>>15,t^=t>>>12,n=s[a]=n^t,e.i=a,n+(r^r>>>16)|0},function(t,e){var n,r,s,a,i,o=[],u=128;for(e===(0|e)?(r=e,e=null):(e+="\0",r=0,u=Math.max(u,e.length)),s=0,a=-32;a<u;++a)e&&(r^=e.charCodeAt((a+32)%e.length)),0===a&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,a>=0&&(i=i+1640531527|0,s=0==(n=o[127&a]^=r+i)?s+1:0);for(s>=128&&(o[127&(e&&e.length||0)]=-1),s=127,a=512;a>0;--a)r=o[s+34&127],n=o[s=s+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[s]=r^n;t.w=i,t.X=o,t.i=s}(e,t)}function s(t,e){return e.i=t.i,e.w=t.w,e.X=t.X.slice(),e}function a(t,e){null==t&&(t=+new Date);var n=new r(t),a=e&&e.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},i.int32=n.next,i.quick=i,a&&(a.X&&s(a,n),i.state=function(){return s(n,{})}),i}e&&e.exports?e.exports=a:n&&n.amd?n((function(){return a})):this.xor4096=a}(0,"object"==typeof t&&t,!1),t.exports}.call({}),hi=function(){var t={exports:this};return function(t,e,n){function r(t){var e=this,n="";e.next=function(){var t=e.b,n=e.c,r=e.d,s=e.a;return t=t<<25^t>>>7^n,n=n-r|0,r=r<<24^r>>>8^s,s=s-t|0,e.b=t=t<<20^t>>>12^n,e.c=n=n-r|0,e.d=r<<16^n>>>16^s,e.a=s-t|0},e.a=0,e.b=0,e.c=-1640531527,e.d=1367130551,t===Math.floor(t)?(e.a=t/4294967296|0,e.b=0|t):n+=t;for(var r=0;r<n.length+20;r++)e.b^=0|n.charCodeAt(r),e.next()}function s(t,e){return e.a=t.a,e.b=t.b,e.c=t.c,e.d=t.d,e}function a(t,e){var n=new r(t),a=e&&e.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},i.int32=n.next,i.quick=i,a&&("object"==typeof a&&s(a,n),i.state=function(){return s(n,{})}),i}e&&e.exports?e.exports=a:n&&n.amd?n((function(){return a})):this.tychei=a}(0,"object"==typeof t&&t,!1),t.exports}.call({}),pi={};!function(t,e){var n,r=this,s=256,a=e.pow(s,6),i=e.pow(2,52),o=2*i,u=255;function l(u,l,m){var g=[],y=d(p((l=1==l?{entropy:!0}:l||{}).entropy?[u,f(t)]:null==u?function(){try{var e;return n&&(e=n.randomBytes)?e=e(s):(e=new Uint8Array(s),(r.crypto||r.msCrypto).getRandomValues(e)),f(e)}catch(e){var a=r.navigator,i=a&&a.plugins;return[+new Date,r,i,r.screen,f(t)]}}():u,3),g),b=new c(g),x=function(){for(var t=b.g(6),e=a,n=0;t<i;)t=(t+n)*s,e*=s,n=b.g(1);for(;t>=o;)t/=2,e/=2,n>>>=1;return(t+n)/e};return x.int32=function(){return 0|b.g(4)},x.quick=function(){return b.g(4)/4294967296},x.double=x,d(f(b.S),t),(l.pass||m||function(t,n,r,s){return s&&(s.S&&h(s,b),t.state=function(){return h(b,{})}),r?(e.random=t,n):t})(x,y,"global"in l?l.global:this==e,l.state)}function c(t){var e,n=t.length,r=this,a=0,i=r.i=r.j=0,o=r.S=[];for(n||(t=[n++]);a<s;)o[a]=a++;for(a=0;a<s;a++)o[a]=o[i=u&i+t[a%n]+(e=o[a])],o[i]=e;(r.g=function(t){for(var e,n=0,a=r.i,i=r.j,o=r.S;t--;)e=o[a=u&a+1],n=n*s+o[u&(o[a]=o[i=u&i+e])+(o[i]=e)];return r.i=a,r.j=i,n})(s)}function h(t,e){return e.i=t.i,e.j=t.j,e.S=t.S.slice(),e}function p(t,e){var n,r=[],s=typeof t;if(e&&"object"==s)for(n in t)try{r.push(p(t[n],e-1))}catch(t){}return r.length?r:"string"==s?t:t+"\0"}function d(t,e){for(var n,r=t+"",s=0;s<r.length;)e[u&s]=u&(n^=19*e[u&s])+r.charCodeAt(s++);return f(e)}function f(t){return String.fromCharCode.apply(0,t)}if(e.seedrandom=l,d(e.random(),t),pi){pi=l;try{n=Gn()}catch(t){}}else 0}([],Math),pi.alea=ii,pi.xor128=oi,pi.xorwow=ui,pi.xorshift7=li,pi.xor4096=ci,pi.tychei=hi,ai=pi;class di{constructor(t,e,n,r,s){this.mean=t,this.stdDev=e,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const a=s||Math.random();this.random=ai.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){const t=this.nextVal;return this.nextVal=NaN,t}let t,e,n=!1;for(;!n;){let r,s,a;do{r=2*this.random()-1,s=2*this.random()-1,a=r*r+s*s}while(a>=1||0===a);const i=Math.sqrt(-2*Math.log(a)/a);t=this.mean+this.stdDev*r*i,e=this.mean+this.stdDev*s*i,this.truncated&&!this.isValidTruncated(t)||(n=!0)}return this.truncated&&!this.isValidTruncated(e)||(this.nextVal=this.convertValue(e)),this.convertValue(t)}convertValue(t){return null==this.dtype||"float32"===this.dtype?t:Math.round(t)}isValidTruncated(t){return t<=this.upper&&t>=this.lower}}class fi{constructor(t=0,e=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=t,this.range=e-t,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${t} - ${e} <= 1 and dtype is not float`);this.random=ai.alea(r)}convertValue(t){return this.canReturnFloat()?t:Math.round(t)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const mi=ln({randomNormal_:function(t,e=0,n=1,r,s){if(null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);const a=new di(e,n,r,!1,s),i=Kn(t,r);for(let t=0;t<i.values.length;t++)i.values[t]=a.nextValue();return i.toTensor()}});const gi=ln({randomUniform_:function(t,e=0,n=1,r="float32",s){const a=Kn(t,r),i=new fi(e,n,null,s);for(let t=0;t<a.values.length;t++)a.values[t]=i.nextValue();return a.toTensor()}});function yi(t,e){c(t);const n=rn(t,e);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return hn(t,null,n,e)}function bi(t,e,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");const s={start:t,stop:e,step:n,dtype:r};return re.runKernelFunc((()=>{if(t===e||t<e&&n<0||e<t&&n>1)return Wa([0],r);const s=O(Math.abs(Math.ceil((e-t)/n)),r);e<t&&1===n&&(n=-1),s[0]=t;for(let t=1;t<s.length;t++)s[t]=s[t-1]+n;return yi(s,r)}),{},null,"Range",s)}const xi=ln({reciprocal_:function(t){const e=on(t,"x","reciprocal"),n={x:e};return re.runKernelFunc(((t,n)=>{const r=t.reciprocal(e);return n([e]),r}),n,null,"Reciprocal")}});const wi=ln({relu_:function(t){const e=on(t,"x","relu"),n={x:e};return re.runKernelFunc(((t,n)=>(n([e]),"bool"===e.dtype?Xn(e,"int32"):t.relu(e))),n,null,"Relu")}});const vi=ln({reverse_:function(t,e){const n=on(t,"x","reverse"),r={x:n},s={dims:e};return re.runKernelFunc((t=>{const r=x(e,n.shape);if(0===n.rank)return Yn(n);const s=t.reverse(n,r);return ar(s,n.shape)}),r,null,"Reverse",s)}});const Ii=ln({round_:function(t){const e=on(t,"x","round"),n={x:e};return re.runKernelFunc((t=>t.round(e)),n,null,"Round")}});const ki=ln({rsqrt_:function(t){const e=on(t,"x","rsqrt"),n={x:e};return re.runKernelFunc(((t,n)=>{const r=t.rsqrt(e);return n([e]),r}),n,null,"Rsqrt")}});const Ni=ln({selu_:function(t){const e=on(t,"x","selu"),n={x:e};return re.runKernelFunc(((t,n)=>{const r=t.selu(e);return n([e]),r}),n,null,"Selu")}});const Si=ln({separableConv2d_:function(t,e,n,r,s,a=[1,1],i="NHWC"){const o=on(t,"x","separableConv2d"),l=on(e,"depthwiseFilter","separableConv2d"),c=on(n,"pointwiseFilter","separableConv2d");let h=o,p=!1;if(3===o.rank&&(p=!0,h=ar(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===i)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");u(4===h.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${h.rank}.`)),u(4===l.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`)),u(4===c.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`)),u(1===c.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${c.shape[0]}.`)),u(1===c.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${c.shape[1]}.`));const d=l.shape[2],f=l.shape[3];u(c.shape[2]===d*f,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*f}, but got ${c.shape[2]}.`));const m=Gs(h,l,r,s,i,a),g=Os(m,c,1,"valid",i);return p?ar(g,[g.shape[1],g.shape[2],g.shape[3]]):g}});const Ci=async function(t,e){const n=on(t,"x","setdiff1d"),r=on(e,"y","setdiff1d");u(n.dtype===r.dtype,(()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`)),u(1===n.rank,(()=>`x should be 1D tensor, but got x (${n.shape}).`)),u(1===r.rank,(()=>`y should be 1D tensor, but got y (${r.shape}).`));const s=await n.data(),a=await r.data(),i=new Set(a);let o=0;for(let t=0;t<s.length;t++)i.has(s[t])||o++;const l=new At([o],n.dtype),c=new At([o],"int32");for(let t=0,e=0;t<s.length;t++)i.has(s[t])||(l.values[e]=s[t],c.values[e]=t,e++);return[l.toTensor(),c.toTensor()]};const Ei=ln({sign_:function(t){const e=on(t,"x","sign"),n={x:e};return re.runKernelFunc((t=>t.sign(e)),n,null,"Sign")}});const Ti=ln({sin_:function(t){const e=on(t,"x","sin"),n={x:e};return re.runKernelFunc(((t,n)=>{const r=t.sin(e);return n([e]),r}),n,null,"Sin")}});const _i=ln({sinh_:function(t){const e=on(t,"x","sinh"),n={x:e};return re.runKernelFunc(((t,n)=>{const r=t.sinh(e);return n([e]),r}),n,null,"Sinh")}});const $i=ln({slice_:function(t,e,n){const r=on(t,"x","slice");if(0===r.rank)throw new Error("Slicing scalar is not possible");const s={x:r},a={begin:e,size:n};return re.runKernelFunc(((t,s)=>{const[a,i]=Sr(r,e,n);return fr(r,a,i),s([r]),t.slice(r,a,i)}),s,null,"Slice",a)}});const Ai=ln({slice1d_:function(t,e,n){const r=on(t,"x","slice1d");return u(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),$i(r,[e],[n])}});const Ri=ln({slice2d_:function(t,e,n){const r=on(t,"x","slice2d");return u(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),$i(r,e,n)}});const Mi=ln({slice3d_:function(t,e,n){const r=on(t,"x","slice3d");return u(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),$i(r,e,n)}});const Di=ln({slice4d_:function(t,e,n){const r=on(t,"x","slice4d");return u(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),$i(r,e,n)}});const Oi=ln({softmax_:function(t,e=-1){const n=on(t,"logits","softmax","float32");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${e}`);const r={logits:n},s={dim:e};return re.runKernelFunc(((t,r)=>{const s=t.softmax(n,e);return r([s]),s}),r,null,"Softmax",s)}});const Fi=ln({spaceToBatchND_:function(t,e,n){const r=on(t,"x","spaceToBatchND");u(r.rank>=1+e.length,(()=>`input rank ${r.rank} should be > than [blockShape] ${e.length}`)),u(n.length===e.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${e.length}`)),u(r.shape.reduce(((t,r,s)=>s>0&&s<=e.length?t&&(r+n[s-1][0]+n[s-1][1])%e[s-1]==0:t),!0),(()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${e.toString()}`));const s={x:r},a={blockShape:e,paddings:n};return re.runKernelFunc((t=>t.spaceToBatchND(r,e,n)),s,null,"SpaceToBatchND",a)}});const Li=ln({fft_:function(t){u("complex64"===t.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${t.dtype}.`));const e={input:t};return re.runKernelFunc((e=>{const n=t.shape[t.shape.length-1],r=t.size/n,s=t.as2D(r,n);return e.fft(s).reshape(t.shape)}),e,null,"FFT")}});const Bi=ln({ifft_:function(t){u("complex64"===t.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${t.dtype}.`));const e={input:t};return re.runKernelFunc((e=>{const n=t.shape[t.shape.length-1],r=t.size/n,s=ar(t,[r,n]),a=e.ifft(s);return ar(a,t.shape)}),e,null,"IFFT")}});const zi=ln({irfft_:function(t){const e=t.shape[t.shape.length-1],n=t.size/e;let r;if(e<=2){const s=ar(t,[n,e]);r=Bi(s)}else{const s=[n,2*(e-1)],a=ar(Qa(t),[n,e]),i=ar(fa(t),[n,e]),o=vi($i(a,[0,1],[n,e-2]),1),u=xa(vi($i(i,[0,1],[n,e-2]),1),wa(-1)),l=$s([a,o],1),c=$s([i,u],1),h=ar(cn(l,c),[s[0],s[1]]);r=Bi(h)}if(r=Qa(r),3===t.rank&&0!==t.shape[0]){const e=r,n=t.shape[0];r=ar(r,[n,r.shape[0]/n,r.shape[1]]),e.dispose()}return r}});const Pi=ln({split_:function(t,e,n=0){const r=on(t,"x","split"),s={x:r},a={numOrSizeSplits:e,axis:n};return re.runKernelFunc(((t,s)=>{const a=x(n,r.shape)[0],i=function(t,e,n=0){let r=[];if("number"==typeof e)u(t.shape[n]%e==0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(e).fill(t.shape[n]/e);else{u(e.reduce(((t,e)=>(-1===e&&(t+=1),t)),0)<=1,(()=>"There should be only one negative value in split array."));const s=e.indexOf(-1);if(-1!==s){const r=e.reduce(((t,e)=>e>0?t+e:t));e[s]=t.shape[n]-r}u(t.shape[n]===e.reduce(((t,e)=>t+e)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=e}return r}(r,e,a);return t.split(r,i,a)}),s,null,"SplitV",a)}});const Vi=ln({rfft_:function(t,e){u("float32"===t.dtype,(()=>`The dtype for rfft() must be real value but got ${t.dtype}`));let n=t.shape[t.shape.length-1];const r=t.size/n;let s;if(null!=e&&e<n){const r=t.shape.map((t=>0)),a=t.shape.map((t=>t));a[t.shape.length-1]=e,s=$i(t,r,a),n=e}else if(null!=e&&e>n){const r=t.shape.map((t=>t));r[t.shape.length-1]=e-n,s=$s([t,Wa(r)],t.shape.length-1),n=e}else s=t;const a=Qs(s),i=ar(cn(s,a),[r,n]),o=Li(i),l=Math.floor(n/2)+1,c=Qa(o),h=fa(o),p=Pi(c,[l,n-l],c.shape.length-1),d=Pi(h,[l,n-l],h.shape.length-1),f=s.shape.slice();return f[s.shape.length-1]=l,ar(cn(p[0],d[0]),f)}});const Wi=ln({sqrt_:function(t){const e=on(t,"x","sqrt"),n={x:e};return re.runKernelFunc(((t,n)=>{const r=t.sqrt(e);return n([e]),r}),n,null,"Sqrt")}});const Ui=ln({squaredDifference_:function(t,e){let n=on(t,"a","squaredDifference"),r=on(e,"b","squaredDifference");[n,r]=Yt(n,r),Ys(n.shape,r.shape);const s={a:n,b:r};return re.runKernelFunc(((t,e)=>{const s=t.squaredDifference(n,r);return e([n,r]),s}),s,null,"SquaredDifference",{})}});const Gi=ln({squeeze_:function(t,e){const n=on(t,"x","squeeze");return ar(n,w(n.shape,e).newShape)}});const Hi=ln({stack_:function(t,e=0){const n=un(t,"tensors","stack");if(u(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),1===n.length)return sa(n[0],e);const r=n[0].rank,s=n[0].shape,a=n[0].dtype;u(e<=r,(()=>"Axis must be <= rank of the tensor")),n.forEach((t=>{l(s,t.shape,"All tensors passed to stack must have matching shapes"),u(a===t.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const i=n.map((t=>sa(t,e)));return $s(i,e)}});const ji=ln({step_:function(t,e=0){const n=on(t,"x","step"),r={x:n},s={alpha:e};return re.runKernelFunc((t=>t.step(n,e)),r,null,"Step",s)}});const qi=ln({stridedSlice_:function(t,e,n,r,s=0,a=0,i=0,o=0,u=0){let l=on(t,"x","stridedSlice");const c={x:l},h={begin:e,end:n,strides:r,beginMask:s,endMask:a,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:u};return re.runKernelFunc((t=>{null==r&&(r=new Array(e.length));const c=mr(i);if(c.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(0!==i&&0!==o)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(0!==i&&0!==u)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");const h=l.rank-e.length,p=mr(o),d=l.shape.slice();p.forEach((t=>{e[t]=0,n[t]=1,d.splice(t,0,1)})),l=ar(l,d);const{begin:f,end:m,strides:g}=xr(l.shape,c,h,e,n,r,s,a,i);e=f,n=m,r=g;const y=mr(u);y.forEach((t=>{n[t]=e[t]+1,r[t]=1}));const b=gr(e,n,r),x=b.filter(((t,e)=>-1===y.indexOf(e)));if(r.every((t=>1===t)))return ar($i(l,e,b),x);const w=t.stridedSlice(l,e,n,r);return ar(w,x)}),c,null,"StridedSlice",h)}});const Ki=ln({tan_:function(t){const e=on(t,"x","tan"),n={x:e};return re.runKernelFunc(((t,n)=>{const r=t.tan(e);return n([e]),r}),n,null,"Tan")}});const Xi=ln({tanh_:function(t){const e=on(t,"x","tanh"),n={x:e};return re.runKernelFunc(((t,n)=>{const r=t.tanh(e);return n([r]),r}),n,null,"Tanh")}});function Yi(t,e,n){if(c(t),null!=e&&2!==e.length)throw new Error("tensor2d() requires shape to have two numbers");const r=rn(t,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return hn(t,e,r,n)}function Ji(t,e,n){if(c(t),null!=e&&4!==e.length)throw new Error("tensor4d() requires shape to have four numbers");const r=rn(t,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return hn(t,e,r,n)}const Zi=ln({topk_:function(t,e=1,n=!0){const r=on(t,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const s=r.shape[r.shape.length-1];if(e>s)throw new Error(`'k' passed to topk() must be <= the last dimension (${s}) but got ${e}`);const a={x:r},i={k:e,sorted:n},[o,u]=re.runKernelFunc((t=>t.topk(r,e,n)),a,null,"TopK",i);return{values:o,indices:u}}});const Qi=ln({truncatedNormal_:function(t,e=0,n=1,r,s){if(null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const a=new di(e,n,r,!0,s),i=Kn(t,r);for(let t=0;t<i.values.length;t++)i.values[t]=a.nextValue();return i.toTensor()}});const to=ln({unique_:function(t,e=0){const n=on(t,"x","unique",null);u(n.rank>0,(()=>"The input tensor must be at least 1D"));const r={x:n},s={axis:e},[a,i]=re.runKernel("Unique",r,s);return{values:a,indices:i}}});const eo=ln({unstack_:function(t,e=0){const n=on(t,"x","unstack");u(e>=-n.shape.length&&e<n.shape.length,(()=>`Axis = ${e} is not in [-${n.shape.length}, ${n.shape.length})`)),e<0&&(e+=n.shape.length);const r={value:n},s={axis:e};return re.runKernelFunc((t=>t.unstack(n,e)),r,null,"Unpack",s)}});function no(t,e){const n=[];for(let t=0;t<e.length;t++)e[t]&&n.push(t);const r=Kn(t,"int32"),s=Kn([n.length,t.length],"int32");for(let e=0;e<n.length;e++){const a=r.indexToLoc(n[e]),i=e*t.length;s.values.set(a,i)}return s.toTensor()}const ro=async function(t){const e=on(t,"condition","whereAsync","bool"),n=await e.data(),r=no(e.shape,n);return t!==e&&e.dispose(),r};const so=ln({equalStrict_:function(t,e){_r("strict variants of ops have been deprecated and will be removed in future");const n=on(t,"a","equalStrict"),r=on(e,"b","equalStrict");return l(n.shape,r.shape,"Error in equalStrict: "),Js(n,r)}}),ao=ln({greaterEqualStrict_:function(t,e){_r("strict variants of ops have been deprecated and will be removed in future");const n=on(t,"a","greaterEqualStrict"),r=on(e,"b","greaterEqualStrict");return l(n.shape,r.shape,"Error in greaterEqualStrict: "),da(n,r)}}),io=ln({greaterStrict_:function(t,e){_r("strict variants of ops have been deprecated and will be removed in future");const n=on(t,"a","greaterStrict"),r=on(e,"b","greaterStrict");return l(n.shape,r.shape,"Error in greaterStrict: "),pa(n,r)}}),oo=ln({lessEqualStrict_:function(t,e){_r("strict variants of ops have been deprecated and will be removed in future");const n=on(t,"a","lessEqualStrict"),r=on(e,"b","lessEqualStrict");return l(n.shape,r.shape,"Error in lessEqualStrict: "),ka(n,r)}}),uo=ln({lessStrict_:function(t,e){_r("strict variants of ops have been deprecated and will be removed in future");const n=on(t,"a","lessStrict"),r=on(e,"b","lessStrict");return l(n.shape,r.shape,"Error in lessStrict: "),Ia(n,r)}}),lo=ln({notEqualStrict_:function(t,e){_r("strict variants of ops have been deprecated and will be removed in future");const n=on(t,"a","notEqualStrict"),r=on(e,"b","notEqualStrict");return l(n.shape,r.shape,"Error in notEqualStrict: "),Za(n,r)}});const co=ln({addStrict_:function(t,e){_r("strict variants of ops have been deprecated and will be removed in future");const n=on(t,"a","addStrict"),r=on(e,"b","addStrict");return l(n.shape,r.shape,"Error in addStrict: "),Pr(n,r)}}),ho=ln({divStrict_:function(t,e){_r("strict variants of ops have been deprecated and will be removed in future");const n=on(t,"a","div"),r=on(e,"b","div");return l(n.shape,r.shape,"Error in divideStrict: "),qs(n,r)}}),po=ln({maximumStrict_:function(t,e){_r("strict variants of ops have been deprecated and will be removed in future");const n=on(t,"a","maximumStrict"),r=on(e,"b","maximumStrict");return l(n.shape,r.shape,"Error in maximumStrict: "),ba(n,r)}}),fo=ln({minimumStrict_:function(t,e){_r("strict variants of ops have been deprecated and will be removed in future");const n=on(t,"a","minimumStrict"),r=on(e,"b","minimumStrict");return l(n.shape,r.shape,"Error in minimumStrict: "),ja(n,r)}}),mo=ln({modStrict_:function(t,e){_r("strict variants of ops have been deprecated and will be removed in future");const n=on(t,"a","modStrict"),r=on(e,"b","modStrict");return l(n.shape,r.shape,"Error in modStrict: "),Ka(n,r)}}),go=ln({mulStrict_:function(t,e){_r("strict variants of ops have been deprecated and will be removed in future");const n=on(t,"a","mul"),r=on(e,"b","mul");return l(n.shape,r.shape,"Error in multiplyStrict: "),xa(n,r)}}),yo=ln({powStrict_:function(t,e){return _r("strict variants of ops have been deprecated and will be removed in future"),l(t.shape,e.shape,"Error in powStrict: "),ni(t,e)}}),bo=ln({squaredDifferenceStrict_:function(t,e){_r("strict variants of ops have been deprecated and will be removed in future");const n=on(t,"a","squaredDifferenceStrict"),r=on(e,"b","squaredDifferenceStrict");return l(n.shape,r.shape,"Error in squaredDifferenceStrict: "),Ui(n,r)}}),xo=ln({subStrict_:function(t,e){_r("strict variants of ops have been deprecated and will be removed in future");const n=on(t,"a","subStrict"),r=on(e,"b","subStrict");return l(n.shape,r.shape,"Error in subStrict: "),Ma(n,r)}});function wo(t,e,n=null){if(0===t.rank)return Lr(t);if(1!==t.rank&&null===n)return wo(ar(t,[-1]),e,n);if(1===t.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===e)return Da(Lr(t),n);if(e===1/0)return Ra(Lr(t),n);if(e===-1/0)return Ha(Lr(t),n);if("euclidean"===e||2===e)return Wi(Da(ni(Lr(t),wa(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${e}`)}if(Array.isArray(n)&&2===n.length){if(1===e)return Ra(Da(Lr(t),n[0]),n[1]-1);if(e===1/0)return Ra(Da(Lr(t),n[1]),n[0]);if(e===-1/0)return Ha(Da(Lr(t),n[1]),n[0]);if("fro"===e||"euclidean"===e)return Wi(Da(Xa(t),n));throw new Error(`Error in norm: invalid ord value: ${e}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const vo=ln({norm_:function(t,e="euclidean",n=null,r=!1){const s=wo(t=on(t,"x","norm"),e,n);let a=s.shape;if(r){const e=x(n,t.shape);a=Gr(s.shape,e)}return ar(s,a)}});const Io=ln({scatterND_:function(t,e,n){const r=on(t,"indices","scatterND","int32"),s=on(e,"updates","scatterND");pr(s,r,n);const a={indices:r,updates:s},i={shape:n};return re.runKernelFunc((t=>t.scatterND(r,s,n)),a,null,"ScatterNd",i)}});const ko=ln({sparseToDense_:function(t,e,n,r=0){const s=on(t,"sparseIndices","sparseToDense","int32"),a=on(e,"sparseValues","sparseToDense"),i=on(r,"defaultValue","sparseToDense",a.dtype);!function(t,e,n,r){if("int32"!==t.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${t.shape}.`);const s=t.rank>0?t.shape[0]:1,a=t.rank>1?t.shape[1]:1;if(n.length!==a)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${a}.`);const i=e.size;if(0!==e.rank&&(1!==e.rank||i!==s))throw new Error(`sparseValues has incorrect shape ${e.shape}, should be [] or [${s}]`);if(e.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(s,a,n,i);const o={sparseIndices:s,sparseValues:a,defaultValue:i},u={outputShape:n};return re.runKernelFunc((t=>t.sparseToDense(s,a,n,i)),o,null,"SparseToDense",u)}});const No=ln({gatherND_:function(t,e){const n=on(e,"indices","gatherND","int32"),r=on(t,"x","gatherND"),s={params:r,indices:n};return re.runKernelFunc((t=>t.gatherND(r,n)),s,null,"GatherNd")}});const So=ln({dropout_:function(t,e,n,r){const s=on(t,"x","dropout");if(u("float32"===s.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${s.dtype} tensor instead.`)),u(e>=0&&e<1,(()=>`rate must be a float in the range [0, 1), but got ${e}.`)),0===e)return t instanceof Ot?s.clone():s;const a=function(t,e){if(null==e)return t.shape.slice();if(d(t.shape,e))return e;if(t.shape.length===e.length){const n=[];for(let r=0;r<t.shape.length;r++)null==e[r]&&null!=t.shape[r]?n.push(t.shape[r]):n.push(e[r]);return n}return e}(s,n),i=1-e,o=qs(la(Pr(gi(a,0,1,"float32",r),i)),i);return xa(s,o)}});const Co=ln({conv2DBackpropFilter_:function(t,e,n,r,s,a="NHWC",i){let o=t;3===t.rank&&(o=ar(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let l=e;3===l.rank&&(l=ar(e,[1,e.shape[0],e.shape[1],e.shape[2]])),u(4===o.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`)),u(4===l.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`)),u(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const c="NHWC"===a?o.shape[3]:o.shape[1],h="NHWC"===a?l.shape[3]:l.shape[1];u(c===n[2],(()=>`Error in conv2dDerFilter: depth of input ${c}) must match input depth in filter (${n[2]}.`)),u(h===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${h}) must match output depth for filter (${n[3]}).`)),null!=i&&u(f(s),(()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`));const p={x:o,dy:l},d={strides:r,pad:s,dataFormat:a,dimRoundingMode:i,filterShape:n};return re.runKernelFunc((t=>{const e=gs(a),u=os(o.shape,n,r,1,s,i,!1,e);return t.conv2dDerFilter(o,l,u)}),p,null,"Conv2DBackpropFilter",d)}});const Eo=ln({relu6_:function(t){const e=on(t,"x","relu6"),n={x:e};return re.runKernelFunc(((t,n)=>(n([e]),"bool"===e.dtype?Xn(e,"int32"):t.relu6(e))),n,null,"Relu6")}});function To(t,e,n){if(null==n||"linear"===n)return t;if("relu"===n)return xa(t,ji(e));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function _o(t,e){let n=e;const r=Xs(t.shape,e.shape);return r.length>0&&(n=Da(n,r)),ar(n,t.shape)}function $o(t,e,n){if("linear"===e)return t;if("relu"===e)return wi(t);if("elu"===e)return ea(t);if("relu6"===e)return Eo(t);if("prelu"===e)return ri(t,n);throw new Error(`Unknown fused activation ${e}.`)}const Ao=(t,e)=>!(t>0)||"linear"===e;const Ro=ln({fusedConv2d_:function({x:t,filter:e,strides:n,pad:r,dataFormat:s="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:c}){if(l=l||"linear",!1===Ao(re.state.gradientDepth,l)){let u=Os(t,e,n,r,s,a,i);return null!=o&&(u=Pr(u,o)),$o(u,l,c)}const h=on(t,"x","conv2d"),p=on(e,"filter","conv2d");let d=h,m=!1;3===h.rank&&(m=!0,d=ar(h,[1,h.shape[0],h.shape[1],h.shape[2]])),u(4===d.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${d.rank}.`)),u(4===p.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${p.rank}.`)),null!=i&&u(f(r),(()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`)),u(d.shape[3]===p.shape[2],(()=>`Error in conv2d: depth of input (${d.shape[3]}) must match input depth for filter ${p.shape[2]}.`)),u(ms(n,a),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),u("NHWC"===s,(()=>`Error in conv2d: got dataFormat of ${s} but only NHWC is currently supported.`));const g=os(d.shape,p.shape,n,a,r,i);let y,b;null!=o&&(y=on(o,"bias","fused conv2d"),[y]=Yt(y,h),Ys(g.outShape,y.shape)),null!=c&&(b=on(c,"prelu weights","fused conv2d"));const x=(t,e)=>{const[s,i,o,c]=e,h=To(t,o,l);u(fs(a),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`));const p=[Ls(i.shape,h,s,n,r),Co(i,h,s.shape,n,r)];if(null!=c){const t=_o(c,h);p.push(t)}return p},w=t=>t.fusedConv2d({input:d,filter:p,convInfo:g,bias:y,activation:l,preluActivationWeights:b}),v={x:d,filter:p,bias:y,preluActivationWeights:b},I={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i,activation:l};if(null==o){return Fr(((t,e,n)=>{let r=re.runKernelFunc(w,v,null,"FusedConv2D",I);return n([e,t,r]),m&&(r=ar(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:x}}))(d,p)}return Fr(((t,e,n,r)=>{let s=re.runKernelFunc(w,v,null,"FusedConv2D",I);return r([e,t,s,n]),m&&(s=ar(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:x}}))(d,p,y)}});const Mo=ln({depthwiseConv2dNativeBackpropFilter_:function(t,e,n,r,s,a=[1,1],i){let o=t;3===t.rank&&(o=ar(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let u=e;3===u.rank&&(u=ar(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const l={x:o,dy:u},c={strides:r,pad:s,dimRoundingMode:i,dilations:a,filterShape:n};return re.runKernelFunc((e=>{const l=os(t.shape,n,r,a,s,i,!0);return e.depthwiseConv2DDerFilter(o,u,l)}),l,null,"DepthwiseConv2dNativeBackpropFilter",c)}});const Do=ln({depthwiseConv2dNativeBackpropInput_:function(t,e,n,r,s,a=[1,1],i){let o=e,u=!1;3===e.rank&&(u=!0,o=ar(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const l={dy:o,filter:n},c={strides:r,pad:s,dimRoundingMode:i,dilations:a,inputShape:t},h=re.runKernelFunc((e=>{const u=os(t,n.shape,r,a,s,i,!0);return e.depthwiseConv2DDerInput(o,n,u)}),l,null,"DepthwiseConv2dNativeBackpropInput",c);return u?ar(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});const Oo=ln({fusedDepthwiseConv2d_:function({x:t,filter:e,strides:n,pad:r,dataFormat:s="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:c}){if(!1===Ao(re.state.gradientDepth,l)){let u=Gs(t,e,n,r,s,a,i);return null!=o&&(u=Pr(u,o)),$o(u,l,c)}const h=on(t,"x","depthwiseConv2d"),p=on(e,"filter","depthwiseConv2d");let d=h,m=!1;3===h.rank&&(m=!0,d=ar(h,[1,h.shape[0],h.shape[1],h.shape[2]])),u(4===d.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${d.rank}.`)),u(4===p.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${p.rank}.`)),u(d.shape[3]===p.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${d.shape[3]}) must match the inChannels dimension in filter ${p.shape[2]}.`)),null==a&&(a=[1,1]),u(ms(n,a),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),null!=i&&u(f(r),(()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${i} but got pad ${r}.`));const g=os(d.shape,p.shape,n,a,r,i,!0);let y,b;null!=o&&(y=on(o,"bias","fused conv2d"),[y]=Yt(y,h),Ys(g.outShape,y.shape)),null!=c&&(b=on(c,"prelu weights","fused depthwiseConv2d"));const x=(t,e)=>{u(fs(a),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`));const[s,o,c,h]=e,p=To(t,c,l),d=Do(o.shape,p,s,n,r,a,i),f=Mo(o,p,s.shape,n,r,a,i);if(null!=h){return[d,f,_o(y,p)]}return[d,f]},w=t=>t.fusedDepthwiseConv2D({input:d,filter:p,convInfo:g,bias:y,activation:l,preluActivationWeights:b}),v={x:d,filter:p,bias:y,preluActivationWeights:b},I={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i,activation:l};if(null==o){return Fr(((t,e,n)=>{let r=re.runKernelFunc(w,v,null,"FusedDepthwiseConv2D",I);return n([e,t,r]),m&&(r=ar(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:x}}))(d,p)}return Fr(((t,e,n,r)=>{let s=re.runKernelFunc(w,v,null,"FusedDepthwiseConv2D",I);return r([e,t,s,n]),m&&(s=ar(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:x}}))(d,p,y)}});const Fo=ln({fusedMatMul_:function({a:t,b:e,transposeA:n=!1,transposeB:r=!1,bias:s,activation:a="linear",preluActivationWeights:i}){if(!1===Ao(re.state.gradientDepth,a)){let o=ir(t,e,n,r);return null!=s&&(o=Pr(o,s)),$o(o,a,i)}let o=on(t,"a","fused matMul"),l=on(e,"b","fused matMul");[o,l]=Yt(o,l);const c=n?o.shape[o.rank-2]:o.shape[o.rank-1],h=r?l.shape[l.rank-1]:l.shape[l.rank-2],f=n?o.shape[o.rank-1]:o.shape[o.rank-2],m=r?l.shape[l.rank-2]:l.shape[l.rank-1],g=o.shape.slice(0,-2),y=l.shape.slice(0,-2),b=p(g),x=p(y);u(o.rank>=2&&l.rank>=2&&o.rank===l.rank,(()=>`Error in fused matMul: inputs must have the same rank of at least 2, got ranks ${o.rank} and ${l.rank}.`)),u(d(g,y),(()=>`Error in fused matMul: outer dimensions (${g}) and (${y}) of Tensors with shapes ${o.shape} and ${l.shape} must match.`)),u(c===h,(()=>`Error in fused matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${o.shape} and ${l.shape} and transposeA=${n} and transposeB=${r} must match.`));const w=o.shape.slice(0,-2).concat([f,m]),v=ar(o,n?[b,c,f]:[b,f,c]),I=ar(l,r?[x,m,h]:[x,h,m]);let k,N;null!=s&&(k=on(s,"bias","fused matMul"),[k]=Yt(k,o),Ys(w,k.shape)),null!=i&&(N=on(i,"prelu weights","fused matMul"));const S=(t,e)=>{const[i,o,u,l]=e,c=To(ar(t,u.shape),u,a);let h,p;if(n||r?!n&&r?(h=ir(c,o,!1,!1),p=ir(c,i,!0,!1)):n&&!r?(h=ir(o,c,!1,!0),p=ir(i,c,!1,!1)):(h=ir(o,c,!0,!0),p=ir(c,i,!0,!0)):(h=ir(c,o,!1,!0),p=ir(i,c,!0,!1)),null!=s){return[h,p,_o(l,c)]}return[h,p]},C=t=>t.fusedBatchMatMul({a:v,b:I,transposeA:n,transposeB:r,bias:k,activation:a,preluActivationWeights:N}),E={a:v,b:I,bias:k,preluActivationWeights:N},T={transposeA:n,transposeB:r,activation:a};if(null==s){return Fr(((t,e,n)=>{const r=re.runKernelFunc(C,E,null,"_FusedMatMul",T);return n([t,e,r]),{value:ar(r,w),gradFunc:S}}))(v,I)}return Fr(((t,e,n,r)=>{const s=re.runKernelFunc(C,E,null,"_FusedMatMul",T);return r([t,e,s,n]),{value:ar(s,w),gradFunc:S}}))(v,I,k)}});function Lo(t,e,n){const r=1-t%2,s=new Float32Array(t);for(let a=0;a<t;++a){const i=2*Math.PI*a/(t+r-1);s[a]=e-n*Math.cos(i)}return yi(s,"float32")}ln({hammingWindow_:function(t){return Lo(t,.54,.46)}});const Bo=ln({hannWindow_:function(t){return Lo(t,.5,.5)}});const zo=ln({frame_:function(t,e,n,r=!1,s=0){let a=0;const i=[];for(;a+e<=t.size;)i.push($i(t,a,e)),a+=n;if(r)for(;a<t.size;){const r=a+e-t.size,o=$s([$i(t,a,e-r),ua([r],s)]);i.push(o),a+=n}return 0===i.length?Yi([],[0,e]):ar($s(i),[i.length,e])}});ln({stft_:function(t,e,n,r,s=Bo){var a;null==r&&(a=e,r=Math.floor(Math.pow(2,Math.ceil(Math.log(a)/Math.log(2)))));const i=zo(t,e,n),o=xa(i,s(e)),u=[];for(let t=0;t<i.shape[0];t++)u.push(Vi($i(o,[t,0],[1,e]),r));return $s(u)}});const Po=ln({cropAndResize_:function(t,e,n,r,s,a){const i=on(t,"image","cropAndResize"),o=on(e,"boxes","cropAndResize","float32"),l=on(n,"boxInd","cropAndResize","int32");s=s||"bilinear",a=a||0;const c=o.shape[0];u(4===i.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`)),u(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${c},4] but had shape ${o.shape}.`)),u(1===l.rank&&l.shape[0]===c,(()=>`Error in cropAndResize: boxInd must be have size [${c}] but had shape ${o.shape}.`)),u(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),u(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),u("bilinear"===s||"nearest"===s,(()=>`method must be bilinear or nearest, but was ${s}`));const h={image:i,boxes:o,boxInd:l},p={method:s,extrapolationValue:a,cropSize:r};return re.runKernelFunc((t=>t.cropAndResize(i,o,l,r,s,a)),h,null,"CropAndResize",p)}});const Vo=ln({flipLeftRight_:function(t){const e=on(t,"image","flipLeftRight","float32");u(4===e.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${e.rank}.`));const n={image:e};return re.runKernel("FlipLeftRight",n,{})}});const Wo=ln({rotateWithOffset_:function(t,e,n=0,r=.5){const s=on(t,"image","rotateWithOffset","float32");u(4===s.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${s.rank}.`));const a={image:s},i={radians:e,fillValue:n,center:r};return re.runKernel("RotateWithOffset",a,i)}});function Uo(t,e,n,r,s,a){null==r&&(r=.5),null==s&&(s=Number.NEGATIVE_INFINITY),null==a&&(a=0);const i=t.shape[0];return n=Math.min(n,i),u(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),u(2===t.rank,(()=>`boxes must be a 2D tensor, but was of rank '${t.rank}'`)),u(4===t.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${t.shape[1]}`)),u(1===e.rank,(()=>"scores must be a 1D tensor")),u(e.shape[0]===i,(()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${e.shape[0]}`)),u(0<=a&&a<=1,(()=>`softNmsSigma must be in [0, 1], but was '${a}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:s,softNmsSigma:a}}const Go=ln({nonMaxSuppression_:function(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY){const a=on(t,"boxes","nonMaxSuppression"),i=on(e,"scores","nonMaxSuppression"),o=Uo(a,i,n,r,s);n=o.maxOutputSize,r=o.iouThreshold,s=o.scoreThreshold;const u={maxOutputSize:n,iouThreshold:r,scoreThreshold:s};return re.runKernelFunc((t=>t.nonMaxSuppression(a,i,n,r,s)),{boxes:a,scores:i},null,"NonMaxSuppressionV3",u)}});function Ho(t,e,n){const r=function(t,e,n){return function(t,e,n){let r=0,s=t.length,a=0,i=!1;for(;r<s;){a=r+(s-r>>>1);const o=n(e,t[a]);o>0?r=a+1:(s=a,i=!o)}return i?r:-r-1}(t,e,n||jo)}(t,e,n),s=r<0?-(r+1):r;t.splice(s,0,e)}function jo(t,e){return t>e?1:t<e?-1:0}function qo(t,e,n,r,s){return Yo(t,e,n,r,s,0).selectedIndices}function Ko(t,e,n,r,s,a){return Yo(t,e,n,r,s,0,!1,a,!0)}function Xo(t,e,n,r,s,a){return Yo(t,e,n,r,s,a,!0)}function Yo(t,e,n,r,s,a,i=!1,o=!1,u=!1){const l=[];for(let t=0;t<e.length;t++)e[t]>s&&l.push({score:e[t],boxIndex:t,suppressBeginIndex:0});l.sort(Qo);const c=a>0?-.5/a:0,h=[],p=[];for(;h.length<n&&l.length>0;){const e=l.pop(),{score:n,boxIndex:a,suppressBeginIndex:i}=e;if(n<s)break;let o=!1;for(let n=h.length-1;n>=i;--n){const i=Jo(t,a,h[n]);if(i>=r){o=!0;break}if(e.score=e.score*Zo(r,c,i),e.score<=s)break}e.suppressBeginIndex=h.length,o||(e.score===n?(h.push(a),p.push(e.score)):e.score>s&&Ho(l,e,Qo))}const d=h.length,f=n-d;o&&f>0&&(h.push(...new Array(f).fill(0)),p.push(...new Array(f).fill(0)));const m={selectedIndices:yi(h,"int32")};return i&&(m.selectedScores=yi(p,"float32")),u&&(m.validOutputs=wa(d,"int32")),m}function Jo(t,e,n){const r=t.subarray(4*e,4*e+4),s=t.subarray(4*n,4*n+4),a=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),l=Math.min(s[0],s[2]),c=Math.min(s[1],s[3]),h=Math.max(s[0],s[2]),p=Math.max(s[1],s[3]),d=(o-a)*(u-i),f=(h-l)*(p-c);if(d<=0||f<=0)return 0;const m=Math.max(a,l),g=Math.max(i,c),y=Math.min(o,h),b=Math.min(u,p),x=Math.max(y-m,0)*Math.max(b-g,0);return x/(d+f-x)}function Zo(t,e,n){const r=Math.exp(e*n*n);return n<=t?r:0}function Qo(t,e){return t.score-e.score||t.score===e.score&&e.boxIndex-t.boxIndex}const tu=async function(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY){const a=on(t,"boxes","nonMaxSuppressionAsync"),i=on(e,"scores","nonMaxSuppressionAsync"),o=Uo(a,i,n,r,s);n=o.maxOutputSize,r=o.iouThreshold,s=o.scoreThreshold;const u=await Promise.all([a.data(),i.data()]),l=qo(u[0],u[1],n,r,s);return a!==t&&a.dispose(),i!==e&&i.dispose(),l};const eu=ln({nonMaxSuppressionWithScore_:function(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY,a=0){const i=on(t,"boxes","nonMaxSuppression"),o=on(e,"scores","nonMaxSuppression"),u=Uo(i,o,n,r,s,a),l={boxes:i,scores:o},c={maxOutputSize:n=u.maxOutputSize,iouThreshold:r=u.iouThreshold,scoreThreshold:s=u.scoreThreshold,softNmsSigma:a=u.softNmsSigma},h=re.runKernel("NonMaxSuppressionV5",l,c);return{selectedIndices:h[0],selectedScores:h[1]}}});const nu=async function(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY,a=0){const i=on(t,"boxes","nonMaxSuppressionAsync"),o=on(e,"scores","nonMaxSuppressionAsync"),u=Uo(i,o,n,r,s,a);n=u.maxOutputSize,r=u.iouThreshold,s=u.scoreThreshold,a=u.softNmsSigma;const l=await Promise.all([i.data(),o.data()]),c=Xo(l[0],l[1],n,r,s,a);return i!==t&&i.dispose(),o!==e&&o.dispose(),c};const ru=ln({nonMaxSuppressionPadded_:function(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY,a=!1){const i=on(t,"boxes","nonMaxSuppression"),o=on(e,"scores","nonMaxSuppression"),u=Uo(i,o,n,r,s,null),l={boxes:i,scores:o},c={maxOutputSize:u.maxOutputSize,iouThreshold:u.iouThreshold,scoreThreshold:u.scoreThreshold,padToMaxOutputSize:a},h=re.runKernel("NonMaxSuppressionV4",l,c);return{selectedIndices:h[0],validOutputs:h[1]}}});const su=async function(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY,a=!1){const i=on(t,"boxes","nonMaxSuppressionAsync"),o=on(e,"scores","nonMaxSuppressionAsync"),u=Uo(i,o,n,r,s,null),l=u.maxOutputSize,c=u.iouThreshold,h=u.scoreThreshold,[p,d]=await Promise.all([i.data(),o.data()]),f=Ko(p,d,l,c,h,a);return i!==t&&i.dispose(),o!==e&&o.dispose(),f};const au=ln({resizeBilinear_:function(t,e,n=!1){const r=on(t,"images","resizeBilinear");u(3===r.rank||4===r.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`)),u(2===e.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${e}.`));let s=r,a=!1;3===r.rank&&(a=!0,s=ar(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const[i,o]=e,l={images:s},c={alignCorners:n,size:e},h=re.runKernelFunc(((t,e)=>(e([s]),t.resizeBilinear(s,i,o,n))),l,null,"ResizeBilinear",c);return a?ar(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});const iu=ln({resizeNearestNeighbor_:function(t,e,n=!1){const r=on(t,"images","resizeNearestNeighbor");u(3===r.rank||4===r.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`)),u(2===e.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${e}.`)),u("float32"===r.dtype||"int32"===r.dtype,(()=>"`images` must have `int32` or `float32` as dtype"));let s=r,a=!1;3===r.rank&&(a=!0,s=ar(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const[i,o]=e,l={images:s},c={alignCorners:n,size:e},h=re.runKernelFunc(((t,e)=>(e([s]),t.resizeNearestNeighbor(s,i,o,n))),l,null,"ResizeNearestNeighbor",c);return a?ar(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});const ou=ln({bandPart_:function(t,e,n){u(e%1==0,(()=>`bandPart(): numLower must be an integer, got ${e}.`)),u(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));const r=on(t,"a","bandPart");u(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));const s=r.shape,[a,i]=r.shape.slice(-2);if(!(e<=a))throw new Error(`bandPart(): numLower (${e}) must not be greater than the number of rows (${a}).`);if(!(n<=i))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`);e<0&&(e=a),n<0&&(n=i);const o=ar(bi(0,a,1,"int32"),[-1,1]),l=bi(0,i,1,"int32"),c=Ma(o,l),h=Fa(ka(c,wa(+e,"int32")),da(c,wa(-n,"int32"))),p=Wa([a,i],r.dtype);return ar(Hi(eo(ar(r,[-1,a,i])).map((t=>Zs(h,t,p)))),s)}});const uu=ln({gramSchmidt_:function(t){let e;if(Array.isArray(t)){e=!1,u(null!=t&&t.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=t[0].shape[0];for(let e=1;e<t.length;++e)u(t[e].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${t[e].shape[0]} vs. ${n})`))}else e=!0,t=Pi(t,t.shape[0],0).map((t=>Gi(t,[0])));u(t.length<=t[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${t.length}) exceeds number of dimensions (${t[0].shape[0]}).`));const n=[],r=t;for(let e=0;e<t.length;++e)n.push(re.tidy((()=>{let t=r[e];if(e>0)for(let r=0;r<e;++r){const e=xa(Da(xa(n[r],t)),n[r]);t=Ma(t,e)}return qs(t,vo(t,"euclidean"))})));return e?Hi(n,0):n}});function lu(t,e=!1){return re.tidy((()=>{u(2===t.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${t.shape.length}D Tensor.`));const n=t.shape[0],r=t.shape[1];let s=oa(n),a=Yn(t);const i=Yi([[1]],[1,1]);let o=Yn(i);const l=n>=r?r:n;for(let t=0;t<l;++t){const e=a,u=o,l=s;[o,a,s]=re.tidy((()=>{const e=$i(a,[t,t],[n-t,1]),u=vo(e),l=$i(a,[t,t],[1,1]),c=Zs(pa(l,0),Yi([[-1]]),Yi([[1]])),h=Ma(l,xa(c,u)),p=qs(e,h);o=1===p.shape[0]?Yn(i):$s([i,$i(p,[1,0],[p.shape[0]-1,p.shape[1]])],0);const d=Ta(qs(ir(c,h),u)),f=$i(a,[t,0],[n-t,r]),m=xa(d,o),g=ur(o);if(0===t)a=Ma(f,ir(m,ir(g,f)));else{const e=Ma(f,ir(m,ir(g,f)));a=$s([$i(a,[0,0],[t,r]),e],0)}const y=ur(m),b=$i(s,[0,t],[n,s.shape[1]-t]);if(0===t)s=Ma(b,ir(ir(b,o),y));else{const e=Ma(b,ir(ir(b,o),y));s=$s([$i(s,[0,0],[n,t]),e],1)}return[o,a,s]})),Mr([e,u,l])}return!e&&n>r&&(s=$i(s,[0,0],[n,r]),a=$i(a,[0,0],[r,r])),[s,a]}))}const cu=ln({qr_:function(t,e=!1){if(u(t.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${t.rank}`)),2===t.rank)return lu(t,e);{const n=t.shape.slice(0,t.shape.length-2).reduce(((t,e)=>t*e)),r=eo(ar(t,[n,t.shape[t.shape.length-2],t.shape[t.shape.length-1]]),0),s=[],a=[];r.forEach((t=>{const[n,r]=lu(t,e);s.push(n),a.push(r)}));return[ar(Hi(s,0),t.shape),ar(Hi(a,0),t.shape)]}}});var hu,pu;(pu=hu||(hu={}))[pu.NONE=0]="NONE",pu[pu.MEAN=1]="MEAN",pu[pu.SUM=2]="SUM",pu[pu.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS";const du=ln({computeWeightedLoss_:function(t,e,n=hu.SUM_BY_NONZERO_WEIGHTS){const r=on(t,"losses","computeWeightedLoss");let s=null;null!=e&&(s=on(e,"weights","computeWeightedLoss"));const a=null==s?r:xa(r,s);if(n===hu.NONE)return a;if(n===hu.SUM)return Da(a);if(n===hu.MEAN){if(null==s)return Ga(a);{const t=r.size/s.size,e=qs(Da(a),Da(s));return t>1?qs(e,wa(t)):e}}if(n===hu.SUM_BY_NONZERO_WEIGHTS){if(null==s)return qs(Da(a),wa(r.size));{const t=xa(s,Ua(r.shape)),e=Xn(Da(Za(t,wa(0))),"float32");return qs(Da(a),e)}}throw Error(`Unknown reduction: ${n}`)}});ln({absoluteDifference_:function(t,e,n,r=hu.SUM_BY_NONZERO_WEIGHTS){const s=on(t,"labels","absoluteDifference"),a=on(e,"predictions","absoluteDifference");let i=null;null!=n&&(i=on(n,"weights","absoluteDifference")),l(s.shape,a.shape,"Error in absoluteDifference: ");const o=Lr(Ma(s,a));return du(o,i,r)}});ln({cosineDistance_:function(t,e,n,r,s=hu.SUM_BY_NONZERO_WEIGHTS){const a=on(t,"labels","cosineDistance"),i=on(e,"predictions","cosineDistance");let o=null;null!=r&&(o=on(r,"weights","cosineDistance")),l(a.shape,i.shape,"Error in cosineDistance: ");const u=wa(1),c=Ma(u,Da(xa(a,i),n,!0));return du(c,o,s)}});ln({hingeLoss_:function(t,e,n,r=hu.SUM_BY_NONZERO_WEIGHTS){let s=on(t,"labels","hingeLoss");const a=on(e,"predictions","hingeLoss");let i=null;null!=n&&(i=on(n,"weights","hingeLoss")),l(s.shape,a.shape,"Error in hingeLoss: ");const o=wa(1);s=Ma(xa(wa(2),s),o);const u=wi(Ma(o,xa(s,a)));return du(u,i,r)}});ln({huberLoss_:function(t,e,n,r=1,s=hu.SUM_BY_NONZERO_WEIGHTS){const a=on(t,"labels","huberLoss"),i=on(e,"predictions","huberLoss");let o=null;null!=n&&(o=on(n,"weights","huberLoss")),l(a.shape,i.shape,"Error in huberLoss: ");const u=wa(r),c=Lr(Ma(i,a)),h=ja(c,u),p=Ma(c,h),d=Pr(xa(wa(.5),Xa(h)),xa(u,p));return du(d,o,s)}});ln({logLoss_:function(t,e,n,r=1e-7,s=hu.SUM_BY_NONZERO_WEIGHTS){const a=on(t,"labels","logLoss"),i=on(e,"predictions","logLoss");let o=null;null!=n&&(o=on(n,"weights","logLoss")),l(a.shape,i.shape,"Error in logLoss: ");const u=wa(1),c=wa(r),h=Ta(xa(a,Ca(Pr(i,c)))),p=xa(Ma(u,a),Ca(Pr(Ma(u,i),c))),d=Ma(h,p);return du(d,o,s)}});ln({meanSquaredError_:function(t,e,n,r=hu.SUM_BY_NONZERO_WEIGHTS){const s=on(t,"labels","meanSquaredError"),a=on(e,"predictions","meanSquaredError");let i=null;null!=n&&(i=on(n,"weights","meanSquaredError")),l(s.shape,a.shape,"Error in meanSquaredError: ");const o=Ui(s,a);return du(o,i,r)}});ln({sigmoidCrossEntropy_:function(t,e,n,r=0,s=hu.SUM_BY_NONZERO_WEIGHTS){let a=on(t,"multiClassLabels","sigmoidCrossEntropy");const i=on(e,"logits","sigmoidCrossEntropy");let o=null;if(null!=n&&(o=on(n,"weights","sigmoidCrossEntropy")),l(a.shape,i.shape,"Error in sigmoidCrossEntropy: "),r>0){const t=wa(r),e=wa(1),n=wa(.5);a=Pr(xa(a,Ma(e,t)),xa(n,t))}const u=function(t,e){const n=on(t,"labels","sigmoidCrossEntropyWithLogits"),r=on(e,"logits","sigmoidCrossEntropyWithLogits");l(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const s=wi(r),a=xa(r,n),i=Ea(ra(Ta(Lr(r))));return Pr(Ma(s,a),i)}(a,i);return du(u,o,s)}});const fu=ln({logSumExp_:function(t,e=null,n=!1){const r=on(t,"x","logSumExp"),s=x(e,r.shape),a=Ra(r,s,!0),i=Ma(r,a),o=ra(i),u=Da(o,s),l=Ca(u),c=Pr(ar(a,l.shape),l);if(n){const t=Gr(c.shape,s);return ar(c,t)}return c}});ln({softmaxCrossEntropy_:function(t,e,n,r=0,s=hu.SUM_BY_NONZERO_WEIGHTS){let a=on(t,"onehotLabels","softmaxCrossEntropy");const i=on(e,"logits","softmaxCrossEntropy");let o=null;if(null!=n&&(o=on(n,"weights","softmaxCrossEntropy")),l(a.shape,i.shape,"Error in softmaxCrossEntropy: "),r>0){const t=wa(r),e=wa(1),n=wa(a.shape[1]);a=Pr(xa(a,Ma(e,t)),qs(t,n))}const u=function(t,e,n=-1){if(-1===n&&(n=e.rank-1),n!==e.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${e.rank} and dim was ${n}`);return Fr(((t,e,r)=>{const s=fu(e,[n],!0),a=Ma(Xn(e,"float32"),s);r([t,a]);const i=Ta(xa(a,t));return{value:Da(i,[n]),gradFunc:(t,e)=>{const[r,s]=e,a=Gr(t.shape,[n]);return[xa(ar(t,a),Ma(Xn(r,"float32"),ra(s))),xa(ar(t,a),Ma(ra(s),Xn(r,"float32")))]}}}))(t,e)}(a,i);return du(u,o,s)}});const mu={flipLeftRight:Vo,resizeNearestNeighbor:iu,resizeBilinear:au,rotateWithOffset:Wo,cropAndResize:Po,nonMaxSuppression:Go,nonMaxSuppressionAsync:tu,nonMaxSuppressionWithScore:eu,nonMaxSuppressionWithScoreAsync:nu,nonMaxSuppressionPadded:ru,nonMaxSuppressionPaddedAsync:su},gu={bandPart:ou,gramSchmidt:uu,qr:cu};class yu extends Cr{minimize(t,e=!1,n){const{value:r,grads:s}=this.computeGradients(t,n);if(null!=n){const t=n.map((t=>({name:t.name,tensor:s[t.name]})));this.applyGradients(t)}else this.applyGradients(s);return Mr(s),e?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(t,e){return function(t,e){u(_(t),(()=>"The f passed in variableGrads(f) must be a function")),u(null==e||Array.isArray(e)&&e.every((t=>t instanceof Ft)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=e;if(!n){e=[];for(const t in re.registeredVariables)e.push(re.registeredVariables[t])}const r=n?e.filter((t=>!t.trainable)):null,s=e.length;u((e=e.filter((t=>t.trainable))).length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${s} variables is trainable.`));const{value:a,grads:i}=re.gradients(t,e,null,!0);u(i.some((t=>null!=t)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),u(0===a.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${a.rank} tensor`));const o={};return e.forEach(((t,e)=>{null!=i[e]&&(o[t.name]=i[e])})),null!=r&&r.forEach((t=>o[t.name]=null)),{value:a,grads:o}}(t,e)}dispose(){null!=this.iterations_&&Mr(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:wa(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(t){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(t){return this.iterations_=(await t[0].tensor.data())[0],t.slice(1)}}Object.defineProperty(yu,Symbol.hasInstance,{value:t=>null!=t.minimize&&null!=t.computeGradients&&null!=t.applyGradients});class bu extends yu{constructor(t,e,n=null){super(),this.learningRate=t,this.rho=e,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=re.backend.epsilon())}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const r=re.registeredVariables[e];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${e}/accum_grad`,variable:Rr((()=>Qs(r).variable(false)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${e}/accum_var`,variable:Rr((()=>Qs(r).variable(false)))});const s=Array.isArray(t)?t[n].tensor:t[e];if(null==s)return;const a=this.accumulatedGrads[n].variable,i=this.accumulatedUpdates[n].variable;Rr((()=>{const t=Pr(xa(a,this.rho),xa(Xa(s),1-this.rho)),e=xa(qs(Wi(Pr(i,this.epsilon)),Wi(Pr(a,this.epsilon))),s),n=Pr(xa(i,this.rho),xa(Xa(e),1-this.rho));a.assign(t),i.assign(n);const o=Pr(xa(e,-this.learningRate),r);r.assign(o)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(Mr(this.accumulatedGrads.map((t=>t.variable))),Mr(this.accumulatedUpdates.map((t=>t.variable))))}async getWeights(){const t=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(t.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){const e=(t=await this.extractIterations(t)).length/2;this.accumulatedGrads=t.slice(0,e).map((t=>({originalName:t.name,variable:t.tensor.variable(false)}))),this.accumulatedUpdates=t.slice(e,2*e).map((t=>({originalName:t.name,variable:t.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.rho,e.epsilon)}}bu.className="Adadelta",Tr(bu);class xu extends yu{constructor(t,e=.1){super(),this.learningRate=t,this.initialAccumulatorValue=e,this.accumulatedGrads=[]}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const r=re.registeredVariables[e];if(null==this.accumulatedGrads[n]){const t=!1;this.accumulatedGrads[n]={originalName:`${e}/accumulator`,variable:Rr((()=>ua(r.shape,this.initialAccumulatorValue).variable(t)))}}const s=Array.isArray(t)?t[n].tensor:t[e];if(null==s)return;const a=this.accumulatedGrads[n].variable;Rr((()=>{const t=Pr(a,Xa(s));a.assign(t);const e=Pr(xa(qs(s,Wi(Pr(t,re.backend.epsilon()))),-this.learningRate),r);r.assign(e)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&Mr(this.accumulatedGrads.map((t=>t.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t);this.accumulatedGrads=t.map((t=>({originalName:t.name,variable:t.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(t,e){return new t(e.learningRate,e.initialAccumulatorValue)}}xu.className="Adagrad",Tr(xu);class wu extends yu{constructor(t,e,n,r=null){super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Rr((()=>{this.accBeta1=wa(e).variable(),this.accBeta2=wa(n).variable()})),null==r&&(this.epsilon=re.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map((t=>t.name)):Object.keys(t);Rr((()=>{const n=Ma(1,this.accBeta1),r=Ma(1,this.accBeta2);e.forEach(((e,s)=>{const a=re.registeredVariables[e];null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${e}/m`,variable:Rr((()=>Qs(a).variable(false)))}),null==this.accumulatedSecondMoment[s]&&(this.accumulatedSecondMoment[s]={originalName:`${e}/v`,variable:Rr((()=>Qs(a).variable(false)))});const i=Array.isArray(t)?t[s].tensor:t[e];if(null==i)return;const o=this.accumulatedFirstMoment[s].variable,u=this.accumulatedSecondMoment[s].variable,l=Pr(xa(o,this.beta1),xa(i,1-this.beta1)),c=Pr(xa(u,this.beta2),xa(Xa(i),1-this.beta2)),h=qs(l,n),p=qs(c,r);o.assign(l),u.assign(c);const d=Pr(xa(qs(h,Pr(Wi(p),this.epsilon)),-this.learningRate),a);a.assign(d)})),this.accBeta1.assign(xa(this.accBeta1,this.beta1)),this.accBeta2.assign(xa(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&Mr(this.accumulatedFirstMoment.map((t=>t.variable))),null!=this.accumulatedSecondMoment&&Mr(this.accumulatedSecondMoment.map((t=>t.variable)))}async getWeights(){const t=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(t.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t),Rr((()=>{this.accBeta1.assign(ni(this.beta1,this.iterations_+1)),this.accBeta2.assign(ni(this.beta2,this.iterations_+1))}));const e=t.length/2;this.accumulatedFirstMoment=t.slice(0,e).map((t=>({originalName:t.name,variable:t.tensor.variable(false)}))),this.accumulatedSecondMoment=t.slice(e,2*e).map((t=>({originalName:t.name,variable:t.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon)}}wu.className="Adam",Tr(wu);class vu extends yu{constructor(t,e,n,r=null,s=0){super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=r,this.decay=s,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Rr((()=>{this.iteration=wa(0).variable(),this.accBeta1=wa(e).variable()})),null==r&&(this.epsilon=re.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map((t=>t.name)):Object.keys(t);Rr((()=>{const n=Ma(1,this.accBeta1),r=qs(-this.learningRate,Pr(xa(this.iteration,this.decay),1));e.forEach(((e,s)=>{const a=re.registeredVariables[e];null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${e}/m`,variable:Qs(a).variable(false)}),null==this.accumulatedWeightedInfNorm[s]&&(this.accumulatedWeightedInfNorm[s]={originalName:`${e}/v`,variable:Qs(a).variable(false)});const i=Array.isArray(t)?t[s].tensor:t[e];if(null==i)return;const o=this.accumulatedFirstMoment[s].variable,u=this.accumulatedWeightedInfNorm[s].variable,l=Pr(xa(o,this.beta1),xa(i,1-this.beta1)),c=xa(u,this.beta2),h=Lr(i),p=ba(c,h);o.assign(l),u.assign(p);const d=Pr(xa(qs(r,n),qs(l,Pr(p,this.epsilon))),a);a.assign(d)})),this.iteration.assign(Pr(this.iteration,1)),this.accBeta1.assign(xa(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&Mr(this.accumulatedFirstMoment.map((t=>t.variable))),null!=this.accumulatedWeightedInfNorm&&Mr(this.accumulatedWeightedInfNorm.map((t=>t.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(t){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon,e.decay)}}vu.className="Adamax",Tr(vu);class Iu extends yu{constructor(t){super(),this.learningRate=t,this.setLearningRate(t)}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const r=Array.isArray(t)?t[n].tensor:t[e];if(null==r)return;const s=re.registeredVariables[e];Rr((()=>{const t=Pr(xa(this.c,r),s);s.assign(t)}))})),this.incrementIterations()}setLearningRate(t){this.learningRate=t,null!=this.c&&this.c.dispose(),this.c=Dr(wa(-t))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(t){if(0!==(t=await this.extractIterations(t)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(t,e){return new t(e.learningRate)}}Iu.className="SGD",Tr(Iu);class ku extends Iu{constructor(t,e,n=!1){super(t),this.learningRate=t,this.momentum=e,this.useNesterov=n,this.accumulations=[],this.m=wa(this.momentum)}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const r=re.registeredVariables[e];if(null==this.accumulations[n]){const t=!1;this.accumulations[n]={originalName:`${e}/momentum`,variable:Rr((()=>Qs(r).variable(t)))}}const s=this.accumulations[n].variable,a=Array.isArray(t)?t[n].tensor:t[e];null!=a&&Rr((()=>{let t;const e=Pr(xa(this.m,s),a);t=this.useNesterov?Pr(xa(this.c,Pr(a,xa(e,this.m))),r):Pr(xa(this.c,e),r),s.assign(e),r.assign(t)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&Mr(this.accumulations.map((t=>t.variable)))}setMomentum(t){this.momentum=t}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t);this.accumulations=t.map((t=>({originalName:t.name,variable:t.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(t,e){return new t(e.learningRate,e.momentum,e.useNesterov)}}ku.className="Momentum",Tr(ku);class Nu extends yu{constructor(t,e=.9,n=0,r=null,s=!1){if(super(),this.learningRate=t,this.decay=e,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=s,null==r&&(this.epsilon=re.backend.epsilon()),null==t)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const r=re.registeredVariables[e],s=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${e}/rms`,variable:Rr((()=>Qs(r).variable(s)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${e}/momentum`,variable:Rr((()=>Qs(r).variable(s)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${e}/mg`,variable:Rr((()=>Qs(r).variable(s)))});const a=Array.isArray(t)?t[n].tensor:t[e];if(null==a)return;const i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;Rr((()=>{const t=Pr(xa(i,this.decay),xa(Xa(a),1-this.decay));if(this.centered){const e=this.accumulatedMeanGrads[n].variable,s=Pr(xa(e,this.decay),xa(a,1-this.decay)),u=qs(xa(a,this.learningRate),Wi(Ma(t,Pr(Xa(s),this.epsilon)))),l=Pr(xa(o,this.momentum),u);i.assign(t),e.assign(s),o.assign(l);const c=Ma(r,l);r.assign(c)}else{const t=Pr(xa(i,this.decay),xa(Xa(a),1-this.decay)),e=Pr(xa(o,this.momentum),qs(xa(a,this.learningRate),Wi(Pr(t,this.epsilon))));i.assign(t),o.assign(e);const n=Ma(r,e);r.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&Mr(this.accumulatedMeanSquares.map((t=>t.variable))),null!=this.accumulatedMeanGrads&&this.centered&&Mr(this.accumulatedMeanGrads.map((t=>t.variable))),null!=this.accumulatedMoments&&Mr(this.accumulatedMoments.map((t=>t.variable)))}async getWeights(){const t=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&t.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(t.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t);const e=this.centered?t.length/3:t.length/2,n=!1;this.accumulatedMeanSquares=t.slice(0,e).map((t=>({originalName:t.name,variable:t.tensor.variable(n)}))),this.accumulatedMoments=t.slice(e,2*e).map((t=>({originalName:t.name,variable:t.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=t.slice(2*e,3*e).map((t=>({originalName:t.name,variable:t.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(t,e){return new t(e.learningRate,e.decay,e.momentum,e.epsilon,e.centered)}}Nu.className="RMSProp",Tr(Nu);class Su{static sgd(t){return new Iu(t)}static momentum(t,e,n=!1){return new ku(t,e,n)}static rmsprop(t,e=.9,n=0,r=null,s=!1){return new Nu(t,e,n,r,s)}static adam(t=.001,e=.9,n=.999,r=null){return new wu(t,e,n,r)}static adadelta(t=.001,e=.95,n=null){return new bu(t,e,n)}static adamax(t=.002,e=.9,n=.999,r=null,s=0){return new vu(t,e,n,r,s)}static adagrad(t,e=.1){return new xu(t,e)}}const Cu={sgd:Su.sgd,momentum:Su.momentum,adadelta:Su.adadelta,adagrad:Su.adagrad,rmsprop:Su.rmsprop,adamax:Su.adamax,adam:Su.adam},Eu="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:t=>t();function Tu(){return new Promise((t=>Eu((()=>t()))))}function _u(t,e,n){return[n*("number"==typeof t?t:t[0]),e*("number"==typeof t?t:t[1])]}function $u(t,e,n,r=!0){let s=[];if(r)s=s.concat(e.slice(0)),s.push(t[0]/n),s=s.concat(t.slice(1));else{s=s.concat(t[0]);const n=e.length;for(let r=0;r<n;++r)s=s.concat([t[r+1]/e[r],e[r]]);s=s.concat(t.slice(n+1))}return s}function Au(t,e,n=!0){const r=[];if(n){r.push(e);for(let n=e+1;n<t;++n)n<=2*e?(r.push(n),r.push(n-(e+1))):r.push(n)}else{const n=[],s=[];for(let r=1;r<t;++r)r>=2*e+1||r%2==1?s.push(r):n.push(r);r.push(...n),r.push(0),r.push(...s)}return r}function Ru(t,e,n,r=!0){const s=[];r?s.push(t[0]/n):s.push(t[0]*n);for(let n=1;n<t.length;++n)n<=e.length?r?s.push(e[n-1]*t[n]):s.push(t[n]/e[n-1]):s.push(t[n]);return s}function Mu(t,e){const n=[0];for(let r=0;r<e;++r)n.push(t[r][0]);return n}function Du(t,e,n){const r=t.slice(0,1);for(let s=0;s<n;++s)r.push(t[s+1]-e[s][0]-e[s][1]);return r}function Ou(...t){W().getBool("IS_TEST")||console.warn(...t)}function Fu(t,e){if(t.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${t.length}, imag: ${e.length}.`);const n=new Float32Array(2*t.length);for(let r=0;r<n.length;r+=2)n[r]=t[r/2],n[r+1]=e[r/2];return n}function Lu(t,e){return{real:t[2*e],imag:t[2*e+1]}}function Bu(t,e,n,r){t[2*r]=e,t[2*r+1]=n}function zu(t,e,n){const r=(n?2:-2)*Math.PI*(t/e);return{real:Math.cos(r),imag:Math.sin(r)}}function Pu(t,e,n){const r=(e-t)/(n-1),s=O(n,"float32");s[0]=t;for(let t=1;t<s.length;t++)s[t]=s[t-1]+r;return yi(s,"float32")}function Vu(t,e,n){const r=new Array(t.rank).fill(0),s=t.shape.slice();return e.map((e=>{const a=[...s];a[n]=e;const i=$i(t,r,a);return r[n]+=e,i}))}function Wu(t,e){const n=new Array(t.rank);for(let r=0;r<n.length;r++)n[r]=t.shape[r]*e[r];const r=Kn(n,t.dtype);for(let e=0;e<r.values.length;++e){const n=r.indexToLoc(e),s=new Array(t.rank);for(let e=0;e<s.length;e++)s[e]=n[e]%t.shape[e];const a=t.locToIndex(s);r.values[e]=t.values[a]}return r.toTensor()}function Uu(t,e,n,r,s){const a=e[e.length-1],[i,o]=[t.length/a,a],u=v(n,i*r),l=v("int32",i*r);for(let e=0;e<i;e++){const n=e*o,s=t.subarray(n,n+o),a=[];for(let t=0;t<s.length;t++)a.push({value:s[t],index:t});a.sort(((t,e)=>e.value-t.value));const i=e*r,c=u.subarray(i,i+r),h=l.subarray(i,i+r);for(let t=0;t<r;t++)c[t]=a[t].value,h[t]=a[t].index}const c=e.slice();return c[c.length-1]=r,[pn(u,c,n),pn(l,c,"int32")]}const Gu={kernelName:"Abs",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>xa(t,ji(Xn(n,"float32"),-1))}}},Hu={kernelName:"Acos",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=Xa(Xn(n,"float32")),r=Wi(Ma(wa(1),e));return Ta(qs(t,r))}}}},ju={kernelName:"Acosh",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=Wi(Ma(Xa(Xn(n,"float32")),1));return qs(t,e)}}}},qu={kernelName:"Add",inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=Ys(n.shape,r.shape);return{a:()=>{let e=t;const r=Xs(n.shape,s);return r.length>0&&(e=Da(e,r)),ar(e,n.shape)},b:()=>{let e=t;const n=Xs(r.shape,s);return n.length>0&&(e=Da(e,n)),ar(e,r.shape)}}}},Ku={kernelName:"AddN",saveAllInputs:!0,gradFunc:(t,e)=>{const n={};return e.forEach(((e,r)=>{n[r]=()=>t.clone()})),n}},Xu={kernelName:"ArgMax",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Qs(n)}}},Yu={kernelName:"ArgMin",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Qs(n)}}},Ju={kernelName:"Asin",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>qs(t,Wi(Ma(wa(1),Xa(Xn(n,"float32")))))}}},Zu={kernelName:"Asinh",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=Wi(Pr(wa(1),Xa(Xn(n,"float32"))));return qs(t,e)}}}},Qu={kernelName:"Atan2",inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=Ys(n.shape,r.shape);return{a:()=>{const e=Pr(Xa(n),Xa(r));let a=xa(t,qs(r,e));const i=Xs(n.shape,s);return i.length>0&&(a=Da(a,i)),ar(a,n.shape)},b:()=>{const e=Pr(Xa(n),Xa(r));let a=Ta(xa(t,qs(n,e)));const i=Xs(r.shape,s);return i.length>0&&(a=Da(a,i)),ar(a,r.shape)}}}},tl={kernelName:"Atan",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>qs(t,Pr(Xa(Xn(n,"float32")),1))}}},el={kernelName:"Atanh",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>qs(t,Ma(wa(1),Xa(Xn(n,"float32"))))}}};const nl=ln({avgPool3dBackprop_:function(t,e,n,r,s=[1,1,1],a,i){const o=on(t,"dy","avgPool3dBackprop"),l=on(e,"input","avgPool3dBackprop");let c=o,h=l,p=!1;4===l.rank&&(p=!0,c=ar(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),h=ar(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),u(5===c.rank,(()=>`Error in avgPool3dBackprop: dy must be rank 5 but got rank ${c.rank}.`)),u(5===h.rank,(()=>`Error in avgPool3dBackprop: input must be rank 5 but got rank ${h.rank}.`)),u(ms(r,s),(()=>`Error in avgPool3dBackprop: Either strides or dilations must be 1. Got strides ${r} and dilations '${s}'`)),null!=i&&u(f(a),(()=>`Error in maxPool3dBackprop: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`));const d={dy:c,input:h},m={filterSize:n,strides:r,dilations:s,pad:a,dimRoundingMode:i},g=re.runKernelFunc((t=>{const e=is(h.shape,n,r,s,a,i);return t.avgPool3dBackprop(c,h,e)}),d,null,"AvgPool3DBackprop",m);return p?ar(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}}),rl={kernelName:"AvgPool3D",inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{filterSize:s,strides:a,dilations:i,pad:o,dimRoundingMode:u}=n,l=null==i?[1,1,1]:i;return{x:()=>nl(t,r,s,a,l,o,u)}}};const sl=ln({avgPoolBackprop_:function(t,e,n,r,s){const a=on(t,"dy","avgPoolBackprop"),i=on(e,"input","avgPoolBackprop");u(i.rank===a.rank,(()=>`Rank of input (${i.rank}) does not match rank of dy (${a.rank})`));let o=i,l=a,c=!1;3===i.rank&&(c=!0,o=ar(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=ar(a,[1,a.shape[0],a.shape[1],a.shape[2]])),u(4===l.rank,(()=>`Error in avgPoolBackprop: dy must be rank 4 but got rank ${l.rank}.`)),u(4===o.rank,(()=>`Error in avgPoolBackprop: input must be rank 4 but got rank ${o.rank}.`));const h={dy:l,input:o},p={filterSize:n,strides:r,pad:s},d=re.runKernelFunc((t=>{const e=as(o.shape,n,r,1,s);return t.avgPoolBackprop(l,o,e)}),h,null,"AvgPoolBackprop",p);return c?ar(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),al={kernelName:"AvgPool",inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{filterSize:s,strides:a,pad:i}=n;return{x:()=>sl(t,r,s,a,i)}}},il={kernelName:"BatchMatMul",inputsToSave:["a","b"],gradFunc:(t,e,n)=>{const[r,s]=e,{transposeA:a,transposeB:i}=n;return a||i?!a&&i?{a:()=>ir(t,s,!1,!1),b:()=>ir(t,r,!0,!1)}:a&&!i?{a:()=>ir(s,t,!1,!0),b:()=>ir(r,t,!1,!1)}:{a:()=>ir(s,t,!0,!0),b:()=>ir(t,r,!0,!0)}:{a:()=>ir(t,s,!1,!0),b:()=>ir(r,t,!0,!1)}}},ol={kernelName:"BatchToSpaceND",gradFunc:(t,e,n)=>{const{blockShape:r,crops:s}=n;return{x:()=>Fi(t,r,s)}}},ul={kernelName:"BroadcastTo",gradFunc:(t,e,n)=>{const r=n,s=r.inputShape,a=r.shape,i=Array.from(a);for(let t=s.length-1;t>=0;t--)if(s[t]===a[t])i[t]=1;else if(1!==s[t])throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${a}].`);const o=[];for(let t=0;t<i.length;t++)i[t]>1&&o.push(t);return{x:()=>Da(t,o,!0)}}},ll={kernelName:"Cast",gradFunc:t=>({x:()=>t.clone()})},cl={kernelName:"Ceil",gradFunc:t=>({x:()=>Qs(t)})},hl={kernelName:"ClipByValue",inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{clipValueMin:s,clipValueMax:a}=n;return{x:()=>Zs(Fa(da(r,s),ka(r,a)),t,Qs(t))}}},pl={kernelName:"Concat",saveAllInputs:!0,gradFunc:(t,e,n)=>{const r=e.map((t=>t.shape)),{axis:s}=n,a=x(s,e[0].shape)[0],i=r.map((t=>t[a]));return Pi(t,i,a).map((t=>()=>t))}},dl={kernelName:"Conv2D",inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const[r,s]=e,{dilations:a,strides:i,pad:o,dataFormat:l}=n;return u(fs(a),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`)),{x:()=>Ls(r.shape,t,s,i,o,l),filter:()=>Co(r,t,s.shape,i,o,l)}}},fl={kernelName:"Conv2DBackpropInput",inputsToSave:["dy","filter"],gradFunc:(t,e,n)=>{const[r,s]=e,{strides:a,pad:i,dataFormat:o,dimRoundingMode:u}=n;return{dy:()=>Os(t,s,a,i,o,1,u),filter:()=>Co(t,r,s.shape,a,i,o,u)}}};const ml=ln({conv3DBackpropFilter_:function(t,e,n,r,s){let a=t;4===t.rank&&(a=ar(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]));let i=e;4===i.rank&&(i=ar(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),u(5===a.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${a.shape}.`)),u(5===i.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`)),u(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),u(a.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${a.shape[4]}) must match input depth in filter (${n[3]}.`)),u(i.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`));const o={x:a,dy:i},l={strides:r,pad:s,filterShape:n};return re.runKernelFunc((t=>{const e=us(a.shape,n,r,1,s);return t.conv3dDerFilter(a,i,e)}),o,null,"Conv3DBackpropFilterV2",l)}});const gl=ln({conv3DBackpropInput_:function(t,e,n,r,s){u(t.length===e.rank,(()=>`Length of inShape (${t.length}) and rank of dy (${e.rank}) must match`));let a=t,i=e,o=!1;4===e.rank&&(o=!0,i=ar(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),a=[1,t[0],t[1],t[2],t[3]]);const l=a[4],c=i.shape[4];u(5===a.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${a.length}.`)),u(5===i.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`)),u(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),u(l===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`)),u(c===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${c}) must match output depth for filter ${n.shape[4]}.`));const h={dy:i,filter:n},p={pad:s,strides:r,inputShape:a},d=re.runKernelFunc((t=>{const e=us(a,n.shape,r,1,s);return t.conv3dDerInput(i,n,e)}),h,null,"Conv3DBackpropInputV2",p);return o?ar(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),yl={kernelName:"Conv3D",inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:r,strides:s,pad:a}=n;u(fs(r),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`));const[i,o]=e;return{x:()=>gl(i.shape,t,o,s,a),filter:()=>ml(i,t,o.shape,s,a)}}},bl={kernelName:"Cos",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>xa(Ta(Ti(Xn(n,"float32"))),t)}}},xl={kernelName:"Cosh",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>xa(_i(Xn(n,"float32")),t)}}},wl={kernelName:"Cumsum",inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{axis:s,exclusive:a,reverse:i}=n;return{x:()=>{const e=jr([s],r.rank);let n=Ws(t,s,a,!i);return null!=e&&(n=ur(n,e)),n}}}},vl={kernelName:"DepthwiseConv2dNative",inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:r,strides:s,pad:a,dimRoundingMode:i}=n,o=null==r?[1,1]:r;u(fs(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));const[l,c]=e;return u(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`)),u(4===c.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${c.rank}.`)),u(l.shape[3]===c.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${c.shape[2]}.`)),u(ms(s,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${s} and dilations '${o}'.`)),null!=i&&u(f(a),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`)),{x:()=>Do(l.shape,t,c,s,a,r,i),filter:()=>Mo(l,t,c.shape,s,a,r,i)}}},Il={kernelName:"Dilation2D",inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const[r,s]=e,a={x:r,filter:s,dy:t},i={x:r,filter:s,dy:t};return{x:()=>re.runKernel("Dilation2DBackpropInput",a,n),filter:()=>re.runKernel("Dilation2DBackpropFilter",i,n)}}},kl={kernelName:"Div",inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=Ys(n.shape,r.shape);return{a:()=>{const e=qs(t,Xn(r,"float32")),a=Xs(n.shape,s);return a.length>0?ar(Da(e,a),n.shape):e},b:()=>{let e=xa(t,Xn(n,"float32"));const a=Xs(r.shape,s);a.length>0&&(e=ar(Da(e,a),r.shape));const i=Xa(r);return Ta(qs(e,Xn(i,"float32")))}}}},Nl={kernelName:"Elu",outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e,r=e=>e.eluDer(t,n),s={dy:t,y:n};return{x:()=>re.runKernelFunc(r,s,null,"EluGrad")}}},Sl={kernelName:"Erf",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e,r=xa(ra(Ta(Xa(n))),2/Math.sqrt(Math.PI));return{x:()=>xa(t,r)}}},Cl={kernelName:"Exp",outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>xa(t,n)}}},El={kernelName:"Expm1",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>xa(t,ra(n))}}},Tl={kernelName:"Floor",gradFunc:t=>({x:()=>Qs(t)})},_l={kernelName:"FloorDiv",inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=Ys(n.shape,r.shape);return{a:()=>{const e=qs(t,Xn(r,"float32")),a=Xs(n.shape,s);return a.length>0?ar(Da(e,a),n.shape):e},b:()=>{let e=xa(t,Xn(n,"float32"));const a=Xs(r.shape,s);a.length>0&&(e=ar(Da(e,a),r.shape));const i=Xa(r);return Ta(qs(e,Xn(i,"float32")))}}}},$l={kernelName:"FusedBatchNorm",inputsToSave:["x","mean","variance","scale"],gradFunc:(t,e,n)=>{const{varianceEpsilon:r}=n,[s,a,i,o]=e,u=null==o?wa(1):o,l=Xs(a.shape,s.shape),c=[];if(1===a.rank){for(let t=0;t<s.shape.length-1;++t)c.push(s.shape[t]);c.push(1)}const h=Ma(s,a),p=xa(t,u),d=ki(Pr(i,wa(r))),f=xa(xa(xa(d,d),d),wa(-.5));return{x:()=>1===a.rank?ar(xa(xa(t,ia(ar(d,[1,1,1,a.shape[0]]),c)),u),s.shape):ar(xa(xa(t,d),u),s.shape),mean:()=>{let t=xa(xa(d,wa(-1)),p);return 1===a.rank&&(t=Da(t,l)),ar(t,a.shape)},variance:()=>{let t=xa(xa(f,h),p);return 1===a.rank&&(t=Da(t,l)),ar(t,a.shape)},scale:()=>{const e=xa(h,d);let n=xa(t,e);return 1===a.rank&&(n=Da(n,l)),ar(n,a.shape)},offset:()=>{let e=t;return 1===a.rank&&(e=Da(e,l)),ar(e,a.shape)}}}};const Al=ln({unsortedSegmentSum_:function(t,e,n){const r=on(t,"x","unsortedSegmentSum"),s=on(e,"segmentIds","unsortedSegmentSum","int32");u(f(n),(()=>"numSegments must be of dtype int"));const a={x:r,segmentIds:s},i={numSegments:n};return re.runKernelFunc(((t,e)=>{const a=t.unsortedSegmentSum(r,s,n);return e([s]),a}),a,null,"UnsortedSegmentSum",i)}}),Rl={kernelName:"GatherV2",inputsToSave:["x","indices"],gradFunc:(t,e,n)=>{const[r,s]=e,{axis:a}=n,i=x(a,r.shape)[0];return{x:()=>{const e=r.shape,n=s.size,o=e.slice(0,i),u=o.length,l=e.slice(a,e.length).slice(1),c=l.length,h=Ml(0,u),p=Ml(u+1,u+1+c),d=Dl([o,[n],l]),f=ar(t,d),m=ar(s,[n]),g=Dl([[u],h,p]),y=ur(f,g);let b=Al(y,m,r.shape[i]);const x=qr(g);return b=ur(b,x),b},indices:()=>s}}};function Ml(t,e){const n=[];for(let r=t;r<e;++r)n.push(r);return n}function Dl(t){const e=[];for(let n=0;n<t.length;++n)for(let r=0;r<t[n].length;++r)e.push(t[n][r]);return e}const Ol={kernelName:"GreaterEqual",inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e;return{a:()=>Qs(n),b:()=>Qs(r)}}},Fl={kernelName:"Identity",gradFunc:t=>({x:()=>Xn(t,"float32")})},Ll={kernelName:"IsFinite",gradFunc:t=>({x:()=>Qs(t)})},Bl={kernelName:"IsInf",gradFunc:t=>({x:()=>Qs(t)})},zl={kernelName:"IsNan",gradFunc:t=>({x:()=>Qs(t)})},Pl={kernelName:"Log1p",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>qs(t,Pr(n,1))}}},Vl={kernelName:"Log",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>qs(t,Xn(n,"float32"))}}},Wl={kernelName:"LogSoftmax",inputsToSave:[],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r]=e,{axis:s}=n;return{logits:()=>{const e=ra(r);return Ma(t,xa(Da(t,s,!0),e))}}}};const Ul=ln({localResponseNormalizationBackprop_:function(t,e,n,r=5,s=1,a=1,i=.5){const o={x:t,y:e,dy:n},u={depthRadius:r,bias:s,alpha:a,beta:i};return re.runKernelFunc((o=>o.LRNGrad(n,t,e,r,s,a,i)),o,null,"LRNBackprop",u)}}),Gl={kernelName:"LRN",inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r,s]=e,{depthRadius:a,bias:i,alpha:o,beta:u}=n;return{x:()=>Ul(r,s,t,a,i,o,u)}}};function Hl(t,e,n,r){return e.rank<n.rank&&(e=ar(e,Gr(e.shape,r))),t.rank<n.rank&&(t=ar(t,Gr(t.shape,r))),{x:()=>xa(t,Xn(Js(n,e),t.dtype))}}const jl={kernelName:"Max",inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const r=n,{reductionIndices:s}=r,a=e[0],i=Hl(t,e[1],a,x(s,a.shape));return{x:()=>i.x()}}},ql={kernelName:"Maximum",inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e;return{a:()=>xa(t,Xn(da(n,r),"float32")),b:()=>xa(t,Xn(Ia(n,r),"float32"))}}};const Kl=ln({maxPool3dBackprop_:function(t,e,n,r,s,a=[1,1,1],i,o){const l=on(t,"dy","maxPool3dBackprop"),c=on(e,"input","maxPool3dBackprop"),h=on(n,"output","maxPool3dBackprop");let p=l,d=c,m=h,g=!1;4===c.rank&&(g=!0,p=ar(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),d=ar(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]]),m=ar(h,[1,h.shape[0],h.shape[1],h.shape[2],h.shape[3]])),u(5===p.rank,(()=>`Error in maxPool3dBackprop: dy must be rank 5 but got rank ${p.rank}.`)),u(5===d.rank,(()=>`Error in maxPool3dBackprop: input must be rank 5 but got rank ${d.rank}.`)),u(5===m.rank,(()=>`Error in maxPool3dBackprop: output must be rank 5 but got rank ${m.rank}.`)),u(ms(s,a),(()=>`Error in maxPool3dBackprop: Either strides or dilations must be 1. Got strides ${s} and dilations '${a}'`)),null!=o&&u(f(i),(()=>`Error in maxPool3dBackprop: pad must be an integer when using, dimRoundingMode ${o} but got pad ${i}.`));const y={dy:p,input:d,output:m},b={filterSize:r,strides:s,dilations:a,pad:i,dimRoundingMode:o},x=re.runKernelFunc((t=>{const e=is(d.shape,r,s,a,i,o);return t.maxPool3dBackprop(p,d,m,e)}),y,null,"MaxPool3DBackprop",b);return g?ar(x,[x.shape[1],x.shape[2],x.shape[3],x.shape[4]]):x}}),Xl={kernelName:"MaxPool3D",inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r,s]=e,{filterSize:a,strides:i,dilations:o,pad:u,dimRoundingMode:l}=n,c=null==o?[1,1,1]:o;return{x:()=>Kl(t,r,s,a,i,c,u,l)}}};const Yl=ln({maxPoolBackprop_:function(t,e,n,r,s,a,i){const o=on(t,"dy","maxPoolBackprop"),l=on(e,"input","maxPoolBackprop"),c=on(n,"output","maxPoolBackprop");u(l.rank===o.rank,(()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`)),u(4===o.rank,(()=>`Error in maxPoolBackprop: dy must be rank 4 but got rank ${o.rank}.`)),u(4===l.rank,(()=>`Error in maxPoolBackprop: input must be rank 4 but got rank ${l.rank}.`)),null!=i&&u(f(a),(()=>`Error in maxPoolBackprop: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`));const h={dy:o,input:l,output:c},p={filterSize:r,strides:s,pad:a,dimRoundingMode:i};return re.runKernelFunc((t=>{const e=as(l.shape,r,s,1,a,i);return t.maxPoolBackprop(o,l,c,e)}),h,null,"MaxPoolBackprop",p)}}),Jl={kernelName:"PadV2",inputsToSave:["x"],gradFunc:(t,e,n)=>{const r=e[0],{paddings:s}=n,a=s.map((t=>t[0]));return{x:()=>$i(t,a,r.shape)}}},Zl={kernelName:"SpaceToBatchND",gradFunc:(t,e,n)=>{const{blockShape:r,paddings:s}=n;return{x:()=>xs(t,r,s)}}},Ql={kernelName:"SplitV",gradFunc:(t,e,n)=>{const{axis:r}=n;return{x:()=>$s(t,r)}}};const tc=[Gu,Hu,ju,qu,Ku,Xu,Yu,Ju,Zu,Qu,tl,el,rl,al,il,ol,ul,ll,cl,hl,pl,fl,dl,yl,bl,xl,wl,vl,Il,kl,Nl,Sl,Cl,El,_l,Tl,$l,Rl,Ol,Fl,Ll,Bl,zl,Pl,Vl,Wl,Gl,jl,jl,ql,Xl,{kernelName:"MaxPool",inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r,s]=e,{filterSize:a,strides:i,pad:o}=n;return{x:()=>Yl(t,r,s,a,i,o)}}},{kernelName:"Min",inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const r=n,{axis:s}=r,[a,i]=e,o=Hl(t,i,a,x(s,a.shape));return{x:()=>o.x()}}},{kernelName:"Minimum",inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e;return{a:()=>xa(t,Xn(ka(n,r),"float32")),b:()=>xa(t,Xn(pa(n,r),"float32"))}}},{kernelName:"MirrorPad",inputsToSave:["x"],gradFunc:(t,e,n)=>{const r=e[0],{paddings:s}=n,a=s.map((t=>t[0]));return{x:()=>$i(t,a,r.shape)}}},{kernelName:"Mod",inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=Ys(n.shape,r.shape);return{a:()=>{const e=Xs(n.shape,s);return e.length>0?ar(Da(t,e),n.shape):t},b:()=>{const e=xa(t,Ta(la(qs(n,r)))),a=Xs(r.shape,s);return a.length>0?ar(Da(e,a),r.shape):e}}}},{kernelName:"Multiply",inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=Ys(n.shape,r.shape);return{a:()=>{const e=xa(t,Xn(r,"float32")),a=Xs(n.shape,s);return a.length>0?ar(Da(e,a),n.shape):e},b:()=>{const e=xa(t,Xn(n,"float32")),a=Xs(r.shape,s);return a.length>0?ar(Da(e,a),r.shape):e}}}},{kernelName:"Negate",gradFunc:t=>({x:()=>Ta(t)})},{kernelName:"OneHot",inputsToSave:["indices"],gradFunc:(t,e)=>{const n=e[0];return{indices:()=>Wa(n.shape,"float32")}}},{kernelName:"OnesLike",gradFunc:t=>({x:()=>Qs(t)})},Jl,Jl,{kernelName:"Pow",inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(t,e)=>{const[n,r,s]=e,a=n,i=r,o=Ys(a.shape,i.shape);return{a:()=>{const e=Xn(i,"float32");let n=xa(t,xa(e,ni(a,Ma(e,wa(1)))));const r=Xs(a.shape,o);return r.length>0&&(n=Da(n,r)),ar(n,a.shape)},b:()=>{const e=pa(a,0),n=Zs(e,Ca(a),Qs(a));let r=xa(t,xa(s,n));const u=Xs(i.shape,o);return u.length>0&&(r=Da(r,u)),ar(r,i.shape)}}}},{kernelName:"Prelu",inputsToSave:["x","alpha"],gradFunc:(t,e)=>{const[n,r]=e,s=pa(n,0);return{x:()=>Zs(s,t,xa(t,r)),alpha:()=>{let e=Zs(s,Qs(t),xa(t,n));const a=Xs(r.shape,t.shape);return a.length>0&&(e=Da(e,a)),ar(e,r.shape)}}}},{kernelName:"Reciprocal",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>qs(t,Ta(Xa(n)))}}},{kernelName:"Relu6",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e,r=xa(ka(n,6),ji(n));return{x:()=>xa(t,Xn(r,"float32"))}}},{kernelName:"Relu",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>xa(t,Xn(ji(n),"float32"))}}},{kernelName:"Reshape",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ar(t,n.shape)}}},{kernelName:"ResizeBilinear",inputsToSave:["images"],gradFunc:(t,e,n)=>{const[r]=e,s=e=>{const{alignCorners:s}=n;return e.resizeBilinearBackprop(t,r,s)},a={images:r};return{images:()=>re.runKernelFunc(s,a,null,"ResizeBilinearGrad",n)}}},{kernelName:"ResizeNearestNeighbor",inputsToSave:["images"],gradFunc:(t,e,n)=>{const[r]=e,s=e=>{const{alignCorners:s}=n;return e.resizeNearestNeighborBackprop(t,r,s)},a={images:r};return{images:()=>re.runKernelFunc(s,a,null,"ResizeNearestNeighborGrad",n)}}},{kernelName:"Reverse",gradFunc:(t,e,n)=>{const{dims:r}=n,s=x(r,t.shape);return{x:()=>vi(t,s)}}},{kernelName:"Round",gradFunc:t=>({x:()=>Qs(t)})},{kernelName:"Rsqrt",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Ta(qs(t,xa(ni(n,1.5),2)))}}},{kernelName:"SelectV2",inputsToSave:["condition"],gradFunc:(t,e)=>{const[n]=e;return{condition:()=>Xn(Qs(n),"float32"),t:()=>xa(t,Xn(n,t.dtype)),e:()=>xa(t,Xn(La(n),t.dtype))}}},{kernelName:"Selu",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=pa(n,wa(0)),r=wa(1.7580993408473768),s=wa(1.0507009873554805),a=xa(t,s),i=xa(xa(t,r),ra(Xn(n,"float32")));return Zs(e,a,i)}}}},{kernelName:"Sigmoid",outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>xa(t,xa(n,Ma(wa(1),n)))}}},{kernelName:"Sign",gradFunc:t=>({x:()=>Qs(t)})},{kernelName:"Sin",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>xa(Ps(Xn(n,"float32")),t)}}},{kernelName:"Sinh",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>xa(Vs(Xn(n,"float32")),t)}}},{kernelName:"Slice",inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{begin:s,size:a}=n,i=r.shape,[o,u]=Sr(r,s,a),l=[];for(let e=0;e<t.rank;e++)l.push([o[e],i[e]-o[e]-u[e]]);return{x:()=>ei(t,l)}}},{kernelName:"Softmax",outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r]=e,{dim:s}=n,a=xa(t,r);return{logits:()=>Ma(a,xa(Da(a,[s],true),r))}}},{kernelName:"Softplus",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>xa(t,_a(n))}}},Zl,Zl,Ql,Ql,{kernelName:"Sqrt",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>qs(t,xa(Wi(Xn(n,"float32")),2))}}},{kernelName:"SquaredDifference",inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=wa(2);return{a:()=>xa(t,xa(s,Ma(n,r))),b:()=>xa(t,xa(s,Ma(r,n)))}}},{kernelName:"Square",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>xa(t,xa(Xn(n,"float32"),2))}}},{kernelName:"Step",gradFunc:t=>({x:()=>Qs(t)})},{kernelName:"Sub",inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=Ys(n.shape,r.shape);return{a:()=>{let e=t;const r=Xs(n.shape,s);return r.length>0&&(e=Da(e,r)),ar(e,n.shape)},b:()=>{let e=t;const n=Xs(r.shape,s);return n.length>0&&(e=Da(e,n)),ar(Ta(e),r.shape)}}}},{kernelName:"Sum",inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,s=r.shape.slice(),{axis:a}=n;x(a,r.shape).forEach((t=>{s[t]=1}));const i=ar(t,s),o=xa(i,Ua(r.shape,"float32"));return{x:()=>o}}},{kernelName:"Tan",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>qs(t,Xa(Ps(n)))}}},{kernelName:"Tanh",outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>xa(Ma(wa(1),Xa(n)),t)}}},{kernelName:"Tile",inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{reps:s}=n;return{x:()=>{let e=Qs(r);if(1===r.rank)for(let n=0;n<s[0];++n)e=Pr(e,$i(t,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)e=Pr(e,$i(t,[n*r.shape[0],a*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)for(let i=0;i<s[2];++i)e=Pr(e,$i(t,[n*r.shape[0],a*r.shape[1],i*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)for(let i=0;i<s[2];++i)for(let o=0;o<s[3];++o)e=Pr(e,$i(t,[n*r.shape[0],a*r.shape[1],i*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return e}}}},{kernelName:"Transpose",gradFunc:(t,e,n)=>{const r=n,{perm:s}=r,a=qr(s);return{x:()=>ur(t,a)}}},{kernelName:"Unpack",gradFunc:(t,e,n)=>{const r=n,{axis:s}=r;return{value:()=>Hi(t,s)}}},{kernelName:"UnsortedSegmentSum",inputsToSave:["segmentIds"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>function(t,e){const n=ba(e,Qs(e)),r=ha(t,n);let s=da(e,wa(0,"int32"));const a=r.rank-s.rank;for(let t=0;t<a;++t)s=sa(s,t+1);s=Fa(s,Ua(r.shape,"bool"));const i=Qs(r);return Zs(s,r,i)}(t,n)}}},{kernelName:"ZerosLike",gradFunc:t=>({x:()=>Qs(t)})}];for(const t of tc)yt(t);Ot.prototype.abs=function(){return this.throwIfDisposed(),Lr(this)},Ot.prototype.acos=function(){return this.throwIfDisposed(),Br(this)},Ot.prototype.acosh=function(){return this.throwIfDisposed(),zr(this)},Ot.prototype.addStrict=function(t){return this.throwIfDisposed(),co(this,t)},Ot.prototype.add=function(t){return this.throwIfDisposed(),Pr(this,t)},Ot.prototype.all=function(t,e){return this.throwIfDisposed(),Xr(this,t,e)},Ot.prototype.any=function(t,e){return this.throwIfDisposed(),Yr(this,t,e)},Ot.prototype.argMax=function(t){return this.throwIfDisposed(),Jr(this,t)},Ot.prototype.argMin=function(t){return this.throwIfDisposed(),Zr(this,t)},Ot.prototype.asScalar=function(){return this.throwIfDisposed(),u(1===this.size,(()=>"The array must have only 1 element.")),ar(this,[])},Ot.prototype.asType=function(t){return this.throwIfDisposed(),Xn(this,t)},Ot.prototype.as1D=function(){return this.throwIfDisposed(),ar(this,[this.size])},Ot.prototype.as2D=function(t,e){return this.throwIfDisposed(),ar(this,[t,e])},Ot.prototype.as3D=function(t,e,n){return this.throwIfDisposed(),ar(this,[t,e,n])},Ot.prototype.as4D=function(t,e,n,r){return this.throwIfDisposed(),ar(this,[t,e,n,r])},Ot.prototype.as5D=function(t,e,n,r,s){return this.throwIfDisposed(),ar(this,[t,e,n,r,s])},Ot.prototype.asin=function(){return this.throwIfDisposed(),Qr(this)},Ot.prototype.asinh=function(){return this.throwIfDisposed(),ts(this)},Ot.prototype.atan=function(){return this.throwIfDisposed(),es(this)},Ot.prototype.atan2=function(t){return this.throwIfDisposed(),ns(this,t)},Ot.prototype.atanh=function(){return this.throwIfDisposed(),rs(this)},Ot.prototype.avgPool=function(t,e,n,r){return this.throwIfDisposed(),ys(this,t,e,n,r)},Ot.prototype.batchToSpaceND=function(t,e){return this.throwIfDisposed(),xs(this,t,e)},Ot.prototype.batchNorm=function(t,e,n,r,s){return this.throwIfDisposed(),vs(this,t,e,n,r,s)},Ot.prototype.broadcastTo=function(t){return this.throwIfDisposed(),Ss(this,t)},Ot.prototype.cast=function(t){return this.throwIfDisposed(),Xn(this,t)},Ot.prototype.ceil=function(){return this.throwIfDisposed(),Cs(this)},Ot.prototype.clipByValue=function(t,e){return this.throwIfDisposed(),Es(this,t,e)},Ot.prototype.concat=function(t,e){return this.throwIfDisposed(),t instanceof Ot&&(t=[t]),$s([this,...t],e)},Ot.prototype.conv1d=function(t,e,n,r,s,a){return this.throwIfDisposed(),Fs(this,t,e,n,r,s,a)},Ot.prototype.conv2dTranspose=function(t,e,n,r,s){return this.throwIfDisposed(),Bs(this,t,e,n,r,s)},Ot.prototype.conv2d=function(t,e,n,r,s,a){return this.throwIfDisposed(),Os(this,t,e,n,r,s,a)},Ot.prototype.cos=function(){return this.throwIfDisposed(),Ps(this)},Ot.prototype.cosh=function(){return this.throwIfDisposed(),Vs(this)},Ot.prototype.cumsum=function(t,e,n){return this.throwIfDisposed(),Ws(this,t,e,n)},Ot.prototype.depthToSpace=function(t,e){return this.throwIfDisposed(),Us(this,t,e)},Ot.prototype.depthwiseConv2D=function(t,e,n,r,s,a){return _r("depthwiseConv2D is deprecated, use depthwiseConv2d instead"),this.throwIfDisposed(),Gs(this,t,e,n,r,s,a)},Ot.prototype.depthwiseConv2d=function(t,e,n,r,s,a){return this.throwIfDisposed(),Gs(this,t,e,n,r,s,a)},Ot.prototype.dilation2d=function(t,e,n,r,s){return this.throwIfDisposed(),Hs(this,t,e,n,r,s)},Ot.prototype.divNoNan=function(t){return this.throwIfDisposed(),ta(this,t)},Ot.prototype.divStrict=function(t){return this.throwIfDisposed(),ho(this,t)},Ot.prototype.div=function(t){return this.throwIfDisposed(),qs(this,t)};const ec=ln({dot_:function(t,e){const n=on(t,"t1","dot"),r=on(e,"t2","dot");u(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`));const s=1===n.rank?n.size:n.shape[1],a=1===r.rank?r.size:r.shape[0];if(u(s===a,(()=>`Error in dot: inner dimensions of inputs must match, but got ${s} and ${a}.`)),1===n.rank&&1===r.rank){const t=ar(n,[1,-1]),e=ar(r,[-1,1]),s=ir(t,e);return ar(s,[])}if(1===n.rank&&2===r.rank){const t=ar(n,[1,-1]),e=ar(r,[r.shape[0],r.shape[1]]),s=ir(t,e);return ar(s,[s.size])}if(2===n.rank&&1===r.rank){const t=ar(r,[-1,1]),e=ir(n,t);return ar(e,[e.size])}{const t=ar(r,[r.shape[0],r.shape[1]]);return ir(n,t)}}});Ot.prototype.dot=function(t){return this.throwIfDisposed(),ec(this,t)},Ot.prototype.elu=function(){return this.throwIfDisposed(),ea(this)},Ot.prototype.equalStrict=function(t){return this.throwIfDisposed(),so(this,t)},Ot.prototype.equal=function(t){return this.throwIfDisposed(),Js(this,t)},Ot.prototype.erf=function(){return this.throwIfDisposed(),na(this)},Ot.prototype.exp=function(){return this.throwIfDisposed(),ra(this)},Ot.prototype.expandDims=function(t){return this.throwIfDisposed(),sa(this,t)},Ot.prototype.expm1=function(){return this.throwIfDisposed(),aa(this)},Ot.prototype.fft=function(){return this.throwIfDisposed(),Li(this)},Ot.prototype.flatten=function(){return this.throwIfDisposed(),ar(this,[this.size])},Ot.prototype.floor=function(){return this.throwIfDisposed(),la(this)},Ot.prototype.floorDiv=function(t){return this.throwIfDisposed(),js(this,t)},Ot.prototype.gather=function(t,e){return this.throwIfDisposed(),ha(this,t,e)},Ot.prototype.greaterEqualStrict=function(t){return this.throwIfDisposed(),ao(this,t)},Ot.prototype.greaterEqual=function(t){return this.throwIfDisposed(),da(this,t)},Ot.prototype.greaterStrict=function(t){return this.throwIfDisposed(),io(this,t)},Ot.prototype.greater=function(t){return this.throwIfDisposed(),pa(this,t)},Ot.prototype.ifft=function(){return this.throwIfDisposed(),Bi(this)},Ot.prototype.irfft=function(){return this.throwIfDisposed(),zi(this)},Ot.prototype.isFinite=function(){return this.throwIfDisposed(),ma(this)},Ot.prototype.isInf=function(){return this.throwIfDisposed(),ga(this)},Ot.prototype.isNaN=function(){return this.throwIfDisposed(),ya(this)},Ot.prototype.leakyRelu=function(t){return this.throwIfDisposed(),va(this,t)},Ot.prototype.lessEqualStrict=function(t){return this.throwIfDisposed(),oo(this,t)},Ot.prototype.lessEqual=function(t){return this.throwIfDisposed(),ka(this,t)},Ot.prototype.lessStrict=function(t){return this.throwIfDisposed(),uo(this,t)},Ot.prototype.less=function(t){return this.throwIfDisposed(),Ia(this,t)},Ot.prototype.localResponseNormalization=function(t,e,n,r){return this.throwIfDisposed(),Sa(this,t,e,n,r)},Ot.prototype.logSigmoid=function(){return this.throwIfDisposed(),Aa(this)},Ot.prototype.logSoftmax=function(t){return this.throwIfDisposed(),Oa(this,t)},Ot.prototype.logSumExp=function(t,e){return this.throwIfDisposed(),fu(this,t,e)},Ot.prototype.log=function(){return this.throwIfDisposed(),Ca(this)},Ot.prototype.log1p=function(){return this.throwIfDisposed(),Ea(this)},Ot.prototype.logicalAnd=function(t){return this.throwIfDisposed(),Fa(this,t)},Ot.prototype.logicalNot=function(){return this.throwIfDisposed(),La(this)},Ot.prototype.logicalOr=function(t){return this.throwIfDisposed(),Ba(this,t)};const nc=ln({logicalXor_:function(t,e){const n=on(t,"a","logicalXor","bool"),r=on(e,"b","logicalXor","bool");return Ys(n.shape,r.shape),Fa(Ba(t,e),La(Fa(t,e)))}});Ot.prototype.logicalXor=function(t){return this.throwIfDisposed(),nc(this,t)},Ot.prototype.matMul=function(t,e,n){return this.throwIfDisposed(),ir(this,t,e,n)},Ot.prototype.maxPool=function(t,e,n,r){return this.throwIfDisposed(),za(this,t,e,n,r)},Ot.prototype.max=function(t,e){return this.throwIfDisposed(),Ra(this,t,e)},Ot.prototype.maximumStrict=function(t){return this.throwIfDisposed(),po(this,t)},Ot.prototype.maximum=function(t){return this.throwIfDisposed(),ba(this,t)},Ot.prototype.mean=function(t,e){return this.throwIfDisposed(),Ga(this,t,e)},Ot.prototype.min=function(t,e){return this.throwIfDisposed(),Ha(this,t,e)},Ot.prototype.minimumStrict=function(t){return this.throwIfDisposed(),fo(this,t)},Ot.prototype.minimum=function(t){return this.throwIfDisposed(),ja(this,t)},Ot.prototype.mirrorPad=function(t,e){return this.throwIfDisposed(),qa(this,t,e)},Ot.prototype.modStrict=function(t){return this.throwIfDisposed(),mo(this,t)},Ot.prototype.mod=function(t){return this.throwIfDisposed(),Ka(this,t)},Ot.prototype.mulStrict=function(t){return this.throwIfDisposed(),go(this,t)},Ot.prototype.mul=function(t){return this.throwIfDisposed(),xa(this,t)},Ot.prototype.neg=function(){return this.throwIfDisposed(),Ta(this)},Ot.prototype.norm=function(t,e,n){return this.throwIfDisposed(),vo(this,t,e,n)},Ot.prototype.notEqualStrict=function(t){return this.throwIfDisposed(),lo(this,t)},Ot.prototype.notEqual=function(t){return this.throwIfDisposed(),Za(this,t)},Ot.prototype.oneHot=function(t,e=1,n=0){return this.throwIfDisposed(),or(this,t,e,n)},Ot.prototype.onesLike=function(){return this.throwIfDisposed(),ti(this)},Ot.prototype.pad=function(t,e){return this.throwIfDisposed(),ei(this,t,e)};const rc=ln({pool_:function(t,e,n,r,s,a){null==s&&(s=[1,1]),null==a&&(a=1),0===r&&(r="valid");const i=on(t,"x","maxPool");let o=i,l=!1;3===i.rank&&(l=!0,o=ar(i,[1,i.shape[0],i.shape[1],i.shape[2]])),u(ms(a,s),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${a} and dilations '${s}'`));const c=as(o.shape,e,a,s,r),h=[c.dilationHeight,c.dilationWidth];let p;p="same"===r?function(t,e){const n=t.map(((t,n)=>t+(t-1)*(e[n]-1))).map((t=>t-1)),r=n.map((t=>Math.floor(t/2))),s=n.map(((t,e)=>t-r[e]));return n.map(((t,e)=>[r[e],s[e]]))}([c.filterHeight,c.filterWidth],h):[[0,0],[0,0]];const d=1===h[0]&&1===h[1],[f,m]=function(t,e,n){const r=n.map((t=>t[0])),s=n.map((t=>t[1])),a=t.concat(r,s),i=e.map(((t,e)=>(t-a[e]%t)%t)),o=s.map(((t,e)=>t+i[e])),u=e.map(((t,e)=>[r[e],o[e]])),l=e.map(((t,e)=>[0,i[e]]));return[u,l]}([c.inHeight,c.inWidth],h,p),g=d?r:"valid",y=d?o:Fi(o,h,f),b=("avg"===n?()=>ys(y,e,a,g):()=>za(y,e,a,g))(),x=d?b:xs(b,h,m);return l?ar(x,[x.shape[1],x.shape[2],x.shape[3]]):x}});var sc,ac,ic;Ot.prototype.pool=function(t,e,n,r,s){return this.throwIfDisposed(),rc(this,t,e,n,r,s)},Ot.prototype.powStrict=function(t){return this.throwIfDisposed(),yo(this,t)},Ot.prototype.pow=function(t){return this.throwIfDisposed(),ni(this,t)},Ot.prototype.prelu=function(t){return this.throwIfDisposed(),ri(this,t)},Ot.prototype.prod=function(t,e){return this.throwIfDisposed(),si(this,t,e)},Ot.prototype.reciprocal=function(){return this.throwIfDisposed(),xi(this)},Ot.prototype.relu=function(){return this.throwIfDisposed(),wi(this)},Ot.prototype.relu6=function(){return this.throwIfDisposed(),Eo(this)},Ot.prototype.reshapeAs=function(t){return this.throwIfDisposed(),ar(this,t.shape)},Ot.prototype.reshape=function(t){return this.throwIfDisposed(),ar(this,t)},Ot.prototype.resizeBilinear=function(t,e){return this.throwIfDisposed(),au(this,t,e)},Ot.prototype.resizeNearestNeighbor=function(t,e){return this.throwIfDisposed(),iu(this,t,e)},Ot.prototype.reverse=function(t){return this.throwIfDisposed(),vi(this,t)},Ot.prototype.rfft=function(){return this.throwIfDisposed(),Vi(this)},Ot.prototype.round=function(){return this.throwIfDisposed(),Ii(this)},Ot.prototype.rsqrt=function(){return this.throwIfDisposed(),ki(this)},Ot.prototype.selu=function(){return this.throwIfDisposed(),Ni(this)},Ot.prototype.separableConv2d=function(t,e,n,r,s,a){return this.throwIfDisposed(),Si(this,t,e,n,r,s,a)},Ot.prototype.sigmoid=function(){return this.throwIfDisposed(),_a(this)},Ot.prototype.sign=function(){return this.throwIfDisposed(),Ei(this)},Ot.prototype.sin=function(){return this.throwIfDisposed(),Ti(this)},Ot.prototype.sinh=function(){return this.throwIfDisposed(),_i(this)},Ot.prototype.slice=function(t,e){return this.throwIfDisposed(),$i(this,t,e)},Ot.prototype.softmax=function(t){return this.throwIfDisposed(),Oi(this,t)},Ot.prototype.softplus=function(){return this.throwIfDisposed(),$a(this)},Ot.prototype.spaceToBatchND=function(t,e){return this.throwIfDisposed(),Fi(this,t,e)},Ot.prototype.split=function(t,e){return this.throwIfDisposed(),Pi(this,t,e)},Ot.prototype.sqrt=function(){return this.throwIfDisposed(),Wi(this)},Ot.prototype.square=function(){return this.throwIfDisposed(),Xa(this)},Ot.prototype.squaredDifference=function(t){return this.throwIfDisposed(),Ui(this,t)},Ot.prototype.squaredDifferenceStrict=function(t){return this.throwIfDisposed(),bo(this,t)},Ot.prototype.squeeze=function(t){return this.throwIfDisposed(),Gi(this,t)},Ot.prototype.stack=function(t,e){this.throwIfDisposed();const n=t instanceof Ot?[this,t]:[this,...t];return Hi(n,e)},Ot.prototype.step=function(t){return this.throwIfDisposed(),ji(this,t)},Ot.prototype.stridedSlice=function(t,e,n,r,s,a,i,o){return this.throwIfDisposed(),qi(this,t,e,n,r,s,a,i,o)},Ot.prototype.subStrict=function(t){return this.throwIfDisposed(),xo(this,t)},Ot.prototype.sub=function(t){return this.throwIfDisposed(),Ma(this,t)},Ot.prototype.sum=function(t,e){return this.throwIfDisposed(),Da(this,t,e)},Ot.prototype.tan=function(){return this.throwIfDisposed(),Ki(this)},Ot.prototype.tanh=function(){return this.throwIfDisposed(),Xi(this)},Ot.prototype.tile=function(t){return this.throwIfDisposed(),ia(this,t)},Ot.prototype.toBool=function(){return this.throwIfDisposed(),Xn(this,"bool")},Ot.prototype.toFloat=function(){return this.throwIfDisposed(),Xn(this,"float32")},Ot.prototype.toInt=function(){return this.throwIfDisposed(),Xn(this,"int32")},Ot.prototype.topk=function(t,e){return this.throwIfDisposed(),Zi(this,t,e)},Ot.prototype.transpose=function(t){return this.throwIfDisposed(),ur(this,t)},Ot.prototype.unique=function(t){return this.throwIfDisposed(),to(this,t)},Ot.prototype.unsortedSegmentSum=function(t,e){return this.throwIfDisposed(),Al(this,t,e)},Ot.prototype.unstack=function(t){return this.throwIfDisposed(),eo(this,t)},Ot.prototype.where=function(t,e){return this.throwIfDisposed(),Zs(t,this,e)},Ot.prototype.zerosLike=function(){return this.throwIfDisposed(),Qs(this)},(ac=sc||(sc={}))[ac.DT_INVALID=0]="DT_INVALID",ac[ac.DT_FLOAT=1]="DT_FLOAT",ac[ac.DT_DOUBLE=2]="DT_DOUBLE",ac[ac.DT_INT32=3]="DT_INT32",ac[ac.DT_UINT8=4]="DT_UINT8",ac[ac.DT_INT16=5]="DT_INT16",ac[ac.DT_INT8=6]="DT_INT8",ac[ac.DT_STRING=7]="DT_STRING",ac[ac.DT_COMPLEX64=8]="DT_COMPLEX64",ac[ac.DT_INT64=9]="DT_INT64",ac[ac.DT_BOOL=10]="DT_BOOL",ac[ac.DT_QINT8=11]="DT_QINT8",ac[ac.DT_QUINT8=12]="DT_QUINT8",ac[ac.DT_QINT32=13]="DT_QINT32",ac[ac.DT_BFLOAT16=14]="DT_BFLOAT16",ac[ac.DT_FLOAT_REF=101]="DT_FLOAT_REF",ac[ac.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",ac[ac.DT_INT32_REF=103]="DT_INT32_REF",ac[ac.DT_UINT8_REF=104]="DT_UINT8_REF",ac[ac.DT_INT16_REF=105]="DT_INT16_REF",ac[ac.DT_INT8_REF=106]="DT_INT8_REF",ac[ac.DT_STRING_REF=107]="DT_STRING_REF",ac[ac.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",ac[ac.DT_INT64_REF=109]="DT_INT64_REF",ac[ac.DT_BOOL_REF=110]="DT_BOOL_REF",ac[ac.DT_QINT8_REF=111]="DT_QINT8_REF",ac[ac.DT_QUINT8_REF=112]="DT_QUINT8_REF",ac[ac.DT_QINT32_REF=113]="DT_QINT32_REF",ac[ac.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",function(t){let e;!function(t){t[t.LEGACY=0]="LEGACY",t[t.V1=1]="V1",t[t.V2=2]="V2"}(e=t.CheckpointFormatVersion||(t.CheckpointFormatVersion={}))}(ic||(ic={}));const oc={};function uc(t){return oc[t]}function lc(t,e,n,r,s){const a=e.inputParams[t];if(a&&void 0!==a.inputIndexStart){const t=a.inputIndexStart,i=0===a.inputIndexEnd?void 0:void 0===a.inputIndexEnd?t+1:a.inputIndexEnd;if("tensor"===a.type)return cc(e.inputNames[a.inputIndexStart],n,r,s);if("tensors"===a.type){return e.inputNames.slice(t,i).map((t=>cc(t,n,r,s)))}const o=cc(e.inputNames.slice(t)[0],n,r,s),u=o.dataSync();return"number"===a.type?u[0]:M(o.shape,u)}const i=e.attrParams[t];return i&&i.value}function cc(t,e,n,r){const[s,a]=dc(t);if(null!=r){const t=r.getHashTableHandleByName(s);if(null!=t)return t}const i=n.currentContextIds.find((t=>!!e[pc(s,t)]));return void 0!==i?e[pc(s,i)][a]:void 0}function hc(t,e){const[n,r]=dc(t);return[pc(n,e&&e.currentContextId),r]}function pc(t,e){return e?`${t}-${e}`:t}function dc(t){const e=t.split(":");if(1===e.length)return[t,0];return[e[0],Number(e[e.length-1])]}function fc(t,e,n){let r=lc("pad",t,e,n);if("explicit"===r){r=lc("explicitPaddings",t,e,n);const s=[[0,0],[0,0],[0,0],[0,0]];for(let t=0;t<4;t++)s[t][0]=r[2*t],s[t][1]=r[2*t+1];return s}return r}function mc(t){return t.kept?t:Yn(t)}var gc={};const yc=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];t(gc,"json",(function(){return yc}));var bc={};const xc=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"clip_value_min",name:"clipValueMin",type:"number"},{tfName:"clip_value_max",name:"clipValueMax",type:"number"}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"clipValueMin",name:"clipValueMin",type:"number",defaultValue:0},{tfName:"clipValueMax",name:"clipValueMax",type:"number",defaultValue:6}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];t(bc,"json",(function(){return xc}));var wc={};const vc=[{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}];t(wc,"json",(function(){return vc}));var Ic={};const kc=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}];t(Ic,"json",(function(){return kc}));var Nc={};const Sc=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}];t(Nc,"json",(function(){return Sc}));var Cc={};const Ec=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];t(Cc,"json",(function(){return Ec}));var Tc={};const _c=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}];t(Tc,"json",(function(){return _c}));var $c={};const Ac=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}];t($c,"json",(function(){return Ac}));var Rc={};const Mc=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]}];t(Rc,"json",(function(){return Mc}));var Dc={};const Oc=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}];t(Dc,"json",(function(){return Oc}));var Fc={};const Lc=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];t(Fc,"json",(function(){return Lc}));var Bc={};const zc=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];t(Bc,"json",(function(){return zc}));var Pc={};const Vc=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}];t(Pc,"json",(function(){return Vc}));var Wc={};const Uc=[{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}];t(Wc,"json",(function(){return Uc}));var Gc={};const Hc=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool",notSupported:!0}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}];t(Gc,"json",(function(){return Hc}));var jc={};const qc=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}];t(jc,"json",(function(){return qc}));var Kc={};const Xc=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]}];t(Kc,"json",(function(){return Xc}));var Yc=we;class Jc{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const t=[].concat(...[gc,bc,wc,Ic,Nc,Cc,Tc,Fc,Dc,$c,Bc,Pc,Wc,Gc,jc,Kc,Rc].map((t=>t.json)));this.opMappers=t.reduce(((t,e)=>(t[e.tfOpName]=e,t)),{})}transformGraph(t,e={}){const n=t.node,r=[],s=[],a=[],i=n.reduce(((t,e)=>(t[e.name]=this.mapNode(e),e.op.startsWith("Placeholder")?r.push(t[e.name]):"Const"===e.op?s.push(t[e.name]):null!=e.input&&0!==e.input.length||a.push(t[e.name]),t)),{});let o=[];const u=[];let l={},c={};null!=e&&(l=this.mapSignatureEntries(e.inputs),c=this.mapSignatureEntries(e.outputs));const h=Object.keys(i);h.forEach((t=>{const e=i[t];e.inputNames.forEach((t=>{const[n]=hc(t);e.inputs.push(i[n]),i[n].children.push(e)}))})),0===Object.keys(c).length?h.forEach((t=>{const e=i[t];0===e.children.length&&u.push(e)})):Object.keys(c).forEach((t=>{const[e]=hc(t),n=i[e];null!=n&&(n.signatureKey=c[t],u.push(n))})),Object.keys(l).length>0?Object.keys(l).forEach((t=>{const[e]=hc(t),n=i[e];n&&(n.signatureKey=l[t],o.push(n))})):o=r;let p={};null!=t.library&&null!=t.library.function&&(p=t.library.function.reduce(((t,e)=>(t[e.signature.name]=this.mapFunction(e),t)),{}));const d={nodes:i,inputs:o,outputs:u,weights:s,placeholders:r,signature:e,functions:p};return a.length>0&&(d.initNodes=a),d}mapSignatureEntries(t){return Object.keys(t||{}).reduce(((e,n)=>(e[t[n].name]=n,e)),{})}mapNode(t){const e=uc(t.op)||this.opMappers[t.op]||{};null==t.attr&&(t.attr={});const n={name:t.name,op:t.op,category:e.category,inputNames:(t.input||[]).map((t=>t.startsWith("^")?t.substr(1):t)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:t.attr};return null!=e.inputs&&(n.inputParams=e.inputs.reduce(((t,e)=>(t[e.name]={type:e.type,inputIndexStart:e.start,inputIndexEnd:e.end},t)),{})),null!=e.attrs&&(n.attrParams=e.attrs.reduce(((e,n)=>{const r=n.type;let s;switch(n.type){case"string":s=Qc(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=Qc(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":s=lh(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=lh(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":s=eh(t.attr,n.tfName,n.defaultValue||0),void 0===s&&n.tfDeprecatedName&&(s=eh(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":s=uh(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=uh(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":s=th(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=th(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":s=hh(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=hh(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":s=oh(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=oh(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":s=ch(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=ch(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":s=sh(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=sh(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":s=ah(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=ah(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":s=rh(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=rh(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${t.op}`)}return e[n.name]={value:s,type:r},e}),{})),n}mapFunction(t){const e=t.nodeDef,n=[];let r={};null!=e&&(r=e.reduce(((t,e)=>(t[e.name]=this.mapNode(e),"Const"===e.op&&n.push(t[e.name]),t)),{}));const s=[],a=[];t.signature.inputArg.forEach((t=>{const[e]=hc(t.name),n={name:e,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:nh(t.type),type:"dtype"}},children:[]};n.signatureKey=t.name,s.push(n),r[e]=n}));Object.keys(r).forEach((t=>{const e=r[t];e.inputNames.forEach((t=>{const[n]=hc(t);e.inputs.push(r[n]),r[n].children.push(e)}))}));const i=t.ret;t.signature.outputArg.forEach((t=>{const[e,n]=hc(i[t.name]),s=r[e];null!=s&&(s.defaultOutput=n,a.push(s))}));const o=this.mapArgsToSignature(t);return{nodes:r,inputs:s,outputs:a,weights:n,placeholders:[],signature:o}}mapArgsToSignature(t){return{methodName:t.signature.name,inputs:t.signature.inputArg.reduce(((t,e)=>(t[e.name]=this.mapArgToTensorInfo(e),t)),{}),outputs:t.signature.outputArg.reduce(((e,n)=>(e[n.name]=this.mapArgToTensorInfo(n,t.ret),e)),{})}}mapArgToTensorInfo(t,e){let n=t.name;return null!=e&&(n=e[n]),{name:n,dtype:t.type}}}function Zc(t,e){const n=Array.isArray(t)?String.fromCharCode.apply(null,t):function(t){const e=W().global;if(void 0!==e.atob)return e.atob(t);if(void 0!==Yc)return new Yc(t,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(t);return e?n:n.toLowerCase()}function Qc(t,e,n,r=!1){const s=t[e];return null!=s?Zc(s.s,r):n}function th(t,e,n){const r=t[e];return r?r.b:n}function eh(t,e,n){const r=t[e]||{},s=null!=r.i?r.i:null!=r.f?r.f:n;return"number"==typeof s?s:parseInt(s,10)}function nh(t){switch("string"==typeof t&&(t=sc[t]),t){case sc.DT_FLOAT:return"float32";case sc.DT_INT32:case sc.DT_INT64:case sc.DT_INT8:case sc.DT_UINT8:return"int32";case sc.DT_BOOL:return"bool";case sc.DT_DOUBLE:return"float32";case sc.DT_STRING:return"string";default:return null}}function rh(t,e,n){const r=t[e];return r&&r.func?r.func.name:n}function sh(t,e,n){const r=t[e];return r&&r.type?nh(r.type):n}function ah(t,e,n){const r=t[e];return r&&r.list&&r.list.type?r.list.type.map((t=>nh(t))):n}function ih(t){if(!t.unknownRank)return null!=t.dim?t.dim.map((t=>"number"==typeof t.size?t.size:parseInt(t.size,10))):[]}function oh(t,e,n){const r=t[e];return r&&r.shape?ih(r.shape):n}function uh(t,e,n){const r=t[e];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map((t=>"number"==typeof t?t:parseInt(t,10))):n}function lh(t,e,n,r=!1){const s=t[e];return s&&s.list&&s.list.s?s.list.s.map((t=>Zc(t,r))):n}function ch(t,e,n){const r=t[e];return r&&r.list&&r.list.shape?r.list.shape.map((t=>ih(t))):n}function hh(t,e,n){const r=t[e];return r&&r.list&&r.list.b?r.list.b:n}class ph{constructor(t,e,n){this.node=t,this.tensorMap=e,this.context=n,this.inputs=[],this.attrs={},this.inputs=t.inputNames.map((t=>this.getInput(t))),null!=t.rawAttrs&&(this.attrs=Object.keys(t.rawAttrs).reduce(((t,e)=>(t[e]=this.getAttr(e),t)),{}))}getInput(t){return cc(t,this.tensorMap,this.context)}getAttr(t,e){const n=this.node.rawAttrs[t];if(null!=n.tensor)return cc(t,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return eh(this.node.rawAttrs,t,e);if(null!=n.s)return Qc(this.node.rawAttrs,t,e);if(null!=n.b)return th(this.node.rawAttrs,t,e);if(null!=n.shape)return oh(this.node.rawAttrs,t,e);if(null!=n.type)return sh(this.node.rawAttrs,t,e);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return uh(this.node.rawAttrs,t,e);if(null!=n.list.s)return lh(this.node.rawAttrs,t,e);if(null!=n.list.shape)return ch(this.node.rawAttrs,t,e);if(null!=n.list.b)return hh(this.node.rawAttrs,t,e);if(null!=n.list.type)return ah(this.node.rawAttrs,t,e)}return e}}function dh(t,e,n=""){u(function(t,e){if(t.length!==e.length)return!1;for(let n=0;n<t.length;n++)if(-1!==t[n]&&-1!==e[n]&&t[n]!==e[n])return!1;return!0}(t,e),(()=>n+` Shapes ${t} and ${e} must match`))}class fh{constructor(t,e,n,r,s,a,i){this.name=t,this.dtype=e,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=s,this.dynamicSize=a,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=wa(0),Dr(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(t){this.tensors.forEach((e=>{null!=t&&t.has(e.tensor.id)||e.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(t<0||t>=this.size())throw new Error(`Tried to read from index ${t}, but array size is: ${this.size()}`);const e=this.tensors[t];if(e.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${t} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(e.cleared=!0),e.read=!0,e.tensor}readMany(t){return t.map((t=>this.read(t)))}write(t,e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(t<0||!this.dynamicSize&&t>=this.maxSize)throw new Error(`Tried to write to index ${t}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[t]||{};if(e.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t},\n          because the value dtype is ${e.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=e.shape),dh(this.elementShape,e.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${t}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t}, because it has already been written.`);n.tensor=e,Dr(e),n.written=!0,this.tensors[t]=n}writeMany(t,e){if(t.length!==e.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${t.length} is not the same as tensors size: ${e.length}.`);t.forEach(((t,n)=>this.write(t,e[n])))}gather(t,e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${e}`);if(t)t=t.slice(0,this.size());else{t=[];for(let e=0;e<this.size();e++)t.push(e)}if(0===t.length)return pn([],[0].concat(this.elementShape));const n=this.readMany(t);return dh(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),Hi(n,0)}concat(t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${t}`);if(0===this.size())return pn([],[0].concat(this.elementShape));const e=[];for(let t=0;t<this.size();t++)e.push(t);const n=this.readMany(e);return dh(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),$s(n,0)}scatter(t,e){if(e.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${e.dtype}`);if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const n=Math.max(...t);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(t,eo(e,0))}split(t,e){if(e.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${e.dtype}`);let n=0;const r=t.map((t=>(n+=t,n)));if(n!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${e.shape}`);if(!this.dynamicSize&&t.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${t.length}), and the TensorArray is not marked as dynamically resizeable`);const s=0===n?0:e.size/n,a=[];Rr((()=>{e=ar(e,[1,n,s]);for(let n=0;n<t.length;++n){const i=[0,0===n?0:r[n-1],0],o=[1,t[n],s];a[n]=ar($i(e,i,o),this.elementShape)}return a}));const i=[];for(let e=0;e<t.length;e++)i[e]=e;this.writeMany(i,a)}}class mh{constructor(t,e,n,r=-1){this.tensors=t,this.elementShape=e,this.elementDtype=n,null!=t&&t.forEach((t=>{if(n!==t.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${t.dtype}`);dh(e,t.shape,"TensorList shape mismatch: "),Dr(t)})),this.idTensor=wa(0),this.maxNumElements=r,Dr(this.idTensor)}get id(){return this.idTensor.id}copy(){return new mh([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(t){this.tensors.forEach((e=>{null!=t&&t.has(e.id)||e.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(t,e,n=-1){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);return dh(t,this.elementShape,"TensorList shape mismatch: "),Rr((()=>{const e=this.tensors.map((e=>ar(e,t)));return Hi(e,0)}))}popBack(t,e){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=this.tensors.pop();return dh(n.shape,t,"TensorList shape mismatch: "),ar(n,t)}pushBack(t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(dh(t.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Dr(t),this.tensors.push(t)}resize(t){if(t<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${t}`);if(-1!==this.maxNumElements&&t>this.maxNumElements)throw new Error(`TensorListResize input size ${t} is greater maxNumElement ${this.maxNumElements}.`);this.tensors.length=t}getItem(t,e,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(t<0||t>this.tensors.length)throw new Error(`Trying to access element ${t} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[t])throw new Error(`element at index ${t} is null.`);return dh(this.tensors[t].shape,e,"TensorList shape mismatch: "),this.tensors[t]}setItem(t,e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(t<0||-1!==this.maxNumElements&&t>=this.maxNumElements)throw new Error(`Trying to set element ${t} in a list with max ${this.maxNumElements} elements.`);dh(this.elementShape,e.shape,"TensorList shape mismatch: "),Dr(e),this.tensors[t]=e}gather(t,e,n){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);return dh(this.elementShape,n,"TensorList shape mismatch: "),0===(t=t.slice(0,this.size())).length?pn([],[0].concat(this.elementShape)):Rr((()=>{const e=t.map((t=>ar(this.tensors[t],n)));return Hi(e,0)}))}concat(t,e){if(t&&t!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${t}`);return dh(this.elementShape,e,"TensorList shape mismatch: "),0===this.size()?pn([],[0].concat(this.elementShape)):Rr((()=>{const t=this.tensors.map((t=>ar(t,e)));return $s(t,0)}))}}const gh=async(t,e,n)=>{switch(t.op){case"If":case"StatelessIf":{const r=lc("thenBranch",t,e,n),s=lc("elseBranch",t,e,n),a=lc("cond",t,e,n),i=lc("args",t,e,n);return(await a.data())[0]?n.functionMap[r].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap):n.functionMap[s].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const r=lc("body",t,e,n),s=lc("cond",t,e,n),a=lc("args",t,e,n),i=await n.functionMap[s].executeFunctionAsync(a,n.tensorArrayMap,n.tensorListMap),o=a.map((t=>t.id));let u=await i[0].data();i.forEach((t=>{t.kept||-1!==o.indexOf(t.id)||t.dispose()}));let l=a;for(;u[0];){const t=l;l=await n.functionMap[r].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);const e=l.map((t=>t.id));t.forEach((t=>{t.kept||-1!==o.indexOf(t.id)||-1!==e.indexOf(t.id)||t.dispose()}));const a=await n.functionMap[s].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);u=await a[0].data(),a.forEach((t=>{t.kept||-1!==o.indexOf(t.id)||-1!==e.indexOf(t.id)||t.dispose()}))}return l}case"LoopCond":return[mc(lc("pred",t,e,n))];case"Switch":{const r=lc("pred",t,e,n);let s=lc("data",t,e,n);return s.kept||(s=mc(s)),(await r.data())[0]?[void 0,s]:[s,void 0]}case"Merge":{const r=t.inputNames.find((t=>void 0!==cc(t,e,n)));if(r){return[mc(cc(r,e,n))]}return}case"Enter":{const r=lc("frameName",t,e,n),s=lc("tensor",t,e,n);return n.enterFrame(r),[mc(s)]}case"Exit":{const r=lc("tensor",t,e,n);return n.exitFrame(),[mc(r)]}case"NextIteration":{const r=lc("tensor",t,e,n);return n.nextIteration(),[mc(r)]}case"TensorArrayV3":{const r=lc("size",t,e,n),s=lc("dtype",t,e,n),a=lc("elementShape",t,e,n),i=lc("dynamicSize",t,e,n),o=lc("clearAfterRead",t,e,n),u=lc("identicalElementShapes",t,e,n),l=lc("name",t,e,n),c=new fh(l,s,r,a,u,i,o);return n.addTensorArray(c),[c.idTensor,wa(1)]}case"TensorArrayWriteV3":{const r=lc("tensorArrayId",t,e,n),s=lc("index",t,e,n),a=lc("tensor",t,e,n),i=n.getTensorArray(r.id);return i.write(s,a),[i.idTensor]}case"TensorArrayReadV3":{const r=lc("tensorArrayId",t,e,n),s=lc("index",t,e,n);return[n.getTensorArray(r.id).read(s)]}case"TensorArrayGatherV3":{const r=lc("tensorArrayId",t,e,n),s=lc("indices",t,e,n),a=lc("dtype",t,e,n);return[n.getTensorArray(r.id).gather(s,a)]}case"TensorArrayScatterV3":{const r=lc("tensorArrayId",t,e,n),s=lc("indices",t,e,n),a=lc("tensor",t,e,n),i=n.getTensorArray(r.id);return i.scatter(s,a),[i.idTensor]}case"TensorArrayConcatV3":{const r=lc("tensorArrayId",t,e,n),s=n.getTensorArray(r.id),a=lc("dtype",t,e,n);return[s.concat(a)]}case"TensorArraySplitV3":{const r=lc("tensorArrayId",t,e,n),s=lc("tensor",t,e,n),a=lc("lengths",t,e,n),i=n.getTensorArray(r.id);return i.split(a,s),[i.idTensor]}case"TensorArraySizeV3":{const r=lc("tensorArrayId",t,e,n);return[wa(n.getTensorArray(r.id).size(),"int32")]}case"TensorArrayCloseV3":{const r=lc("tensorArrayId",t,e,n),s=n.getTensorArray(r.id);return s.clearAndClose(),[s.idTensor]}case"TensorListSetItem":{const r=lc("tensorListId",t,e,n),s=lc("index",t,e,n),a=lc("tensor",t,e,n),i=n.getTensorList(r.id);return i.setItem(s,a),[i.idTensor]}case"TensorListGetItem":{const r=lc("tensorListId",t,e,n),s=lc("index",t,e,n),a=lc("elementShape",t,e,n),i=lc("elementDType",t,e,n);return[n.getTensorList(r.id).getItem(s,a,i)]}case"TensorListScatterV2":case"TensorListScatter":{const r=lc("indices",t,e,n),s=function(t,e,n,r){if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const s=Math.max(...e);if(null!=r&&-1!==r&&s>=r)throw new Error(`Max index must be < array size (${s}  vs. ${r})`);const a=new mh([],n,t.dtype,r),i=eo(t,0);return e.forEach(((t,e)=>{a.setItem(t,i[e])})),a}(lc("tensor",t,e,n),r,lc("elementShape",t,e,n),lc("numElements",t,e,n));return n.addTensorList(s),[s.idTensor]}case"TensorListReserve":{const r=function(t,e,n){return new mh([],t,e,n)}(lc("elementShape",t,e,n),lc("elementDType",t,e,n),lc("numElements",t,e,n));return n.addTensorList(r),[r.idTensor]}case"TensorListGather":{const r=lc("tensorListId",t,e,n),s=lc("indices",t,e,n),a=lc("elementShape",t,e,n),i=lc("elementDType",t,e,n);return[n.getTensorList(r.id).gather(s,i,a)]}case"TensorListStack":{const r=lc("tensorListId",t,e,n),s=lc("elementShape",t,e,n),a=lc("elementDType",t,e,n),i=lc("numElements",t,e,n);return[n.getTensorList(r.id).stack(s,a,i)]}case"TensorListFromTensor":{const r=function(t,e,n){const r=t.dtype;if(t.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${t.shape}`);if(t.dtype!==n)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${n}`);dh(t.shape.slice(1),e,"TensorList shape mismatch: ");const s=eo(t);return new mh(s,e,r)}(lc("tensor",t,e,n),lc("elementShape",t,e,n),lc("elementDType",t,e,n));return n.addTensorList(r),[r.idTensor]}case"TensorListConcat":{const r=lc("tensorListId",t,e,n),s=n.getTensorList(r.id),a=lc("dtype",t,e,n),i=lc("elementShape",t,e,n);return[s.concat(a,i)]}case"TensorListPushBack":{const r=lc("tensorListId",t,e,n),s=lc("tensor",t,e,n),a=n.getTensorList(r.id);return a.pushBack(s),[a.idTensor]}case"TensorListPopBack":{const r=lc("tensorListId",t,e,n),s=lc("elementShape",t,e,n),a=lc("elementDType",t,e,n);return[n.getTensorList(r.id).popBack(s,a)]}case"TensorListSplit":{const r=lc("tensor",t,e,n),s=lc("elementShape",t,e,n),a=function(t,e,n){let r=0;const s=e.map((t=>(r+=t,r)));if(r!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${r}, and tensor's shape is: ${t.shape}`);const a=0===r?0:t.size/r,i=Rr((()=>{const i=[];t=ar(t,[1,r,a]);for(let r=0;r<e.length;++r){const o=[0,0===r?0:s[r-1],0],u=[1,e[r],a];i[r]=ar($i(t,o,u),n)}return t.dispose(),i})),o=new mh([],n,t.dtype,e.length);for(let t=0;t<i.length;t++)o.setItem(t,i[t]);return o}(r,lc("lengths",t,e,n),s);return n.addTensorList(a),[a.idTensor]}default:throw TypeError(`Node type ${t.op} is not implemented`)}};function yh(t,e,n){const[r,s]=lc("fusedOps",t,e,n),a="biasadd"===r,i="prelu"===s,o="fusedbatchnorm"===r,u=lc("numArgs",t,e,n);if(a){if(i&&2!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&1!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(o)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported.");const l=lc("strides",t,e,n),c=fc(t,e,n),h=lc("dataFormat",t,e,n).toUpperCase(),p=lc("dilations",t,e,n),[d,f]=lc("args",t,e,n);return{stride:l,pad:c,dataFormat:h,dilations:p,biasArg:d,preluArg:f,activationFunc:s}}function bh(t,e,n){return{boxes:lc("boxes",t,e,n),scores:lc("scores",t,e,n),maxOutputSize:lc("maxOutputSize",t,e,n),iouThreshold:lc("iouThreshold",t,e,n),scoreThreshold:lc("scoreThreshold",t,e,n),softNmsSigma:lc("softNmsSigma",t,e,n)}}class xh{constructor(t,e){this.keyDType=t,this.valueDType=e,this.handle=wa(0),this.tensorMap=new Map,Dr(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach((t=>t.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}async import(t,e){this.checkKeyAndValueTensor(t,e);const n=await t.data();return this.tensorMap.forEach((t=>t.dispose())),this.tensorMap.clear(),Rr((()=>{const t=eo(e),r=n.length,s=t.length;u(r===s,(()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${s} elements.`));for(let e=0;e<r;e++){const r=n[e],s=t[e];Dr(s),this.tensorMap.set(r,s)}return this.handle}))}async find(t,e){this.checkKeyAndValueTensor(t,e);const n=await t.data();return Rr((()=>{const t=[];for(let r=0;r<n.length;r++){const s=n[r],a=this.findWithDefault(s,e);t.push(a)}return Hi(t)}))}findWithDefault(t,e){const n=this.tensorMap.get(t);return null!=n?n:e}checkKeyAndValueTensor(t,e){if(t.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${t.dtype}`);if(e.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${e.dtype}`)}}function wh(t,e,n,r){const s=((t,e,n)=>{switch(t.category){case"arithmetic":return Rr((()=>((t,e,n)=>{switch(t.op){case"BiasAdd":case"AddV2":case"Add":return[Pr(lc("a",t,e,n),lc("b",t,e,n))];case"AddN":return[Vr(lc("tensors",t,e,n))];case"FloorMod":case"Mod":return[Ka(lc("a",t,e,n),lc("b",t,e,n))];case"Mul":return[xa(lc("a",t,e,n),lc("b",t,e,n))];case"RealDiv":case"Div":return[qs(lc("a",t,e,n),lc("b",t,e,n))];case"DivNoNan":return[ta(lc("a",t,e,n),lc("b",t,e,n))];case"FloorDiv":return[js(lc("a",t,e,n),lc("b",t,e,n))];case"Sub":return[Ma(lc("a",t,e,n),lc("b",t,e,n))];case"Minimum":return[ja(lc("a",t,e,n),lc("b",t,e,n))];case"Maximum":return[ba(lc("a",t,e,n),lc("b",t,e,n))];case"Pow":return[ni(lc("a",t,e,n),lc("b",t,e,n))];case"SquaredDifference":return[Ui(lc("a",t,e,n),lc("b",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"basic_math":return Rr((()=>((t,e,n)=>{switch(t.op){case"Abs":case"ComplexAbs":return[Lr(lc("x",t,e,n))];case"Acos":return[Br(lc("x",t,e,n))];case"Acosh":return[zr(lc("x",t,e,n))];case"Asin":return[Qr(lc("x",t,e,n))];case"Asinh":return[ts(lc("x",t,e,n))];case"Atan":return[es(lc("x",t,e,n))];case"Atan2":return[ns(lc("x",t,e,n),lc("y",t,e,n))];case"Atanh":return[rs(lc("x",t,e,n))];case"Ceil":return[Cs(lc("x",t,e,n))];case"Complex":return[cn(lc("real",t,e,n),lc("imag",t,e,n))];case"Cos":return[Ps(lc("x",t,e,n))];case"Cosh":return[Vs(lc("x",t,e,n))];case"Elu":return[ea(lc("x",t,e,n))];case"Erf":return[na(lc("x",t,e,n))];case"Exp":return[ra(lc("x",t,e,n))];case"Expm1":return[aa(lc("x",t,e,n))];case"Floor":return[la(lc("x",t,e,n))];case"Log":return[Ca(lc("x",t,e,n))];case"Log1p":return[Ea(lc("x",t,e,n))];case"Imag":return[fa(lc("x",t,e,n))];case"Neg":return[Ta(lc("x",t,e,n))];case"Reciprocal":return[xi(lc("x",t,e,n))];case"Real":return[Qa(lc("x",t,e,n))];case"Relu":return[wi(lc("x",t,e,n))];case"Round":return[Ii(lc("x",t,e,n))];case"Selu":return[Ni(lc("x",t,e,n))];case"Sigmoid":return[_a(lc("x",t,e,n))];case"Sin":return[Ti(lc("x",t,e,n))];case"Sign":return[Ei(lc("x",t,e,n))];case"Sinh":return[_i(lc("x",t,e,n))];case"Softplus":return[$a(lc("x",t,e,n))];case"Sqrt":return[Wi(lc("x",t,e,n))];case"Square":return[Xa(lc("x",t,e,n))];case"Tanh":return[Xi(lc("x",t,e,n))];case"Tan":return[Ki(lc("x",t,e,n))];case"Relu6":case"ClipByValue":return[Es(lc("x",t,e,n),lc("clipValueMin",t,e,n),lc("clipValueMax",t,e,n))];case"Rsqrt":return[ki(cc(t.inputNames[0],e,n))];case"Prod":return[si(lc("x",t,e,n),lc("axes",t,e,n))];case"LeakyRelu":return[va(lc("x",t,e,n),lc("alpha",t,e,n))];case"Prelu":return[ri(lc("x",t,e,n),lc("alpha",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"control":return gh(t,e,n);case"convolution":return Rr((()=>((t,e,n)=>{switch(t.op){case"Conv1D":{const r=lc("stride",t,e,n),s=lc("pad",t,e,n),a=lc("dataFormat",t,e,n).toUpperCase(),i=lc("dilation",t,e,n);return[Fs(lc("x",t,e,n),lc("filter",t,e,n),r,s,a,i)]}case"Conv2D":{const r=lc("strides",t,e,n),s=fc(t,e,n),a=lc("dataFormat",t,e,n).toUpperCase(),i=lc("dilations",t,e,n);return[Os(lc("x",t,e,n),lc("filter",t,e,n),[r[1],r[2]],s,a,[i[1],i[2]])]}case"_FusedConv2D":{const{stride:r,pad:s,dataFormat:a,dilations:i,biasArg:o,preluArg:u,activationFunc:l}=yh(t,e,n);return[Ro({x:lc("x",t,e,n),filter:lc("filter",t,e,n),strides:[r[1],r[2]],pad:s,dataFormat:a,dilations:[i[1],i[2]],bias:o,activation:l,preluActivationWeights:u})]}case"FusedDepthwiseConv2dNative":{const{stride:r,pad:s,dataFormat:a,dilations:i,biasArg:o,preluArg:u,activationFunc:l}=yh(t,e,n);return[Oo({x:lc("x",t,e,n),filter:lc("filter",t,e,n),strides:[r[1],r[2]],pad:s,dataFormat:a,dilations:[i[1],i[2]],bias:o,activation:l,preluActivationWeights:u})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const r=lc("outputShape",t,e,n),s=lc("strides",t,e,n),a=fc(t,e,n);return[Bs(lc("x",t,e,n),lc("filter",t,e,n),r,[s[1],s[2]],a)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const r=lc("strides",t,e,n),s=fc(t,e,n),a=lc("dilations",t,e,n),i=lc("dataFormat",t,e,n).toUpperCase();return[Gs(lc("input",t,e,n),lc("filter",t,e,n),[r[1],r[2]],s,i,[a[1],a[2]])]}case"Conv3D":{const r=lc("strides",t,e,n),s=lc("pad",t,e,n),a=lc("dataFormat",t,e,n).toUpperCase(),i=lc("dilations",t,e,n);return[zs(lc("x",t,e,n),lc("filter",t,e,n),[r[1],r[2],r[3]],s,a,[i[1],i[2],i[3]])]}case"AvgPool":{const r=lc("strides",t,e,n),s=lc("pad",t,e,n),a=lc("kernelSize",t,e,n);return[ys(lc("x",t,e,n),[a[1],a[2]],[r[1],r[2]],s)]}case"MaxPool":{const r=lc("strides",t,e,n),s=lc("pad",t,e,n),a=lc("kernelSize",t,e,n);return[za(lc("x",t,e,n),[a[1],a[2]],[r[1],r[2]],s)]}case"MaxPoolWithArgmax":{const r=lc("strides",t,e,n),s=lc("pad",t,e,n),a=lc("kernelSize",t,e,n),i=lc("includeBatchInIndex",t,e,n),{result:o,indexes:u}=Va(lc("x",t,e,n),[a[1],a[2]],[r[1],r[2]],s,i);return[o,u]}case"AvgPool3D":{const r=lc("strides",t,e,n),s=lc("pad",t,e,n),a=lc("kernelSize",t,e,n);return[bs(lc("x",t,e,n),[a[1],a[2],a[3]],[r[1],r[2],r[3]],s)]}case"MaxPool3D":{const r=lc("strides",t,e,n),s=lc("pad",t,e,n),a=lc("kernelSize",t,e,n);return[Pa(lc("x",t,e,n),[a[1],a[2],a[3]],[r[1],r[2],r[3]],s)]}case"Dilation2D":{const r=lc("strides",t,e,n),s=lc("pad",t,e,n),a=lc("dilations",t,e,n),i=r[1],o=r[2],u=a[1],l=a[2];return[Hs(lc("x",t,e,n),lc("filter",t,e,n),[i,o],s,[u,l],"NHWC")]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"creation":return Rr((()=>((t,e,n)=>{switch(t.op){case"Fill":{const r=lc("shape",t,e,n),s=lc("dtype",t,e,n);return[ua(r,lc("value",t,e,n),s)]}case"LinSpace":return[Na(lc("start",t,e,n),lc("stop",t,e,n),lc("num",t,e,n))];case"Multinomial":{const r=lc("logits",t,e,n),s=lc("numSamples",t,e,n),a=lc("seed",t,e,n);return[Ja(r,s,a)]}case"OneHot":{const r=lc("indices",t,e,n),s=lc("depth",t,e,n),a=lc("onValue",t,e,n),i=lc("offValue",t,e,n);return[or(r,s,a,i)]}case"Ones":return[Ua(lc("shape",t,e,n),lc("dtype",t,e,n))];case"OnesLike":return[ti(lc("x",t,e,n))];case"RandomUniform":return[gi(lc("shape",t,e,n),lc("minval",t,e,n),lc("maxval",t,e,n),lc("dtype",t,e,n))];case"Range":return[bi(lc("start",t,e,n),lc("stop",t,e,n),lc("step",t,e,n),lc("dtype",t,e,n))];case"TruncatedNormal":{const r=lc("shape",t,e,n),s=lc("mean",t,e,n),a=lc("stdDev",t,e,n),i=lc("seed",t,e,n);return[Qi(r,s,a,lc("dtype",t,e,n),i)]}case"Zeros":return[Wa(lc("shape",t,e,n),lc("dtype",t,e,n))];case"ZerosLike":return[Qs(lc("x",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"dynamic":return(async(t,e,n)=>{switch(t.op){case"NonMaxSuppressionV5":{const{boxes:r,scores:s,maxOutputSize:a,iouThreshold:i,scoreThreshold:o,softNmsSigma:u}=bh(t,e,n),l=await mu.nonMaxSuppressionWithScoreAsync(r,s,a,i,o,u);return[l.selectedIndices,l.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:r,scores:s,maxOutputSize:a,iouThreshold:i,scoreThreshold:o}=bh(t,e,n),u=lc("padToMaxOutputSize",t,e,n),l=await mu.nonMaxSuppressionPaddedAsync(r,s,a,i,o,u);return[l.selectedIndices,l.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:r,scores:s,maxOutputSize:a,iouThreshold:i,scoreThreshold:o}=bh(t,e,n);return[await mu.nonMaxSuppressionAsync(r,s,a,i,o)]}case"Where":{const r=Xn(lc("condition",t,e,n),"bool"),s=[await ro(r)];return r.dispose(),s}case"ListDiff":return Ci(lc("x",t,e,n),lc("y",t,e,n));default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n);case"evaluation":return Rr((()=>((t,e,n)=>{switch(t.op){case"TopKV2":{const r=lc("x",t,e,n),s=lc("k",t,e,n),a=lc("sorted",t,e,n),i=Zi(r,s,a);return[i.values,i.indices]}case"Unique":{const r=lc("x",t,e,n),s=to(r);return[s.values,s.indices]}case"UniqueV2":{const r=lc("x",t,e,n),s=lc("axis",t,e,n),a=to(r,s);return[a.values,a.indices]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"image":return Rr((()=>((t,e,n)=>{switch(t.op){case"ResizeBilinear":{const r=lc("images",t,e,n),s=lc("size",t,e,n),a=lc("alignCorners",t,e,n);return[mu.resizeBilinear(r,[s[0],s[1]],a)]}case"ResizeNearestNeighbor":{const r=lc("images",t,e,n),s=lc("size",t,e,n),a=lc("alignCorners",t,e,n);return[mu.resizeNearestNeighbor(r,[s[0],s[1]],a)]}case"CropAndResize":{const r=lc("image",t,e,n),s=lc("boxes",t,e,n),a=lc("boxInd",t,e,n),i=lc("cropSize",t,e,n),o=lc("method",t,e,n),u=lc("extrapolationValue",t,e,n);return[mu.cropAndResize(r,s,a,i,o,u)]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"graph":return Rr((()=>((t,e,n)=>{switch(t.op){case"Const":return e[t.name];case"PlaceholderWithDefault":const r=lc("default",t,e,n);return[cc(t.name,e,n)||r];case"Placeholder":return[cc(t.name,e,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":return[mc(lc("x",t,e,n))];case"IdentityN":return lc("x",t,e,n).map((t=>mc(t)));case"Snapshot":return[mc(lc("x",t,e,n))];case"Shape":return[yi(lc("x",t,e,n).shape,"int32")];case"ShapeN":return lc("x",t,e,n).map((t=>yi(t.shape)));case"Size":return[wa(lc("x",t,e,n).size,"int32")];case"Rank":return[wa(lc("x",t,e,n).rank,"int32")];case"NoOp":return[wa(1)];case"Print":const s=lc("x",t,e,n),a=lc("data",t,e,n),i=lc("message",t,e,n),o=lc("summarize",t,e,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(i);for(let t=0;t<a.length;t++)console.log(Array.prototype.slice.call(a[t].dataSync()).slice(0,o));return[s];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"logical":return Rr((()=>((t,e,n)=>{switch(t.op){case"Equal":return[Js(lc("a",t,e,n),lc("b",t,e,n))];case"NotEqual":return[Za(lc("a",t,e,n),lc("b",t,e,n))];case"Greater":return[pa(lc("a",t,e,n),lc("b",t,e,n))];case"GreaterEqual":return[da(lc("a",t,e,n),lc("b",t,e,n))];case"Less":return[Ia(lc("a",t,e,n),lc("b",t,e,n))];case"LessEqual":return[ka(lc("a",t,e,n),lc("b",t,e,n))];case"LogicalAnd":return[Fa(lc("a",t,e,n),lc("b",t,e,n))];case"LogicalNot":return[La(lc("a",t,e,n))];case"LogicalOr":return[Ba(lc("a",t,e,n),lc("b",t,e,n))];case"Select":case"SelectV2":return[Zs(lc("condition",t,e,n),lc("a",t,e,n),lc("b",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"matrices":return Rr((()=>((t,e,n)=>{switch(t.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[ir(lc("a",t,e,n),lc("b",t,e,n),lc("transposeA",t,e,n),lc("transposeB",t,e,n))];case"Transpose":return[ur(lc("x",t,e,n),lc("perm",t,e,n))];case"_FusedMatMul":const[r,s]=lc("fusedOps",t,e,n),a="biasadd"===r,i="prelu"===s,o=lc("numArgs",t,e,n);if(a){if(i&&2!==o)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&1!==o)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[u,l]=lc("args",t,e,n);return[Fo({a:lc("a",t,e,n),b:lc("b",t,e,n),transposeA:lc("transposeA",t,e,n),transposeB:lc("transposeB",t,e,n),bias:u,activation:s,preluActivationWeights:l})];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"normalization":return Rr((()=>((t,e,n)=>{switch(t.op){case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[vs(lc("x",t,e,n),lc("mean",t,e,n),lc("variance",t,e,n),lc("offset",t,e,n),lc("scale",t,e,n),lc("epsilon",t,e,n))];case"LRN":return[Sa(lc("x",t,e,n),lc("radius",t,e,n),lc("bias",t,e,n),lc("alpha",t,e,n),lc("beta",t,e,n))];case"Softmax":return[Oi(lc("x",t,e,n))];case"LogSoftmax":return[Oa(lc("x",t,e,n))];case"SparseToDense":return[ko(lc("sparseIndices",t,e,n),lc("outputShape",t,e,n),lc("sparseValues",t,e,n),lc("defaultValue",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"reduction":return Rr((()=>((t,e,n)=>{switch(t.op){case"Max":{const r=lc("axis",t,e,n),s=lc("keepDims",t,e,n);return[Ra(lc("x",t,e,n),r,s)]}case"Mean":{const r=lc("axis",t,e,n),s=lc("keepDims",t,e,n);return[Ga(lc("x",t,e,n),r,s)]}case"Min":{const r=lc("axis",t,e,n),s=lc("keepDims",t,e,n);return[Ha(lc("x",t,e,n),r,s)]}case"Sum":{const r=lc("axis",t,e,n),s=lc("keepDims",t,e,n);return[Da(lc("x",t,e,n),r,s)]}case"All":{const r=lc("axis",t,e,n),s=lc("keepDims",t,e,n);return[Xr(lc("x",t,e,n),r,s)]}case"Any":{const r=lc("axis",t,e,n),s=lc("keepDims",t,e,n);return[Yr(lc("x",t,e,n),r,s)]}case"ArgMax":{const r=lc("axis",t,e,n);return[Jr(lc("x",t,e,n),r)]}case"ArgMin":{const r=lc("axis",t,e,n);return[Zr(lc("x",t,e,n),r)]}case"Prod":{const r=lc("axis",t,e,n),s=lc("keepDims",t,e,n);return[si(lc("x",t,e,n),r,s)]}case"Cumsum":{const r=lc("axis",t,e,n),s=lc("exclusive",t,e,n),a=lc("reverse",t,e,n);return[Ws(lc("x",t,e,n),r,s,a)]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"slice_join":return Rr((()=>((t,e,n)=>{switch(t.op){case"ConcatV2":case"Concat":{const r=lc("n",t,e,n),s=lc("axis",t,e,n);let a=lc("tensors",t,e,n);return a=a.slice(0,r),[$s(a,s)]}case"GatherV2":case"Gather":{const r=lc("axis",t,e,n),s=lc("x",t,e,n),a=lc("indices",t,e,n);return[ha(s,Xn(a,"int32"),r)]}case"ReverseV2":case"Reverse":{const r=lc("axis",t,e,n),s=lc("x",t,e,n);return[vi(s,r)]}case"Slice":{const r=lc("begin",t,e,n),s=lc("size",t,e,n);return[$i(lc("x",t,e,n),r,s)]}case"StridedSlice":{const r=lc("begin",t,e,n),s=lc("end",t,e,n),a=lc("strides",t,e,n),i=lc("beginMask",t,e,n),o=lc("endMask",t,e,n),u=lc("ellipsisMask",t,e,n),l=lc("newAxisMask",t,e,n),c=lc("shrinkAxisMask",t,e,n),h=lc("x",t,e,n);return[qi(h,r,s,a,i,o,u,l,c)]}case"Pack":return Rr((()=>{const r=lc("axis",t,e,n),s=lc("tensors",t,e,n),a=s[0].shape,i=Gi(s[0]).shape,o=s.map((t=>{const e=d(t.shape,a);if(!e&&!d(Gi(t).shape,i))throw new Error("the input tensors shape does not match");return e?t:ar(t,a)}));return[Hi(o,r)]}));case"Unpack":{const r=lc("axis",t,e,n),s=lc("tensor",t,e,n);return eo(s,r)}case"Tile":{const r=lc("reps",t,e,n);return[ia(lc("x",t,e,n),r)]}case"Split":case"SplitV":{const r=lc("axis",t,e,n),s=lc("numOrSizeSplits",t,e,n),a=lc("x",t,e,n);return Pi(a,s,r)}case"ScatterNd":{const r=lc("indices",t,e,n),s=lc("values",t,e,n),a=lc("shape",t,e,n);return[Io(r,s,a)]}case"GatherNd":{const r=lc("x",t,e,n),s=lc("indices",t,e,n);return[No(r,s)]}case"SparseToDense":{const r=lc("sparseIndices",t,e,n),s=lc("outputShape",t,e,n),a=lc("sparseValues",t,e,n),i=lc("defaultValue",t,e,n);return[ko(r,a,s,a.dtype===i.dtype?i:Xn(i,a.dtype))]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"spectral":return Rr((()=>((t,e,n)=>{switch(t.op){case"FFT":return[Li(lc("x",t,e,n))];case"IFFT":return[Bi(lc("x",t,e,n))];case"RFFT":return[Vi(lc("x",t,e,n))];case"IRFFT":return[zi(lc("x",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"transformation":return Rr((()=>((t,e,n)=>{switch(t.op){case"Cast":return[Xn(lc("x",t,e,n),lc("dtype",t,e,n))];case"ExpandDims":{const r=lc("axis",t,e,n);return[sa(lc("x",t,e,n),r)]}case"Squeeze":{const r=lc("axis",t,e,n);return[Gi(lc("x",t,e,n),r)]}case"Reshape":return[ar(lc("x",t,e,n),lc("shape",t,e,n))];case"MirrorPad":return[qa(lc("x",t,e,n),lc("padding",t,e,n),lc("mode",t,e,n))];case"PadV2":case"Pad":return[ei(lc("x",t,e,n),lc("padding",t,e,n),lc("constantValue",t,e,n))];case"SpaceToBatchND":{const r=lc("blockShape",t,e,n),s=lc("paddings",t,e,n);return[Fi(lc("x",t,e,n),r,s)]}case"BatchToSpaceND":{const r=lc("blockShape",t,e,n),s=lc("crops",t,e,n);return[xs(lc("x",t,e,n),r,s)]}case"DepthToSpace":{const r=lc("blockSize",t,e,n),s=lc("dataFormat",t,e,n).toUpperCase();return[Us(lc("x",t,e,n),r,s)]}case"BroadcastTo":return[Ss(lc("x",t,e,n),lc("shape",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"hash_table":return(async(t,e,n,r)=>{switch(t.op){case"HashTable":case"HashTableV2":{const s=lc("keyDType",t,e,n),a=lc("valueDType",t,e,n),i=new xh(s,a);return r.addHashTable(t.name,i),[i.handle]}case"LookupTableImport":case"LookupTableImportV2":{const s=lc("tableHandle",t,e,n,r),a=lc("keys",t,e,n),i=lc("values",t,e,n),o=r.getHashTableById(s.id);return[await o.import(a,i)]}case"LookupTableFind":case"LookupTableFindV2":{const s=lc("tableHandle",t,e,n,r),a=lc("keys",t,e,n),i=lc("defaultValue",t,e,n),o=r.getHashTableById(s.id);return[await o.find(a,i)]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n,r);case"custom":const s=uc(t.op);if(s&&s.customExecutor)return s.customExecutor(new ph(t,e,n));throw TypeError(`Custom op ${t.op} is not registered.`);default:throw TypeError(`Unknown op '${t.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(t,e,n);return P(s)?s.then((t=>[].concat(t))):[].concat(s)}class vh{constructor(t={},e={},n={},r={}){this.weightMap=t,this.tensorArrayMap=e,this.tensorListMap=n,this.functionMap=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(t,e){return{id:t,frameName:e,iterationId:0}}set currentContext(t){this.contexts!==t&&(this.contexts=t,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const t=[];for(let e=0;e<this.contexts.length-1;e++){const n=this.contexts.slice(0,this.contexts.length-e);t.push(this.contextIdforContexts(n))}t.push(""),this._currentContextIds=t}contextIdforContexts(t){return t?t.map((t=>0===t.id&&0===t.iterationId?"":`${t.frameName}-${t.iterationId}`)).join("/"):""}enterFrame(t){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,t)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const t=Object.assign({},this.contexts[this.contexts.length-1]);t.iterationId+=1,t.id=this.lastId,this.contexts.splice(-1,1,t),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(t){return this.weightMap[t]}addTensorArray(t){this.tensorArrayMap[t.id]=t}getTensorArray(t){return this.tensorArrayMap[t]}addTensorList(t){this.tensorListMap[t.id]=t}getTensorList(t){return this.tensorListMap[t]}dispose(t){for(const e in this.tensorArrayMap)this.tensorArrayMap[e].clearAndClose(t);for(const e in this.tensorListMap)this.tensorListMap[e].clearAndClose(t)}}function Ih(t,e,n,r){const s=new Set,a=[];let i=null,o=null;const u=new Set,l=Object.keys(t).map((t=>dc(t)[0]));let c=[];null!=r&&(c=r.map((t=>dc(t.name)[0])));const h=[...e];for(;h.length>0;){const t=h.pop();(Ch(t)||Eh(t)||Th(t))&&null==i&&(i=t,o=i.children.map((t=>t.name)).filter((t=>s.has(t)))),s.add(t.name),null==n[t.name]&&(-1===l.indexOf(t.name)&&-1===c.indexOf(t.name)&&(0!==t.inputs.length?t.inputs.forEach((t=>{u.has(t.name)||(u.add(t.name),h.push(t))})):a.push(t.name)))}return{inputs:t,outputs:e,usedNodes:s,missingInputs:a,dynamicNode:i,syncInputs:o}}const kh=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],Nh=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],Sh=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2"];function Ch(t){return kh.indexOf(t.op)>=0}function Eh(t){return Nh.indexOf(t.op)>=0}function Th(t){return Sh.indexOf(t.op)>=0}class _h{constructor(t,e){this.graph=t,this.parent=e,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this._outputs=t.outputs,this._inputs=t.inputs,this._initNodes=t.initNodes,this._signature=t.signature,this._functions=t.functions,null!=t.functions&&Object.keys(t.functions).forEach((e=>{this._functionExecutorMap[e]=new _h(t.functions[e],this)}))}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(t){const e=Object.keys(t).map((e=>t[e].map((t=>t.id))));this._weightIds=[].concat(...e),this._weightMap=t}set resourceManager(t){this._resourceManager=t}get inputs(){return this._inputs.map((t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((t=>t.signatureKey||t.name))}get outputNodes(){return this._outputs.map((t=>{const e=t.signatureKey||t.name;return t.defaultOutput?`${e}:${t.defaultOutput}`:e}))}get functions(){return Object.keys(this._functions).reduce(((t,e)=>(t[e]=this._functions[e].signature,t)),{})}getCompilationKey(t,e){const n=t.map((t=>t.name)).sort(),r=e.map((t=>t.name)).sort();return n.join(this.SEPERATOR)+"--"+r.join(this.SEPERATOR)}compile(t,e){const n=Ih(t,e,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:s,syncInputs:a}=n;if(null!=s)throw new Error(`This execution contains the node '${s.name}', which has the dynamic op '${s.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${a}]`);if(r.length>0){const n=e.map((t=>t.name)),s=Object.keys(t);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${s}]. Missing the following inputs: [${r}]`)}return function(t,e,n){const{usedNodes:r,inputs:s}=n,a=[],i=Object.keys(s).map((t=>dc(t)[0])).map((e=>t.nodes[e])),o=t.initNodes;i.forEach((t=>{r.has(t.name)&&a.push(t)})),t.weights.forEach((t=>{r.has(t.name)&&a.push(t)})),null!=o&&o.forEach((t=>{r.has(t.name)&&a.push(t)}));const u=new Set,l=[];for(;a.length>0;){const t=a.pop();u.add(t.name),e[t.name]||l.push(t),t.children.forEach((t=>{!u.has(t.name)&&r.has(t.name)&&t.inputs.every((t=>u.has(t.name)))&&a.push(t)}))}return l}(this.graph,this.weightMap,n)}execute(t,e){t=this.mapInputs(t);const n=Object.keys(t).sort();this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e);const r=n.map((t=>this.graph.nodes[dc(t)[0]])),s=e.map((t=>dc(t)[0]));let a=s.map((t=>this.graph.nodes[t]));0===a.length&&(a=this._outputs);const i=this.getCompilationKey(r,a);let o=this.compiledMap.get(i);null==o&&(o=this.compile(t,a),this.compiledMap.set(i,o));const u={},l={};return Rr((()=>{const n=new vh(this.weightMap,u,l,this.functionExecutorMap),r=Object.assign({},this.weightMap);Object.keys(t).forEach((e=>{const[n,s]=dc(e),a=[];a[s]=t[e],r[n]=a}));const a=this.getFrozenTensorIds(r),i={};for(let t=0;t<o.length;t++){const e=o[t];if(!r[e.name]){const t=wh(e,r,n,this._resourceManager);if(P(t))throw new Error(`The execution of the op '${e.op}' returned a promise. Please use model.executeAsync() instead.`);r[e.name]=t,this.checkTensorForDisposal(e.name,e,r,n,a,s,i)}}return null==this.parent&&n.dispose(a),e.map((t=>cc(t,r,n)))}))}getFrozenTensorIds(t){const e=[].concat.apply([],Object.keys(t).map((e=>t[e])).map((t=>t.map((t=>t.id)))));return new Set(e)}checkTensorForDisposal(t,e,n,r,s,a,i){"control"!==e.category&&-1===a.indexOf(t)&&(n[t].forEach((t=>{null!=t&&(i[t.id]=(i[t.id]||0)+e.children.length)})),e.inputs.forEach((t=>{if("control"!==t.category){const e=function(t,e,n){return e[pc(t,n.currentContextId)]}(t.name,n,r);null!=e&&e.forEach((t=>{if(t&&!s.has(t.id)){const e=i[t.id];1===e?(t.dispose(),delete i[t.id]):null!=e&&i[t.id]--}}))}})))}async executeAsync(t,e){return this._executeAsync(t,e)}async _executeAsync(t,e,n=!1,r={},s={}){n||(t=this.mapInputs(t),this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e));const a=new vh(this.weightMap,r,s,this.functionExecutorMap),i=await this.executeWithControlFlow(t,a,e,n),o=e.map((t=>cc(t,i,a))),u=o.map((t=>t.id)),l=Object.keys(t).map((e=>t[e].id)),c=new Set([...u,...l,...this.weightIds]);return Object.keys(i).forEach((t=>{i[t].forEach((t=>{!t||t.isDisposed||c.has(t.id)||t.dispose()}))})),null==this.parent&&a.dispose(c),o}async executeFunctionAsync(t,e,n){const r=t.reduce(((t,e,n)=>(t[this.inputs[n].name]=e,t)),{});return this._executeAsync(r,this.outputNodes,!0,e,n)}async executeWithControlFlow(t,e,n,r){const s=Object.keys(t),a=s.map((t=>this.graph.nodes[dc(t)[0]])),i=n.map((t=>dc(t)[0]));let o=i.map((t=>this.graph.nodes[t]));0===o.length&&(o=this._outputs);const{usedNodes:u,missingInputs:l,dynamicNode:c,syncInputs:h}=Ih(t,o,this.weightMap,this._initNodes),p=[...a,...this.graph.weights,...this._initNodes||[]].map((t=>({node:t,contexts:e.currentContext}))),d=Object.assign({},this.weightMap);Object.keys(t).forEach((e=>{const[n,r]=dc(e),s=[];s[r]=t[e],d[n]=s}));const f={},m=this.getFrozenTensorIds(d),g={};for(;p.length>0;){const t=this.processStack(a,p,e,d,g,m,i,f,u);await Promise.all(t)}null!=c||r||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const y=o.filter((t=>!Ch(t)&&!cc(t.name,d,e))).map((t=>t.name));if(y.length>0){let t="";throw null!=c&&(t=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${h}]`),new Error(`Cannot compute the outputs [${y}] from the provided inputs [${s}]. Consider providing the following inputs: [${l}]. ${t}`)}return d}processStack(t,e,n,r,s,a,i,o,u){const l=[];for(;e.length>0;){const t=e.pop();n.currentContext=t.contexts;let c="";if("Enter"===t.node.op&&lc("isConstant",t.node,r,n)&&([c]=hc(t.node.name,n)),null==r[t.node.name]){const h=wh(t.node,r,n,this._resourceManager);c||([c]=hc(t.node.name,n));const p=n.currentContext;P(h)?l.push(h.then((l=>(r[c]=l,n.currentContext=p,this.checkTensorForDisposal(c,t.node,r,n,a,i,o),this.processChildNodes(t.node,e,n,r,s,u),l)))):(r[c]=h,this.checkTensorForDisposal(c,t.node,r,n,a,i,o),this.processChildNodes(t.node,e,n,r,s,u))}else this.processChildNodes(t.node,e,n,r,s,u)}return l}processChildNodes(t,e,n,r,s,a){t.children.forEach((t=>{const[i]=hc(t.name,n);!s[i]&&a.has(t.name)&&("Merge"===t.op?t.inputNames.some((t=>!!cc(t,r,n)))&&(s[i]=!0,e.push({contexts:n.currentContext,node:t})):t.inputNames.every((t=>!!cc(t,r,n)))&&(s[i]=!0,e.push({contexts:n.currentContext,node:t})))}))}dispose(){Object.keys(this.weightMap).forEach((t=>this.weightMap[t].forEach((t=>t.dispose()))))}checkInputShapeAndType(t){Object.keys(t).forEach((e=>{const n=t[e],[r]=dc(e),s=this.graph.nodes[r];if(s.attrParams.shape&&s.attrParams.shape.value){const t=s.attrParams.shape.value;u(t.length===n.shape.length&&n.shape.every(((e,n)=>-1===t[n]||t[n]===e)),(()=>`The shape of dict['${s.name}'] provided in model.execute(dict) must be [${t}], but was [${n.shape}]`))}s.attrParams.dtype&&s.attrParams.dtype.value&&u(n.dtype===s.attrParams.dtype.value,(()=>`The dtype of dict['${s.name}'] provided in model.execute(dict) must be ${s.attrParams.dtype.value}, but was ${n.dtype}`))}))}mapInputs(t){const e={};for(const n in t)if(null!=this._signature&&null!=this._signature.inputs&&null!=this._signature.inputs[n]){e[this._signature.inputs[n].name]=t[n]}else e[n]=t[n];return e}checkInputs(t){const e=Object.keys(t).filter((t=>{const[e]=dc(t);return null==this.graph.nodes[e]}));if(e.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${e}] that are not part of graph`)}mapOutputs(t){return t.map((t=>{if(null!=this._signature&&null!=this._signature.outputs&&null!=this._signature.outputs[t]){return this._signature.outputs[t].name}return t}),{})}checkOutputs(t){t.forEach((t=>{const[e]=dc(t);if(!this.graph.nodes[e])throw new Error(`The output '${t}' is not found in the graph`)}))}}class $h{constructor(t={},e={}){this.hashTableNameToHandle=t,this.hashTableMap=e}addHashTable(t,e){this.hashTableNameToHandle[t]=e.handle,this.hashTableMap[e.id]=e}getHashTableHandleByName(t){return this.hashTableNameToHandle[t]}getHashTableById(t){return this.hashTableMap[t]}dispose(){for(const t in this.hashTableMap)this.hashTableMap[t].clearAndClose(),delete this.hashTableMap[t];for(const t in this.hashTableNameToHandle)this.hashTableNameToHandle[t].dispose(),delete this.hashTableNameToHandle[t]}}class Ah{constructor(t,e={}){this.modelUrl=t,this.loadOptions=e,this.version="n/a",null==e&&(this.loadOptions={}),this.resourceManager=new $h}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}findIOHandler(){const t=this.modelUrl;if(null!=t.load)this.handler=t;else if(null!=this.loadOptions.requestInit)this.handler=sr(t,this.loadOptions);else{const r=(e=t,n=this.loadOptions,In.getLoadHandlers(e,n));if(0===r.length)r.push(sr(t,this.loadOptions));else if(r.length>1)throw new Error(`Found more than one (${r.length}) load handlers for URL '${[t]}'`);this.handler=r[0]}var e,n}async load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const t=await this.handler.load();return this.loadSync(t)}loadSync(t){this.artifacts=t;const e=this.artifacts.modelTopology;let n={};null!=this.artifacts.userDefinedMetadata&&(n=this.artifacts.userDefinedMetadata.signature),this.version=`${e.versions.producer}.${e.versions.minConsumer}`;const r=function(t,e){const n={};let r,s=0;for(const a of e){const e=a.name,i=a.dtype,o=a.shape,u=p(o);let l;if("quantization"in a){const n=a.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${a.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${a.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==i)throw new Error(`Weight ${a.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${i}.`)}const o=dn[n.dtype],c=t.slice(s,s+u*o),h="uint8"===n.dtype?new Uint8Array(c):new Uint16Array(c);if("float32"===i)if("uint8"===n.dtype||"uint16"===n.dtype){l=new Float32Array(h.length);for(let t=0;t<h.length;t++){const e=h[t];l[t]=e*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===r&&(r=vn()),l=r(h)}else{if("int32"!==i)throw new Error(`Unsupported dtype in weight '${e}': ${i}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);l=new Int32Array(h.length);for(let t=0;t<h.length;t++){const e=h[t];l[t]=Math.round(e*n.scale+n.min)}}s+=u*o}else if("string"===i){const e=p(a.shape);l=[];for(let n=0;n<e;n++){const e=new Uint32Array(t.slice(s,s+4))[0];s+=4;const n=new Uint8Array(t.slice(s,s+e));l.push(n),s+=e}}else{const r=dn[i],a=t.slice(s,s+u*r);if("float32"===i)l=new Float32Array(a);else if("int32"===i)l=new Int32Array(a);else if("bool"===i)l=new Uint8Array(a);else{if("complex64"!==i)throw new Error(`Unsupported dtype in weight '${e}': ${i}`);{l=new Float32Array(a);const t=new Float32Array(l.length/2),r=new Float32Array(l.length/2);for(let e=0;e<t.length;e++)t[e]=l[2*e],r[e]=l[2*e+1];const s=pn(t,o,"float32"),i=pn(r,o,"float32");n[e]=cn(s,i),s.dispose(),i.dispose()}}s+=u*r}"complex64"!==i&&(n[e]=pn(l,o,i))}return n}(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new _h(Jc.Instance.transformGraph(e,n)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),this.executor.resourceManager=this.resourceManager,null!=t.modelInitializer){const e=Jc.Instance.transformGraph(t.modelInitializer);this.initializer=new _h(e),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(t,e){if("string"==typeof t){const e=kn(t);if(0===e.length)throw new Error(`Cannot find any save handlers for URL '${t}'`);if(e.length>1)throw new Error(`Found more than one (${e.length}) save handlers for URL '${t}'`);t=e[0]}if(null==t.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return t.save(this.artifacts)}predict(t,e){return this.execute(t,this.outputNodes)}normalizeInputs(t){if(!(t instanceof Ot||Array.isArray(t)))return t;if((t=Array.isArray(t)?t:[t]).length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${t.length} input tensors.`);return this.inputNodes.reduce(((e,n,r)=>(e[n]=t[r],e)),{})}normalizeOutputs(t){return t=t||this.outputNodes,Array.isArray(t)?t:[t]}execute(t,e){t=this.normalizeInputs(t),e=this.normalizeOutputs(e);const n=this.executor.execute(t,e);return n.length>1?n:n[0]}async executeAsync(t,e){t=this.normalizeInputs(t),e=this.normalizeOutputs(e);const n=await this.executor.executeAsync(t,e);return n.length>1?n:n[0]}convertTensorMapToTensorsMap(t){return Object.keys(t).reduce(((e,n)=>(e[n]=[t[n]],e)),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}}async function Rh(t,e={}){if(null==t)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==e&&(e={}),e.fromTFHub&&null==t.load&&(t.endsWith("/")||(t+="/"),t=`${t}model.json?tfjs-format=file`);const n=new Ah(t,e);return await n.load(),n}var Mh=function(){return(Mh=Object.assign||function(t){for(var e,n=1,r=arguments.length;n<r;n++)for(var s in e=arguments[n])Object.prototype.hasOwnProperty.call(e,s)&&(t[s]=e[s]);return t}).apply(this,arguments)};function Dh(t,e,n,r){return new(n||(n=Promise))((function(s,a){function i(t){try{u(r.next(t))}catch(t){a(t)}}function o(t){try{u(r.throw(t))}catch(t){a(t)}}function u(t){var e;t.done?s(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(i,o)}u((r=r.apply(t,e||[])).next())}))}function Oh(t,e){var n,r,s,a,i={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return a={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function o(a){return function(o){return function(a){if(n)throw new TypeError("Generator is already executing.");for(;i;)try{if(n=1,r&&(s=2&a[0]?r.return:a[0]?r.throw||((s=r.return)&&s.call(r),0):r.next)&&!(s=s.call(r,a[1])).done)return s;switch(r=0,s&&(a=[2&a[0],s.value]),a[0]){case 0:case 1:s=a;break;case 4:return i.label++,{value:a[1],done:!1};case 5:i.label++,r=a[1],a=[0];continue;case 7:a=i.ops.pop(),i.trys.pop();continue;default:if(!((s=(s=i.trys).length>0&&s[s.length-1])||6!==a[0]&&2!==a[0])){i=0;continue}if(3===a[0]&&(!s||a[1]>s[0]&&a[1]<s[3])){i.label=a[1];break}if(6===a[0]&&i.label<s[1]){i.label=s[1],s=a;break}if(s&&i.label<s[2]){i.label=s[2],i.ops.push(a);break}s[2]&&i.ops.pop(),i.trys.pop();continue}a=e.call(t,i)}catch(t){a=[6,t],r=0}finally{n=s=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,o])}}}const Fh=t=>({startEndTensor:t,startPoint:$i(t,[0,0],[-1,2]),endPoint:$i(t,[0,2],[-1,2])}),Lh={strides:[8,16],anchors:[2,6]};function Bh(t,e){let n,r,s;if(t.topLeft instanceof Ot&&t.bottomRight instanceof Ot){const[a,i]=Rr((()=>[$s([Ma(e-1,t.topLeft.slice(0,1)),t.topLeft.slice(1,1)]),$s([Ma(e-1,t.bottomRight.slice(0,1)),t.bottomRight.slice(1,1)])]));n=a,r=i,null!=t.landmarks&&(s=Rr((()=>{const n=Ma(yi([e-1,0]),t.landmarks),r=yi([1,-1]);return xa(n,r)})))}else{const[a,i]=t.topLeft,[o,u]=t.bottomRight;n=[e-1-a,i],r=[e-1-o,u],null!=t.landmarks&&(s=t.landmarks.map((t=>[e-1-t[0],t[1]])))}const a={topLeft:n,bottomRight:r};return null!=s&&(a.landmarks=s),null!=t.probability&&(a.probability=t.probability instanceof Ot?t.probability.clone():t.probability),a}function zh(t,e){return Rr((()=>{let n;return n=t.hasOwnProperty("box")?t.box:t,((t,e)=>{const n=xa(t.startPoint,e),r=xa(t.endPoint,e),s=Rs([n,r],1);return Fh(s)})(n,e).startEndTensor.squeeze()}))}class Ph{constructor(t,e,n,r,s,a){this.blazeFaceModel=t,this.width=e,this.height=n,this.maxFaces=r,this.anchorsData=function(t,e,n){const r=[];for(let s=0;s<n.strides.length;s++){const a=n.strides[s],i=Math.floor((e+a-1)/a),o=Math.floor((t+a-1)/a),u=n.anchors[s];for(let t=0;t<i;t++){const e=a*(t+.5);for(let t=0;t<o;t++){const n=a*(t+.5);for(let t=0;t<u;t++)r.push([n,e])}}}return r}(e,n,Lh),this.anchors=Yi(this.anchorsData),this.inputSizeData=[e,n],this.inputSize=yi([e,n]),this.iouThreshold=s,this.scoreThreshold=a}async getBoundingBoxes(t,e,n=!0){const[r,s,a]=Rr((()=>{const e=t.resizeBilinear([this.width,this.height]),n=xa(Ma(e.div(255),.5),2),r=this.blazeFaceModel.predict(n).squeeze(),s=function(t,e,n){const r=$i(t,[0,1],[-1,2]),s=Pr(r,e),a=$i(t,[0,3],[-1,2]),i=qs(a,n),o=qs(s,n),u=qs(i,2),l=Ma(o,u),c=Pr(o,u),h=xa(l,n),p=xa(c,n);return Rs([h,p],1)}(r,this.anchors,this.inputSize),a=$i(r,[0,0],[-1,1]);return[r,s,_a(a).squeeze()]})),i=console.warn;console.warn=()=>{};const o=mu.nonMaxSuppression(s,a,this.maxFaces,this.iouThreshold,this.scoreThreshold);console.warn=i;const u=await o.array();o.dispose();let l=u.map((t=>$i(s,[t,0],[1,-1])));e||(l=await Promise.all(l.map((async t=>{const e=await t.array();return t.dispose(),e}))));const c=t.shape[1],h=t.shape[2];let p;p=e?qs([h,c],this.inputSize):[h/this.inputSizeData[0],c/this.inputSizeData[1]];const d=[];for(let t=0;t<l.length;t++){const s=l[t],i=Rr((()=>{const i=Fh(s instanceof Ot?s:Yi(s));if(!n)return i;const o=u[t];let l;return l=e?this.anchors.slice([o,0],[1,2]):this.anchorsData[o],{box:i,landmarks:$i(r,[o,5],[1,-1]).squeeze().reshape([6,-1]),probability:$i(a,[o],[1]),anchor:l}}));d.push(i)}return s.dispose(),a.dispose(),r.dispose(),{boxes:d,scaleFactor:p}}async estimateFaces(t,e=!1,n=!1,r=!0){const[,s]=function(t){return t instanceof Ot?[t.shape[0],t.shape[1]]:[t.height,t.width]}(t),a=Rr((()=>(t instanceof Ot||(t=cr(t)),t.toFloat().expandDims(0)))),{boxes:i,scaleFactor:o}=await this.getBoundingBoxes(a,e,r);return a.dispose(),e?i.map((t=>{const e=zh(t,o);let a={topLeft:e.slice([0],[2]),bottomRight:e.slice([2],[2])};if(r){const{landmarks:e,probability:n,anchor:r}=t,s=e.add(r).mul(o);a.landmarks=s,a.probability=n}return n&&(a=Bh(a,s)),a})):Promise.all(i.map((async t=>{const e=zh(t,o);let a;if(r){const[n,r,s]=await Promise.all([t.landmarks,e,t.probability].map((async t=>t.array()))),i=t.anchor,[u,l]=o,c=n.map((t=>[(t[0]+i[0])*u,(t[1]+i[1])*l]));a={topLeft:r.slice(0,2),bottomRight:r.slice(2),landmarks:c,probability:s},(t=>{t.startEndTensor.dispose(),t.startPoint.dispose(),t.endPoint.dispose()})(t.box),t.landmarks.dispose(),t.probability.dispose()}else{const t=await e.array();a={topLeft:t.slice(0,2),bottomRight:t.slice(2)}}return e.dispose(),n&&(a=Bh(a,s)),a})))}}async function Vh({maxFaces:t=10,inputWidth:e=128,inputHeight:n=128,iouThreshold:r=.3,scoreThreshold:s=.75}={}){const a=await Rh("https://tfhub.dev/tensorflow/tfjs-model/blazeface/1/default/1",{fromTFHub:!0});return new Ph(a,e,n,t,r,s)}var Wh={silhouette:[10,338,297,332,284,251,389,356,454,323,361,288,397,365,379,378,400,377,152,148,176,149,150,136,172,58,132,93,234,127,162,21,54,103,67,109],lipsUpperOuter:[61,185,40,39,37,0,267,269,270,409,291],lipsLowerOuter:[146,91,181,84,17,314,405,321,375,291],lipsUpperInner:[78,191,80,81,82,13,312,311,310,415,308],lipsLowerInner:[78,95,88,178,87,14,317,402,318,324,308],rightEyeUpper0:[246,161,160,159,158,157,173],rightEyeLower0:[33,7,163,144,145,153,154,155,133],rightEyeUpper1:[247,30,29,27,28,56,190],rightEyeLower1:[130,25,110,24,23,22,26,112,243],rightEyeUpper2:[113,225,224,223,222,221,189],rightEyeLower2:[226,31,228,229,230,231,232,233,244],rightEyeLower3:[143,111,117,118,119,120,121,128,245],rightEyebrowUpper:[156,70,63,105,66,107,55,193],rightEyebrowLower:[35,124,46,53,52,65],rightEyeIris:[473,474,475,476,477],leftEyeUpper0:[466,388,387,386,385,384,398],leftEyeLower0:[263,249,390,373,374,380,381,382,362],leftEyeUpper1:[467,260,259,257,258,286,414],leftEyeLower1:[359,255,339,254,253,252,256,341,463],leftEyeUpper2:[342,445,444,443,442,441,413],leftEyeLower2:[446,261,448,449,450,451,452,453,464],leftEyeLower3:[372,340,346,347,348,349,350,357,465],leftEyebrowUpper:[383,300,293,334,296,336,285,417],leftEyebrowLower:[265,353,276,283,282,295],leftEyeIris:[468,469,470,471,472],midwayBetweenEyes:[168],noseTip:[1],noseBottom:[2],noseRightCorner:[98],noseLeftCorner:[327],rightCheek:[205],leftCheek:[425]};function Uh(t){return[Math.abs(t.endPoint[0]-t.startPoint[0]),Math.abs(t.endPoint[1]-t.startPoint[1])]}function Gh(t){return[t.startPoint[0]+(t.endPoint[0]-t.startPoint[0])/2,t.startPoint[1]+(t.endPoint[1]-t.startPoint[1])/2]}function Hh(t,e){void 0===e&&(e=1.5);var n=Gh(t),r=Uh(t),s=[e*r[0]/2,e*r[1]/2];return{startPoint:[n[0]-s[0],n[1]-s[1]],endPoint:[n[0]+s[0],n[1]+s[1]],landmarks:t.landmarks}}var jh=[[1,0,0],[0,1,0],[0,0,1]];function qh(t,e){return[[1,0,t],[0,1,e],[0,0,1]]}function Kh(t,e){for(var n=0,r=0;r<t.length;r++)n+=t[r]*e[r];return n}function Xh(t,e){for(var n=[],r=0;r<t.length;r++)n.push(t[r][e]);return n}function Yh(t,e){for(var n=[],r=t.length,s=0;s<r;s++){n.push([]);for(var a=0;a<r;a++)n[s].push(Kh(t[s],Xh(e,a)))}return n}function Jh(t,e){var n=Math.cos(t),r=Math.sin(t),s=[[n,-r,0],[r,n,0],[0,0,1]],a=Yh(qh(e[0],e[1]),s);return Yh(a,qh(-e[0],-e[1]))}var Zh=[13,Wh.midwayBetweenEyes[0]],Qh=[3,2],tp=Wh.leftEyeLower0,ep=[tp[0],tp[tp.length-1]],np=Wh.rightEyeLower0,rp=[np[0],np[np.length-1]],sp=[{key:"EyeUpper0",indices:[9,10,11,12,13,14,15]},{key:"EyeUpper1",indices:[25,26,27,28,29,30,31]},{key:"EyeUpper2",indices:[41,42,43,44,45,46,47]},{key:"EyeLower0",indices:[0,1,2,3,4,5,6,7,8]},{key:"EyeLower1",indices:[16,17,18,19,20,21,22,23,24]},{key:"EyeLower2",indices:[32,33,34,35,36,37,38,39,40]},{key:"EyeLower3",indices:[54,55,56,57,58,59,60,61,62]},{key:"EyebrowUpper",indices:[63,64,65,66,67,68,69,70]},{key:"EyebrowLower",indices:[48,49,50,51,52,53]}];function ap(t,e,n,r){for(var s=0;s<sp.length;s++){var a=sp[s],i=a.key,o=a.indices,u=Wh[""+n+i];if(null==r||r.includes(i))for(var l=0;l<o.length;l++){var c=o[l];t[u[l]]=[e[c][0],e[c][1],(e[c][2]+t[u[l]][2])/2]}}}var ip=function(){function t(t,e,n,r,s,a,i){this.regionsOfInterest=[],this.runsWithoutFaceDetector=0,this.boundingBoxDetector=t,this.meshDetector=e,this.irisModel=i,this.meshWidth=n,this.meshHeight=r,this.maxContinuousChecks=s,this.maxFaces=a}return t.prototype.transformRawCoords=function(t,e,n,r){var s,a,i,o,u=this,l=Uh({startPoint:e.startPoint,endPoint:e.endPoint}),c=[l[0]/this.meshWidth,l[1]/this.meshHeight],h=t.map((function(t){return[c[0]*(t[0]-u.meshWidth/2),c[1]*(t[1]-u.meshHeight/2),t[2]]})),p=Jh(n,[0,0]),d=h.map((function(t){return function(t,e){return[Kh(t,e[0]),Kh(t,e[1])]}(t,p).concat([t[2]])})),f=(a=[[(s=r)[0][0],s[1][0]],[s[0][1],s[1][1]]],i=[s[0][2],s[1][2]],o=[-Kh(a[0],i),-Kh(a[1],i)],[a[0].concat(o[0]),a[1].concat(o[1]),[0,0,1]]),m=Gh({startPoint:e.startPoint,endPoint:e.endPoint}).concat([1]),g=[Kh(m,f[0]),Kh(m,f[1])];return d.map((function(t){return[t[0]+g[0],t[1]+g[1],t[2]]}))},t.prototype.getLeftToRightEyeDepthDifference=function(t){return t[ep[0]][2]-t[rp[0]][2]},t.prototype.getEyeBox=function(t,e,n,r,s){void 0===s&&(s=!1);var a=function(t){var e=Gh(t),n=Uh(t),r=Math.max.apply(Math,n)/2;return{startPoint:[e[0]-r,e[1]-r],endPoint:[e[0]+r,e[1]+r],landmarks:t.landmarks}}(Hh(this.calculateLandmarksBoundingBox([t[n],t[r]]),2.3)),i=Uh(a),o=mu.cropAndResize(e,[[a.startPoint[1]/this.meshHeight,a.startPoint[0]/this.meshWidth,a.endPoint[1]/this.meshHeight,a.endPoint[0]/this.meshWidth]],[0],[64,64]);return s&&(o=mu.flipLeftRight(o)),{box:a,boxSize:i,crop:o}},t.prototype.getEyeCoords=function(t,e,n,r){void 0===r&&(r=!1);for(var s=[],a=0;a<76;a++){var i=t[3*a],o=t[3*a+1],u=t[3*a+2];s.push([(r?1-i/64:i/64)*n[0]+e.startPoint[0],o/64*n[1]+e.startPoint[1],u])}return{rawCoords:s,iris:s.slice(71)}},t.prototype.getAdjustedIrisCoords=function(t,e,n){var r=t[Wh[n+"EyeUpper0"][3]][2],s=t[Wh[n+"EyeLower0"][4]][2],a=(r+s)/2;return e.map((function(t,e){var n=a;return 2===e?n=r:4===e&&(n=s),[t[0],t[1],n]}))},t.prototype.predict=function(t,e){return Dh(this,void 0,void 0,(function(){var n,r,s,a,i=this;return Oh(this,(function(o){switch(o.label){case 0:return this.shouldUpdateRegionsOfInterest()?[4,this.boundingBoxDetector.getBoundingBoxes(t,!1,!0)]:[3,2];case 1:return n=o.sent(),r=n.boxes,s=n.scaleFactor,0===r.length?(this.regionsOfInterest=[],[2,null]):(a=r.map((function(t){var e,n,r={startPoint:t.box.startPoint.squeeze().arraySync(),endPoint:t.box.endPoint.squeeze().arraySync()},a=Hh((n=s,{startPoint:[(e=r).startPoint[0]*n[0],e.startPoint[1]*n[1]],endPoint:[e.endPoint[0]*n[0],e.endPoint[1]*n[1]]}));return Mh({},a,{landmarks:t.landmarks.arraySync()})})),r.forEach((function(t){null!=t&&null!=t.startPoint&&(t.startEndTensor.dispose(),t.startPoint.dispose(),t.endPoint.dispose())})),this.updateRegionsOfInterest(a),this.runsWithoutFaceDetector=0,[3,3]);case 2:this.runsWithoutFaceDetector++,o.label=3;case 3:return[2,Rr((function(){return i.regionsOfInterest.map((function(n,r){var s,a=n.landmarks.length>=468,o=Zh[0],u=Zh[1];!1===a&&(o=Qh[0],u=Qh[1]),s=function(t,e){var n;return(n=Math.PI/2-Math.atan2(-(e[1]-t[1]),e[0]-t[0]))-2*Math.PI*Math.floor((n+Math.PI)/(2*Math.PI))}(n.landmarks[o],n.landmarks[u]);var l=Gh({startPoint:n.startPoint,endPoint:n.endPoint}),c=[l[0]/t.shape[2],l[1]/t.shape[1]],h=t,p=jh;0!==s&&(h=mu.rotateWithOffset(t,s,0,c),p=Jh(-s,l));var d=function(t,e,n){var r=e.shape[1],s=e.shape[2],a=[[t.startPoint[1]/r,t.startPoint[0]/s,t.endPoint[1]/r,t.endPoint[0]/s]];return mu.cropAndResize(e,a,[0],n)}({startPoint:n.startPoint,endPoint:n.endPoint},h,[i.meshHeight,i.meshWidth]).div(255),f=i.meshDetector.predict(d),m=f[1],g=f[2],y=ar(g,[-1,3]).arraySync();if(e){var b=i.getEyeBox(y,d,ep[0],ep[1],!0),x=b.box,w=b.boxSize,v=b.crop,I=i.getEyeBox(y,d,rp[0],rp[1]),k=I.box,N=I.boxSize,S=I.crop,C=i.irisModel.predict($s([v,S])).dataSync(),E=C.slice(0,228),T=i.getEyeCoords(E,x,w,!0),_=T.rawCoords,$=T.iris,A=C.slice(228),R=i.getEyeCoords(A,k,N),M=R.rawCoords,D=R.iris,O=i.getLeftToRightEyeDepthDifference(y);Math.abs(O)<30?(ap(y,_,"left"),ap(y,M,"right")):O<1?ap(y,_,"left",["EyeUpper0","EyeLower0"]):ap(y,M,"right",["EyeUpper0","EyeLower0"]);var F=i.getAdjustedIrisCoords(y,$,"left"),L=i.getAdjustedIrisCoords(y,D,"right");y=y.concat(F).concat(L)}var B=i.transformRawCoords(y,n,s,p),z=Yi(B),P=Hh(i.calculateLandmarksBoundingBox(B));return i.regionsOfInterest[r]=Mh({},P,{landmarks:z.arraySync()}),{coords:Yi(y,[y.length,3]),scaledCoords:z,box:P,flag:m.squeeze()}}))}))]}}))}))},t.prototype.updateRegionsOfInterest=function(t){for(var e=0;e<t.length;e++){var n=t[e],r=this.regionsOfInterest[e],s=0;if(r&&r.startPoint){var a=n.startPoint,i=a[0],o=a[1],u=n.endPoint,l=u[0],c=u[1],h=r.startPoint,p=h[0],d=h[1],f=r.endPoint,m=f[0],g=f[1],y=Math.max(i,p),b=Math.max(o,d),x=(Math.min(l,m)-y)*(Math.min(c,g)-b);s=x/((l-i)*(c-o)+(m-p)*(g-o)-x)}s<.25&&(this.regionsOfInterest[e]=n)}this.regionsOfInterest=this.regionsOfInterest.slice(0,t.length)},t.prototype.clearRegionOfInterest=function(t){null!=this.regionsOfInterest[t]&&(this.regionsOfInterest=this.regionsOfInterest.slice(0,t).concat(this.regionsOfInterest.slice(t+1)))},t.prototype.shouldUpdateRegionsOfInterest=function(){var t=this.regionsOfInterest.length,e=0===t;return 1===this.maxFaces||e?e:t!==this.maxFaces&&this.runsWithoutFaceDetector>=this.maxContinuousChecks},t.prototype.calculateLandmarksBoundingBox=function(t){var e=t.map((function(t){return t[0]})),n=t.map((function(t){return t[1]}));return{startPoint:[Math.min.apply(Math,e),Math.min.apply(Math,n)],endPoint:[Math.max.apply(Math,e),Math.max.apply(Math,n)]}},t}(),op=[[.499976992607117,.652534008026123],[.500025987625122,.547487020492554],[.499974012374878,.602371990680695],[.482113003730774,.471979022026062],[.500150978565216,.527155995368958],[.499909996986389,.498252987861633],[.499523013830185,.40106201171875],[.289712011814117,.380764007568359],[.499954998493195,.312398016452789],[.499987006187439,.269918978214264],[.500023007392883,.107050001621246],[.500023007392883,.666234016418457],[.5000159740448,.679224014282227],[.500023007392883,.692348003387451],[.499976992607117,.695277988910675],[.499976992607117,.70593398809433],[.499976992607117,.719385027885437],[.499976992607117,.737019002437592],[.499967992305756,.781370997428894],[.499816000461578,.562981009483337],[.473773002624512,.573909997940063],[.104906998574734,.254140973091125],[.365929991006851,.409575998783112],[.338757991790771,.41302502155304],[.311120003461838,.409460008144379],[.274657994508743,.389131009578705],[.393361985683441,.403706014156342],[.345234006643295,.344011008739471],[.370094001293182,.346076011657715],[.319321990013123,.347265005111694],[.297903001308441,.353591024875641],[.24779200553894,.410809993743896],[.396889001131058,.842755019664764],[.280097991228104,.375599980354309],[.106310002505779,.399955987930298],[.2099249958992,.391353011131287],[.355807989835739,.534406006336212],[.471751004457474,.65040397644043],[.474155008792877,.680191993713379],[.439785003662109,.657229006290436],[.414617002010345,.66654098033905],[.450374007225037,.680860996246338],[.428770989179611,.682690978050232],[.374971002340317,.727805018424988],[.486716985702515,.547628998756409],[.485300987958908,.527395009994507],[.257764995098114,.314490020275116],[.401223003864288,.455172002315521],[.429818987846375,.548614978790283],[.421351999044418,.533740997314453],[.276895999908447,.532056987285614],[.483370006084442,.499586999416351],[.33721199631691,.282882988452911],[.296391993761063,.293242990970612],[.169294998049736,.193813979625702],[.447580009698868,.302609980106354],[.392390012741089,.353887975215912],[.354490011930466,.696784019470215],[.067304998636246,.730105042457581],[.442739009857178,.572826027870178],[.457098007202148,.584792017936707],[.381974011659622,.694710969924927],[.392388999462128,.694203019142151],[.277076005935669,.271932005882263],[.422551989555359,.563233017921448],[.385919004678726,.281364023685455],[.383103013038635,.255840003490448],[.331431001424789,.119714021682739],[.229923993349075,.232002973556519],[.364500999450684,.189113974571228],[.229622006416321,.299540996551514],[.173287004232407,.278747975826263],[.472878992557526,.666198015213013],[.446828007698059,.668527007102966],[.422762006521225,.673889994621277],[.445307999849319,.580065965652466],[.388103008270264,.693961024284363],[.403039008378983,.706539988517761],[.403629004955292,.693953037261963],[.460041999816895,.557139039039612],[.431158006191254,.692366003990173],[.452181994915009,.692366003990173],[.475387006998062,.692366003990173],[.465828001499176,.779190003871918],[.472328990697861,.736225962638855],[.473087012767792,.717857003211975],[.473122000694275,.704625964164734],[.473033010959625,.695277988910675],[.427942007780075,.695277988910675],[.426479011774063,.703539967536926],[.423162013292313,.711845993995667],[.4183090031147,.720062971115112],[.390094995498657,.639572978019714],[.013953999616206,.560034036636353],[.499913990497589,.58014702796936],[.413199990987778,.69539999961853],[.409626007080078,.701822996139526],[.468080013990402,.601534962654114],[.422728985548019,.585985004901886],[.463079988956451,.593783974647522],[.37211999297142,.47341400384903],[.334562003612518,.496073007583618],[.411671012639999,.546965003013611],[.242175996303558,.14767599105835],[.290776997804642,.201445996761322],[.327338010072708,.256527006626129],[.399509996175766,.748921036720276],[.441727995872498,.261676013469696],[.429764986038208,.187834024429321],[.412198007106781,.108901023864746],[.288955003023148,.398952007293701],[.218936994671822,.435410976409912],[.41278201341629,.398970007896423],[.257135003805161,.355440020561218],[.427684992551804,.437960982322693],[.448339998722076,.536936044692993],[.178560003638268,.45755398273468],[.247308000922203,.457193970680237],[.286267012357712,.467674970626831],[.332827985286713,.460712015628815],[.368755996227264,.447206974029541],[.398963987827301,.432654976844788],[.476410001516342,.405806005001068],[.189241006970406,.523923993110657],[.228962004184723,.348950982093811],[.490725994110107,.562400996685028],[.404670000076294,.485132992267609],[.019469000399113,.401564002037048],[.426243007183075,.420431017875671],[.396993011236191,.548797011375427],[.266469985246658,.376977026462555],[.439121007919312,.51895797252655],[.032313998788595,.644356966018677],[.419054001569748,.387154996395111],[.462783008813858,.505746960639954],[.238978996872902,.779744982719421],[.198220998048782,.831938028335571],[.107550002634525,.540755033493042],[.183610007166862,.740257024765015],[.134409993886948,.333683013916016],[.385764002799988,.883153975009918],[.490967005491257,.579378008842468],[.382384985685349,.508572995662689],[.174399003386497,.397670984268188],[.318785011768341,.39623498916626],[.343364000320435,.400596976280212],[.396100014448166,.710216999053955],[.187885001301765,.588537991046906],[.430987000465393,.944064974784851],[.318993002176285,.898285031318665],[.266247987747192,.869701027870178],[.500023007392883,.190576016902924],[.499976992607117,.954452991485596],[.366169989109039,.398822009563446],[.393207013607025,.39553701877594],[.410373002290726,.391080021858215],[.194993004202843,.342101991176605],[.388664990663528,.362284004688263],[.365961998701096,.355970978736877],[.343364000320435,.355356991291046],[.318785011768341,.35834002494812],[.301414996385574,.363156020641327],[.058132998645306,.319076001644135],[.301414996385574,.387449026107788],[.499987989664078,.618434011936188],[.415838003158569,.624195992946625],[.445681989192963,.566076993942261],[.465844005346298,.620640993118286],[.49992299079895,.351523995399475],[.288718998432159,.819945991039276],[.335278987884521,.852819979190826],[.440512001514435,.902418971061707],[.128294005990028,.791940987110138],[.408771991729736,.373893976211548],[.455606997013092,.451801002025604],[.499877005815506,.908990025520325],[.375436991453171,.924192011356354],[.11421000212431,.615022003650665],[.448662012815475,.695277988910675],[.4480200111866,.704632043838501],[.447111994028091,.715808033943176],[.444831997156143,.730794012546539],[.430011987686157,.766808986663818],[.406787008047104,.685672998428345],[.400738000869751,.681069016456604],[.392399996519089,.677703022956848],[.367855995893478,.663918972015381],[.247923001646996,.601333022117615],[.452769994735718,.420849978923798],[.43639200925827,.359887003898621],[.416164010763168,.368713974952698],[.413385987281799,.692366003990173],[.228018000721931,.683571994304657],[.468268007040024,.352671027183533],[.411361992359161,.804327011108398],[.499989002943039,.469825029373169],[.479153990745544,.442654013633728],[.499974012374878,.439637005329132],[.432112008333206,.493588984012604],[.499886006116867,.866917014122009],[.49991300702095,.821729004383087],[.456548988819122,.819200992584229],[.344549000263214,.745438992977142],[.37890899181366,.574010014533997],[.374292999505997,.780184984207153],[.319687992334366,.570737957954407],[.357154995203018,.604269981384277],[.295284003019333,.621580958366394],[.447750002145767,.862477004528046],[.410986006259918,.508723020553589],[.31395098567009,.775308012962341],[.354128003120422,.812552988529205],[.324548006057739,.703992962837219],[.189096003770828,.646299958229065],[.279776990413666,.71465802192688],[.1338230073452,.682700991630554],[.336768001317978,.644733011722565],[.429883986711502,.466521978378296],[.455527991056442,.548622965812683],[.437114000320435,.558896005153656],[.467287987470627,.529924988746643],[.414712011814117,.335219979286194],[.37704598903656,.322777986526489],[.344107985496521,.320150971412659],[.312875986099243,.32233202457428],[.283526003360748,.333190023899078],[.241245999932289,.382785975933075],[.102986000478268,.468762993812561],[.267612010240555,.424560010433197],[.297879010438919,.433175981044769],[.333433985710144,.433878004550934],[.366427004337311,.426115989685059],[.396012008190155,.416696012020111],[.420121014118195,.41022801399231],[.007561000064015,.480777025222778],[.432949006557465,.569517970085144],[.458638995885849,.479089021682739],[.473466008901596,.545744001865387],[.476087987422943,.563830018043518],[.468472003936768,.555056989192963],[.433990985155106,.582361996173859],[.483518004417419,.562983989715576],[.482482999563217,.57784903049469],[.42645001411438,.389798998832703],[.438998997211456,.39649498462677],[.450067013502121,.400434017181396],[.289712011814117,.368252992630005],[.276670008897781,.363372981548309],[.517862021923065,.471948027610779],[.710287988185883,.380764007568359],[.526226997375488,.573909997940063],[.895093023777008,.254140973091125],[.634069979190826,.409575998783112],[.661242008209229,.41302502155304],[.688880026340485,.409460008144379],[.725341975688934,.389131009578705],[.606630027294159,.40370500087738],[.654766023159027,.344011008739471],[.629905998706818,.346076011657715],[.680678009986877,.347265005111694],[.702096998691559,.353591024875641],[.75221198797226,.410804986953735],[.602918028831482,.842862963676453],[.719901978969574,.375599980354309],[.893692970275879,.399959981441498],[.790081977844238,.391354024410248],[.643998026847839,.534487962722778],[.528249025344849,.65040397644043],[.525849997997284,.680191040039062],[.560214996337891,.657229006290436],[.585384011268616,.66654098033905],[.549625992774963,.680860996246338],[.57122802734375,.682691991329193],[.624852001667023,.72809898853302],[.513050019741058,.547281980514526],[.51509702205658,.527251958847046],[.742246985435486,.314507007598877],[.598631024360657,.454979002475739],[.570338010787964,.548575043678284],[.578631997108459,.533622980117798],[.723087012767792,.532054007053375],[.516445994377136,.499638974666595],[.662801027297974,.282917976379395],[.70362401008606,.293271005153656],[.830704987049103,.193813979625702],[.552385985851288,.302568018436432],[.607609987258911,.353887975215912],[.645429015159607,.696707010269165],[.932694971561432,.730105042457581],[.557260990142822,.572826027870178],[.542901992797852,.584792017936707],[.6180260181427,.694710969924927],[.607590973377228,.694203019142151],[.722943007946014,.271963000297546],[.577413976192474,.563166975975037],[.614082992076874,.281386971473694],[.616907000541687,.255886018276215],[.668509006500244,.119913995265961],[.770092010498047,.232020974159241],[.635536015033722,.189248979091644],[.77039098739624,.299556016921997],[.826722025871277,.278755009174347],[.527121007442474,.666198015213013],[.553171992301941,.668527007102966],[.577238023281097,.673889994621277],[.554691970348358,.580065965652466],[.611896991729736,.693961024284363],[.59696102142334,.706539988517761],[.596370995044708,.693953037261963],[.539958000183105,.557139039039612],[.568841993808746,.692366003990173],[.547818005084991,.692366003990173],[.52461302280426,.692366003990173],[.534089982509613,.779141008853912],[.527670979499817,.736225962638855],[.526912987232208,.717857003211975],[.526877999305725,.704625964164734],[.526966989040375,.695277988910675],[.572058022022247,.695277988910675],[.573521018028259,.703539967536926],[.57683801651001,.711845993995667],[.581691026687622,.720062971115112],[.609944999217987,.639909982681274],[.986046016216278,.560034036636353],[.5867999792099,.69539999961853],[.590372025966644,.701822996139526],[.531915009021759,.601536989212036],[.577268004417419,.585934996604919],[.536915004253387,.593786001205444],[.627542972564697,.473352015018463],[.665585994720459,.495950996875763],[.588353991508484,.546862006187439],[.757824003696442,.14767599105835],[.709249973297119,.201507985591888],[.672684013843536,.256581008434296],[.600408971309662,.74900496006012],[.55826598405838,.261672019958496],[.570303976535797,.187870979309082],[.588165998458862,.109044015407562],[.711045026779175,.398952007293701],[.781069993972778,.435405015945435],[.587247014045715,.398931980133057],[.742869973182678,.355445981025696],[.572156012058258,.437651991844177],[.55186802148819,.536570012569427],[.821442008018494,.457556009292603],[.752701997756958,.457181990146637],[.71375697851181,.467626988887787],[.66711300611496,.460672974586487],[.631101012229919,.447153985500336],[.6008620262146,.432473003864288],[.523481011390686,.405627012252808],[.810747981071472,.523926019668579],[.771045982837677,.348959028720856],[.509127020835876,.562718033790588],[.595292985439301,.485023975372314],[.980530977249146,.401564002037048],[.573499977588654,.420000016689301],[.602994978427887,.548687994480133],[.733529984951019,.376977026462555],[.560611009597778,.519016981124878],[.967685997486115,.644356966018677],[.580985009670258,.387160003185272],[.537728011608124,.505385041236877],[.760966002941132,.779752969741821],[.801778972148895,.831938028335571],[.892440974712372,.54076099395752],[.816350996494293,.740260004997253],[.865594983100891,.333687007427216],[.614073991775513,.883246004581451],[.508952975273132,.579437971115112],[.617941975593567,.508316040039062],[.825608015060425,.397674977779388],[.681214988231659,.39623498916626],[.656635999679565,.400596976280212],[.603900015354156,.710216999053955],[.81208598613739,.588539004325867],[.56801301240921,.944564998149872],[.681007981300354,.898285031318665],[.733752012252808,.869701027870178],[.633830010890961,.398822009563446],[.606792986392975,.39553701877594],[.589659988880157,.391062021255493],[.805015981197357,.342108011245728],[.611334979534149,.362284004688263],[.634037971496582,.355970978736877],[.656635999679565,.355356991291046],[.681214988231659,.35834002494812],[.698584973812103,.363156020641327],[.941866993904114,.319076001644135],[.698584973812103,.387449026107788],[.584177017211914,.624107003211975],[.554318010807037,.566076993942261],[.534153997898102,.62064003944397],[.711217999458313,.819975018501282],[.664629995822906,.852871000766754],[.559099972248077,.902631998062134],[.871706008911133,.791940987110138],[.591234028339386,.373893976211548],[.544341027736664,.451583981513977],[.624562978744507,.924192011356354],[.88577002286911,.615028977394104],[.551338016986847,.695277988910675],[.551980018615723,.704632043838501],[.552887976169586,.715808033943176],[.555167973041534,.730794012546539],[.569944024085999,.767035007476807],[.593203008174896,.685675978660583],[.599261999130249,.681069016456604],[.607599973678589,.677703022956848],[.631937980651855,.663500010967255],[.752032995223999,.601315021514893],[.547226011753082,.420395016670227],[.563543975353241,.359827995300293],[.583841025829315,.368713974952698],[.586614012718201,.692366003990173],[.771915018558502,.683578014373779],[.531597018241882,.352482974529266],[.588370978832245,.804440975189209],[.52079701423645,.442565023899078],[.567984998226166,.493479013442993],[.543282985687256,.819254994392395],[.655317008495331,.745514988899231],[.621008992195129,.574018001556396],[.625559985637665,.78031200170517],[.680198013782501,.570719003677368],[.64276397228241,.604337990283966],[.704662978649139,.621529996395111],[.552012026309967,.862591981887817],[.589071989059448,.508637011051178],[.685944974422455,.775357007980347],[.645735025405884,.812640011310577],[.675342977046967,.703978002071381],[.810858011245728,.646304965019226],[.72012197971344,.714666962623596],[.866151988506317,.682704985141754],[.663187026977539,.644596993923187],[.570082008838654,.466325998306274],[.544561982154846,.548375964164734],[.562758982181549,.558784961700439],[.531987011432648,.530140042304993],[.585271000862122,.335177004337311],[.622952997684479,.32277899980545],[.655896008014679,.320163011550903],[.687132000923157,.322345972061157],[.716481983661652,.333200991153717],[.758756995201111,.382786989212036],[.897013008594513,.468769013881683],[.732392013072968,.424547016620636],[.70211398601532,.433162987232208],[.66652500629425,.433866024017334],[.633504986763,.426087975502014],[.603875994682312,.416586995124817],[.579657971858978,.409945011138916],[.992439985275269,.480777025222778],[.567192018032074,.569419980049133],[.54136598110199,.478899002075195],[.526564002037048,.546118021011353],[.523913025856018,.563830018043518],[.531529009342194,.555056989192963],[.566035985946655,.582329034805298],[.51631098985672,.563053965568542],[.5174720287323,.577877044677734],[.573594987392426,.389806985855103],[.560697972774506,.395331978797913],[.549755990505219,.399751007556915],[.710287988185883,.368252992630005],[.723330020904541,.363372981548309]];function up(t){return Dh(this,void 0,void 0,(function(){var e,n,r,s,a,i,o,u,l,c,h,p,d,f,m;return Oh(this,(function(g){switch(g.label){case 0:return e=t.maxContinuousChecks,n=void 0===e?5:e,r=t.detectionConfidence,s=void 0===r?.9:r,a=t.maxFaces,i=void 0===a?10:a,o=t.iouThreshold,u=void 0===o?.3:o,l=t.scoreThreshold,c=void 0===l?.75:l,h=t.shouldLoadIrisModel,p=void 0===h||h,d=t.modelUrl,f=t.irisModelUrl,p?[4,Promise.all([lp(i,u,c),cp(d),hp(f)])]:[3,2];case 1:return m=g.sent(),[3,4];case 2:return[4,Promise.all([lp(i,u,c),cp(d)])];case 3:m=g.sent(),g.label=4;case 4:return[2,new fp(m[0],m[1],n,s,i,p?m[2]:null)]}}))}))}function lp(t,e,n){return Dh(this,void 0,void 0,(function(){return Oh(this,(function(r){return[2,Vh({maxFaces:t,iouThreshold:e,scoreThreshold:n})]}))}))}function cp(t){return Dh(this,void 0,void 0,(function(){return Oh(this,(function(e){return null!=t?[2,Rh(t)]:[2,Rh("https://tfhub.dev/mediapipe/tfjs-model/facemesh/1/default/1",{fromTFHub:!0})]}))}))}function hp(t){return Dh(this,void 0,void 0,(function(){return Oh(this,(function(e){return null!=t?[2,Rh(t)]:[2,Rh("https://tfhub.dev/mediapipe/tfjs-model/iris/1/default/2",{fromTFHub:!0})]}))}))}function pp(t,e){if(t.mesh instanceof Ot){var n=Rr((function(){var n=yi([e-1,0,0]),r=yi([1,-1,1]);return Rr((function(){return[$s([Ma(e-1,t.boundingBox.topLeft.slice(0,1)),t.boundingBox.topLeft.slice(1,1)]),$s([Ma(e-1,t.boundingBox.bottomRight.slice(0,1)),t.boundingBox.bottomRight.slice(1,1)]),Ma(n,t.mesh).mul(r),Ma(n,t.scaledMesh).mul(r)]}))})),r=n[0],s=n[1],a=n[2],i=n[3];return Object.assign({},t,{boundingBox:{topLeft:r,bottomRight:s},mesh:a,scaledMesh:i})}return Object.assign({},t,{boundingBox:{topLeft:[e-1-t.boundingBox.topLeft[0],t.boundingBox.topLeft[1]],bottomRight:[e-1-t.boundingBox.bottomRight[0],t.boundingBox.bottomRight[1]]},mesh:t.mesh.map((function(t){var n=t.slice(0);return n[0]=e-1-t[0],n})),scaledMesh:t.scaledMesh.map((function(t){var n=t.slice(0);return n[0]=e-1-t[0],n}))})}var dp,fp=function(){function t(t,e,n,r,s,a){this.kind="MediaPipeFaceMesh",this.pipeline=new ip(t,e,192,192,n,s,a),this.detectionConfidence=r}return t.getAnnotations=function(){return Wh},t.getUVCoords=function(){return op},t.prototype.estimateFaces=function(t){return Dh(this,void 0,void 0,(function(){var e,n,r,s,a,i,o,u,l,c,h,p,d=this;return Oh(this,(function(f){switch(f.label){case 0:if(e=t.returnTensors,n=void 0!==e&&e,r=t.flipHorizontal,s=void 0!==r&&r,a=t.predictIrises,i=void 0===a||a,o=t.input,i&&null==this.pipeline.irisModel)throw new Error("The iris model was not loaded as part of facemesh. Please initialize the model with facemesh.load({shouldLoadIrisModel: true}).");return u=function(t){return t instanceof Ot?[t.shape[0],t.shape[1]]:[t.height,t.width]}(o),l=u[1],c=Rr((function(){return o instanceof Ot||(o=cr(o)),o.toFloat().expandDims(0)})),"webgl"!==re.backendName?[3,2]:(p=W().get("WEBGL_PACK_DEPTHWISECONV"),W().set("WEBGL_PACK_DEPTHWISECONV",!0),[4,this.pipeline.predict(c,i)]);case 1:return h=f.sent(),W().set("WEBGL_PACK_DEPTHWISECONV",p),[3,4];case 2:return[4,this.pipeline.predict(c,i)];case 3:h=f.sent(),f.label=4;case 4:return c.dispose(),null!=h&&h.length>0?[2,Promise.all(h.map((function(t,e){return Dh(d,void 0,void 0,(function(){var r,a,o,u,c,h,p,d,f,m,g,y,b,x,w=this;return Oh(this,(function(v){switch(v.label){case 0:return r=t.coords,a=t.scaledCoords,o=t.box,u=t.flag,c=[u],n||(c=c.concat([r,a])),[4,Promise.all(c.map((function(t){return Dh(w,void 0,void 0,(function(){return Oh(this,(function(e){return[2,t.array()]}))}))})))];case 1:if(h=v.sent(),p=h[0],u.dispose(),p<this.detectionConfidence&&this.pipeline.clearRegionOfInterest(e),n)return d={kind:"MediaPipePredictionTensors",faceInViewConfidence:p,mesh:r,scaledMesh:a,boundingBox:{topLeft:yi(o.startPoint),bottomRight:yi(o.endPoint)}},s?[2,pp(d,l)]:[2,d];for(x in f=h.slice(1),m=f[0],g=f[1],a.dispose(),r.dispose(),y={kind:"MediaPipePredictionValues",faceInViewConfidence:p,boundingBox:{topLeft:o.startPoint,bottomRight:o.endPoint},mesh:m,scaledMesh:g},s&&(y=pp(y,l)),b={},Wh)(i||!1===x.includes("Iris"))&&(b[x]=Wh[x].map((function(t){return y.scaledMesh[t]})));return y.annotations=b,[2,y]}}))}))})))]:[2,[]]}}))}))},t}();let mp;function gp(){return null==mp&&(mp=re.backend.epsilon()),mp}(dp||(dp={})).mediapipeFacemesh="mediapipe-facemesh";class yp extends Error{constructor(t){super(t),Object.setPrototypeOf(this,yp.prototype)}}class bp extends Error{constructor(t){super(t),Object.setPrototypeOf(this,bp.prototype)}}class xp extends Error{constructor(t){super(t),Object.setPrototypeOf(this,xp.prototype)}}class wp extends Error{constructor(t){super(t),Object.setPrototypeOf(this,wp.prototype)}}class vp extends Error{constructor(t){super(t),Object.setPrototypeOf(this,vp.prototype)}}Error;function Ip(t,e){if(Array.isArray(t)){let n=[];for(let r=0;r<e;r++)n=n.concat(t);return n}{const n=new Array(e);return n.fill(t),n}}function kp(t,e){if(!t)throw new vp(e)}function Np(t,e){let n=0;for(const r of t)r===e&&n++;return n}function Sp(t){return 1===t.length?t[0]:t}function Cp(t){return Array.isArray(t)?t:[t]}function Ep(t){const e=t.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==e[0]?e:"private"+e}function Tp(t){return t.length<=1||-1===t.indexOf("_")?t:t.replace(/[_]+(\w|$)/g,((t,e)=>e.toUpperCase()))}let _p={};function $p(t){if(null==t)return null;const e={};return e.className=t.getClassName(),e.config=t.getConfig(),e}function Ap(t){if(null!=t&&"object"==typeof t)if(Array.isArray(t))t.forEach((t=>Ap(t)));else{const e=Object.keys(t);for(const n of e){const e=t[n];null!=e&&"object"==typeof e&&(Array.isArray(e)||"ndarray"!==e.type||"number"!=typeof e.value?Ap(e):t[n]=e.value)}}}function Rp(t,e={},n={},r="object",s=!1){if("string"==typeof t){const s=t;let a;if(s in n)a=n[s];else if(s in _p)a=_p[s];else if(a=e[s],null==a)throw new xp(`Unknown ${r}: ${t}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}{const a=t;if(null==a.className||null==a.config)throw new xp(`${r}: Improper config format: ${JSON.stringify(a)}.\n'className' and 'config' must set.`);const i=a.className;let o,u;if(i in n?[o,u]=n[i]:i in _p?[o,u]=_p.className:i in e&&([o,u]=e[i]),null==o)throw new xp(`Unknown ${r}: ${i}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=u){const t={};for(const e of Object.keys(_p))t[e]=_p[e];for(const e of Object.keys(n))t[e]=n[e];a.config.customObjects=t;const e=Object.assign({},_p);for(const t of Object.keys(n))_p[t]=n[t];Ap(a.config);const r=u(o,a.config,n,s);return _p=Object.assign({},e),r}{const t=Object.assign({},_p);for(const t of Object.keys(n))_p[t]=n[t];const e=new o(a.config);return _p=Object.assign({},t),e}}}function Mp(t,e){return-1*function(t,e){return t<e?-1:t>e?1:0}(t,e)}function Dp(t){if(null==t)return t;const e=[];for(const n of t)-1===e.indexOf(n)&&e.push(n);return e}function Op(t){if(null==t)throw new xp(`Invalid value in obj: ${JSON.stringify(t)}`);for(const e in t)if(t.hasOwnProperty(e))return!1;return!0}function Fp(t,e,n){if(null!=n&&t.indexOf(n)<0)throw new xp(`${n} is not a valid ${e}.  Valid values are ${t} or null/undefined.`)}function Lp(t,e,n=0,r=1/0){return kp(n>=0),kp(r>=n),Array.isArray(t)&&t.length>=n&&t.length<=r&&t.every((t=>typeof t===e))}function Bp(t,e){Array.isArray(t)?(u(t.length>0,(()=>`${e} is unexpectedly an empty array.`)),t.forEach(((t,n)=>Bp(t,`element ${n+1} of ${e}`)))):u(Number.isInteger(t)&&t>0,(()=>`Expected ${e} to be a positive integer, but got ${zp(t)}.`))}function zp(t){return null===t?"null":Array.isArray(t)?"["+t.map((t=>zp(t))).join(",")+"]":"string"==typeof t?`"${t}"`:`${t}`}function Pp(t){return"relu"===t?"relu":"linear"===t?"linear":"elu"===t?"elu":null}function Vp(t,e){return Rr((()=>Wi(Da(xa(t,t),e,!0))))}class Wp extends Cr{getConfig(){return{}}}class Up extends Wp{constructor(t){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=t.maxValue?t.maxValue:this.defaultMaxValue,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return Rr((()=>{const e=Vp(t,this.axis),n=Es(e,0,this.maxValue);return xa(t,qs(n,Pr(gp(),e)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}Up.className="MaxNorm",Tr(Up);class Gp extends Wp{constructor(t){super(),this.defaultAxis=0,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return Rr((()=>qs(t,Pr(gp(),Vp(t,this.axis)))))}getConfig(){return{axis:this.axis}}}Gp.className="UnitNorm",Tr(Gp);class Hp extends Wp{apply(t){return wi(t)}}Hp.className="NonNeg",Tr(Hp);class jp extends Wp{constructor(t){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=t.minValue?t.minValue:this.defaultMinValue,this.maxValue=null!=t.maxValue?t.maxValue:this.defaultMaxValue,this.rate=null!=t.rate?t.rate:this.defaultRate,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return Rr((()=>{const e=Vp(t,this.axis),n=Pr(xa(this.rate,Es(e,this.minValue,this.maxValue)),xa(1-this.rate,e));return xa(t,qs(n,Pr(gp(),e)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}jp.className="MinMaxNorm",Tr(jp);const qp={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Kp(t){return $p(t)}function Xp(t,e={}){return Rp(t,Er.getMap().classNameMap,e,"constraint")}function Yp(t){if(null==t)return null;if("string"==typeof t){return Xp({className:t in qp?qp[t]:t,config:{}})}return t instanceof Wp?t:Xp(t)}const Jp=["channelsFirst","channelsLast"],Zp=["valid","same","causal"],Qp=["max","avg"],td=["sum","mul","concat","ave"],ed=new Map;function nd(t){Fp(Jp,"DataFormat",t)}function rd(t){Fp(Zp,"PaddingMode",t)}function sd(t){Fp(Qp,"PoolMode",t)}const ad=[];function id(t,e){ad.push(t);try{const t=e();return ad.pop(),t}catch(t){throw ad.pop(),t}}function od(t){if(!cd(t))throw new Error("Not a valid tensor name: '"+t+"'");return(0===ad.length?"":ad.join("/")+"/")+t}function ud(t){if(!cd(t))throw new Error("Not a valid tensor name: '"+t+"'");ed.has(t)||ed.set(t,0);const e=ed.get(t);if(ed.set(t,ed.get(t)+1),e>0){const n=`${t}_${e}`;return ed.set(n,1),n}return t}const ld=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function cd(t){return!!t.match(ld)}function hd(t,e,n){null==e&&(e=0),null==n&&(n=t.length);let r=1;for(let s=e;s<n;++s)r*=t[s];return r}function pd(t){return yi(t=Array.isArray(t)?new Float32Array(t):t)}function dd(t){return Ha(pd(t)).dataSync()[0]}function fd(t){return Ra(pd(t)).dataSync()[0]}function md(t,e){if(e<t)throw new xp(`end (${e}) < begin (${t}) is forbidden.`);const n=[];for(let r=t;r<e;++r)n.push(r);return n}function gd(t,e){return t.asType(e)}function yd(t,e=-1){const n=t.shape.slice();return e<0&&(e=n.length+e+1),n.splice(e,0,1),t.reshape(n)}function bd(t,e,n){return Rr((()=>{switch(t.rank){case 1:return Ai(t,e,n);case 2:return Ri(t,[e,0],[n,t.shape[1]]);case 3:return Mi(t,[e,0,0],[n,t.shape[1],t.shape[2]]);case 4:return Di(t,[e,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3]]);case 5:return $i(t,[e,0,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3],t.shape[4]]);case 6:return $i(t,[e,0,0,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3],t.shape[4],t.shape[5]]);default:throw new xp(`sliceAlongFirstAxis() received an unsupported tensor rank: ${t.rank}`)}}))}function xd(t,e,n){return Rr((()=>{switch(t.rank){case 1:return Ai(t,e,n);case 2:return Ri(t,[0,e],[t.shape[0],n]);case 3:return Mi(t,[0,0,e],[t.shape[0],t.shape[1],n]);case 4:return Di(t,[0,0,0,e],[t.shape[0],t.shape[1],t.shape[2],n]);default:throw new xp(`sliceAlongLastAxis() received an unsupported tensor rank: ${t.rank}`)}}))}function wd(t,e,n,r){return Rr((()=>{switch(t.rank){case 1:return Ai(t,e,n);case 2:switch(r){case 1:return bd(t,e,n);case 2:return xd(t,e,n);default:throw new xp(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return bd(t,e,n);case 2:return Mi(t,[0,e,0],[t.shape[0],n,t.shape[2]]);case 3:return xd(t,e,n);default:throw new xp(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return bd(t,e,n);case 2:return Di(t,[0,e,0,0],[t.shape[0],n,t.shape[2],t.shape[3]]);case 3:return Di(t,[0,0,e,0],[t.shape[0],t.shape[1],n,t.shape[3]]);case 4:return xd(t,e,n);default:throw new xp(`The axis is not within the rank of the tensor ${r}`)}default:throw new xp(`sliceAlongLastAxis() received an unsupported tensor rank: ${t.rank}`)}}))}function vd(t,e=-1){let n;return e<0&&(n=t[0].rank,e=0!==n?n:0),e===t[0].rank&&(e=-1),$s(t,e)}function Id(t,e){switch(t.rank){case 1:return As([t,e]);case 2:return Rs([t,e],0);case 3:return Ms([t,e],0);case 4:return Ds([t,e],0);default:throw new xp(`concatAlongFirstAxis() received an unsupported tensor rank: ${t.rank}`)}}function kd(t,e){if(Array.isArray(e)||(e=[e]),t.rank!==e.length)throw new xp(`The length of input n (${e.length}) does not match the number of dimensions in input x (${t.rank})`);return ia(t,e)}function Nd(t,e=0,n=1,r,s){return mi(t,e,n,r,s)}function Sd(t,e,n,r){if(t.rank<2||e.rank<2)throw new wp(`dot requires both inputs to be rank >= 2 but got x shape = ${t.shape} and y shape = ${e.shape}`);if(e.rank>=3){if(t.shape.slice(-1)[0]!==e.shape.slice(-2)[0])throw new wp(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${t.shape} and  y shape = ${e.shape}`)}if(2===t.rank&&2===e.rank){return Fo({a:t,b:e,transposeA:!1,transposeB:!1,bias:r?Td(t.rank,r,"channelsLast"):null,activation:n})}{const s=t.shape.slice(),a=s.pop();t=t.reshape([-1,a]);const i=e.shape.slice(),o=i.pop(),u=i.pop(),l=[...i,o],c=Array.from({length:e.rank},((t,n)=>0===n?e.rank-2:n<=e.rank-2?n-1:n));e=e.transpose(c).reshape([u,-1]);const h=[...s,...l];return Fo({a:t,b:e,transposeA:!1,transposeB:!1,bias:r?Td(t.rank,r,"channelsLast"):null,activation:n}).reshape(h)}}function Cd(t,e,n){return Rr((()=>(e=Array.isArray(e)?yi(e,"int32"):e.toInt(),ha(t,e,n))))}function Ed(t){return xa(t,t)}function Td(t,e,n){const r=e.shape;if(1!==e.rank&&e.rank!==t)throw new xp(`Unexpected bias dimensions: ${e.rank}; expected it to be 1 or ${t}`);if(5===t){if("channelsFirst"===n)return 1===r.length?e.reshape([1,r[0],1,1,1]):e.reshape([1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?e.reshape([1,1,1,1,r[0]]):e.reshape([1].concat(r))}else if(4===t){if("channelsFirst"===n)return 1===r.length?e.reshape([1,r[0],1,1]):e.reshape([1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?e.reshape([1,1,1,r[0]]):e.reshape([1].concat(r))}else if(3===t){if("channelsFirst"===n)return 1===r.length?e.reshape([1,r[0],1]):e.reshape([1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?e.reshape([1,1,r[0]]):e.reshape([1].concat(r))}else if(t<3)return e;throw new xp(`Unsupported input rank by biasAdd: ${e.rank}`)}function _d(t,e,n){return Rr((()=>(null==n&&(n="channelsLast"),nd(n),t.add(Td(t.rank,e,n)))))}function $d(t,e,n,r){return Rr((()=>So(t,e,n,r)))}function Ad(t,e,n=!1){return n?t():e()}const Rd=["fanIn","fanOut","fanAvg"],Md=["normal","uniform","truncatedNormal"];class Dd extends Cr{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class Od extends Dd{apply(t,e){return Wa(t,e)}}Od.className="Zeros",Tr(Od);class Fd extends Dd{apply(t,e){return Ua(t,e)}}Fd.className="Ones",Tr(Fd);class Ld extends Dd{constructor(t){if(super(),"object"!=typeof t)throw new xp(`Expected argument of type ConstantConfig but got ${t}`);if(void 0===t.value)throw new xp(`config must have value set but got ${t}`);this.value=t.value}apply(t,e){return Rr((()=>xa(wa(this.value),Ua(t,e))))}getConfig(){return{value:this.value}}}Ld.className="Constant",Tr(Ld);class Bd extends Dd{constructor(t){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=t.minval||this.DEFAULT_MINVAL,this.maxval=t.maxval||this.DEFAULT_MAXVAL,this.seed=t.seed}apply(t,e){return gi(t,this.minval,this.maxval,e)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}Bd.className="RandomUniform",Tr(Bd);class zd extends Dd{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if("float32"!==(e=e||"float32")&&"int32"!==e)throw new wp(`randomNormal does not support dType ${e}.`);return Nd(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}zd.className="RandomNormal",Tr(zd);class Pd extends Dd{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if("float32"!==(e=e||"float32")&&"int32"!==e)throw new wp(`truncatedNormal does not support dType ${e}.`);return Qi(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Pd.className="TruncatedNormal",Tr(Pd);class Vd extends Dd{constructor(t){super(),this.gain=null!=t.gain?t.gain:1}apply(t,e){return Rr((()=>{if(2!==t.length||t[0]!==t[1])throw new xp("Identity matrix initializer can only be used for 2D square matrices.");return xa(this.gain,oa(t[0]))}))}getConfig(){return{gain:this.gain}}}Vd.className="Identity",Tr(Vd);class Wd extends Dd{constructor(t){if(super(),t.scale<0)throw new xp(`scale must be a positive float. Got: ${t.scale}`);var e;this.scale=null==t.scale?1:t.scale,this.mode=null==t.mode?"fanIn":t.mode,e=this.mode,Fp(Rd,"FanMode",e),this.distribution=null==t.distribution?"normal":t.distribution,function(t){Fp(Md,"Distribution",t)}(this.distribution),this.seed=t.seed}apply(t,e){const n=function(t,e="channelsLast"){let n,r;if(nd(e),2===t.length)n=t[0],r=t[1];else if(-1!==[3,4,5].indexOf(t.length)){if("channelsFirst"===e){const e=hd(t,2);n=t[1]*e,r=t[0]*e}else if("channelsLast"===e){const e=hd(t,0,t.length-2);n=t[t.length-2]*e,r=t[t.length-1]*e}}else{const e=hd(t);n=Math.sqrt(e),r=Math.sqrt(e)}return[n,r]}(t),r=n[0],s=n[1];let a=this.scale;if("fanIn"===this.mode?a/=Math.max(1,r):"fanOut"===this.mode?a/=Math.max(1,s):a/=Math.max(1,(r+s)/2),"normal"===this.distribution){const n=Math.sqrt(a);if("float32"!==(e=e||"float32")&&"int32"!==e)throw new wp(`${this.getClassName()} does not support dType ${e}.`);return Qi(t,0,n,e,this.seed)}{const n=Math.sqrt(3*a);return gi(t,-n,n,e)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}Wd.className="VarianceScaling",Tr(Wd);class Ud extends Wd{constructor(t){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return Wd.className}}Ud.className="GlorotUniform",Tr(Ud);class Gd extends Wd{constructor(t){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return Wd.className}}Gd.className="GlorotNormal",Tr(Gd);class Hd extends Wd{constructor(t){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return Wd.className}}Hd.className="HeNormal",Tr(Hd);class jd extends Wd{constructor(t){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return Wd.className}}jd.className="HeUniform",Tr(jd);class qd extends Wd{constructor(t){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return Wd.className}}qd.className="LeCunNormal",Tr(qd);class Kd extends Wd{constructor(t){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return Wd.className}}Kd.className="LeCunNormal",Tr(Kd);class Xd extends Dd{constructor(t){if(super(),this.DEFAULT_GAIN=1,this.gain=null==t.gain?this.DEFAULT_GAIN:t.gain,this.seed=t.seed,null!=this.seed)throw new wp("Random seed is not implemented for Orthogonal Initializer yet.")}apply(t,e){return Rr((()=>{if(t.length<2)throw new wp("Shape must be at least 2D.");t[0]*t[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${t[0]*t[1]}) elements: Slowness may result.`);const e=Nd(t[0]>t[1]?[t[1],t[0]]:t,0,1,"float32");let n=gu.gramSchmidt(e);return t[0]>t[1]&&(n=n.transpose()),xa(this.gain,n)}))}getConfig(){return{gain:this.gain,seed:this.seed}}}Xd.className="Orthogonal",Tr(Xd);const Yd={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function Jd(t,e={}){return Rp(t,Er.getMap().classNameMap,e,"initializer")}function Zd(t){return $p(t)}function Qd(t){if("string"==typeof t){const e=t in Yd?Yd[t]:t;if("GlorotNormal"===e)return new Gd;if("GlorotUniform"===e)return new Ud;if("HeNormal"===e)return new Hd;if("HeUniform"===e)return new jd;if("LeCunNormal"===e)return new qd;if("LeCunUniform"===e)return new Kd;{const t={};return t.className=e,t.config={},Jd(t)}}return t instanceof Dd?t:Jd(t)}let tf=0;function ef(){return tf++}const nf={};function rf(t=""){return t in nf||(nf[t]=0),nf[t]+=1,t+nf[t].toString()}function sf(t){return Array.isArray(t)&&Array.isArray(t[0])}function af(t){return 0===t.length?[]:Array.isArray(t[0])?t:[t]}function of(t){let e;if(Array.isArray(t)){if(1!==t.length)throw new xp(`Expected Tensor length to be 1; got ${t.length}`);e=t[0]}else e=t;return e}function uf(t){if(Array.isArray(t)&&Array.isArray(t[0])){if(1===t.length)return(t=t)[0];throw new xp(`Expected exactly 1 Shape; got ${t.length}`)}return t}function lf(t){let e=0;for(const n of t)0===n.shape.length?e+=1:e+=n.shape.reduce(((t,e)=>t*e));return e}class cf{constructor(t,e="float32",n="Variable",r=!0,s=null){this.dtype=null==e?"float32":e,this.shape=t.shape,this.id=ef(),n=null==n?"Variable":n,this.originalName=od(n),this.name=ud(this.originalName),this.trainable_=r,this.constraint=s,this.val=function(t,e=!0,n,r){return re.makeVariable(t,e,n,r)}(t,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(t){return this.assertNotDisposed(),function(t,e){if(t.shape.toString()!==e.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(t.shape)+" vs. "+JSON.stringify(e.shape))}(this.val,t),this.val.id!==t.id&&(this.val.assign(t),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(t){this.trainable_=t,this.val.trainable=t}}function hf(t){return t.map((t=>t.read()))}function pf(t){t.forEach((t=>{t[0].write(t[1])}))}class df{constructor(t){this.dtype=t.dtype,this.shape=t.shape,null!=t.shape?this.ndim=t.shape.length:this.ndim=t.ndim,this.maxNDim=t.maxNDim,this.minNDim=t.minNDim,this.axes=t.axes||{}}}class ff{constructor(t,e,n,r,s,a,i){this.dtype=t,this.shape=e,this.sourceLayer=n,this.inputs=r,this.callArgs=s,this.outputTensorIndex=i,this.id=ef(),null!=a&&(this.originalName=od(a),this.name=ud(this.originalName)),this.rank=e.length}}let mf=0;class gf{constructor(t,e){this.callArgs=e,this.id=mf++,this.outboundLayer=t.outboundLayer,this.inboundLayers=t.inboundLayers,this.nodeIndices=t.nodeIndices,this.tensorIndices=t.tensorIndices,this.inputTensors=t.inputTensors,this.outputTensors=t.outputTensors,this.inputMasks=t.inputMasks,this.outputMasks=t.outputMasks,this.inputShapes=t.inputShapes,this.outputShapes=t.outputShapes;for(const e of t.inboundLayers)null!=e&&e.outboundNodes.push(this);t.outboundLayer.inboundNodes.push(this)}getConfig(){const t=[];for(const e of this.inboundLayers)null!=e?t.push(e.name):t.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:t,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let yf=0;class bf extends Cr{constructor(t={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=yf++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let e=t.name;if(!e){const t=this.getClassName();e=Ep(t)+"_"+rf(t)}if(this.name=e,this.trainable_=null==t.trainable||t.trainable,null!=t.inputShape||null!=t.batchInputShape){let e;if(null!=t.batchInputShape)e=t.batchInputShape;else if(null!=t.inputShape){let n=null;null!=t.batchSize&&(n=t.batchSize),e=[n].concat(t.inputShape)}this.batchInputShape=e;let n=t.dtype;null==n&&(n=t.inputDType),null==n&&(n="float32"),this.dtype=n}null!=t.weights?this.initialWeights=t.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(t,e){return t.name+"_ib-"+e.toString()}getNodeAtIndex(t,e){if(0===this.inboundNodes.length)throw new bp(`The layer has never been called and thus has no defined ${e}.`);if(this.inboundNodes.length<=t)throw new xp(`Asked to get ${e} at node ${t}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[t]}getInputAt(t){return Sp(this.getNodeAtIndex(t,"input").inputTensors)}getOutputAt(t){return Sp(this.getNodeAtIndex(t,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new yp(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new yp(`Layer ${this.name} is not connected, no input to return.`);return Sp(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new yp(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new yp(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return Sp(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((t=>t()))}get updates(){return this._updates}get built(){return this._built}set built(t){this._built=t}get trainable(){return this.trainable_}set trainable(t){this._trainableWeights.forEach((e=>e.trainable=t)),this.trainable_=t}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((t=>t.trainable)):[]}set trainableWeights(t){this._trainableWeights=t}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((t=>!t.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(t){this._nonTrainableWeights=t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(t){if(t=Cp(t),null==this.inputSpec||0===this.inputSpec.length)return;const e=Cp(this.inputSpec);if(t.length!==e.length)throw new xp(`Layer ${this.name} expects ${e.length} inputs, but it received ${t.length} input tensors. Input received: ${t}`);for(let n=0;n<t.length;n++){const r=t[n],s=e[n];if(null==s)continue;const a=r.rank;if(null!=s.ndim&&a!==s.ndim)throw new xp(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${s.ndim}, found ndim=${a}`);if(null!=s.maxNDim&&a>s.maxNDim)throw new xp(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${s.maxNDim}, found ndim=${a}`);if(null!=s.minNDim&&a<s.minNDim)throw new xp(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${s.minNDim}, found ndim=${a}.`);if(null!=s.dtype&&r.dtype!==s.dtype)throw new xp(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${s.dtype}, found dtype=${r.dtype}.`);if(s.axes){const t=r.shape;for(const e in s.axes){const r=Number(e),a=s.axes[e],i=r>=0?t[r]:t[t.length+r];if(null!=a&&-1===[a,null].indexOf(i))throw new xp(`Input ${n} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${a} but got shape ${t}.`)}}if(null!=s.shape)for(let t=0;t<s.shape.length;++t){const e=s.shape[t],a=r.shape[t];if(null!=e&&null!=a&&e!==a)throw new xp(`Input ${n} is incompatible with layer ${this.name}: expected shape=${s.shape}, found shape=${r.shape}.`)}}}call(t,e){return t}invokeCallHook(t,e){null!=this._callHook&&this._callHook(t,e)}setCallHook(t){this._callHook=t}clearCallHook(){this._callHook=null}apply(t,e){e=e||{},this.assertNotDisposed();const n=Cp(t);let r=!0;for(const t of n)if(!(t instanceof ff)){r=!1;break}let s=!0;for(const t of n)if(t instanceof ff){s=!1;break}if(r===s)throw new xp("Arguments to apply() must be all SymbolicTensors or all Tensors");return id(this.name,(()=>{if(!this.built){this.assertInputCompatibility(t);const e=[];for(const n of Cp(t))e.push(n.shape);this.build(Sp(e)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&s&&(this._refCount=1)}if(this.assertInputCompatibility(t),s){let r=this.call(t,e);const s=Cp(r),a=[];for(let t of s)-1!==n.indexOf(t)&&(t=t.clone()),a.push(t);if(r=Sp(a),null!=this.activityRegularizer)throw new wp("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{const n=function(t){t=Cp(t);const e=[];for(const n of t)e.push(n.shape);return Sp(e)}(t),r=this.computeOutputShape(n);let s;const a="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(t)?n[0]:n),s=null!=r&&r.length>0&&Array.isArray(r[0])?r.map(((n,r)=>new ff(a,n,this,Cp(t),e,this.name,r))):new ff(a,r,this,Cp(t),e,this.name),this.addInboundNode(t,s,null,null,n,r,e),this._refCount++,null!=this.activityRegularizer)throw new wp("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}}))}warnOnIncompatibleInputShape(t){if(null!=this.batchInputShape)if(t.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(t)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let e=!1;this.batchInputShape.forEach(((n,r)=>{null!=n&&null!=t[r]&&t[r]!==n&&(e=!0)})),e&&console.warn(`The shape of the input tensor (${JSON.stringify(t)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new yp(`The layer ${this.name} has never been called and thus has no defined output shape.`);const t=[];for(const e of this.inboundNodes){const n=JSON.stringify(e.outputShapes);-1===t.indexOf(n)&&t.push(n)}if(1===t.length){const t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&1===t.length?t[0]:t}throw new yp(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new bp(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return lf(this.weights)}build(t){this.built=!0}getWeights(t=!1){return hf(t?this.trainableWeights:this.weights)}setWeights(t){Rr((()=>{const e=this.weights;if(e.length!==t.length)throw new xp(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${t.length}, but the layer was expecting ${e.length} weights. Provided weights: ${t}...`);if(0===e.length)return;const n=[],r=hf(e);for(let s=0;s<r.length;++s){const a=r[s],i=e[s],o=t[s];if(!d(a.shape,o.shape))throw new xp(`Layer weight shape ${a.shape} not compatible with provided weight shape ${o.shape}`);n.push([i,o])}pf(n)}))}addWeight(t,e,n,r,s,a,i){if(-1!==this._addedWeightNames.indexOf(t))throw new xp(`Duplicate weight name ${t} for layer ${this.name}`);this._addedWeightNames.push(t),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=Qd("zeros"));const o=r.apply(e,n),u=new cf(o,n,t,a,i);return o.dispose(),null!=s&&this.addLoss((()=>s.apply(u.read()))),null==a&&(a=!0),a?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(t){this.fastWeightInitDuringBuild=t}addLoss(t){null==t||Array.isArray(t)&&0===t.length||(t=Cp(t),void 0!==this._losses&&null!==this._losses&&this.losses.push(...t))}computeOutputShape(t){return t}computeMask(t,e){if(!this.supportsMasking){if(null!=e){if(!Array.isArray(e))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);e.forEach((t=>{if(null!=t)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return e}addInboundNode(t,e,n,r,s,a,i=null){const o=Cp(t);e=Cp(e),n=Cp(n),r=Cp(r),s=af(s),a=af(a);const u=[],l=[],c=[];for(const t of o)u.push(t.sourceLayer),l.push(t.nodeIndex),c.push(t.tensorIndex);new gf({outboundLayer:this,inboundLayers:u,nodeIndices:l,tensorIndices:c,inputTensors:o,outputTensors:e,inputMasks:n,outputMasks:r,inputShapes:s,outputShapes:a},i);for(let t=0;t<e.length;t++)e[t].sourceLayer=this,e[t].nodeIndex=this.inboundNodes.length-1,e[t].tensorIndex=t}getConfig(){const t={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(t.batchInputShape=this.batchInputShape),null!=this.dtype&&(t.dtype=this.dtype),t}disposeWeights(){return this.weights.forEach((t=>t.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let t=0;return 0==--this._refCount&&(t=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:t}}}function xf(t,e,n){if((null==e||null!=n&&n>0)&&(e=t.sourceLayer,n=t.nodeIndex),0===e.inboundNodes.length)return[t];{const t=e.inboundNodes[n];if(0===t.inboundLayers.length)return t.inputTensors;{const e=[];for(let n=0;n<t.inboundLayers.length;n++){const r=xf(t.inputTensors[n],t.inboundLayers[n],t.nodeIndices[n]);for(const t of r)-1===e.indexOf(t)&&e.push(t)}return e}}}class wf extends bf{constructor(t){if(super({dtype:t.dtype,name:null!=t.name?t.name:rf("input").toString()}),null==t.batchSize&&(t.batchSize=null),null==t.sparse&&(t.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=t.sparse,null!=t.inputShape&&null!=t.batchInputShape)throw new xp("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let e=t.batchInputShape;if(null==e){if(null==t.inputShape)throw new xp("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");e=[t.batchSize].concat(t.inputShape)}else if(null!=t.batchSize)throw new xp("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=t.dtype||"float32";this.batchInputShape=e,this.dtype=n,this.inputSpec=[{shape:e}];const r=new ff(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new gf({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[e],outputShapes:[e]})}apply(t,e){throw new xp(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}async function vf(t){if(null==t)return;const e=[],n=[],r=[];for(const s in t){const a=t[s];if("number"!=typeof a){const t=a;e.push(t.data()),n.push(s),r.push(t)}}if(e.length>0){const s=await Promise.all(e);for(let e=0;e<s.length;++e)t[n[e]]=s[e][0];Mr(r)}}function If(t){if(null!=t)for(const e in t){const n=t[e];"number"!=typeof n&&n.dispose()}}var kf,Nf;wf.className="InputLayer",Tr(wf),(Nf=kf||(kf={}))[Nf.SILENT=0]="SILENT",Nf[Nf.VERBOSE=1]="VERBOSE";class Sf{constructor(){this.validationData=null}setParams(t){this.params=t}async onEpochBegin(t,e){}async onEpochEnd(t,e){}async onBatchBegin(t,e){}async onBatchEnd(t,e){}async onTrainBegin(t){}async onTrainEnd(t){}setModel(t){}}class Cf{constructor(t,e=10){null==t&&(t=[]),this.callbacks=t,this.queueLength=e}append(t){this.callbacks.push(t)}setParams(t){for(const e of this.callbacks)e.setParams(t)}setModel(t){for(const e of this.callbacks)e.setModel(t)}async onEpochBegin(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onEpochBegin(t,e)}async onEpochEnd(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onEpochEnd(t,e)}async onBatchBegin(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onBatchBegin(t,e)}async onBatchEnd(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onBatchEnd(t,e)}async onTrainBegin(t){null==t&&(t={});for(const e of this.callbacks)await e.onTrainBegin(t)}async onTrainEnd(t){null==t&&(t={});for(const e of this.callbacks)await e.onTrainEnd(t)}}class Ef extends Sf{constructor(){super()}async onEpochBegin(t){this.seen=0,this.totals={}}async onBatchEnd(t,e){null==e&&(e={});const n=null==e.size?0:e.size;this.seen+=n;for(const t in e){const r=e[t];if("number"==typeof r)this.totals.hasOwnProperty(t)||(this.totals[t]=0),this.totals[t]=this.totals[t]+r*n;else{let e;t in this.totals?e=this.totals[t]:this.totals[t]=0;const s=Rr((()=>Pr(this.totals[t],xa(r,n))));this.totals[t]=s,null!=e&&e.dispose()}}}async onEpochEnd(t,e){if(null!=e)for(const t of this.params.metrics)null!=this.totals[t]&&("number"==typeof this.totals[t]?e[t]=this.totals[t]/this.seen:Rr((()=>{const n=xa(qs(1,this.seen),this.totals[t]);e[t]=n,this.totals[t].dispose(),Dr(e[t])})))}}class Tf extends Sf{async onTrainBegin(t){this.epoch=[],this.history={}}async onEpochEnd(t,e){null==e&&(e={}),this.epoch.push(t);for(const t in e)null==this.history[t]&&(this.history[t]=[]),this.history[t].push(e[t])}async syncData(){const t=[],e=[],n=[];for(const r in this.history){const s=this.history[r];for(let a=0;a<s.length;++a)if("number"!=typeof s[a]){const i=s[a];t.push(i.data()),e.push(r),n.push(a)}}const r=await Promise.all(t);for(let t=0;t<r.length;++t){this.history[e[t]][n[t]].dispose(),this.history[e[t]][n[t]]=r[t][0]}}}class _f extends Sf{constructor(t,e){if(super(),this.currentEpoch=0,this.yieldEvery=e||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=t.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");E(this.yieldEvery)&&(this.maybeWait=function(t,e){let n,r=wt();return(...s)=>{const a=wt();return a-r<e||(r=a,n=t(...s)),n}}(this.maybeWait.bind(this),this.yieldEvery)),this.trainBegin=t.onTrainBegin,this.trainEnd=t.onTrainEnd,this.epochBegin=t.onEpochBegin,this.epochEnd=t.onEpochEnd,this.batchBegin=t.onBatchBegin,this.batchEnd=t.onBatchEnd,this.yield=t.onYield}async maybeWait(t,e,n){const r=[];null!=this.yield&&(await vf(n),r.push(this.yield(t,e,n))),r.push(Tu()),await Promise.all(r)}async onEpochBegin(t,e){this.currentEpoch=t,null!=this.epochBegin&&(await vf(e),await this.epochBegin(t,e))}async onEpochEnd(t,e){const n=[];null!=this.epochEnd&&(await vf(e),n.push(this.epochEnd(t,e))),"epoch"===this.yieldEvery&&n.push(Tu()),await Promise.all(n)}async onBatchBegin(t,e){null!=this.batchBegin&&(await vf(e),await this.batchBegin(t,e))}async onBatchEnd(t,e){const n=[];null!=this.batchEnd&&(await vf(e),n.push(this.batchEnd(t,e))),"batch"===this.yieldEvery?n.push(Tu()):E(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,t,e)),await Promise.all(n)}async onTrainBegin(t){null!=this.trainBegin&&(await vf(t),await this.trainBegin(t))}async onTrainEnd(t){null!=this.trainEnd&&(await vf(t),await this.trainEnd(t))}}function $f(t,e){if(null==t&&(t={}),t instanceof Sf)return[t];if(Array.isArray(t)&&t[0]instanceof Sf)return t;return Cp(t).map((t=>new _f(t,e)))}class Af{constructor(){}static registerCallbackConstructor(t,e){u(t>=0&&Number.isInteger(t),(()=>`Verbosity level is expected to be an integer >= 0, but got ${t}`)),Af.checkForDuplicate(e),null==Af.constructors[t]&&(Af.constructors[t]=[]),Af.constructors[t].push(e)}static checkForDuplicate(t){for(const e in Af.constructors){Af.constructors[+e].forEach((e=>{if(e===t)throw new xp("Duplicate callback constructor.")}))}}static clear(){Af.constructors={}}static createCallbacks(t){const e=[];for(const n in Af.constructors){const r=+n;t>=r&&e.push(...Af.constructors[r])}return e.map((t=>new t))}}function Rf(t,e,n,r,s,a,i,o,u){const l=new Tf,c=[new Ef,...Af.createCallbacks(e)];null!=t&&c.push(...t),c.push(l);const h=new Cf(c);return h.setParams({epochs:n,initialEpoch:r,samples:s,steps:a,batchSize:i,verbose:e,doValidation:o,metrics:u}),{callbackList:h,history:l}}function Mf(t,e={},n=!1){return Rp(t,Er.getMap().classNameMap,e,"layer",n)}function Df(t,e){return Rr((()=>{"float32"!==t.dtype&&(t=t.asType("float32"));const n=Da(Ed(t),e,!0),r=ua(n.shape,gp()),s=Wi(ba(n,r));return qs(t,s)}))}function Of(t,e){return Rr((()=>Ga(Ed(Ma(e,t)),-1)))}function Ff(t,e){return Rr((()=>Ga(Lr(Ma(e,t)),-1)))}function Lf(t,e){return Rr((()=>{const n=Ma(t,e),r=Es(Lr(t),gp(),Number.MAX_VALUE),s=Lr(qs(n,r));return xa(100,Ga(s,-1))}))}function Bf(t,e,n=!1){return Rr((()=>{if(n)e=Oi(e);else{const t=Da(e,e.shape.length-1,!0);e=qs(e,t)}return e=Es(e,gp(),1-gp()),Ta(Da(xa(t.toFloat(),Ca(e)),e.shape.length-1))}))}function zf(t,e,n=!1){return Rr((()=>{const r=la(function(t){const e=[hd(t.shape)];return t.reshape(e)}(t)).toInt(),s=(e=Es(e,gp(),1-gp())).shape;return Bf(or(r,s[s.length-1]).reshape(s),e,n)}))}function Pf(t,e){return Rr((()=>{let n;return n=Es(e,gp(),1-gp()),n=Ca(qs(n,Ma(1,n))),Ga(function(t,e){if(!d(t.shape,e.shape))throw new xp(`logits and labels must have the same shape, but got shapes ${JSON.stringify(t.shape)} and ${JSON.stringify(e.shape)}`);return Rr((()=>{const n=e.relu(),r=e.abs().neg();return n.sub(e.mul(t)).add(r.exp().log1p())}))}(t,n),-1)}))}function Vf(t,e){return Rr((()=>{const n=Df(t,-1),r=Df(e,-1),s=xa(n,r);return Ta(Da(s,-1))}))}Af.constructors={};const Wf={meanSquaredError:Of,meanAbsoluteError:Ff,meanAbsolutePercentageError:Lf,meanSquaredLogarithmicError:function(t,e){return Rr((()=>{const n=Es(e,gp(),Number.MAX_VALUE),r=Ca(Pr(1,n)),s=Es(t,gp(),Number.MAX_VALUE),a=Ca(Pr(1,s));return Ga(Ed(Ma(r,a)),-1)}))},squaredHinge:function(t,e){return Rr((()=>{const n=ba(0,Ma(1,xa(t,e)));return Ga(Ed(n),-1)}))},hinge:function(t,e){return Rr((()=>{const n=ba(0,Ma(1,xa(t,e)));return Ga(n,-1)}))},categoricalHinge:function(t,e){return Rr((()=>{const n=Da(xa(t,e),-1),r=Ra(xa(Ma(1,t),e),-1);return ba(0,Pr(1,Ma(r,n)))}))},logcosh:function(t,e){return Rr((()=>{const n=Math.log(2),r=Ma(e,t),s=Ma(Pr(r,$a(xa(-2,r))),n);return Ga(s,-1)}))},categoricalCrossentropy:Bf,sparseCategoricalCrossentropy:zf,binaryCrossentropy:Pf,kullbackLeiblerDivergence:function(t,e){return Rr((()=>{const n=Es(t,gp(),1),r=Es(e,gp(),1);return Da(xa(t,Ca(qs(n,r))),-1)}))},poisson:function(t,e){return Rr((()=>{const n=Ca(Pr(gp(),e));return Ga(Ma(e,xa(t,n)),-1)}))},cosineProximity:Vf};function Uf(t){if("string"==typeof t){if(t in Wf)return Wf[t];let e=`Unknown loss ${t}`;throw t.toLowerCase().includes("softmaxcrossentropy")&&(e=`Unknown loss ${t}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new xp(e)}return t}function Gf(t,e){return Rr((()=>{const n=xa(.5,ti(e)),r=gd(pa(e,n),t.dtype);return Ga(Js(t,r),-1)}))}function Hf(t,e){return Rr((()=>gd(Js(Jr(t,-1),Jr(e,-1)),"float32")))}function jf(t,e){return Pf(t,e)}function qf(t,e){return t.rank===e.rank&&(t=t.squeeze([t.rank-1])),(e=e.argMax(-1)).dtype!==t.dtype&&(e=e.asType(t.dtype)),Js(t,e).asType("float32")}const Kf=Bf,Xf=zf,Yf={binaryAccuracy:Gf,categoricalAccuracy:Hf,precision:function(t,e){return Rr((()=>{const n=function(t,e){return Rr((()=>Fa(t.equal(1),e.equal(1)).sum().cast("float32")))}(t,e),r=function(t,e){return Rr((()=>Fa(t.equal(0),e.equal(1)).sum().cast("float32")))}(t,e),s=n.add(r);return Zs(pa(s,0),n.div(s),0).cast("float32")}))},categoricalCrossentropy:Kf,sparseCategoricalCrossentropy:Xf,mse:Of,MSE:Of,mae:Ff,MAE:Ff,mape:Lf,MAPE:Lf,cosine:Vf};function Jf(t){if("string"==typeof t&&t in Yf)return Yf[t];if("string"!=typeof t&&null!=t)return t;throw new xp(`Unknown metric ${t}`)}function Zf(t){if(kp(null!==t,`Unknown LossOrMetricFn ${t}`),"string"==typeof t)return t;{let e;for(const n of Object.keys(Wf))if(Wf[n]===t){e=n;break}if(void 0!==e)return e;for(const n of Object.keys(Yf))if(Yf[n]===t){e=n;break}return void 0!==e?e:t.name}}function Qf(t,e,n=!1){if(null==t||"object"!=typeof t||Object.getPrototypeOf(t)!==Object.prototype||!tm(t))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(t);n.length>1048576&&console.warn(`User-defined metadata of model "${e}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function tm(t){if(null===t)return!0;if("object"==typeof t){if(Object.getPrototypeOf(t)===Object.prototype){const e=Object.keys(t);for(const n of e){if("string"!=typeof n)return!1;if(!tm(t[n]))return!1}return!0}if(Array.isArray(t)){for(const e of t)if(!tm(e))return!1;return!0}return!1}{const e=typeof t;return"string"===e||"number"===e||"boolean"===e}}function em(t,e,n,r=console.log){const s=function(t){let e=!0;const n=[],r=[];for(const e in t.nodesByDepth)n.push(t.nodesByDepth[e]);for(const t of n){if(t.length>1||1===t.length&&t[0].inboundLayers.length>1){e=!1;break}r.push(...t)}if(e)for(const n of t.layers){let t=!1;for(const s of n.inboundNodes)if(-1!==r.indexOf(s)){if(t){e=!1;break}t=!0}if(!e)break}return e}(t),a=["Layer (type)","Output shape","Param #"];let i;if(s?(e=e||65,n=n||[.45,.85,1]):(e=e||98,n=n||[.33,.55,.67,1]),n[n.length-1]<=1&&(n=n.map((t=>Math.floor(e*t)))),!s){a.push("Receives inputs"),i=[];for(const e in t.nodesByDepth)i.push(...t.nodesByDepth[e])}r("_".repeat(e)),nm(a,n,r),r("=".repeat(e));const o=t.layers;for(let t=0;t<o.length;++t)s?rm(o[t],n,r):sm(o[t],n,i,r),r((t===o.length-1?"=":"_").repeat(e));t.checkTrainableWeightsConsistency();const u=function(t){let e;e=null!=t.collectedTrainableWeights?lf(t.collectedTrainableWeights):lf(t.trainableWeights);return e}(t),l=lf(t.nonTrainableWeights);r(`Total params: ${u+l}`),r(`Trainable params: ${u}`),r(`Non-trainable params: ${l}`),r("_".repeat(e))}function nm(t,e,n=console.log){let r="";for(let n=0;n<t.length;++n)n>0&&(r=r.slice(0,r.length-1)+" "),r+=t[n],r=r.slice(0,e[n]),r+=" ".repeat(e[n]-r.length);n(r)}function rm(t,e,n){let r;try{r=JSON.stringify(t.outputShape)}catch(t){r="multiple"}nm([`${t.name} (${t.getClassName()})`,r,t.countParams().toString()],e,n)}function sm(t,e,n,r){let s;try{s=JSON.stringify(t.outputShape)}catch(t){s="multiple"}const a=[];for(const e of t.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(e)))for(let t=0;t<e.inboundLayers.length;++t){const n=e.inboundLayers[t].name,r=e.nodeIndices[t],s=e.tensorIndices[t];a.push(`${n}[${r}][${s}]`)}const i=t.name,o=t.getClassName(),u=0===a.length?"":a[0];nm([`${i} (${o})`,s,t.countParams().toString(),u],e,r);for(let t=1;t<a.length;++t)nm(["","","",a[t]],e,r)}function am(t,e,n){return("inboundNodes"===t||"outputLayers"===t||"inputLayers"===t)&&0===e&&"string"==typeof n}function im(t,e){if(null===t)return null;if("string"==typeof t)return Tp(t);if("number"==typeof t||"boolean"==typeof t)return t;if(t instanceof Array){const n=[],r=t.length;for(let s=0;s<r;++s){const r=t[s];am(e,s,r)?n.push(r):n.push(im(r,e))}return n}{const e={};for(const n of Object.keys(t)){const r=t[n];if("name"===n&&"string"==typeof r)e[n]=r;else{const t=Tp(n);e[t]=im(r,t)}}return e}}function om(t,e){if(null==t)return null;if("string"==typeof t)return Ep(t);if("number"==typeof t||"boolean"==typeof t)return t;if(t instanceof Array){const n=[],r=t.length;for(let s=0;s<r;++s){const r=t[s];am(e,s,r)?n.push(r):n.push(om(r,e))}return n}{const e={};for(const n of Object.keys(t)){const r=t[n],s=Ep(n);e[s]="name"!==n&&"className"!==n||"string"!=typeof r?om(r,n):r}return e}}class um{constructor(t){if(this.id2Value={},this.id2Mask={},this.name2Id={},t instanceof um)for(const e in t.id2Value)this.id2Value[e]=t.id2Value[e],e in t.id2Mask&&(this.id2Mask[e]=t.id2Mask[e]);else{if(null==t)return;for(const e of t)this.add(e.key,e.value)}}add(t,e,n){if(null!=this.id2Value[t.id])throw new xp(`Duplicate key: name=${t.name}, id=${t.id}`);return this.id2Value[t.id]=function(t,e){if(null==t.dtype||t.dtype===e.dtype)return e;try{return Xn(e,t.dtype)}catch(n){throw new xp(`The dtype of the feed (${e.dtype}) can not be cast to the dtype of the key '${t.name}' (${t.dtype}).`)}}(t,e),this.name2Id[t.name]=t.id,null!=n&&(this.id2Mask[t.id]=n),this}addFeed(t){this.add(t.key,t.value)}hasKey(t){return null!=this.id2Value[t.id]}names(){return Object.keys(this.name2Id)}getValue(t){if(t instanceof ff){if(null==this.id2Value[t.id])throw new xp(`Nonexistent key: ${t.name}`);return this.id2Value[t.id]}{const e=this.name2Id[t];if(null==e)throw new xp(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Value[e]}}getMask(t){if(t instanceof ff){if(null==this.id2Value[t.id])throw new xp(`Nonexistent key: ${t.name}`);return this.id2Mask[t.id]}{const e=this.name2Id[t];if(null==e)throw new xp(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Mask[e]}}disposeMasks(){null!=this.id2Mask&&Mr(this.id2Mask)}}const lm={},cm={};function hm(t,e,n,r){const s=null!=n&&n.training,a=Array.isArray(t),i=a?t:[t],o=i.map((t=>t.name)),l=[],c=e.names();for(const t of o)-1!==c.indexOf(t)?l.push(e.getValue(t)):l.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);const h=o.join(",")+"|"+e.names().join(",");let p,d;if(null==lm[h]){const t=function(t,e){u(null!=t&&t.length>0,(()=>"Expected at least one fetch, got none"));let n=[],r={};if(1===t.length){const s=dm(t[0],e);n=s.sorted,r=s.recipientMap}else{const s=new Set;for(const a of t){const{sorted:t,recipientMap:i}=dm(a,e);for(const e of t)s.has(e.name)||(n.push(e),s.add(e.name));for(const t in i)null==r[t]&&(r[t]=new Set),i[t].forEach((e=>r[t].add(e)))}}return{sorted:n,recipientCounts:pm(r)}}(i,e);p=t.sorted,d=t.recipientCounts,lm[h]=p,cm[h]=d}p=lm[h],d={},s||Object.assign(d,cm[h]);const f=new um(e);for(let t=0;t<p.length;++t){if(null!=r){const t=Ar().numTensors;t>r.maxNumTensors&&(r.maxNumTensors=t),t<r.minNumTensors&&(r.minNumTensors=t)}const a=p[t],i=a.sourceLayer;if(i instanceof wf)continue;const u=[],c=[],h=[];let m=!1;for(const t of a.inputs){const n=f.getValue(t),r=f.getMask(t);u.push(n),c.push(r),null!=r&&(m=!0),s||(d[t.name]--,0!==d[t.name]||e.hasKey(t)||-1!==o.indexOf(t.name)||n.isDisposed||!0===t.sourceLayer.stateful||h.push(n))}m&&((n=n||{}).mask=c[0]);const g=Cp(i.apply(u,n));let y=null;i.supportsMasking&&(y=i.computeMask(u,c));const b=fm(a),x=Array.isArray(b)?b:[b];for(let t=0;t<x.length;++t){f.hasKey(x[t])||f.add(x[t],g[t],Array.isArray(y)?y[0]:y);const e=o.indexOf(x[t].name);-1!==e&&(l[e]=g[t])}s||Mr(h)}return f.disposeMasks(),a?l:l[0]}function pm(t){const e={};for(const n in t)e[n]=t[n].size;return e}function dm(t,e){const n=new Set,r=[],s={};for(const t of e.names())n.add(t);const a=[],i=[];for(a.push(t);a.length>0;){const t=a[a.length-1];if(n.has(t.name)){a.pop();continue}const e=i[i.length-1]===a.length-1;if(0===t.inputs.length||e)a.pop(),r.push(t),n.add(t.name),e&&i.pop();else{i.push(a.length-1);for(const e of t.inputs)null==s[e.name]&&(s[e.name]=new Set),s[e.name].add(t.name),n.has(e.name)||a.push(e)}}return{sorted:r,recipientMap:s}}function fm(t){let e;if(1===t.sourceLayer.inboundNodes.length)e=t.sourceLayer.output;else{let n=null;for(let e=0;e<t.sourceLayer.inboundNodes.length;++e)for(const r of t.sourceLayer.inboundNodes[e].outputTensors)if(r.id===t.id){n=e;break}e=t.sourceLayer.getOutputAt(n)}return e}class mm extends bf{constructor(t){if(super({}),this.containerNodes=new Set,this.name=t.name,null==this.name){const t=this.getClassName().toLowerCase();this.name=rf(t)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(t.inputs)?this.inputs=t.inputs.slice():this.inputs=[t.inputs],Array.isArray(t.outputs)?this.outputs=t.outputs.slice():this.outputs=[t.outputs],Dp(this.inputs).length!==this.inputs.length)throw new xp(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((t=>t.name))}`);Dp(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((t=>t.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const t of this.outputs){const e=t.sourceLayer,n=t.nodeIndex,r=t.tensorIndex;this.outputLayers.push(e),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(r)}for(const t of this.inputs){const e=t.sourceLayer,n=t.nodeIndex,r=t.tensorIndex;kp(0===n,"input layer has >1 nodes"),kp(0===r,"input layer has >1 tensors"),this.inputLayers.push(e),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(r)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let e=0;e<this.inputLayers.length;e++){const n=this.inputLayers[e];if(!(n instanceof wf))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${t.inputs}. Input ${e} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(const t of this.outputLayers)this.outputNames.push(t.name);this.internalInputShapes=this.inputs.map((t=>t.shape)),this.internalOutputShapes=this.outputs.map((t=>t.shape));const e={},n={},r={},s={},a={},i=[],o=(t,e,n,r,s,u)=>{null!=r&&null!=s&&null!=u||(r=t.sourceLayer,s=t.nodeIndex,u=t.tensorIndex);const l=r.inboundNodes[s];if(-1!==n.indexOf(l))throw new bp(`The tensor ${t.name} at layer "${r.name}" is part of a cycle.`);if(-1!==e.indexOf(l))return;this.containerNodes.add(mm.nodeKey(r,s)),r.id in a||(a[r.id]=Object.keys(a).length),-1===n.indexOf(l)&&n.push(l);const c=l.inboundLayers.length;for(let t=0;t<c;t++){const r=l.inputTensors[t],s=l.inboundLayers[t],a=l.nodeIndices[t],i=l.tensorIndices[t];o(r,e,n,s,a,i)}for(e.push(l);n.indexOf(l)>=0;)n.splice(n.indexOf(l),1);i.push(l)},u=[],l=[];for(const t of this.outputs)o(t,u,l);const c=i.slice().reverse();for(const t of c){n[t.id]=t,t.id in e||(e[t.id]=0);let a=e[t.id];const i=null==r[t.outboundLayer.id]?0:r[t.outboundLayer.id];a=Math.max(a,i),r[t.outboundLayer.id]=a,s[t.outboundLayer.id]=t.outboundLayer,e[t.id]=a;for(let r=0;r<t.inboundLayers.length;r++){const s=t.inboundLayers[r],i=t.nodeIndices[r],o=s.inboundNodes[i],u=null==e[o.id]?0:e[o.id];e[o.id]=Math.max(a+1,u),n[o.id]=o}}const h={};for(const t in e){const r=e[t];r in h||(h[r]=[]),h[r].push(n[t])}const p={};for(const t in r){const e=r[t];e in p||(p[e]=[]),p[e].push(s[t])}let d=Object.keys(p).map((t=>parseInt(t,10))).sort(Mp);this.layers=[];for(const t of d){const e=p[t];e.sort(((t,e)=>{const n=a[t.id],r=a[e.id];return n<r?-1:n>r?1:0}));for(const t of e)t instanceof mm&&this.internalContainerRefs.push(t),this.layers.push(t)}this.layersByDepth=p,d=Object.keys(h).map((t=>parseInt(t,10))).sort(Mp);const f=this.inputs.slice(),m=[];for(const t of d)for(const e of h[t]){const t=e.outboundLayer;if(null!=t){for(const n of e.inputTensors)if(-1===f.indexOf(n))throw new bp(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${t.name}". The following previous layers were accessed without issue: ${m}`);for(const t of e.outputTensors)f.push(t);m.push(t.name)}}this.nodesByDepth=h;const g=this.layers.map((t=>t.name));for(const t of g){const e=g.filter((e=>e===t)).length;if(1!==e)throw new bp(`The name "${t}" is used ${e} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new gf({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((t=>null)),outputMasks:this.outputs.map((t=>null)),inputShapes:this.inputs.map((t=>t.shape)),outputShapes:this.outputs.map((t=>t.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const t={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const e of this.layers)t.numDisposedVariables+=e.dispose().numDisposedVariables;for(const e of this.internalContainerRefs)t.numDisposedVariables+=e.dispose().numDisposedVariables}return t.refCountAfterDispose=this._refCount,t}get trainable(){return this.trainable_}set trainable(t){this.layers.forEach((e=>{e._trainableWeights.forEach((e=>e.trainable=t))})),this.trainable_=t}get trainableWeights(){if(this._trainableWeights.length>0)throw new xp("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let t=[];for(const e of this.layers)t=t.concat(e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.layers)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const t of this.layers)e.push(...t.trainableWeights);return e.concat(t)}return t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(t,e=!0){const n={};let r=0;for(const t of this.layers)for(const e of t.weights){if(null!=n[e.originalName])throw new xp(`Duplicate weight name: ${e.originalName}`);n[e.originalName]=e,r++}const s=[];for(const r in t){let a=r;if(null==n[r]){const t=r.split("/");a=t.slice(0,-2).concat([t[t.length-1]]).join("/")}if(null!=n[a])s.push([n[a],t[r]]);else if(e)throw new xp(`Provided weight data has no target variable: ${r}`);delete n[a]}if(e){const t=[];for(const e in n)t.push(e);if(t.length>0)throw new xp(`${t.length} of ${r} weights are not set: ${t}`)}pf(s)}updatedConfig(){const t=this.getConfig(),e={};return e.className=this.getClassName(),e.config=t,e.kerasVersion="tfjs-layers 2.7.0",e.backend="TensorFlow.js",e}toJSON(t,e=!0){const n=om(this.updatedConfig());return e?JSON.stringify(n):n}call(t,e){return Rr((()=>{t=Cp(t);const n=new um;for(let e=0;e<this.inputs.length;++e)n.add(this.inputs[e],t[e]);return hm(this.outputs,n,e)}))}computeMask(t,e){return Rr((()=>{let n;return t=Cp(t),n=null==e?Ip(null,t.length):Cp(e),this.runInternalGraph(t,n)[1]}))}computeOutputShape(t){const e=af(t);if(e.length!==this.inputLayers.length)throw new xp(`Invalid inputShape argument ${t}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let t=0;t<e.length;t++){const r=this.inputLayers[t],s=e[t];n[r.name+"_0_0"]=s}const r=Object.keys(this.nodesByDepth).map((t=>parseInt(t,10))).sort(Mp);if(r.length>1)for(const t of r){const e=this.nodesByDepth[t];for(const t of e){const e=t.outboundLayer;if(-1!==this.inputLayers.map((t=>t.id)).indexOf(e.id))continue;const r=[];for(let e=0;e<t.inboundLayers.length;e++){const s=t.inboundLayers[e],a=t.nodeIndices[e],i=t.tensorIndices[e],o=n[`${s.name}_${a}_${i}`];r.push(o)}const s=af(e.computeOutputShape(Sp(r))),a=e.inboundNodes.indexOf(t);for(let t=0;t<s.length;t++){n[`${e.name}_${a}_${t}`]=s[t]}}}const s=[],a=[];for(let t=0;t<this.outputLayers.length;t++){const e=this.outputLayers[t],n=this.outputLayersNodeIndices[t],r=this.outputLayersTensorIndices[t],s=`${e.name}_${n}_${r}`;a.push(s)}for(let t=0;t<a.length;t++){const e=a[t];kp(e in n),s.push(n[e])}return Sp(s)}runInternalGraph(t,e){null==e&&(e=Ip(null,t.length));const n={};for(let r=0;r<this.inputs.length;++r){const s=this.inputs[r],a=t[r],i=e[r];n[s.id]=[a,i]}const r=Object.keys(this.nodesByDepth).map((t=>parseInt(t,10))).sort(Mp);for(const t of r){const e=this.nodesByDepth[t];for(const t of e){const e=t.outboundLayer,r=t.inputTensors,s=t.outputTensors,a=new Array;for(const t of r)t.id in n&&a.push(n[t.id]);if(a.length===r.length){let r,i,o,u,l={};if(null!=t.callArgs&&(l=t.callArgs),1===a.length){const[t,n]=a[0];null==l.mask&&(l.mask=n),o=Cp(e.call(t,l)),u=Cp(e.computeMask(t,n)),r=[t],i=[n]}else r=a.map((t=>t[0])),i=a.map((t=>t[1])),null==l.mask&&(l.mask=i),o=Cp(e.call(r,l)),u=Cp(e.computeMask(r,i));if(e.activityRegularizer)throw new wp("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let t=0;t<s.length;++t){const e=s[t],r=o[t],a=u[t];n[e.id]=[r,a]}}}}const s=[],a=[],i=[];for(const t of this.outputs){kp(t.id in n,`Could not compute output ${t.name} : ${t.id}`);const[e,r]=n[t.id];i.push(e.shape),s.push(e),a.push(r)}return[s,a,i]}buildNodeConversionMap(t){const e={};let n;for(const t of this.layers){n=t instanceof mm?1:0;for(let r=0;r<t.inboundNodes.length;r++){const s=mm.nodeKey(t,r);this.containerNodes.has(s)&&(e[s]=n,n+=1)}}return e}getLayer(t,e){if(null!=e){if(this.layers.length<=e)throw new xp(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}if(null==t)throw new xp("Provide either a layer name or layer index");for(const e of this.layers)if(e.name===t)return e;throw new xp(`No such layer: ${t}`)}calculateLosses(){return Rr((()=>{const t=[];for(const e of this.layers)for(let n=0;n<e.inboundNodes.length;++n){const r=mm.nodeKey(e,n);this.containerNodes.has(r)&&t.push(...e.calculateLosses())}return t}))}getConfig(){const t={name:this.name},e=this.buildNodeConversionMap(this.layers),n=[];for(const t of this.layers){const r=t.getClassName(),s=t.getConfig(),a=[];for(let n=0;n<t.inboundNodes.length;n++){const r=t.inboundNodes[n],s=mm.nodeKey(t,n);let i={};if(this.containerNodes.has(s)){if(r.callArgs)try{JSON.stringify(r.callArgs),i=r.callArgs}catch(e){console.warn(`Layer ${t.name} was passed non-serializable keyword arguments: ${r.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),i={}}if(r.inboundLayers.length>0){const t=[];for(let n=0;n<r.inboundLayers.length;n++){const s=r.inboundLayers[n],a=r.nodeIndices[n],o=r.tensorIndices[n];let u=e[mm.nodeKey(s,a)];null==u&&(u=0),t.push([s.name,u,o,i])}a.push(t)}}}const i={};i.name=t.name,i.className=r,i.config=s,i.inboundNodes=a,n.push(i)}t.layers=n;const r=[];for(let t=0;t<this.inputLayers.length;t++){const n=this.inputLayers[t],s=this.inputLayersNodeIndices[t],a=mm.nodeKey(n,s);if(!this.containerNodes.has(a))continue;let i=e[a];null==i&&(i=0);const o=this.inputLayersTensorIndices[t];r.push([n.name,i,o])}t.inputLayers=r;const s=[];for(let t=0;t<this.outputLayers.length;t++){const n=this.outputLayers[t],r=this.outputLayersNodeIndices[t],a=mm.nodeKey(n,r);if(!this.containerNodes.has(a))continue;let i=e[a];null==i&&(i=0);const o=this.outputLayersTensorIndices[t];s.push([n.name,i,o])}return t.outputLayers=s,t}static fromConfig(t,e,n={},r=!1){const s={},a={};function i(t,e){t.name in a?a[t.name].push(e):a[t.name]=[e]}function o(t,e){const n=[];let r;for(const a of e){const o=a[0],u=a[1],l=a[2];if(r=null==a[3]?{}:a[3],!(o in s))return void i(t,e);const c=s[o];if(c.inboundNodes.length<=u)return void i(t,e);const h=c.inboundNodes[u];n.push(h.outputTensors[l])}n.length>0&&t.apply(Sp(n),r)}function u(t){const n=t.name,a=Mf(t,null!=e.customObjects?e.customObjects:{});a.setFastWeightInitDuringBuild(r),s[n]=a;t.inboundNodes.forEach((t=>{if(!(t instanceof Array))throw new xp(`Corrupted configuration, expected array for nodeData: ${t}`);i(a,t)}))}const l=e.name,c=e.layers;for(const t of c)u(t);for(;!Op(a);)for(const t of c){const e=s[t.name];if(e.name in a){const t=a[e.name];delete a[e.name];for(const n of t)o(e,n)}}const h=[],p=[],d=e.inputLayers;for(const t of d){const e=t[0],n=t[1],r=t[2];kp(e in s);const a=s[e].inboundNodes[n].outputTensors;h.push(a[r])}const f=e.outputLayers;for(const t of f){const e=t[0],n=t[1],r=t[2];kp(e in s);const a=s[e].inboundNodes[n].outputTensors;p.push(a[r])}return new t({inputs:h,outputs:p,name:l})}get stateful(){if(this._stateful)throw new xp("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const t of this.layers)if(t.stateful)return!0;return!1}resetStates(){Rr((()=>{this.layers.forEach((t=>{t.stateful&&t.resetStates()}))}))}}function gm(t,e){return function(t,e,n){const r=e.length;if(null==t||Array.isArray(t)&&0===t.length)return e.map((t=>null));if(1===r)return Array.isArray(t)&&1===t.length?t:"object"==typeof t&&e[0]in t?[t[e[0]]]:[t];if(Array.isArray(t)){if(t.length!==r)throw new Error(`Provided ${n} is an array of ${t.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return t}if("object"==typeof t&&Object.keys(t).length>0&&"object"==typeof t[Object.keys(t)[0]]){const n=[];return e.forEach((e=>{e in t?n.push(t[e]):n.push(null)})),n}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${e} keys. Provided ${n} not understood: ${JSON.stringify(t)}`)}(t,e,"classWeight")}async function ym(t,e,n,r){if(null!=e||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const e=Rr((()=>{if(1===t.shape.length)return t.clone();if(2===t.shape.length){if(t.shape[1]>1){const e=1;return t.argMax(e)}if(1===t.shape[1])return t.reshape([t.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${t.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${t.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),r=Array.from(await e.data());Mr(e);const s=[];return r.forEach((t=>{if(null==n[t])throw new Error(`classWeight must contain all classes in the training data. The class ${t} exists in the data but not in classWeight`);s.push(n[t])})),yi(s,"float32")}return null}function bm(t,e){return xa(t,e)}function xm(t,e){let n,r;const s=e;n=s.xs,r=s.ys,u(null!=n&&null!=r,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${e}`));const a=wm("input",t.inputNames,n),i=wm("output",t.outputNames,r),o=a[0].shape[0];u(a.length===t.inputs.length,(()=>`LayersModel has ${t.inputs.length} inputs, but the dataset provides ${a.length} inputs.  (Expected input keys: ${JSON.stringify(t.inputNames)})`)),u(i.length===t.outputs.length,(()=>`LayersModel has ${t.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(t.outputNames)})`));for(let e=0;e<a.length;e++)u(a[e].shape[0]===o,(()=>`Batch size mismatch: input ${t.inputNames[e]} has ${a[e].shape[0]}; expected  ${o} based on input ${t.inputNames[0]}.`));for(let e=0;e<i.length;e++)u(i[e].shape[0]===o,(()=>`Batch size mismatch: output ${t.outputNames[e]} has ${i[e].shape[0]}; expected  ${o} based on input ${t.inputNames[0]}.`));return{xs:a,ys:i}}function wm(t,e,n){if(n instanceof Ot)return[n];if(Array.isArray(n))return u(n.length===e.length,(()=>`Received an array of ${n.length} Tensors, but expected ${e.length} to match the ${t} keys ${e}.`)),n;{const r=[];for(const s of e){if(null==n[s])throw new xp(`The feature data generated by the dataset lacks the required ${t} key '${s}'.`);r.push(n[s])}return r}}async function vm(t,e,n){const r=null!=n.batchesPerEpoch;if(u(null!=t.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),u(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),u(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),u(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),u(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),t.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");t.isTraining=!0;try{const s=null!=n.validationData;let a,i;if(s)if(Im(n.validationData))u(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{const t=function(t){if(3===t.length)throw new wp("Validation with sample weights is not implemented yet.");return{xs:t[0],ys:t[1]}}(n.validationData);a=t.xs,i=t.ys}const o=t.makeTrainFunction(),l=t.getDedupedMetricsNames();let c;c=s?l.slice().concat(l.map((t=>"val_"+t))):l.slice();const h=$f(n.callbacks,n.yieldEvery),p=null==n.verbose?1:n.verbose,{callbackList:d,history:f}=Rf(h,p,n.epochs,null,null,function(t,e){let n=null;null!=e.batchesPerEpoch?n=e.batchesPerEpoch:Number.isFinite(t.size)&&(n=t.size);return n}(e,n),null,s,c);d.setModel(t),t.history=f,await d.onTrainBegin(),t.stopTraining_=!1;let m=null==n.initialEpoch?0:n.initialEpoch,g=await e.iterator();for(;m<n.epochs;){const u={};await d.onEpochBegin(m);let c=0,h=0;for(r||(g=await e.iterator());!r||c<n.batchesPerEpoch;){const e=await g.next();if(r&&e.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${c} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=e.value){const{xs:r,ys:s}=xm(t,e.value),a={};a.batch=h,a.size=r[0].shape[0],await d.onBatchBegin(h,a);const i=[];if(null!=n.classWeight){const e=gm(n.classWeight,t.outputNames);for(let t=0;t<e.length;++t)i.push(await ym(s[t],null,e[t]))}const u=r.concat(s).concat(i),p=o(u);Mr(u);for(let t=0;t<l.length;++t){const e=l[t],n=p[t];a[e]=n,Dr(n)}await d.onBatchEnd(h,a),If(a),h++,c++}if(r?c>=n.batchesPerEpoch:e.done){if(s){let e;e=Im(n.validationData)?Cp(await t.evaluateDataset(n.validationData,{batches:n.validationBatches})):Cp(t.evaluate(a,i,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<t.metricsNames.length;++n)u[`val_${t.metricsNames[n]}`]=e[n]}break}if(t.stopTraining_)break}if(await d.onEpochEnd(m,u),m++,t.stopTraining_)break}return await d.onTrainEnd(),await t.history.syncData(),t.history}finally{t.isTraining=!1}}function Im(t){return"function"==typeof t.iterator}function km(t){u(t>0&&Number.isInteger(t),(()=>`batchSize is required to be a positive integer, but got ${t}`))}function Nm(t,e,n){return null==t?[null]:Array.isArray(t)?t.map((t=>bd(t,e,n-e))):bd(t,e,n-e)}function Sm(t,e){return Rr((()=>null==t?null:Array.isArray(t)?t.map((t=>Sm(t,e))):Cd(t,"int32"===e.dtype?e:e.toInt())))}function Cm(t,e){const n=[];let r=0,s=null;for(;r<t;)s=r+e,s>=t&&(s=t),n.push([r,s]),r=s;return n}async function Em(t,e,n,r={}){if(t.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let s,i,o,u,l,c,h;t.isTraining=!0;try{const p=null==r.batchSize?32:r.batchSize;km(p);const d=!1,f=await t.standardizeUserData(e,n,r.sampleWeight,r.classWeight,d,p);s=f[0],i=f[1],h=f[2];let m,g=!1;if(null!=r.validationData&&r.validationData.length>0){if(g=!0,2!==r.validationData.length)throw 3===r.validationData.length?new wp("validationData including sample weights is not supported yet."):new xp(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${r.validationData} is invalid.`);o=r.validationData[0],u=r.validationData[1];const e=!0,n=await t.standardizeUserData(o,u,null,null,e,p);l=n[0],c=n[1],m=l.concat(c)}else if(null!=r.validationSplit&&r.validationSplit>0&&r.validationSplit<1){g=!0;const t=Math.floor(s[0].shape[0]*(1-r.validationSplit)),e=s[0].shape[0];l=Nm(s,t,e),s=Nm(s,0,t),c=Nm(i,t,e),i=Nm(i,0,t),m=l.concat(c)}else null!=r.validationSteps&&(g=!0);const y=s.concat(i).concat(h);t.checkTrainableWeightsConsistency();const b=t.makeTrainFunction(),x=t.getDedupedMetricsNames();let w,v;g?(t.makeTestFunction(),w=t.testFunction,v=x.slice().concat(x.map((t=>"val_"+t)))):(w=null,m=[],v=x.slice());const I=$f(r.callbacks,r.yieldEvery);return await async function(t,e,n,r,s,i,o,u,l,c,h,p,d,f,m){null==s&&(s=32),null==i&&(i=1),null==h&&(h=!0),null==d&&(d=0);let g=!1;if(null!=l&&null!=c&&(g=!0),null!=m&&(g=!0,null==f))throw new xp("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const y=t.checkNumSamples(n,s,f,"steps_per_epoch");let b;null!=y&&(b=md(0,y)),null==o&&(o=1);const{callbackList:x,history:w}=Rf(u,o,i,d,y,f,s,g,p);x.setModel(t),t.history=w,await x.onTrainBegin(),t.stopTraining_=!1;for(let o=d;o<i;++o){await x.onEpochBegin(o);const i={};if(null!=f)throw new wp("stepsPerEpoch mode is not implemented yet.");{if("batch"===h)throw new wp("batch shuffling is not implemneted yet");h&&a(b);const o=yi(b),u=Cm(y,s);for(let a=0;a<u.length;++a){const h={};if(await x.onBatchBegin(a,h),Rr((()=>{const p=u[a][0],d=u[a][1],f=bd(o,p,d-p);h.batch=a,h.size=d-p;const m=Sm(n,f),y=e(m);for(let t=0;t<r.length;++t){const e=r[t],n=y[t];h[e]=n,Dr(n)}if(a===u.length-1&&g){const e=t.testLoop(l,c,s);for(let t=0;t<r.length;++t){const n=r[t],s=e[t];Dr(s),i["val_"+n]=s}}})),await x.onBatchEnd(a,h),If(h),t.stopTraining_)break}o.dispose()}if(await x.onEpochEnd(o,i),t.stopTraining_)break}return await x.onTrainEnd(),await t.history.syncData(),t.history}(t,b,y,x,p,r.epochs,r.verbose,I,w,m,r.shuffle,v,r.initialEpoch,null,null)}finally{t.isTraining=!1,_m(s,e),_m(i,n),_m(l,o),_m(c,u),null!=h&&Mr(h)}}function Tm(t){const e=[];t instanceof Ot&&(t=[t]);for(let n=0;n<t.length;++n){const r=t[n];if(1===r.rank)e.push(yd(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");e.push(r)}}return e}function _m(t,e){if(null==t)return;const n=[];if(e instanceof Ot)n.push(e.id);else if(Array.isArray(e))e.forEach((t=>n.push(t.id)));else if(null!=e)for(const t in e){const r=e[t];n.push(r.id)}const r=[];if(t instanceof Ot)-1===n.indexOf(t.id)&&r.push(t);else if(Array.isArray(t))t.forEach((t=>{-1===n.indexOf(t.id)&&r.push(t)}));else if(null!=t)for(const e in t){const s=t[e];-1===n.indexOf(s.id)&&r.push(s)}r.forEach((t=>{t.isDisposed||t.dispose()}))}function $m(t){return Array.isArray(t)}function Am(t){return!function(t){return t instanceof Ot}(t)&&!$m(t)}function Rm(t,e,n,r=!0,s=""){if(null==e||0===e.length){if(null!=t){let e=!1;if($m(t)&&t.length>0)e=!0;else if(Am(t)){for(const n in t)if(t.hasOwnProperty(n)){e=!0;break}}else e=!0;if(e)throw new xp(`Error when checking model ${s} expected no data, but got ${t}`)}return[]}if(null==t)return e.map((t=>null));let a;if(Am(t)){t=t,a=[];for(const n of e){if(null==t[n])throw new xp(`No data provided for "${n}". Need data for each key in: ${e}`);a.push(t[n])}}else if($m(t)){if((t=t).length!==e.length)throw new xp(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${e.length} Tensor(s), but instead got the following list of Tensor(s): ${t}`);a=t}else{if(t=t,e.length>1)throw new xp(`The model ${s} expects ${e.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${t.shape}`);a=[t]}if(a=Tm(a),null!=n)for(let t=0;t<e.length;++t){if(null==n[t])continue;const i=a[t];if(i.shape.length!==n[t].length)throw new xp(`Error when checking ${s}: expected ${e[t]} to have ${n[t].length} dimension(s). but got array with shape ${i.shape}`);for(let a=0;a<n[t].length;++a){if(0===a&&!r)continue;const o=i.shape[a],u=n[t][a];if(null!=u&&u>=0&&o!==u)throw new xp(`Error when checking ${s}: expected ${e[t]} to have shape [${n[t]}], but got array with shape [${i.shape}].`)}}return a}function Mm(t,e,n,r=!0,s=""){let a;if(Array.isArray(t)){if(t.length!==e.length)throw new xp(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${e.length} Tensor(s), but instead got ${t.length} Tensors(s).`);a=t}else{if(e.length>1)throw new xp(`The model expects ${e.length} ${s} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(t.shape)}.`);a=[t]}if(null!=n)for(let t=0;t<e.length;++t){if(null==n[t])continue;const i=a[t];if(i.shape.length!==n[t].length)throw new xp(`Error when checking ${s}: expected ${e[t]} to have ${n[t].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let a=0;a<n[t].length;++a){if(0===a&&!r)continue;const o=i.shape[a],u=n[t][a];if(null!=u&&u!==o)throw new xp(`Error when checking ${s}: expected ${e[t]} to have shape ${JSON.stringify(n[t])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}class Dm extends mm{constructor(t){super(t),this.isTraining=!1}summary(t,e,n=console.log){if(!this.built)throw new xp("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");em(this,t,e,n)}compile(t){if(null==t.loss&&(t.loss=[]),this.loss=t.loss,"string"==typeof t.optimizer)this.optimizer_=function(t){const e={Adagrad:()=>Cu.adagrad(.01),Adadelta:()=>Cu.adadelta(1,.95,gp()),Adam:()=>Cu.adam(.001,.9,.999,gp()),Adamax:()=>Cu.adamax(.002,.9,.999,gp(),0),RMSProp:()=>Cu.rmsprop(.001,.9,0,gp()),SGD:()=>Cu.sgd(.01)};if(e.adagrad=e.Adagrad,e.adadelta=e.Adadelta,e.adam=e.Adam,e.adamax=e.Adamax,e.rmsprop=e.RMSProp,e.sgd=e.SGD,t in e)return e[t]();throw new xp(`Unknown Optimizer ${t}`)}(t.optimizer),this.isOptimizerOwned=!0;else{if(!(t.optimizer instanceof yu))throw new xp("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=t.optimizer,this.isOptimizerOwned=!1}let e=[];if(Array.isArray(t.loss)||"string"==typeof t.loss||"function"==typeof t.loss)if(Array.isArray(t.loss)){if(t.loss.length!==this.outputs.length)throw new xp(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${t.loss}.`);const n=t.loss;e=n.map((t=>Uf(t)))}else{const n=Uf(t.loss);this.outputs.forEach((t=>{e.push(n)}))}else{t.loss=t.loss;for(const e in t.loss)if(-1===this.outputNames.indexOf(e))throw new xp(`Unknown entry in loss dictionary: "${e}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==t.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),e.push(Uf(t.loss[n]))}this.lossFunctions=e,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let t=0;t<this.outputs.length;++t){const e=this.internalOutputShapes[t],n=this.outputNames[t];this.feedOutputNames.push(n),this.feedOutputShapes.push(e),this.feedLossFns.push(this.lossFunctions[t])}const n=[];this.metrics=t.metrics,this.metricsNames=["loss"],this.metricsTensors=[],id("loss",(()=>{for(let t=0;t<this.outputs.length;++t){if(-1!==n.indexOf(t))continue;const e=this.lossFunctions[t];this.outputs.length>1&&(this.metricsTensors.push([e,t]),this.metricsNames.push(this.outputNames[t]+"_loss"))}}));const r=function(t,e){if(null==t||Array.isArray(t)&&0===t.length)return e.map((t=>[]));let n;if("string"==typeof t||"function"==typeof t)n=[t];else{if(!Array.isArray(t)&&"object"!=typeof t)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${t}`);n=t}if(Array.isArray(n))return e.map((t=>n));{const t=[];for(const r of e){let e=n.hasOwnProperty(r)?n[r]:[];Array.isArray(e)||(e=[e]),t.push(e)}return t}}(t.metrics,this.outputNames),s=(t,e,n)=>{this.outputNames.length>1&&(e=this.outputNames[t]+"_"+e),this.metricsNames.push(e),this.metricsTensors.push([n,t])};id("metric",(()=>{for(let t=0;t<this.outputs.length;++t){if(-1!==n.indexOf(t))continue;(e=>{let n,r,a;for(const i of e){if("string"==typeof i&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(i)){const e=this.internalOutputShapes[t];let s;1===e[e.length-1]||this.lossFunctions[t]===Pf?-1!==["accuracy","acc"].indexOf(i)?r=Gf:-1!==["crossentropy","ce"].indexOf(i)&&(r=jf):this.lossFunctions[t]===zf?-1!==["accuracy","acc"].indexOf(i)?r=qf:-1!==["crossentropy","ce"].indexOf(i)&&(r=Xf):-1!==["accuracy","acc"].indexOf(i)?r=Hf:-1!==["crossentropy","ce"].indexOf(i)&&(r=Kf),-1!==["accuracy","acc"].indexOf(i)?s="acc":-1!==["crossentropy","ce"].indexOf(i)&&(s="ce"),a=r,n=""+s}else{const t=Jf(i);a=t,n=""+Zf(i)}let e;id(n,(()=>{e=a})),s(t,n,e)}})(r[t])}})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(t,e,n={}){const r=null==n.batchSize?32:n.batchSize;km(r);const s=this.standardizeUserDataXY(t,e,!0,r);try{const a=s[0].concat(s[1]);this.makeTestFunction();const i=this.testFunction;return Sp(this.testLoop(i,a,r,n.verbose,n.steps))}finally{_m(s[0],t),_m(s[1],e)}}async evaluateDataset(t,e){return this.makeTestFunction(),async function(t,e,n){const r=null!=(n=n||{}).batches,s=t.testFunction;let a=[];if(n.verbose>0)throw new wp("Verbose mode is not implemented yet.");u(!r||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));const i="function"==typeof e.next?e:await e.iterator();let o=0,l=0;for(;!r||l<n.batches;){const e=await i.next();if(a=Rr((()=>{if(e.value){const{xs:n,ys:r}=xm(t,e.value),i=n.concat(r),u=Rr((()=>s(i)));if(Mr(i),0===l)for(let t=0;t<u.length;++t)a.push(wa(0));const c=i[0].shape[0];for(let t=0;t<u.length;++t){const e=u[t],n=a[t];a[t]=Rr((()=>Pr(a[t],xa(c,e)))),l>0&&Mr(n)}Mr(u),o+=c,++l}return a})),e.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let t=0;t<a.length;++t){const e=a[t];a[t]=qs(a[t],o),Mr(e)}return Sp(a)}(this,t,e)}checkNumSamples(t,e,n,r="steps"){let s;if(null!=n){if(s=null,null!=e)throw new xp(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${e}`)}else{if(null==t)throw new xp(`Either the input data should have a defined shape, or ${r} shoud be specified.`);s=Array.isArray(t)?t[0].shape[0]:t.shape[0]}return s}execute(t,e){if(Array.isArray(e)&&0===e.length)throw new xp("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(e),r=n?e:[e],s=this.retrieveSymbolicTensors(r),a=new um;if(t instanceof Ot&&(t=[t]),Array.isArray(t)){if(t.length!==this.inputs.length)throw new xp(`The number of inputs provided (${t.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let e=0;e<this.inputs.length;++e)a.add(this.inputs[e],t[e])}else for(const e of this.inputs){const n=t[e.name];if(null==n)throw new xp(`No value is provided for the model's input ${e.name}`);a.add(e,n)}const i=hm(s,a);return n?i:i[0]}retrieveSymbolicTensors(t){const e=Ip(null,t.length);let n=t.length;for(const r of this.layers){const s=Array.isArray(r.output)?r.output:[r.output],a=s.map((t=>t.name));for(let r=0;r<t.length;++r){const i=a.indexOf(t[r]);if(-1!==i&&(e[r]=s[i],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw e.forEach(((e,r)=>{null==e&&n.push(t[r])})),new xp(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return e}predictLoop(t,e=32,n=!1){return Rr((()=>{const r=this.checkNumSamples(t);if(n)throw new wp("Verbose predictLoop() is not implemented yet.");const s=Cm(r,e),a=this.outputs.map((t=>[]));for(let e=0;e<s.length;++e){Rr((()=>{const n=s[e][0],r=s[e][1],a=Nm(t,n,r),i=[];if(Array.isArray(a))for(let t=0;t<a.length;++t)i.push({key:this.inputs[t],value:a[t]});else i.push({key:this.inputs[0],value:a});const o=new um(i);return hm(this.outputs,o)})).forEach(((t,e)=>a[e].push(t)))}return Sp(a.map((t=>$s(t,0))))}))}predict(t,e={}){const n=Tm(t);Mm(n,this.inputNames,this.feedInputShapes,!1);try{const r=null==e.batchSize?32:e.batchSize;return km(r),this.predictLoop(n,r)}finally{_m(n,t)}}predictOnBatch(t){Mm(t,this.inputNames,this.feedInputShapes,!0);const e=(Array.isArray(t)?t[0]:t).shape[0];return this.predictLoop(t,e)}standardizeUserDataXY(t,e,n=!0,r){if(null==this.optimizer_)throw new bp("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const s=[];for(let t=0;t<this.feedOutputShapes.length;++t){const e=this.feedOutputShapes[t];this.feedLossFns[t]===zf?s.push(e.slice(0,e.length-1).concat([1])):s.push(e)}if(function(t,e,n){const r=Dp(t.map((t=>t.shape[0])));r.sort();const s=Dp(e.map((t=>t.shape[0])));if(s.sort(),r.length>1)throw new xp(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((t=>t.shape)))}`);if(s.length>1)throw new xp(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((t=>t.shape)))}`);if(r.length>0&&s.length>0&&!d(r,s))throw new xp(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${s[0]} target sample(s).`)}(t=Rm(t,this.feedInputNames,this.feedInputShapes,!1,"input"),e=Rm(e,this.feedOutputNames,s,!1,"target")),function(t,e,n){const r=[Of,Pf,Bf];for(let s=0;s<t.length;++s){const a=t[s],i=e[s],o=n[s];if(null!=i){if(i===Bf&&1===a.shape[a.shape.length-1])throw new xp(`You are passing a target array of shape ${a.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(i)){const t=a.shape.slice(1),e=o.slice(1);for(let n=0;n<t.length;++n){const r=t[n],s=e[n];if(null!=s&&r!==s)throw new xp(`A target Tensor with shape ${a.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(e,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=r&&r>0&&t[0].shape[0]%r!=0)throw new xp(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${t[0].shape[0]} sample(s).`);return[t,e]}async standardizeUserData(t,e,n,r,s=!0,a){const[i,o]=this.standardizeUserDataXY(t,e,s,a);if(null!=n)throw new Error("sample weight is not supported yet.");let u=null;if(null!=r){const t=gm(r,this.outputNames);u=[];for(let e=0;e<t.length;++e)u.push(await ym(o[e],null,t[e]))}return[i,o,u]}testLoop(t,e,n,r=0,s){return Rr((()=>{const a=this.checkNumSamples(e,n,s,"steps"),i=[];if(r>0)throw new wp("Verbose mode is not implemented yet.");if(null!=s)throw new wp("steps mode in testLoop() is not implemented yet");{const r=Cm(a,n),s=yi(md(0,a));for(let n=0;n<r.length;++n){const a=r[n][0],o=r[n][1],u=bd(s,a,o-a),l=Sm(e,u),c=t(l);if(0===n)for(let t=0;t<c.length;++t)i.push(wa(0));for(let t=0;t<c.length;++t){const e=c[t];i[t]=Pr(i[t],xa(o-a,e))}}for(let t=0;t<i.length;++t)i[t]=qs(i[t],a)}return i}))}getDedupedMetricsNames(){const t=this.metricsNames,e=[];for(let n=0;n<t.length;++n){const r=t[n];let s=r;if(Np(t,r)>1){s+=`_${Np(t.slice(0,n),r)}`}e.push(s)}return e}makeTrainFunction(){return t=>{const e=[],n=t.slice(0,this.inputs.length),r=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=t.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),a=[],i=this.collectedTrainableWeights.map((t=>t.read()));return[this.optimizer_.minimize((()=>{const t=[];for(let e=0;e<this.inputs.length;++e)t.push({key:this.inputs[e],value:n[e]});const i=new um(t),o=hm(this.outputs,i,{training:!0});let u;for(let t=0;t<this.lossFunctions.length;++t){let n=(0,this.lossFunctions[t])(r[t],o[t]);null!=s[t]&&(n=bm(n,s[t]));const a=Ga(n);e.push(a),u=0===t?n:Pr(u,n)}for(let t=0;t<this.metricsTensors.length;++t){let n;if(this.outputs.length>1&&t<this.outputs.length)n=e[t];else{const e=this.metricsTensors[t][0],s=this.metricsTensors[t][1];n=Ga(e(r[s],o[s]))}Dr(n),a.push(n)}return u=Ga(u),this.calculateLosses().forEach((t=>{u=Pr(u,t)})),u}),!0,i)].concat(a)}}makeTestFunction(){this.testFunction=t=>Rr((()=>{const e=[];let n;const r=t.slice(0,this.inputs.length),s=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let t=0;t<this.inputs.length;++t)a.push({key:this.inputs[t],value:r[t]});const i=new um(a),o=hm(this.outputs,i);for(let t=0;t<this.lossFunctions.length;++t){const r=this.lossFunctions[t],a=Ga(r(s[t],o[t]));n=0===t?a:Pr(n,a),e.push(n)}for(let t=0;t<this.metricsTensors.length;++t){const n=this.metricsTensors[t][0],r=this.metricsTensors[t][1],a=Ga(n(s[r],o[r]));e.push(a)}return e}))}async fit(t,e,n={}){return Em(this,t,e,n)}async fitDataset(t,e){return vm(this,t,e)}async trainOnBatch(t,e){const n=await this.standardizeUserData(t,e),r=n[0],s=n[1],a=this.makeTrainFunction()(r.concat(s)),i=[];for(const t of a){const e=await t.data();i.push(e[0])}return Mr(a),Sp(i)}getNamedWeights(t){const e=[],n=null!=t&&t.trainableOnly,r=n?this.trainableWeights:this.weights,s=this.getWeights(n);for(let t=0;t<r.length;++t)n&&!r[t].trainable||e.push({name:r[t].originalName,tensor:s[t]});return e}set stopTraining(t){this.stopTraining_=t}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(t){this.optimizer_!==t&&(this.optimizer_=t,this.isOptimizerOwned=!1)}dispose(){const t=super.dispose();if(0===t.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const e=Ar().numTensors;this.optimizer_.dispose(),t.numDisposedVariables+=e-Ar().numTensors}return t}getLossIdentifiers(){let t;if("string"==typeof this.loss)t=Ep(this.loss);else if(Array.isArray(this.loss)){for(const t of this.loss)if("string"!=typeof t)throw new Error("Serialization of non-string loss is not supported.");t=this.loss.map((t=>Ep(t)))}else{const e=Object.keys(this.loss);t={};const n=this.loss;for(const r of e){if("string"!=typeof n[r])throw new Error("Serialization of non-string loss is not supported.");t[r]=Ep(n[r])}}return t}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[Ep(Zf(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((t=>Ep(Zf(t))));{const t={};for(const e in this.metrics)t[e]=Ep(Zf(this.metrics[e]));return t}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(t){if(null!=t.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=t.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=t.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const e=Mf(im(t.optimizer_config));let n,r;if("string"==typeof t.loss)n=Tp(t.loss);else if(Array.isArray(t.loss))n=t.loss.map((t=>Tp(t)));else if(null!=t.loss){n={};for(const e in t.loss)n[e]=Tp(t.loss[e])}if(Array.isArray(t.metrics))r=t.metrics.map((t=>Tp(t)));else if(null!=t.metrics){r={};for(const e in t.metrics)r[e]=Tp(t.metrics[e])}this.compile({loss:n,metrics:r,optimizer:e})}async save(t,e){if("string"==typeof t){const e=kn(t);if(0===e.length)throw new xp(`Cannot find any save handlers for URL '${t}'`);if(e.length>1)throw new xp(`Found more than one (${e.length}) save handlers for URL '${t}'`);t=e[0]}if(null==t.save)throw new xp("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await mn(this.getNamedWeights(e)),r={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:"TensorFlow.js tfjs-layers v2.7.0",convertedBy:null};if(null!=e&&e.includeOptimizer&&null!=this.optimizer){r.trainingConfig=this.getTrainingConfig();const t="optimizer",{data:e,specs:s}=await mn(await this.optimizer.getWeights(),t);n.specs.push(...s),n.data=xn([n.data,e])}if(null!=this.userDefinedMetadata){const t=!0;Qf(this.userDefinedMetadata,this.name,t),r.userDefinedMetadata=this.userDefinedMetadata}return r.weightData=n.data,r.weightSpecs=n.specs,t.save(r)}setUserDefinedMetadata(t){Qf(t,this.name),this.userDefinedMetadata=t}getUserDefinedMetadata(){return this.userDefinedMetadata}}Dm.className="Model",Tr(Dm);class Om extends Dm{}Om.className="Functional",Tr(Om);class Fm extends Dm{constructor(t){if(super({inputs:[],outputs:[]}),t=t||{},this.trainable=!0,this.built=!1,this.name=null!=t.name?t.name:rf("sequential_"),null!=t.layers)for(const e of t.layers)this.add(e)}checkShape(t){if(t.inboundNodes[0].outputTensors[0].shape.some((t=>t<0)))throw new xp(`Negative dimension size caused by adding layer ${t.name} with input shape [${t.inboundNodes[0].inputTensors[0].shape}]`)}add(t){const e=t instanceof Fm||t instanceof Dm;let n;if(e){if(n=t,1!==n.outputs.length)throw new xp("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new xp("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===t.inboundNodes.length){if(null==t.batchInputShape)throw new xp("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const e=function(t){if(null==t.batchShape&&null==t.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=t.batchShape&&null!=t.shape)throw new xp("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let e=t.batchShape;null!=t.shape&&null==e&&(e=[null].concat(t.shape));let n=t.dtype;return null==n&&(n="float32"),new wf({batchInputShape:e,name:t.name,dtype:n,sparse:t.sparse}).inboundNodes[0].outputTensors[0]}({batchShape:t.batchInputShape,dtype:t.dtype,name:t.name+"_input"});t.apply(e)}if(e)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==t.inboundNodes.length)throw new xp(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${t.name} which has ${t.inboundNodes.length} pre-existing inbound connections.`);if(1!==t.inboundNodes[0].outputTensors.length)throw new xp("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[t.inboundNodes[0].outputTensors[0]],this.inputs=xf(this.outputs[0])}this.inboundNodes=[],new gf({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Ip(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((t=>t.shape)),outputShapes:this.outputs[0].shape})}else{const e=t.apply(this.outputs[0]);if(Array.isArray(e))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[e],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(t),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const t=this.layers.length-1;this.layers[t].outboundNodes=[],this.outputs=[this.layers[t].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(t,e){return null==this.model&&this.build(),this.model.call(t,e)}build(t){if(uf(t),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Dm({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(t,e,n=console.log){this.built||this.build(),super.summary(t,e,n)}setWeights(t){null==this.model&&this.build(),this.model.setWeights(t)}evaluate(t,e,n={}){if(!this.built)throw new bp("The model needs to be compiled before being used.");return this.model.evaluate(t,e,n)}async evaluateDataset(t,e){if(!this.built)throw new bp("The model needs to be compiled before being used.");return this.model.evaluateDataset(t,e)}predict(t,e={}){return null==this.model&&this.build(),this.model.predict(t,e)}predictOnBatch(t){return null==this.model&&this.build(),this.model.predictOnBatch(t)}compile(t){this.build(),this.model.compile(t),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(t){this.model.optimizer=t}async fit(t,e,n={}){if(!this.built)throw new bp("The model needs to be compiled before being used.");return this.model.fit(t,e,n)}async fitDataset(t,e){if(!this.built)throw new bp("The model needs to be compiled before being used.");return this.model.fitDataset(t,e)}async trainOnBatch(t,e){return this.model.trainOnBatch(t,e)}static fromConfig(t,e,n={},r=!1){let s,a={};if(e instanceof Array){if(null==e[0].className||"Merge"===e[0].className)throw new xp("Legacy serialization format not supported yet.");s=e}else u(null!=e.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),s=e.layers,delete e.layers,a=e;const i=new t(a);if(!(i instanceof Fm))throw new wp(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(const t of s){const e=Mf(t,void 0,r);r&&e.setFastWeightInitDuringBuild(!0),i.add(e)}return i}set stopTraining(t){if(null==this.model)throw new xp("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=t}get stopTraining(){if(null==this.model)throw new xp("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const t=[];for(const e of this.layers){const n={};n.className=e.getClassName(),n.config=e.getConfig(),t.push(n)}return{name:this.name,layers:t}}}Fm.className="Sequential",Tr(Fm);class Lm extends Cr{getConfig(){return{}}}class Bm extends Lm{apply(t,e=1){return function(t,e=1){if(1!==e)throw new wp(`Support for alpha values other than 1 (${e}) is not implemented yet.`);return ea(t)}(t,e)}}Bm.className="elu",Tr(Bm);class zm extends Lm{apply(t){return Ni(t)}}zm.className="selu",Tr(zm);class Pm extends Lm{apply(t){return wi(t)}}Pm.className="relu",Tr(Pm);class Vm extends Lm{apply(t){return Rr((()=>ja(6,wi(t))))}}Vm.className="relu6",Tr(Vm);class Wm extends Lm{apply(t){return t}}Wm.className="linear",Tr(Wm);class Um extends Lm{apply(t){return _a(t)}}Um.className="sigmoid",Tr(Um);class Gm extends Lm{apply(t){return function(t){return Rr((()=>{const e=Pr(.5,xa(.2,t));return Es(e,0,1)}))}(t)}}Gm.className="hardSigmoid",Tr(Gm);class Hm extends Lm{apply(t){return $a(t)}}Hm.className="softplus",Tr(Hm);class jm extends Lm{apply(t){return function(t){return Rr((()=>qs(t,Lr(t).add(1))))}(t)}}jm.className="softsign",Tr(jm);class qm extends Lm{apply(t){return Xi(t)}}qm.className="tanh",Tr(qm);class Km extends Lm{apply(t,e=-1){return Oi(t,e)}}Km.className="softmax",Tr(Km);class Xm extends Lm{apply(t,e=-1){return Oa(t,e)}}Xm.className="logSoftmax",Tr(Xm);class Ym extends Lm{apply(t,e=1){return Rr((()=>_a(t.mul(e)).mul(t)))}}function Jm(t){return t.getClassName()}function Zm(t,e={}){return Rp(t,Er.getMap().classNameMap,e,"activation")}function Qm(t){if(null==t){const t={className:"linear",config:{}};return Zm(t)}if("string"==typeof t){const e={};return e.className=t,e.config={},Zm(e)}return t instanceof Lm?t:Zm(t)}Ym.className="swish",Tr(Ym);class tg extends Cr{}class eg extends tg{constructor(t){super(),function(t){if(null!=t&&"object"!=typeof t)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${t}`)}(t),this.l1=null==t||null==t.l1?.01:t.l1,this.l2=null==t||null==t.l2?.01:t.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(t){return Rr((()=>{let e=Wa([1]);return this.hasL1&&(e=Pr(e,Da(xa(this.l1,Lr(t))))),this.hasL2&&(e=Pr(e,Da(xa(this.l2,Ed(t))))),e.asScalar()}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(t,e){return new t({l1:e.l1,l2:e.l2})}}eg.className="L1L2",Tr(eg);const ng={l1l2:"L1L2"};function rg(t){return $p(t)}function sg(t,e={}){return Rp(t,Er.getMap().classNameMap,e,"regularizer")}function ag(t){if(null==t)return null;if("string"==typeof t){return sg({className:t in ng?ng[t]:t,config:{}})}return t instanceof tg?t:sg(t)}class ig extends bf{constructor(t){super(null==t?{}:t),this.supportsMasking=!0,null!=t&&(this.maxValue=t.maxValue)}call(t,e){t=of(t);let n=wi(t);return null!=this.maxValue&&(n=Es(n,0,this.maxValue)),n}computeOutputShape(t){return t}getConfig(){const t={maxValue:this.maxValue},e=super.getConfig();return Object.assign(t,e),t}}ig.className="ReLU",Tr(ig);class og extends bf{constructor(t){super(null==t?{}:t),this.DEFAULT_ALPHA=.3,null==t&&(t={}),this.alpha=null==t.alpha?this.DEFAULT_ALPHA:t.alpha}call(t,e){const n=of(t);return va(n,this.alpha)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}og.className="LeakyReLU",Tr(og);class ug extends bf{constructor(t){if(super(null==t?{}:t),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==t&&(t={}),this.supportsMasking=!0,this.alphaInitializer=Qd(t.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=ag(t.alphaRegularizer),this.alphaConstraint=Yp(t.alphaConstraint),null==t.sharedAxes)this.sharedAxes=null;else if(Array.isArray(t.sharedAxes))this.sharedAxes=t.sharedAxes;else{if("number"!=typeof t.sharedAxes)throw new xp(`Expected sharedAxes to be a number or an array of numbers, but got ${t.sharedAxes}`);this.sharedAxes=[t.sharedAxes]}}build(t){const e=(t=uf(t)).slice(1);if(null!=this.sharedAxes)for(const t of this.sharedAxes)e[t-1]=1;this.alpha=this.addWeight("alpha",e,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let e=1;e<t.length;++e)n[e]=t[e];this.inputSpec=[new df({ndim:t.length,axes:n})],this.built=!0}call(t,e){return t=of(t),ri(t,this.alpha.read())}getConfig(){const t={alphaInitializer:Zd(this.alphaInitializer),alphaRegularizer:rg(this.alphaRegularizer),alphaConstraint:Kp(this.alphaConstraint),sharedAxes:this.sharedAxes},e=super.getConfig();return Object.assign(t,e),t}}ug.className="PReLU",Tr(ug);class lg extends bf{constructor(t){if(super(null==t?{}:t),this.DEFAULT_ALPHA=1,null==t&&(t={}),null!=t.alpha&&t.alpha!==this.DEFAULT_ALPHA)throw new wp(`Non-default alpha value (${t.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==t.alpha?this.DEFAULT_ALPHA:t.alpha}call(t,e){const n=of(t);return ea(n)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}lg.className="ELU",Tr(lg);class cg extends bf{constructor(t){super(null==t?{}:t),this.DEFAULT_THETA=1,null==t&&(t={}),this.theta=null==t.theta?this.DEFAULT_THETA:t.theta}call(t,e){const n=of(t);return n.mul(gd(n.greater(this.theta),"float32"))}computeOutputShape(t){return t}getConfig(){const t={theta:this.theta},e=super.getConfig();return Object.assign(t,e),t}}cg.className="ThresholdedReLU",Tr(cg);class hg extends bf{constructor(t){super(null==t?{}:t),this.DEFAULT_AXIS=1,null==t&&(t={}),this.softmax=(new Km).apply,this.axis=null==t.axis?this.DEFAULT_AXIS:t.axis}call(t,e){const n=of(t);return this.softmax(n,this.axis)}computeOutputShape(t){return t}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}function pg(t,e,n){if("number"==typeof t)return Ip(t,e);if(t.length!==e)throw new xp(`The ${n} argument must be an integer or tuple of ${e} integers. Received: ${t.length} elements.`);for(let s=0;s<e;++s){const a=t[s];if((r=a)!==parseInt(r.toString(),10))throw new xp(`The ${n} argument must be an integer or tuple of ${e} integers. Received: ${JSON.stringify(t)} including a non-integer number ${a}`)}return t;var r}function dg(t,e,n,r,s=1){if(null==t)return t;let a;return a="same"===n?t:t-(e+(e-1)*(s-1))+1,Math.floor((a+r-1)/r)}function fg(t,e,n,r){if(null==t)return null;if("valid"===r)t=t*e+fd([n-e,0]);else{if("same"!==r)throw new xp(`Unsupport padding mode: ${r}.`);t*=e}return t}function mg(t,e){return Rr((()=>(nd(e),"channelsFirst"===e?ur(t,[0,2,3,1]):t)))}function gg(t,e){return Rr((()=>(nd(e),"channelsFirst"===e?ur(t,[0,2,3,4,1]):t)))}function yg(t,e,n,r=[1,1],s="valid",a,i,o=null){return Rr((()=>{if(null==a&&(a="channelsLast"),nd(a),3!==t.rank&&4!==t.rank)throw new xp(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${t.rank}.`);if(3!==e.rank&&4!==e.rank)throw new xp(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${t.rank}.`);let u=mg(t,a);if("causal"===s)throw new wp("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return u=Ro({x:u,filter:e,strides:r,pad:"same"===s?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===a&&(u=ur(u,[0,3,1,2])),u}))}hg.className="Softmax",Tr(hg);class bg extends bf{constructor(t,e){if(super(e),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",bg.verifyArgs(e),this.rank=t,Bp(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new wp(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=pg(e.kernelSize,t,"kernelSize"),this.strides=pg(null==e.strides?1:e.strides,t,"strides"),this.padding=null==e.padding?"valid":e.padding,rd(this.padding),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,nd(this.dataFormat),this.activation=Qm(e.activation),this.useBias=null==e.useBias||e.useBias,this.biasInitializer=Qd(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Yp(e.biasConstraint),this.biasRegularizer=ag(e.biasRegularizer),this.activityRegularizer=ag(e.activityRegularizer),this.dilationRate=pg(null==e.dilationRate?1:e.dilationRate,t,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new xp(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new xp(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new xp(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(t){if(kp("kernelSize"in t,"required key 'kernelSize' not in config"),"number"!=typeof t.kernelSize&&!Lp(t.kernelSize,"number",1,3))throw new xp(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(t.kernelSize)}.`)}getConfig(){const t={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Jm(this.activation),useBias:this.useBias,biasInitializer:Zd(this.biasInitializer),biasRegularizer:rg(this.biasRegularizer),activityRegularizer:rg(this.activityRegularizer),biasConstraint:Kp(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}class xg extends bg{constructor(t,e){super(t,e),this.kernel=null,xg.verifyArgs(e),this.filters=e.filters,Bp(this.filters,"filters"),this.kernelInitializer=Qd(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Yp(e.kernelConstraint),this.kernelRegularizer=ag(e.kernelRegularizer)}build(t){t=uf(t);const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new xp(`The channel dimension of the input should be defined. Found ${t[e]}`);const n=t[e],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[e]:n}}],this.built=!0}call(t,e){return Rr((()=>{let e;t=of(t);const n=null==this.bias?null:this.bias.read(),r=Pp(this.activation.getClassName());if(null!=r&&2===this.rank)e=yg(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)e=function(t,e,n,r=1,s="valid",a,i=1){return Rr((()=>{if(null==a&&(a="channelsLast"),nd(a),3!==t.shape.length)throw new xp(`The input of a conv1dWithBias operation should be 3, but is ${t.shape.length} instead.`);if(3!==e.shape.length)throw new xp(`The kernel for a conv1dWithBias operation should be 3, but is ${e.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new xp(`The bias for a conv1dWithBias operation should be 1, but is ${e.shape.length} instead`);if("channelsFirst"===a&&(t=ur(t,[0,2,1])),"causal"===s)throw new wp("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=Fs(t,e,r,"same"===s?"same":"valid","NWC",i);return null!=n&&(o=_d(o,n)),o}))}(t,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)e=yg(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new wp("convolutions greater than 3D are not implemented yet.");e=function(t,e,n,r=[1,1,1],s="valid",a,i){return Rr((()=>{if(null==a&&(a="channelsLast"),nd(a),4!==t.rank&&5!==t.rank)throw new xp(`conv3dWithBias expects input to be of rank 4 or 5, but received ${t.rank}.`);if(4!==e.rank&&5!==e.rank)throw new xp(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${t.rank}.`);let o=gg(t,a);if("causal"===s)throw new wp("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=zs(o,e,r,"same"===s?"same":"valid","NDHWC",i),null!=n&&(o=_d(o,n)),"channelsFirst"===a&&(o=ur(o,[0,4,1,2,3])),o}))}(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(e=this.activation.apply(e))}return e}))}computeOutputShape(t){t=uf(t);const e=[],n="channelsLast"===this.dataFormat?t.slice(1,t.length-1):t.slice(2);for(let t=0;t<n.length;++t){const r=dg(n[t],this.kernelSize[t],this.padding,this.strides[t],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[t]);e.push(r)}let r=[t[0]];return"channelsLast"===this.dataFormat?(r=r.concat(e),r.push(this.filters)):(r.push(this.filters),r=r.concat(e)),r}getConfig(){const t={filters:this.filters,kernelInitializer:Zd(this.kernelInitializer),kernelRegularizer:rg(this.kernelRegularizer),kernelConstraint:Kp(this.kernelConstraint)},e=super.getConfig();return Object.assign(t,e),t}static verifyArgs(t){if(!("filters"in t)||"number"!=typeof t.filters||t.filters<1)throw new xp(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(t.filters)}`)}}class wg extends xg{constructor(t){super(2,t),wg.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&!Lp(t.kernelSize,"number",1,2))throw new xp(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(t.kernelSize)}.`)}}wg.className="Conv2D",Tr(wg);class vg extends xg{constructor(t){super(3,t),vg.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&(!Array.isArray(t.kernelSize)||1!==t.kernelSize.length&&3!==t.kernelSize.length))throw new xp(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(t.kernelSize)}.`)}}vg.className="Conv3D",Tr(vg);class Ig extends wg{constructor(t){if(super(t),this.inputSpec=[new df({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new xp(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if(4!==(t=uf(t)).length)throw new xp("Input should have rank 4; Received input shape: "+JSON.stringify(t));const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new xp("The channel dimension of the inputs should be defined. Found `None`.");const n=t[e],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new df({ndim:4,axes:{[e]:n}})],this.built=!0}call(t,e){return Rr((()=>{let e=of(t);if(4!==e.shape.length)throw new xp(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${e.shape.length}`);const n=e.shape,r=n[0];let s,a;"channelsFirst"===this.dataFormat?(s=2,a=3):(s=1,a=2);const i=n[s],o=n[a],u=this.kernelSize[0],l=this.kernelSize[1],c=this.strides[0],h=this.strides[1],p=[r,fg(i,c,u,this.padding),fg(o,h,l,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(e=ur(e,[0,2,3,1]));let d=Bs(e,this.kernel.read(),p,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(d=ur(d,[0,3,1,2])),null!=this.bias&&(d=_d(d,this.bias.read(),this.dataFormat)),null!=this.activation&&(d=this.activation.apply(d)),d}))}computeOutputShape(t){const e=(t=uf(t)).slice();let n,r,s;"channelsFirst"===this.dataFormat?(n=1,r=2,s=3):(n=3,r=1,s=2);const a=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],u=this.strides[1];return e[n]=this.filters,e[r]=fg(e[r],o,a,this.padding),e[s]=fg(e[s],u,i,this.padding),e}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}Ig.className="Conv2DTranspose",Tr(Ig);class kg extends xg{constructor(t,e){if(super(t,e),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==e.filters)throw new xp("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=e.kernelInitializer||null!=e.kernelRegularizer||null!=e.kernelConstraint)throw new xp("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=e.padding&&"same"!==e.padding&&"valid"!==e.padding)throw new xp(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(e.padding)}`);this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=Qd(e.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=ag(e.depthwiseRegularizer),this.depthwiseConstraint=Yp(e.depthwiseConstraint),this.pointwiseInitializer=Qd(e.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=ag(e.pointwiseRegularizer),this.pointwiseConstraint=Yp(e.pointwiseConstraint)}build(t){if((t=uf(t)).length<this.rank+2)throw new xp(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(t)}`);const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e]||t[e]<0)throw new xp(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(t[e])}`);const n=t[e],r=this.kernelSize.concat([n,this.depthMultiplier]),s=[];for(let t=0;t<this.rank;++t)s.push(1);s.push(n*this.depthMultiplier,this.filters);const a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",s,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):this.bias=null,this.inputSpec=[new df({ndim:this.rank+2,axes:{[e]:n}})],this.built=!0}call(t,e){return Rr((()=>{let e;if(t=of(t),1===this.rank)throw new wp("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(t=ur(t,[0,2,3,1])),e=Si(t,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(e=_d(e,this.bias.read(),this.dataFormat)),null!=this.activation&&(e=this.activation.apply(e)),"channelsFirst"===this.dataFormat&&(e=ur(e,[0,3,1,2])),e}))}getConfig(){const t=super.getConfig();return delete t.rank,delete t.kernelInitializer,delete t.kernelRegularizer,delete t.kernelConstraint,t.depthwiseInitializer=Zd(this.depthwiseInitializer),t.pointwiseInitializer=Zd(this.pointwiseInitializer),t.depthwiseRegularizer=rg(this.depthwiseRegularizer),t.pointwiseRegularizer=rg(this.pointwiseRegularizer),t.depthwiseConstraint=Kp(this.depthwiseConstraint),t.pointwiseConstraint=Kp(this.pointwiseConstraint),t}}kg.className="SeparableConv";class Ng extends kg{constructor(t){super(2,t)}}Ng.className="SeparableConv2D",Tr(Ng);class Sg extends xg{constructor(t){super(1,t),Sg.verifyArgs(t),this.inputSpec=[{ndim:3}]}getConfig(){const t=super.getConfig();return delete t.rank,delete t.dataFormat,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&!Lp(t.kernelSize,"number",1,1))throw new xp(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(t.kernelSize)}.`)}}Sg.className="Conv1D",Tr(Sg);class Cg extends bf{constructor(t){super(t),"number"==typeof t.cropping?this.cropping=[[t.cropping,t.cropping],[t.cropping,t.cropping]]:"number"==typeof t.cropping[0]?this.cropping=[[t.cropping[0],t.cropping[0]],[t.cropping[1],t.cropping[1]]]:this.cropping=t.cropping,this.dataFormat=void 0===t.dataFormat?"channelsLast":t.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(t){return"channelsFirst"===this.dataFormat?[t[0],t[1],t[2]-this.cropping[0][0]-this.cropping[0][1],t[3]-this.cropping[1][0]-this.cropping[1][1]]:[t[0],t[1]-this.cropping[0][0]-this.cropping[0][1],t[2]-this.cropping[1][0]-this.cropping[1][1],t[3]]}call(t,e){return Rr((()=>{if(t=of(t),"channelsLast"===this.dataFormat){const e=wd(t,this.cropping[0][0],t.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return wd(e,this.cropping[1][0],t.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const e=wd(t,this.cropping[0][0],t.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return wd(e,this.cropping[1][0],t.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const t={cropping:this.cropping,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}Cg.className="Cropping2D",Tr(Cg);class Eg extends bf{constructor(t){super(t),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==t.size?this.DEFAULT_SIZE:t.size,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat}computeOutputShape(t){if("channelsFirst"===this.dataFormat){const e=null==t[2]?null:this.size[0]*t[2],n=null==t[3]?null:this.size[1]*t[3];return[t[0],t[1],e,n]}{const e=null==t[1]?null:this.size[0]*t[1],n=null==t[2]?null:this.size[1]*t[2];return[t[0],e,n,t[3]]}}call(t,e){return Rr((()=>{let e=of(t);const n=e.shape;if("channelsFirst"===this.dataFormat){e=ur(e,[0,2,3,1]);const t=this.size[0]*n[2],r=this.size[1]*n[3],s=e.resizeNearestNeighbor([t,r]);return ur(s,[0,3,1,2])}{const t=this.size[0]*n[1],r=this.size[1]*n[2];return e.resizeNearestNeighbor([t,r])}}))}getConfig(){const t={size:this.size,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}Eg.className="UpSampling2D",Tr(Eg);class Tg extends bg{constructor(t){super(2,t),this.depthwiseKernel=null,this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=Qd(t.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Yp(t.depthwiseConstraint),this.depthwiseRegularizer=ag(t.depthwiseRegularizer)}build(t){if((t=uf(t)).length<4)throw new xp(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(t)}.`);const e="channelsFirst"===this.dataFormat?1:3;if(null==t[e]||t[e]<0)throw new xp(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${t[e]}).`);const n=t[e],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return Rr((()=>{let e=function(t,e,n=[1,1],r="valid",s,a){return Rr((()=>{null==s&&(s="channelsLast"),nd(s);let i=mg(t,s);if(4!==t.rank)throw new xp(`Input for depthwiseConv2d is required to be 4-D, but is instead ${t.rank}-D`);if(4!==e.rank)throw new xp(`depthwiseKernel is required to be 4-D, but is instead ${e.rank}-D`);return i=Gs(i,e,n,"same"===r?"same":"valid","NHWC",a),"channelsFirst"===s&&(i=ur(i,[0,3,1,2])),i}))}(t=of(t),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(e=_d(e,this.bias.read(),this.dataFormat)),null!=this.activation&&(e=this.activation.apply(e)),e}))}computeOutputShape(t){t=uf(t);const e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2],r="channelsFirst"===this.dataFormat?t[1]*this.depthMultiplier:t[3]*this.depthMultiplier,s=dg(e,this.kernelSize[0],this.padding,this.strides[0]),a=dg(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[t[0],r,s,a]:[t[0],s,a,r]}getConfig(){const t=super.getConfig();return t.depthMultiplier=this.depthMultiplier,t.depthwiseInitializer=Zd(this.depthwiseInitializer),t.depthwiseRegularizer=rg(this.depthwiseRegularizer),t.depthwiseConstraint=Kp(this.depthwiseRegularizer),t}}function _g(t,e,n,r){if(Array.isArray(t)){if(null!=e||null!=n)throw new xp("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=t.slice(t.length-r,t.length),t=t.slice(0,t.length-r)),t.length>1&&(e=t.slice(1,t.length)),t=t[0]}function s(t){return null==t||Array.isArray(t)?t:[t]}return{inputs:t,initialState:e=s(e),constants:n=s(n)}}function $g(t,e,n,r=!1,s,a,i=!1,o=!1){return Rr((()=>{const u=e.shape.length;if(u<3)throw new xp(`Input should be at least 3D, but is ${u}D.`);const l=[1,0].concat(md(2,u));if(e=ur(e,l),null!=a)throw new wp("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=s&&((s=s.asType("bool").asType("float32")).rank===u-1&&(s=sa(s,-1)),s=ur(s,l)),r&&(e=vi(e,0),null!=s&&(s=vi(s,0)));const c=[];let h,p=n;const d=e.shape[0],f=eo(e);let m,g;null!=s&&(m=eo(s));for(let e=0;e<d;++e){const n=f[e],r=Rr((()=>t(n,p)));if(null==s)h=r[0],p=r[1];else{const t=Rr((()=>{const t=m[e],n=ti(t).sub(t);return{output:r[0].mul(t).add(p[0].mul(n)),newStates:p.map(((e,s)=>r[1][s].mul(t).add(e.mul(n))))}}));h=t.output,p=t.newStates}o&&c.push(h)}if(o){g=Hi(c,1)}return[h,g,p]}))}Tg.className="DepthwiseConv2D",Tr(Tg);class Ag extends bf{constructor(t){let e;if(super(t),null==t.cell)throw new xp("cell property is missing for the constructor of RNN.");if(e=Array.isArray(t.cell)?new zg({cells:t.cell}):t.cell,null==e.stateSize)throw new xp("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=e,this.returnSequences=null!=t.returnSequences&&t.returnSequences,this.returnState=null!=t.returnState&&t.returnState,this.goBackwards=null!=t.goBackwards&&t.goBackwards,this._stateful=null!=t.stateful&&t.stateful,this.unroll=null!=t.unroll&&t.unroll,this.supportsMasking=!0,this.inputSpec=[new df({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(null==this.states_){return md(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((t=>null))}return this.states_}setStates(t){this.states_=t}computeOutputShape(t){sf(t)&&(t=t[0]),t=t;let e=this.cell.stateSize;Array.isArray(e)||(e=[e]);const n=e[0];let r;if(r=this.returnSequences?[t[0],t[1],n]:[t[0],n],this.returnState){const n=[];for(const r of e)n.push([t[0],r]);return[r].concat(n)}return r}computeMask(t,e){return Rr((()=>{Array.isArray(e)&&(e=e[0]);const t=this.returnSequences?e:null;if(this.returnState){const e=this.states.map((t=>null));return[t].concat(e)}return t}))}get states(){if(null==this.states_){const t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,e=[];for(let n=0;n<t;++n)e.push(null);return e}return this.states_}set states(t){this.states_=t}build(t){if(null!=this.numConstants)throw new wp("Constants support is not implemented in RNN yet.");sf(t)&&(t=t[0]),t=t;const e=this.stateful?t[0]:null,n=t.slice(2);this.inputSpec[0]=new df({shape:[e,null,...n]});const r=[t[0]].concat(t.slice(2));let s;if(this.cell.build(r),s=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!d(this.stateSpec.map((t=>t.shape[t.shape.length-1])),s))throw new xp(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=s.map((t=>new df({shape:[null,t]})));this.stateful&&this.resetStates()}resetStates(t,e=!1){Rr((()=>{if(!this.stateful)throw new yp("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new xp("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((t=>Wa([n,t]))):this.states_=[Wa([n,this.cell.stateSize])];else if(null==t)Mr(this.states_),null!=this.keptStates&&(Mr(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((t=>Wa([n,t]))):this.states_[0]=Wa([n,this.cell.stateSize]);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new xp(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);!0===e?this.keptStates.push(this.states_.slice()):Mr(this.states_);for(let e=0;e<this.states_.length;++e){const r=t[e],s=Array.isArray(this.cell.stateSize)?this.cell.stateSize[e]:this.cell.stateSize,a=[n,s];if(!d(r.shape,a))throw new xp(`State ${e} is incompatible with layer ${this.name}: expected shape=${a}, received shape=${r.shape}`);this.states_[e]=r}}this.states_=this.states_.map((t=>Dr(t.clone())))}))}apply(t,e){let n=null==e?null:e.initialState,r=null==e?null:e.constants;null==e&&(e={});const s=_g(t,n,r,this.numConstants);t=s.inputs,n=s.initialState,r=s.constants;let a=[],i=[];if(null!=n){e.initialState=n,a=a.concat(n),this.stateSpec=[];for(const t of n)this.stateSpec.push(new df({shape:t.shape}));i=i.concat(this.stateSpec)}null!=r&&(e.constants=r,a=a.concat(r),this.numConstants=r.length);if(a[0]instanceof ff){const n=[t].concat(a),r=this.inputSpec.concat(i),s=this.inputSpec;this.inputSpec=r;const o=super.apply(n,e);return this.inputSpec=s,o}return super.apply(t,e)}call(t,e){return Rr((()=>{const n=null==e?null:e.mask,r=null==e?null:e.training;let s=null==e?null:e.initialState;t=of(t),null==s&&(s=this.stateful?this.states_:this.getInitialState(t));const a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(s.length!==a)throw new xp(`RNN Layer has ${a} state(s) but was passed ${s.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const i={training:r},o=$g(((t,e)=>{const n=this.cell.call([t].concat(e),i);return[n[0],n.slice(1)]}),t,s,this.goBackwards,n,null,this.unroll,this.returnSequences),u=o[0],l=o[1],c=o[2];this.stateful&&this.resetStates(c,r);const h=this.returnSequences?l:u;return this.returnState?[h].concat(c):h}))}getInitialState(t){return Rr((()=>{let e=Wa(t.shape);return e=Da(e,[1,2]),e=yd(e),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((t=>t>1?kd(e,[1,t]):e)):this.cell.stateSize>1?[kd(e,[1,this.cell.stateSize])]:[e]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(t)}getConfig(){const t=super.getConfig(),e={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(e.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===Ag.className&&(e.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,t,e)}static fromConfig(t,e,n={}){const r=Mf(e.cell,n);return new t(Object.assign(e,{cell:r}))}}Ag.className="RNN",Tr(Ag);class Rg extends bf{}class Mg extends Rg{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,Bp(this.units,"units"),this.activation=Qm(null==t.activation?this.DEFAULT_ACTIVATION:t.activation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=Qd(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Qd(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Qd(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=ag(t.kernelRegularizer),this.recurrentRegularizer=ag(t.recurrentRegularizer),this.biasRegularizer=ag(t.biasRegularizer),this.kernelConstraint=Yp(t.kernelConstraint),this.recurrentConstraint=Yp(t.recurrentConstraint),this.biasConstraint=Yp(t.biasConstraint),this.dropout=dd([1,fd([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=dd([1,fd([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=uf(t),this.kernel=this.addWeight("kernel",[t[t.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return Rr((()=>{if(2!==(t=t).length)throw new xp(`SimpleRNNCell expects 2 input Tensors, got ${t.length}.`);let n=t[1];t=t[0];const r=null!=e.training&&e.training;let s;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Pg({ones:()=>ti(t),rate:this.dropout,training:r})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Pg({ones:()=>ti(n),rate:this.recurrentDropout,training:r}));const a=this.dropoutMask,i=this.recurrentDropoutMask;s=Sd(null!=a?xa(t,a):t,this.kernel.read()),null!=this.bias&&(s=_d(s,this.bias.read())),null!=i&&(n=xa(n,i));let o=Pr(s,Sd(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]}))}getConfig(){const t=super.getConfig(),e={units:this.units,activation:Jm(this.activation),useBias:this.useBias,kernelInitializer:Zd(this.kernelInitializer),recurrentInitializer:Zd(this.recurrentInitializer),biasInitializer:Zd(this.biasInitializer),kernelRegularizer:rg(this.kernelRegularizer),recurrentRegularizer:rg(this.recurrentRegularizer),biasRegularizer:rg(this.biasRegularizer),activityRegularizer:rg(this.activityRegularizer),kernelConstraint:Kp(this.kernelConstraint),recurrentConstraint:Kp(this.recurrentConstraint),biasConstraint:Kp(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},t,e)}}Mg.className="SimpleRNNCell",Tr(Mg);class Dg extends Ag{constructor(t){t.cell=new Mg(t),super(t)}call(t,e){return Rr((()=>{null!=this.cell.dropoutMask&&(Mr(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Mr(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,r=null==e?null:e.training,s=null==e?null:e.initialState;return super.call(t,{mask:n,training:r,initialState:s})}))}static fromConfig(t,e){return new t(e)}}Dg.className="SimpleRNN",Tr(Dg);class Og extends Rg{constructor(t){if(super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.resetAfter)throw new xp("GRUCell does not support reset_after parameter set to true.");this.units=t.units,Bp(this.units,"units"),this.activation=Qm(void 0===t.activation?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=Qm(void 0===t.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=Qd(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Qd(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Qd(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=ag(t.kernelRegularizer),this.recurrentRegularizer=ag(t.recurrentRegularizer),this.biasRegularizer=ag(t.biasRegularizer),this.kernelConstraint=Yp(t.kernelConstraint),this.recurrentConstraint=Yp(t.recurrentConstraint),this.biasConstraint=Yp(t.biasConstraint),this.dropout=dd([1,fd([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=dd([1,fd([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.implementation=t.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){const e=(t=uf(t))[t.length-1];this.kernel=this.addWeight("kernel",[e,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return Rr((()=>{if(2!==(t=t).length)throw new xp(`GRUCell expects 2 input Tensors (inputs, h, c), got ${t.length}.`);const n=null!=e.training&&e.training;let r=t[1];t=t[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Pg({ones:()=>ti(t),rate:this.dropout,training:n,count:3})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Pg({ones:()=>ti(r),rate:this.recurrentDropout,training:n,count:3}));const s=this.dropoutMask,a=this.recurrentDropoutMask;let i,o,u;0<this.dropout&&this.dropout<1&&(t=xa(t,s[0]));let l=Sd(t,this.kernel.read());this.useBias&&(l=_d(l,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=xa(r,a[0]));const c=this.recurrentKernel.read(),[h,p]=Pi(c,[2*this.units,this.units],c.rank-1),d=Sd(r,h),[f,m,g]=Pi(l,3,l.rank-1),[y,b]=Pi(d,2,d.rank-1);i=this.recurrentActivation.apply(Pr(f,y)),o=this.recurrentActivation.apply(Pr(m,b));const x=Sd(xa(o,r),p);u=this.activation.apply(Pr(g,x));const w=Pr(xa(i,r),xa(Pr(1,Ta(i)),u));return[w,w]}))}getConfig(){const t=super.getConfig(),e={units:this.units,activation:Jm(this.activation),recurrentActivation:Jm(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Zd(this.kernelInitializer),recurrentInitializer:Zd(this.recurrentInitializer),biasInitializer:Zd(this.biasInitializer),kernelRegularizer:rg(this.kernelRegularizer),recurrentRegularizer:rg(this.recurrentRegularizer),biasRegularizer:rg(this.biasRegularizer),activityRegularizer:rg(this.activityRegularizer),kernelConstraint:Kp(this.kernelConstraint),recurrentConstraint:Kp(this.recurrentConstraint),biasConstraint:Kp(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},t,e)}}Og.className="GRUCell",Tr(Og);class Fg extends Ag{constructor(t){0===t.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new Og(t),super(t)}call(t,e){return Rr((()=>{null!=this.cell.dropoutMask&&(Mr(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Mr(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,r=null==e?null:e.training,s=null==e?null:e.initialState;return super.call(t,{mask:n,training:r,initialState:s})}))}static fromConfig(t,e){return 0===e.implmentation&&(e.implementation=1),new t(e)}}Fg.className="GRU",Tr(Fg);class Lg extends Rg{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,Bp(this.units,"units"),this.activation=Qm(void 0===t.activation?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=Qm(void 0===t.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=Qd(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Qd(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Qd(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=t.unitForgetBias,this.kernelRegularizer=ag(t.kernelRegularizer),this.recurrentRegularizer=ag(t.recurrentRegularizer),this.biasRegularizer=ag(t.biasRegularizer),this.kernelConstraint=Yp(t.kernelConstraint),this.recurrentConstraint=Yp(t.recurrentConstraint),this.biasConstraint=Yp(t.biasConstraint),this.dropout=dd([1,fd([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=dd([1,fd([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.implementation=t.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){var e;const n=(t=uf(t))[t.length-1];let r;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const t=this.biasInitializer,n=this.units;r=new((e=class extends Dd{apply(e,r){const s=t.apply([n]),a=(new Fd).apply([n]),i=t.apply([2*n]);return Id(Id(s,a),i)}}).className="CustomInit",e)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(t,e){return Rr((()=>{const n=null!=e.training&&e.training;if(3!==(t=t).length)throw new xp(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);let r=t[1];const s=t[2];t=t[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Pg({ones:()=>ti(t),rate:this.dropout,training:n,count:4})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Pg({ones:()=>ti(r),rate:this.recurrentDropout,training:n,count:4}));const a=this.dropoutMask,i=this.recurrentDropoutMask;let o,u,l,c;0<this.dropout&&this.dropout<1&&(t=xa(t,a[0]));let h=Sd(t,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=xa(r,i[0])),h=Pr(h,Sd(r,this.recurrentKernel.read())),this.useBias&&(h=_d(h,this.bias.read()));const[p,d,f,m]=Pi(h,4,h.rank-1);o=this.recurrentActivation.apply(p),u=this.recurrentActivation.apply(d),l=Pr(xa(u,s),xa(o,this.activation.apply(f))),c=this.recurrentActivation.apply(m);const g=xa(c,this.activation.apply(l));return[g,g,l]}))}getConfig(){const t=super.getConfig(),e={units:this.units,activation:Jm(this.activation),recurrentActivation:Jm(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Zd(this.kernelInitializer),recurrentInitializer:Zd(this.recurrentInitializer),biasInitializer:Zd(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:rg(this.kernelRegularizer),recurrentRegularizer:rg(this.recurrentRegularizer),biasRegularizer:rg(this.biasRegularizer),activityRegularizer:rg(this.activityRegularizer),kernelConstraint:Kp(this.kernelConstraint),recurrentConstraint:Kp(this.recurrentConstraint),biasConstraint:Kp(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},t,e)}}Lg.className="LSTMCell",Tr(Lg);class Bg extends Ag{constructor(t){0===t.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new Lg(t),super(t)}call(t,e){return Rr((()=>{null!=this.cell.dropoutMask&&(Mr(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Mr(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,r=null==e?null:e.training,s=null==e?null:e.initialState;return super.call(t,{mask:n,training:r,initialState:s})}))}static fromConfig(t,e){return 0===e.implmentation&&(e.implementation=1),new t(e)}}Bg.className="LSTM",Tr(Bg);class zg extends Rg{constructor(t){super(t),this.cells=t.cells}get stateSize(){const t=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?t.push(...e.stateSize):t.push(e.stateSize);return t}call(t,e){return Rr((()=>{let n=(t=t).slice(1);const r=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?r.push(n.splice(0,t.stateSize.length)):r.push(n.splice(0,1));r.reverse();const s=[];let a;for(let i=0;i<this.cells.length;++i){const o=this.cells[i];n=r[i],a=0===i?[t[0]].concat(n):[a[0]].concat(n),a=o.call(a,e),s.push(a.slice(1))}n=[];for(const t of s.slice().reverse())n.push(...t);return[a[0]].concat(n)}))}build(t){let e;sf(t)&&(t=t[0]),t=t,this.cells.forEach(((n,r)=>{id(`RNNCell_${r}`,(()=>{n.build(t),e=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,t=[t[0],e]}))})),this.built=!0}getConfig(){const t=super.getConfig(),e={cells:this.cells.map((t=>({className:t.getClassName(),config:t.getConfig()})))};return Object.assign({},t,e)}static fromConfig(t,e,n={}){const r=[];for(const t of e.cells)r.push(Mf(t,n));return new t({cells:r})}get trainableWeights(){if(!this.trainable)return[];const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.cells)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e.concat(t)}return t}getWeights(){const t=[];for(const e of this.cells)t.push(...e.weights);return hf(t)}setWeights(t){const e=[];for(const n of this.cells){const r=n.weights.length,s=t.splice(r);for(let t=0;t<n.weights.length;++t)e.push([n.weights[t],s[t]])}pf(e)}}function Pg(t){const{ones:e,rate:n,training:r=!1,count:s=1}=t,a=()=>$d(e(),n),i=()=>Ad(a,e,r);if(!s||s<=1)return Dr(i().clone());return Array(s).fill(void 0).map(i).map((t=>Dr(t.clone())))}zg.className="StackedRNNCells",Tr(zg);var Vg=function(t,e){var n={};for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&e.indexOf(r)<0&&(n[r]=t[r]);if(null!=t&&"function"==typeof Object.getOwnPropertySymbols){var s=0;for(r=Object.getOwnPropertySymbols(t);s<r.length;s++)e.indexOf(r[s])<0&&Object.prototype.propertyIsEnumerable.call(t,r[s])&&(n[r[s]]=t[r[s]])}return n};class Wg extends Ag{constructor(t){if(t.unroll)throw new wp("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(t.cell))throw new wp("It is not possible at the moment to stack convolutional cells.");super(t),this.inputSpec=[new df({ndim:5})]}call(t,e){return Rr((()=>{if(null!=this.cell.dropoutMask&&(Mr(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Mr(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),e&&e.constants)throw new xp("ConvRNN2D cell does not support constants");const n=null==e?null:e.mask,r=null==e?null:e.training,s=null==e?null:e.initialState;return super.call(t,{mask:n,training:r,initialState:s})}))}computeOutputShape(t){let e=this.computeSingleOutputShape(t);return this.returnSequences||(e=[e[0],...e.slice(2)]),this.returnState&&(e=[e,...Array(2).fill([t[0],...e.slice(-3)])]),e}getInitialState(t){return Rr((()=>{const{stateSize:e}=this.cell,n=t.shape,r=this.computeSingleOutputShape(n),s=Wa([r[0],...r.slice(2)]);return Array.isArray(e)?Array(e.length).fill(s):[s]}))}resetStates(t,e=!1){Rr((()=>{if(!this.stateful)throw new yp("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),s=[r[0],...r.slice(2)];if(null==n[0])throw new xp("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Wa(s))):this.states_=[Wa(s)];else if(null==t)Mr(this.states_),null!=this.keptStates&&(Mr(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Wa(s))):this.states_[0]=Wa(s);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new xp(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);e?this.keptStates.push(this.states_.slice()):Mr(this.states_);for(let e=0;e<this.states_.length;++e){const n=t[e],r=s;if(!d(n.shape,r))throw new xp(`State ${e} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[e]=n}}this.states_=this.states_.map((t=>Dr(t.clone())))}))}computeSingleOutputShape(t){const{dataFormat:e,filters:n,kernelSize:r,padding:s,strides:a,dilationRate:i}=this.cell,o="channelsFirst"===e,u=t[o?3:2],l=t[o?4:3],c=dg(u,r[0],s,a[0],i[0]),h=dg(l,r[1],s,a[1],i[1]);return[...t.slice(0,2),...o?[n,c,h]:[c,h,n]]}}Wg.className="ConvRNN2D";class Ug extends Lg{constructor(t){const{filters:e,kernelSize:n,strides:r,padding:s,dataFormat:a,dilationRate:i}=t;super(Object.assign({},t,{units:e})),this.filters=e,Bp(this.filters,"filters"),this.kernelSize=pg(n,2,"kernelSize"),this.kernelSize.forEach((t=>Bp(t,"kernelSize"))),this.strides=pg(r||1,2,"strides"),this.strides.forEach((t=>Bp(t,"strides"))),this.padding=s||"valid",rd(this.padding),this.dataFormat=a||"channelsLast",nd(this.dataFormat),this.dilationRate=pg(i||1,2,"dilationRate"),this.dilationRate.forEach((t=>Bp(t,"dilationRate")))}build(t){var e;t=uf(t);const n="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[n])throw new xp(`The channel dimension of the input should be defined. Found ${t[n]}`);const r=t[n],s=this.kernelSize.concat([r,4*this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const a=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",a,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let t;if(this.unitForgetBias){const n=this.biasInitializer,r=this.filters;t=new((e=class extends Dd{apply(t,e){return vd([n.apply([r]),Ua([r]),n.apply([2*r])])}}).className="CustomInit",e)}else t=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,t,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(t,e){return Rr((()=>{if(3!==t.length)throw new xp(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);const n=e.training||!1,r=t[0],s=t[1],a=t[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Pg({ones:()=>ti(r),rate:this.dropout,training:n,count:4}));const i=this.dropoutMask,o=(t,e,n)=>e&&e[n]?xa(e[n],t):t;let u=o(r,i,0),l=o(r,i,1),c=o(r,i,2),h=o(r,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Pg({ones:()=>ti(s),rate:this.recurrentDropout,training:n,count:4}));const p=this.recurrentDropoutMask;let d=o(s,p,0),f=o(s,p,1),m=o(s,p,2),g=o(s,p,3);const[y,b,x,w]=Pi(this.kernel.read(),4,3),[v,I,k,N]=this.useBias?Pi(this.bias.read(),4):[null,null,null,null];u=this.inputConv(u,y,v,this.padding),l=this.inputConv(l,b,I,this.padding),c=this.inputConv(c,x,k,this.padding),h=this.inputConv(h,w,N,this.padding);const[S,C,E,T]=Pi(this.recurrentKernel.read(),4,3);d=this.recurrentConv(d,S),f=this.recurrentConv(f,C),m=this.recurrentConv(m,E),g=this.recurrentConv(g,T);const _=this.recurrentActivation.apply(Pr(u,d)),$=this.recurrentActivation.apply(Pr(l,f)),A=Pr(xa($,a),xa(_,this.activation.apply(Pr(c,m)))),R=xa(this.recurrentActivation.apply(Pr(h,g)),this.activation.apply(A));return[R,R,A]}))}getConfig(){const t=super.getConfig(),{units:e}=t,n=Vg(t,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},n,r)}inputConv(t,e,n,r){const s=Os(t,e,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?_d(s,n,this.dataFormat):s}recurrentConv(t,e){return Os(t,e,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}Ug.className="ConvLSTM2DCell",Tr(Ug);class Gg extends Wg{constructor(t){const e=new Ug(t);super(Object.assign({},t,{cell:e}))}static fromConfig(t,e){return new t(e)}}Gg.className="ConvLSTM2D",Tr(Gg);class Hg extends bf{constructor(t){super(t),this.rate=Math.max(Math.min(t.rate,1),0),this.noiseShape=t.noiseShape,this.seed=t.seed,this.supportsMasking=!0}getNoiseShape(t){if(null==this.noiseShape)return this.noiseShape;const e=t.shape,n=[];for(let t=0;t<this.noiseShape.length;++t)n.push(null==this.noiseShape[t]?e[t]:this.noiseShape[t]);return n}call(t,e){return Rr((()=>{this.invokeCallHook(t,e);const n=of(t);if(0<this.rate&&this.rate<1){const t=null!=e.training&&e.training,r=this.getNoiseShape(n);return Ad((()=>$d(n,this.rate,r,this.seed)),(()=>n),t)}return t}))}getConfig(){const t={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},e=super.getConfig();return Object.assign(t,e),t}dispose(){return super.dispose()}}Hg.className="Dropout",Tr(Hg);class jg extends Hg{constructor(t){super(t),this.inputSpec=[{ndim:3}]}getNoiseShape(t){const e=t.shape;return[e[0],1,e[2]]}}jg.className="SpatialDropout1D",Tr(jg);class qg extends bf{constructor(t){if(super(t),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==t.batchInputShape&&null==t.inputShape&&null!=t.inputDim){let e=null;null!=t.batchSize&&(e=t.batchSize),this.batchInputShape=[e,t.inputDim]}this.units=t.units,Bp(this.units,"units"),this.activation=Qm(t.activation),null!=t.useBias&&(this.useBias=t.useBias),this.kernelInitializer=Qd(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Qd(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Yp(t.kernelConstraint),this.biasConstraint=Yp(t.biasConstraint),this.kernelRegularizer=ag(t.kernelRegularizer),this.biasRegularizer=ag(t.biasRegularizer),this.activityRegularizer=ag(t.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(t){const e=(t=uf(t))[t.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[e,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:e}}],this.built=!0}computeOutputShape(t){const e=(t=uf(t)).slice();return e[e.length-1]=this.units,e}call(t,e){return Rr((()=>{this.invokeCallHook(t,e);const n=of(t),r=Pp(this.activation.getClassName());let s;return null!=r?s=Sd(n,this.kernel.read(),r,this.bias?this.bias.read():null):(s=Sd(n,this.kernel.read()),null!=this.bias&&(s=_d(s,this.bias.read())),null!=this.activation&&(s=this.activation.apply(s))),s}))}getConfig(){const t={units:this.units,activation:Jm(this.activation),useBias:this.useBias,kernelInitializer:Zd(this.kernelInitializer),biasInitializer:Zd(this.biasInitializer),kernelRegularizer:rg(this.kernelRegularizer),biasRegularizer:rg(this.biasRegularizer),activityRegularizer:rg(this.activityRegularizer),kernelConstraint:Kp(this.kernelConstraint),biasConstraint:Kp(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}qg.className="Dense",Tr(qg);class Kg extends bf{constructor(t){super(t=t||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=t.dataFormat}computeOutputShape(t){t=uf(t);for(const e of t.slice(1))if(null==e)throw new xp(`The shape of the input to "Flatten" is not fully defined (got ${t.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[t[0],hd(t,1)]}call(t,e){return Rr((()=>{this.invokeCallHook(t,e);let n=of(t);if("channelsFirst"===this.dataFormat&&n.rank>1){const t=[0];for(let e=2;e<n.rank;++e)t.push(e);t.push(1),n=n.transpose(t)}return function(t){if(t.rank<=1)throw new xp(`batchFlatten requires a minimum rank of 2. Got rank: ${t.rank}.`);const e=[t.shape[0],hd(t.shape,1)];return t.reshape(e)}(n)}))}getConfig(){const t={};null!=this.dataFormat&&(t.dataFormat=this.dataFormat);const e=super.getConfig();return Object.assign(t,e),t}}Kg.className="Flatten",Tr(Kg);class Xg extends bf{constructor(t){super(t),this.supportsMasking=!0,this.activation=Qm(t.activation)}call(t,e){return Rr((()=>{this.invokeCallHook(t,e);const n=of(t);return this.activation.apply(n)}))}getConfig(){const t={activation:Jm(this.activation)},e=super.getConfig();return Object.assign(t,e),t}}Xg.className="Activation",Tr(Xg);class Yg extends bf{constructor(t){super(t),this.n=t.n,this.inputSpec=[{ndim:2}]}computeOutputShape(t){return[t[0],this.n,t[1]]}call(t,e){return Rr((()=>{return t=of(t),e=t,n=this.n,Rr((()=>{if(2!==e.shape.length)throw new xp(`repeat() expects a rank-2 tensor, but received a rank-${e.shape.length} tensor.`);return kd(yd(e,1),[1,n,1])}));var e,n}))}getConfig(){const t={n:this.n},e=super.getConfig();return Object.assign(t,e),t}}Yg.className="RepeatVector",Tr(Yg);class Jg extends bf{constructor(t){super(t),this.targetShape=t.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(t){return t<0||null==t}fixUnknownDimension(t,e){const n="Total size of new array must be unchanged.",r=e.slice();let s=1,a=null;for(let t=0;t<r.length;++t){const e=r[t];if(this.isUnknown(e)){if(null!==a)throw new xp("Can only specifiy one unknown dimension.");a=t}else s*=e}const i=hd(t);if(null!==a){if(0===s||i%s!=0)throw new xp(n);r[a]=i/s}else if(i!==s)throw new xp(n);return r}computeOutputShape(t){let e=!1;for(let n=0;n<t.length;++n)if(this.isUnknown(t[n])){e=!0;break}return e?t.slice(0,1).concat(this.targetShape):t.slice(0,1).concat(this.fixUnknownDimension(t.slice(1),this.targetShape))}call(t,e){return Rr((()=>{this.invokeCallHook(t,e);const n=of(t),r=n.shape,s=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return n.reshape(s)}))}getConfig(){const t={targetShape:this.targetShape},e=super.getConfig();return Object.assign(t,e),t}}Jg.className="Reshape",Tr(Jg);class Zg extends bf{constructor(t){if(super(t),null==t.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(t.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${t.dims} instead.`);const e=md(1,t.dims.length+1);if(!d(t.dims.slice().sort(),e))throw new Error("Invalid permutation `dims`: "+JSON.stringify(t.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=t.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new df({ndim:this.dims.length+1})]}computeOutputShape(t){const e=(t=uf(t)).slice();return this.dims.forEach(((n,r)=>{e[r+1]=t[n]})),e}call(t,e){return ur(of(t),this.dimsIncludingBatch)}getConfig(){const t={dims:this.dims},e=super.getConfig();return Object.assign(t,e),t}}Zg.className="Permute",Tr(Zg);class Qg extends bf{constructor(t){super(null==t?{}:t),this.supportsMasking=!0,this.maskValue=null!=t?null==t.maskValue?0:t.maskValue:0}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={maskValue:this.maskValue};return Object.assign(e,t),e}computeMask(t,e){const n=of(t);return Yr(Za(n,this.maskValue),-1)}call(t,e){return Rr((()=>{this.invokeCallHook(t,e);const n=of(t),r=Yr(Za(n,this.maskValue),-1,!0);return n.mul(r.asType(n.dtype))}))}}Qg.className="Masking",Tr(Qg);class ty extends bf{constructor(t){if(super(t),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==t.batchInputShape&&null==t.inputShape){let e=null;null!=t.batchSize&&(e=t.batchSize),null==t.inputLength?this.batchInputShape=[e,null]:this.batchInputShape=[e].concat(Cp(t.inputLength))}this.inputDim=t.inputDim,Bp(this.inputDim,"inputDim"),this.outputDim=t.outputDim,Bp(this.outputDim,"outputDim"),this.embeddingsInitializer=Qd(t.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=ag(t.embeddingsRegularizer),this.activityRegularizer=ag(t.activityRegularizer),this.embeddingsConstraint=Yp(t.embeddingsConstraint),this.maskZero=t.maskZero,this.supportsMasking=t.maskZero,this.inputLength=t.inputLength}build(t){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(t){}computeMask(t,e){return Rr((()=>this.maskZero?(t=of(t),Za(t,Qs(t))):null))}computeOutputShape(t){if(t=uf(t),null==this.inputLength)return[...t,this.outputDim];const e=Cp(this.inputLength);if(e.length!==t.length-1)throw new xp(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);{let n=0;for(let r=0;r<e.length;++r){const s=e[r],a=t[r+1];if(null!=s&&null!=a&&s!==a)throw new xp(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);null==s&&(e[n]=a),n++}}return[t[0],...e,this.outputDim]}call(t,e){return Rr((()=>{this.invokeCallHook(t,e);let n=of(t);"int32"!==n.dtype&&(n=gd(n,"int32"));return Cd(this.embeddings.read(),n.as1D()).reshape(uf(this.computeOutputShape(n.shape)))}))}getConfig(){const t={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Zd(this.embeddingsInitializer),embeddingsRegularizer:rg(this.embeddingsRegularizer),activityRegularizer:rg(this.activityRegularizer),embeddingsConstraint:Kp(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},e=super.getConfig();return Object.assign(t,e),t}}ty.className="Embedding",Tr(ty);class ey extends bf{constructor(t){super(t||{}),this.supportsMasking=!0}mergeFunction(t){throw new wp}computeElementwiseOpOutputShape(t,e){if(null==t||null==e)return null;if(t.length<e.length)return this.computeElementwiseOpOutputShape(e,t);if(0===e.length)return t;const n=t.slice(0,t.length-e.length);for(let r=0;r<e.length;++r){const s=t[t.length-e.length+r],a=e[r];if(null==s||null==a||s<0||a<0)n.push(null);else if(1===s)n.push(a);else if(1===a)n.push(s);else{if(s!==a)throw new xp("Operands could not be broadcast together with shapes "+JSON.stringify(t)+" "+JSON.stringify(e));n.push(s)}}return n}build(t){if(Array.isArray(t)&&!Array.isArray(t[0])&&(t=[uf(t)]),(t=t).length<2)throw new xp(`A merge layer should be called on an Array of at least 2 inputs. Got ${t.length} input(s).`);let e=[];for(const n of t)null!=n&&null!==n[0]&&e.push(n[0]);if(e=Dp(e),e.length>1)throw new xp(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(t)}.`);let n=null==t[0]?null:t[0].slice(1);for(let e=1;e<t.length;++e){const r=null==t[e]?null:t[e].slice(1);n=this.computeElementwiseOpOutputShape(n,r)}const r=t.map((t=>t.length));-1===t.indexOf(null)&&1===Dp(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(t,e){return Rr((()=>{if(t=t,this.reshapeRequired){const e=[],n=t.map((t=>t.rank));if(-1===n.indexOf(null)){const r=fd(n);for(let n of t){const t=n.rank;for(let e=0;e<r-t;++e)n=yd(n,1);e.push(n)}return this.mergeFunction(e)}{let n=!1;for(const r of t){const t=r.rank;if(null==t){const t=r.shape,s=t[0],a=t.slice(1).concat([s]);let i=r.reshape([s].concat(hd(t.slice(1))));i=ur(i,[1,0]),i=i.reshape(a),e.push(i),n=!0}else if(t>1){const s=md(1,t).concat([0]);e.push(ur(r,s)),n=!0}else e.push(r)}let r=this.mergeFunction(e);const s=r.rank;if(n)if(null==s){const t=r.shape,e=t[t.length-1],n=[e].concat(t.slice(0,t.length-1));r=ur(r.reshape([-1,e]),[1,0]).reshape(n)}else if(s>1){const t=[s-1].concat(md(0,s-1));r=ur(r,t)}return r}}return this.mergeFunction(t)}))}computeOutputShape(t){let e;e=null==(t=t)[0]?null:t[0].slice(1);for(let n=1;n<t.length;++n){const r=null==t[n]?null:t[n].slice(1);e=this.computeElementwiseOpOutputShape(e,r)}let n=[];for(const e of t)null!=e&&null!==e[0]&&n.push(e[0]);return n=Dp(n),e=1===n.length?n.concat(e):[null].concat(e),e}computeMask(t,e){return Rr((()=>{if(null==e)return null;if(!Array.isArray(e))throw new xp("`mask` should be an Array");if(!Array.isArray(t))throw new xp("`inputs` should be an Array");if(e.length!==t.length)throw new xp(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${t.length} vs ${e.length})`);if(e.every((t=>null==t)))return null;let n=(e=e.map((t=>null==t?t:sa(t,0))))[0];for(let t=1;t<e.length-1;++t)n=Fa(n,e[t]);return n}))}}class ny extends ey{constructor(t){super(t)}mergeFunction(t){return Rr((()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=Pr(e,t[n]);return e}))}}ny.className="Add",Tr(ny);class ry extends ey{constructor(t){super(t)}mergeFunction(t){return Rr((()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=xa(e,t[n]);return e}))}}ry.className="Multiply",Tr(ry);class sy extends ey{constructor(t){super(t)}mergeFunction(t){return Rr((()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=Pr(e,t[n]);return xa(1/t.length,e)}))}}sy.className="Average",Tr(sy);class ay extends ey{constructor(t){super(t)}mergeFunction(t){return Rr((()=>{let e=t[0];for(let n=1;n<t.length;++n)e=ba(e,t[n]);return e}))}}ay.className="Maximum",Tr(ay);class iy extends ey{constructor(t){super(t)}mergeFunction(t){return Rr((()=>{let e=t[0];for(let n=1;n<t.length;++n)e=ja(e,t[n]);return e}))}}iy.className="Minimum",Tr(iy);class oy extends ey{constructor(t){super(t),this.DEFAULT_AXIS=-1,null==t&&(t={}),this.axis=null==t.axis?this.DEFAULT_AXIS:t.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){if(!Array.isArray(t)||!Array.isArray(t[0])||1===t.length)throw new xp("A `Concatenate` layer should be called on a list of at least 2 inputs");t=t;let e=!0;for(const n of t)if(null!=n){e=!1;break}if(e)return;const n=[];for(let e=0;e<t.length;++e){const r=t[e].slice();r.splice(this.axis,1);let s=!1;for(const t of n)if(d(t,r)){s=!0;break}s||n.push(r)}if(n.length>1)throw new xp("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(t))}mergeFunction(t){return Rr((()=>vd(t,this.axis)))}computeOutputShape(t){if(!Array.isArray(t)||!Array.isArray(t[0]))throw new xp("A `Concatenate` layer should be called on a list of inputs.");const e=t,n=e[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(const t of e.slice(1)){if(null==n[r]||null==t[r]){n[r]=null;break}n[r]+=t[r]}return n}computeMask(t,e){if(null==e)return null;if(!Array.isArray(e))throw new xp("`mask` should be an array for Concatenate");if(!Array.isArray(t))throw new xp("`inputs` should be an array for Concatenate");if(e.length!==t.length)throw new xp(`Mismatch in the length of mask (${e.length}) and the legnth of inputs (${t.length})`);return Rr((()=>{let n=!0;if(e.forEach((t=>{null==t||(n=!1)})),n)return null;const r=[];for(let n=0;n<t.length;++n)null==e[n]?r.push(ti(t[n]).asType("bool")):e[n].rank<t[n].rank?r.push(sa(e[n],-1)):r.push(e[n]);const s=$s(r,this.axis);return Xr(s,-1,!1)}))}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}function uy(t,e){for(;t<0;)t+=e;return t}oy.className="Concatenate",Tr(oy);class ly extends ey{constructor(t){super(t),this.axes=t.axes,this.normalize=null!=t.normalize&&t.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){u(Array.isArray(t)&&2===t.length&&Array.isArray(t[0])&&Array.isArray(t[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const e=t[0],n=t[1];if(e.length>3||n.length>3)throw new wp("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(e,n);if(e[r[0]]!==n[r[1]])throw new xp(`Dimension incompatibility: ${e[r[0]]} !== ${n[r[1]]}`)}mergeFunction(t){if(2!==t.length)throw new xp(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${t.length} input(s).`);let e,n=t[0],r=t[1];return e=Array.isArray(this.axes)?this.axes.map(((e,n)=>uy(e,t[n].shape.length))):[uy(this.axes,n.shape.length),uy(this.axes,r.shape.length)],this.normalize&&(n=Df(n,e[0]),r=Df(r,e[1])),function(t,e,n){if(t.shape.length>3||e.shape.length>3)throw new wp("batchDot is not implemented for tensors of 4D or higher rank yet");if(u(t.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${t.shape.length}`)),u(t.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${e.shape.length}`)),"number"==typeof n&&(n=[n,n]),"complex64"===t.dtype||"complex64"===e.dtype)throw new wp("batchDot is not implemented for complex64-type Tensors yet.");const r=t.shape.length,s=e.shape.length;null==n&&(n=[r-1,s-2]);const a=n;return Rr((()=>{let n,i;if(r>s){n=r-s;const t=[];for(let e=0;e<n;++e)t.push(1);e=e.reshape(e.shape.concat(t))}else if(s>r){n=s-r;const e=[];for(let t=0;t<n;++t)e.push(1);t=t.reshape(t.shape.concat(e))}else n=0;if(2===t.shape.length&&2===e.shape.length)i=a[0]===a[1]?t.mul(e).sum(a[0]):t.transpose([1,0]).mul(e).sum(a[1]);else{const n=a[0]!==t.shape.length-1,r=a[1]===e.shape.length-1;i=t.matMul(e,n,r)}if(n>0){let t;t=r>s?r+s-3:r-1;const e=[];for(let r=t;r<t+n;++r)e.push(r);i=i.squeeze(e)}return 1===i.shape.length&&(i=i.expandDims(1)),i}))}(n,r,e)}interpretAxes(t,e){let n;return n=Array.isArray(this.axes)?this.axes:[uy(this.axes,t.length),uy(this.axes,e.length)],n}computeOutputShape(t){u(Array.isArray(t)&&2===t.length&&Array.isArray(t[0])&&Array.isArray(t[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const e=t[0].slice(),n=t[1].slice();if(e.length>3||n.length>3)throw new wp("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(e,n);e.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);const s=e.concat(n);return 1===s.length&&s.push(1),s}computeMask(t,e){return null}getConfig(){const t={axes:this.axes,normalize:this.normalize},e=super.getConfig();return Object.assign(t,e),t}}ly.className="Dot",Tr(ly);class cy extends bf{constructor(t){super(t),this.supportsMasking=!0,this.stddev=t.stddev}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={stddev:this.stddev};return Object.assign(e,t),e}call(t,e){return Rr((()=>{this.invokeCallHook(t,e);const n=of(t);return Ad((()=>Nd(n.shape,0,this.stddev).add(n)),(()=>n),e.training||!1)}))}}cy.className="GaussianNoise",Tr(cy);class hy extends bf{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return Rr((()=>{this.invokeCallHook(t,e);const n=of(t);if(this.rate>0&&this.rate<1){return Ad((()=>{const t=Math.sqrt(this.rate/(1-this.rate));return n.mul(Nd(n.shape,1,t))}),(()=>n),e.training||!1)}return n}))}}hy.className="GaussianDropout",Tr(hy);class py extends bf{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate,this.noiseShape=t.noiseShape}_getNoiseShape(t){return this.noiseShape||of(t).shape}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return Rr((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(t);return Ad((()=>{const e=of(t),r=-1.7580993408473766;let s=da(gi(n),this.rate);s=gd(s,"float32");const a=((1-this.rate)*(1+this.rate*r**2))**-.5,i=-a*r*this.rate;return e.mul(s).add(s.add(-1).mul(r)).mul(a).add(i)}),(()=>of(t)),e.training||!1)}return t}))}}function dy(t,e,n,r,s,a=.001){let i;if(2===t.rank)i=Is(t,e,n,r,s,a);else if(3===t.rank)i=ks(t,e,n,r,s,a);else{if(4!==t.rank)throw new wp(`batchNormalization is not implemented for array of rank ${t.rank} yet`);i=Ns(t,e,n,r,s,a)}return i}function fy(t,e,n,r,s=.001){return d(r.slice().sort(),md(0,t.rank-1))?function(t,e,n,r,s=.001){return Rr((()=>{const a=Ya(t,r),i=a.mean,o=a.variance;return[dy(t,i,o,n,e,s),i,o]}))}(t,e,n,r,s):function(t,e,n,r,s=.001){return Rr((()=>{const a=Ya(t,r),i=a.mean,o=a.variance,u=[];for(const e of md(0,t.rank))-1!==r.indexOf(e)?u.push(1):u.push(t.shape[e]);const l=i.reshape(u),c=o.reshape(u),h=null==e?null:e.reshape(u),p=null==n?null:n.reshape(u);return[dy(t,l,c,p,h,s),i,o]}))}(t,e,n,r,s)}py.className="AlphaDropout",Tr(py);class my extends bf{constructor(t){null==t&&(t={}),super(t),this.supportsMasking=!0,this.axis=null==t.axis?-1:t.axis,this.momentum=null==t.momentum?.99:t.momentum,this.epsilon=null==t.epsilon?.001:t.epsilon,this.center=null==t.center||t.center,this.scale=null==t.scale||t.scale,this.betaInitializer=Qd(t.betaInitializer||"zeros"),this.gammaInitializer=Qd(t.gammaInitializer||"ones"),this.movingMeanInitializer=Qd(t.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Qd(t.movingVarianceInitializer||"ones"),this.betaConstraint=Yp(t.betaConstraint),this.gammaConstraint=Yp(t.gammaConstraint),this.betaRegularizer=ag(t.betaRegularizer),this.gammaRegularizer=ag(t.gammaRegularizer)}build(t){t=uf(t);const e=this.axis>=0?this.axis:this.axis+t.length,n=t[e];if(null==n)throw new xp(`Axis ${e} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(t)}.`);this.inputSpec=[new df({ndim:t.length,axes:{[e]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(t,e){return Rr((()=>{const n=null!=e.training&&e.training,r=of(t),s=r.shape,a=s.length,i=md(0,a),o=this.axis>=0?this.axis:this.axis+a;i.splice(o,1);const u=Ip(1,a);u[o]=s[o];const l=i.slice();l.sort();const c=!d(l,md(0,a).slice(0,a-1));if(!n)return(()=>{if(c){const t=this.movingMean.read().reshape(u),e=this.movingVariance.read().reshape(u),n=this.center?this.beta.read().reshape(u):null,s=this.scale?this.gamma.read().reshape(u):null;return dy(r,t,e,n,s,this.epsilon)}return dy(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[h,p,f]=fy(r,this.gamma.read(),this.beta.read(),i,this.epsilon),m=(t,e,n)=>{Rr((()=>{const r=1-n,s=t.read(),a=s.sub(e).mul(r);t.write(s.sub(a))}))};return(()=>{m(this.movingMean,p,this.momentum),m(this.movingVariance,f,this.momentum)})(),h}))}getConfig(){const t={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Zd(this.betaInitializer),gammaInitializer:Zd(this.gammaInitializer),movingMeanInitializer:Zd(this.movingMeanInitializer),movingVarianceInitializer:Zd(this.movingVarianceInitializer),betaRegularizer:rg(this.betaRegularizer),gammaRegularizer:rg(this.gammaRegularizer),betaConstraint:Kp(this.betaConstraint),gammaConstraint:Kp(this.gammaConstraint)},e=super.getConfig();return Object.assign(t,e),t}}my.className="BatchNormalization",Tr(my);class gy extends bf{constructor(t){if(null==t&&(t={}),super(t),this.axis=null==t.axis?-1:t.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const t of this.axis)if(!Number.isInteger(t))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==t.epsilon?.001:t.epsilon,this.center=null==t.center||t.center,this.scale=null==t.scale||t.scale,this.betaInitializer=Qd(t.betaInitializer||"zeros"),this.gammaInitializer=Qd(t.gammaInitializer||"ones"),this.betaRegularizer=ag(t.betaRegularizer),this.gammaRegularizer=ag(t.gammaRegularizer),this.supportsMasking=!0}build(t){const e=(t=uf(t)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let t=0;t<this.axis.length;++t)this.axis[t]<0&&(this.axis[t]+=e);for(const t of this.axis)if(t<0||t>=e)throw new Error(`Invalid axis: ${t}`);if(this.axis.length!==Dp(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map((e=>t[e]));this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,true):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,true):this.beta=null,this.built=!0}call(t,e){const n=of(t),r=n.shape,s=r.length;return Rr((()=>{let{mean:t,variance:e}=Ya(n,this.axis,!0);const a=Ip(1,s);for(const t of this.axis)a[t]=r[t];const i=t=>null!=t&&t.shape.length!==s&&this.axis!==[s-1]?t.reshape(a):t;let o=i(this.gamma.read()),u=i(this.beta.read());const l=[],c=[];for(let t=0;t<s;++t)-1!==this.axis.indexOf(t)?(l.push(r[t]),c.push(1)):(l.push(1),c.push(r[t]));return t=t.tile(l),e=e.tile(l),o=o.tile(c),u=u.tile(c),dy(n,t,e,u,o,this.epsilon)}))}getConfig(){const t={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Zd(this.betaInitializer),gammaInitializer:Zd(this.gammaInitializer),betaRegularizer:rg(this.betaRegularizer),gammaRegularizer:rg(this.gammaRegularizer)},e=super.getConfig();return Object.assign(t,e),t}}gy.className="LayerNormalization",Tr(gy);class yy extends bf{constructor(t){if(null==t&&(t={}),super(t),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,null==t.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof t.padding)this.padding=[[t.padding,t.padding],[t.padding,t.padding]];else{if(t.padding=t.padding,2!==t.padding.length)throw new xp(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${t.padding.length} array.`);let e,n;if("number"==typeof t.padding[0])e=[t.padding[0],t.padding[0]],n=[t.padding[1],t.padding[1]];else{if(t.padding=t.padding,2!==t.padding[0].length)throw new xp(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${t.padding[0].length} array.`);if(e=t.padding[0],2!==t.padding[1].length)throw new xp(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${t.padding[1].length} array.`);n=t.padding[1]}this.padding=[e,n]}this.inputSpec=[new df({ndim:4})]}computeOutputShape(t){let e,n;return t=uf(t),"channelsFirst"===this.dataFormat?(e=null!=t[2]&&t[2]>=0?t[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=t[3]&&t[3]>=0?t[3]+this.padding[1][0]+this.padding[1][1]:null,[t[0],t[1],e,n]):(e=null!=t[1]&&t[1]>=0?t[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=t[2]&&t[2]>=0?t[2]+this.padding[1][0]+this.padding[1][1]:null,[t[0],e,n,t[3]])}call(t,e){return Rr((()=>{return e=of(t),n=this.padding,r=this.dataFormat,Rr((()=>{if(4!==e.rank)throw new xp(`temporalPadding expects input tensor to be 4-D, but received a ${e.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new xp("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==r&&(r="channelsLast"),"channelsLast"!==r&&"channelsFirst"!==r)throw new xp(`Unknown data format: ${r}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let t;return t="channelsFirst"===r?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],ei(e,t)}));var e,n,r}))}getConfig(){const t={padding:this.padding,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}function by(t,e,n,r,s,a){return Rr((()=>{let i;nd(s),sd(a),rd(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==a&&(a="max"),t=mg(t,s);const o="same"===r?"same":"valid";return i="max"===a?za(t,e,n,o):ys(t,e,n,o),"channelsFirst"===s&&(i=ur(i,[0,3,1,2])),i}))}function xy(t,e,n,r,s,a){return Rr((()=>{let i;nd(s),sd(a),rd(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==a&&(a="max"),t=gg(t,s);const o="same"===r?"same":"valid";return i="max"===a?Pa(t,e,n,o):bs(t,e,n,o),"channelsFirst"===s&&(i=ur(i,[0,4,1,2,3])),i}))}yy.className="ZeroPadding2D",Tr(yy);class wy extends bf{constructor(t){if(null==t.poolSize&&(t.poolSize=2),super(t),"number"==typeof t.poolSize)this.poolSize=[t.poolSize];else{if(!Array.isArray(t.poolSize)||1!==t.poolSize.length||"number"!=typeof t.poolSize[0])throw new xp(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.poolSize)}`);this.poolSize=t.poolSize}if(Bp(this.poolSize,"poolSize"),null==t.strides)this.strides=this.poolSize;else if("number"==typeof t.strides)this.strides=[t.strides];else{if(!Array.isArray(t.strides)||1!==t.strides.length||"number"!=typeof t.strides[0])throw new xp(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.strides)}`);this.strides=t.strides}Bp(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,rd(this.padding),this.inputSpec=[new df({ndim:3})]}computeOutputShape(t){const e=dg((t=uf(t))[1],this.poolSize[0],this.padding,this.strides[0]);return[t[0],e,t[2]]}call(t,e){return Rr((()=>{this.invokeCallHook(t,e),t=yd(of(t),2);const n=this.poolingFunction(of(t),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Gi(n,[2])}))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides},e=super.getConfig();return Object.assign(t,e),t}}class vy extends wy{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return nd(s),rd(r),by(t,e,n,r,s,"max")}}vy.className="MaxPooling1D",Tr(vy);class Iy extends wy{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return nd(s),rd(r),by(t,e,n,r,s,"avg")}}Iy.className="AveragePooling1D",Tr(Iy);class ky extends bf{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(2!==t.strides.length)throw new xp(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides];Bp(this.poolSize,"poolSize"),Bp(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,nd(this.dataFormat),rd(this.padding),this.inputSpec=[new df({ndim:4})]}computeOutputShape(t){t=uf(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2];return e=dg(e,this.poolSize[0],this.padding,this.strides[0]),n=dg(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,n]:[t[0],e,n,t[3]]}call(t,e){return Rr((()=>(this.invokeCallHook(t,e),this.poolingFunction(of(t),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class Ny extends ky{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return nd(s),rd(r),by(t,e,n,r,s,"max")}}Ny.className="MaxPooling2D",Tr(Ny);class Sy extends ky{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return nd(s),rd(r),by(t,e,n,r,s,"avg")}}Sy.className="AveragePooling2D",Tr(Sy);class Cy extends bf{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(3!==t.strides.length)throw new xp(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides,t.strides];Bp(this.poolSize,"poolSize"),Bp(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,nd(this.dataFormat),rd(this.padding),this.inputSpec=[new df({ndim:5})]}computeOutputShape(t){t=uf(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2],r="channelsFirst"===this.dataFormat?t[4]:t[3];return e=dg(e,this.poolSize[0],this.padding,this.strides[0]),n=dg(n,this.poolSize[1],this.padding,this.strides[1]),r=dg(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,n,r]:[t[0],e,n,r,t[4]]}call(t,e){return Rr((()=>(this.invokeCallHook(t,e),this.poolingFunction(of(t),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class Ey extends Cy{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return nd(s),rd(r),xy(t,e,n,r,s,"max")}}Ey.className="MaxPooling3D",Tr(Ey);class Ty extends Cy{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return nd(s),rd(r),xy(t,e,n,r,s,"avg")}}Ty.className="AveragePooling3D",Tr(Ty);class _y extends bf{constructor(t){super(t),this.inputSpec=[new df({ndim:3})]}computeOutputShape(t){return[t[0],t[2]]}call(t,e){throw new wp}}class $y extends _y{constructor(t){super(t||{})}call(t,e){return Rr((()=>{const e=of(t);return Ga(e,1)}))}}$y.className="GlobalAveragePooling1D",Tr($y);class Ay extends _y{constructor(t){super(t||{})}call(t,e){return Rr((()=>{const e=of(t);return Ra(e,1)}))}}Ay.className="GlobalMaxPooling1D",Tr(Ay);class Ry extends bf{constructor(t){super(t),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,nd(this.dataFormat),this.inputSpec=[new df({ndim:4})]}computeOutputShape(t){return t=t,"channelsLast"===this.dataFormat?[t[0],t[3]]:[t[0],t[1]]}call(t,e){throw new wp}getConfig(){const t={dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class My extends Ry{call(t,e){return Rr((()=>{const e=of(t);return"channelsLast"===this.dataFormat?Ga(e,[1,2]):Ga(e,[2,3])}))}}My.className="GlobalAveragePooling2D",Tr(My);class Dy extends Ry{call(t,e){return Rr((()=>{const e=of(t);return"channelsLast"===this.dataFormat?Ra(e,[1,2]):Ra(e,[2,3])}))}}Dy.className="GlobalMaxPooling2D",Tr(Dy);class Oy extends bf{constructor(t){super(t),this.layer=t.layer}build(t){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(t){null!=this.layer&&(this.layer.trainable=t)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(t){this.layer.setWeights(t)}getConfig(){const t={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},e=super.getConfig();return Object.assign(t,e),t}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(t)}static fromConfig(t,e,n={}){const r=Mf(e.layer,n);delete e.layer;const s={layer:r};return Object.assign(s,e),new t(s)}}class Fy extends Oy{constructor(t){super(t),this.supportsMasking=!0}build(t){if((t=uf(t)).length<3)throw new xp(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(t)}`);this.inputSpec=[{shape:t}];const e=[t[0]].concat(t.slice(2));this.layer.built||(this.layer.build(e),this.layer.built=!0),super.build(t)}computeOutputShape(t){const e=[(t=uf(t))[0]].concat(t.slice(2)),n=this.layer.computeOutputShape(e),r=t[1];return[n[0],r].concat(n.slice(1))}call(t,e){return Rr((()=>$g(((t,n)=>[of(this.layer.call(t,e)),[]]),t=of(t),[],!1,null,null,!1,!0)[1]))}}Fy.className="TimeDistributed",Tr(Fy);class Ly extends Oy{constructor(t){super(t);const e=t.layer.getConfig(),n={};n.className=t.layer.getClassName(),n.config=e,this.forwardLayer=Mf(n),e.goBackwards=!0!==e.goBackwards;const r={};var s;if(r.className=t.layer.getClassName(),r.config=e,this.backwardLayer=Mf(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===t.mergeMode?"concat":t.mergeMode,s=this.mergeMode,Fp(td,"BidirectionalMergeMode",s),t.weights)throw new wp("weights support is not implemented for Bidirectional layer yet.");this._stateful=t.layer.stateful,this.returnSequences=t.layer.returnSequences,this.returnState=t.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=t.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(t){this._trainable=t,null!=this.forwardLayer&&(this.forwardLayer.trainable=t),null!=this.backwardLayer&&(this.backwardLayer.trainable=t)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(t){const e=t.length,n=Math.floor(e/2);this.forwardLayer.setWeights(t.slice(0,n)),this.backwardLayer.setWeights(t.slice(n))}computeOutputShape(t){let e,n,r,s=this.forwardLayer.computeOutputShape(t);return Array.isArray(s)&&Array.isArray(s[0])||(s=[s]),s=s,this.returnState?(r=s.slice(1),e=s[0]):e=s[0],e=e,"concat"===this.mergeMode?(e[e.length-1]*=2,n=[e]):n=null==this.mergeMode?[e,e.slice()]:[e],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[e].concat(r).concat(r.slice()):Sp(n)}apply(t,e){let n=null==e?null:e.initialState,r=null==e?null:e.constants;null==e&&(e={});const s=_g(t,n,r,this.numConstants);if(t=s.inputs,n=s.initialState,r=s.constants,Array.isArray(t)&&(n=t.slice(1),t=t[0]),(null==n||0===n.length)&&null==r)return super.apply(t,e);const a=[],i=[];if(null!=n){const t=n.length;if(t%2>0)throw new xp("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");e.initialState=n,a.push(...n);const r=n.map((t=>new df({shape:t.shape})));this.forwardLayer.stateSpec=r.slice(0,t/2),this.backwardLayer.stateSpec=r.slice(t/2),i.push(...r)}if(null!=r)throw new wp("Support for constants in Bidirectional layers is not implemented yet.");const o=a[0]instanceof ff;for(const t of a)if(t instanceof ff!==o)throw new xp("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[t].concat(a),r=this.inputSpec.concat(i),s=this.inputSpec;this.inputSpec=r;const o=super.apply(n,e);return this.inputSpec=s,o}return super.apply(t,e)}call(t,e){return Rr((()=>{const n=e.initialState;let r,s,a,i;if(null==n)r=this.forwardLayer.call(t,e),s=this.backwardLayer.call(t,e);else{const a=n.slice(0,n.length/2),i=n.slice(n.length/2);r=this.forwardLayer.call(t,Object.assign(e,{initialState:a})),s=this.backwardLayer.call(t,Object.assign(e,{initialState:i}))}return this.returnState&&(Array.isArray(r)&&(a=r.slice(1).concat(s.slice(1))),r=r[0],s=s[0]),this.returnSequences&&(s=vi(s,1)),"concat"===this.mergeMode?i=vd([r,s]):"sum"===this.mergeMode?i=Pr(r,s):"ave"===this.mergeMode?i=xa(.5,Pr(r,s)):"mul"===this.mergeMode?i=xa(r,s):null==this.mergeMode&&(i=[r,s]),this.returnState?null==this.mergeMode?i.concat(a):[i].concat(a):i}))}resetStates(t){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(t){id(this.forwardLayer.name,(()=>{this.forwardLayer.build(t)})),id(this.backwardLayer.name,(()=>{this.backwardLayer.build(t)})),this.built=!0}computeMask(t,e){let n;if(Array.isArray(e)&&(e=e[0]),n=this.returnSequences?null==this.mergeMode?[e,e]:e:null==this.mergeMode?[null,null]:null,this.returnState){const t=this.forwardLayer.states.map((t=>null));return Array.isArray(n)?n.concat(t).concat(t):[n].concat(t).concat(t)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(t),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(t)}getConfig(){const t={mergeMode:this.mergeMode},e=super.getConfig();return Object.assign(t,e),t}static fromConfig(t,e){const n=Mf(e.layer);if(delete e.layer,null!=e.numConstants)throw new wp("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=e;return r.layer=n,new t(r)}}function By(t,e){return zy(t,e)}function zy(t,e,n=new Map,r=new Set){if(null==t)return null;if(r.has(t))throw new Error("Circular references are not supported.");if(n.has(t))return n.get(t);const s=e(t);if(s.recurse&&null!==s.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(s.recurse){if(Uy(t)){const s=Array.isArray(t)?[]:{};r.add(t);for(const a in t){const i=zy(t[a],e,n,r);s[a]=i}return r.delete(t),s}throw new Error(`Can't recurse into non-iterable type: ${t}`)}return n.set(t,s.value),s.value}function Py(t,e=Wy){return Vy(t,e)}function Vy(t,e,n=new Set){const r=t[0];if(n.has(r))throw new Error("Circular references are not supported.");const s=e(t);if(s.recurse&&null!==s.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(s.recurse){if(Uy(r)){const s=Array.isArray(r)?[]:{};n.add(r);for(const a in r){const r=Vy(t.map((t=>t[a])),e,n);s[a]=r}return n.delete(r),s}throw new Error(`Can't recurse into non-iterable type: ${r}`)}return s.value}function Wy(t){return null===t?null:Uy(t[0])?{value:null,recurse:!0}:{value:t,recurse:!1}}function Uy(t){return null!=t&&!ArrayBuffer.isView(t)&&(Array.isArray(t)||"object"==typeof t&&!(t instanceof Ot))}function Gy(t){return t instanceof Ot?{value:t.clone(),recurse:!1}:Uy(t)?{value:null,recurse:!0}:{value:t,recurse:!1}}Ly.className="Bidirectional",Tr(Ly);class Hy{constructor(t){if(this.capacity=t,this.begin=0,this.end=0,null==t)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(t<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(t),this.doubledCapacity=2*t}wrap(t){for(;t<0;)t+=this.doubledCapacity;return t%this.doubledCapacity}get(t){if(t<0)throw new RangeError("Can't get item at a negative index.");return this.data[t%this.capacity]}set(t,e){if(t<0)throw new RangeError("Can't set item at a negative index.");this.data[t%this.capacity]=e}length(){let t=this.end-this.begin;return t<0&&(t=this.doubledCapacity+t),t}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,t),this.end=this.wrap(this.end+1)}pushAll(t){for(const e of t)this.push(e)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const t=this.get(this.end);return this.set(this.end,void 0),t}unshift(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,t)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),t}shuffleExcise(t){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.wrap(this.begin+t),n=this.get(e);return this.set(e,this.pop()),n}}class jy extends Hy{constructor(){super(jy.INITIAL_CAPACITY)}isFull(){return!1}push(t){super.isFull()&&this.expand(),super.push(t)}unshift(t){super.isFull()&&this.expand(),super.unshift(t)}expand(){const t=2*this.capacity,e=new Array(t),n=this.length();for(let t=0;t<n;t++)e[t]=this.get(this.wrap(this.begin+t));this.data=e,this.capacity=t,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}jy.INITIAL_CAPACITY=32;class qy{async toArray(){const t=[];let e=await this.next();for(;!e.done;)t.push(e.value),e=await this.next();return t}async toArrayForTest(){const t=this.prefetch(100),e=[];let n=await t.next();for(;!n.done;)e.push(n.value),n=await t.next();return e}async resolveFully(){let t=await this.next();for(;!t.done;)t=await this.next()}async resolveWhile(t){let e=await this.next(),n=t(e.value);for(;!e.done&&n;)e=await this.next(),n=t(e.value)}handleErrors(t){return new nb(this,t)}filter(t){return new tb(this,t)}map(t){return new eb(this,t)}mapAsync(t){return new rb(this,t)}serialMapAsync(t){return new rb(this,t).serial()}flatmap(t){return new ab(this,t)}async forEachAsync(t){return this.map(t).resolveFully()}async serialForEach(t){return this.serialMapAsync(t).resolveWhile((t=>!0===t))}rowMajorBatch(t,e=!0){return new Qy(this,t,e)}columnMajorBatch(t,e=!0,n=Wy){return this.rowMajorBatch(t,e).map((t=>Py(t,n)))}concatenate(t,e){return new ib(new Ky([this,t]),e)}take(t){return t<0||null==t?this:new Zy(this,t)}skip(t){return t<0||null==t?this:new Jy(this,t)}prefetch(t){return new lb(this,t)}shuffle(t,e){return new cb(this,t,e)}serial(){return new Yy(this)}}class Ky extends qy{constructor(t){super(),this.items=t,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const t=this.items[this.trav];return this.trav++,{value:(e=t,By(e,Gy)),done:!1};var e}}class Xy extends qy{constructor(t){super(),this.nextFn=t}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(t){throw t.message=`Error thrown while iterating through a dataset: ${t.message}`,t}}}class Yy extends qy{constructor(t){super(),this.upstream=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class Jy extends qy{constructor(t,e){super(),this.upstream=t,this.maxCount=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const t=await this.upstream.next();if(t.done)return t;Mr(t.value)}return this.upstream.next()}}class Zy extends qy{constructor(t,e){super(),this.upstream=t,this.maxCount=e,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class Qy extends qy{constructor(t,e,n=!0){super(),this.upstream=t,this.batchSize=e,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const t=[];for(;t.length<this.batchSize;){const e=await this.upstream.next();if(e.done)return this.enableSmallLastBatch&&t.length>0?{value:t,done:!1}:{value:null,done:!0};t.push(e.value)}return{value:t,done:!1}}}class tb extends qy{constructor(t,e){super(),this.upstream=t,this.predicate=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const t=await this.upstream.next();if(t.done||this.predicate(t.value))return t;Mr(t.value)}}}class eb extends qy{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return`${this.upstream.summary()} -> Map`}async next(){const t=await this.upstream.next();if(t.done)return{value:null,done:!0};const e=Zt(t.value),n=this.transform(t.value),r=Zt(n);for(const t of e)Jt(t,r)||t.dispose();return{value:n,done:!1}}}class nb extends qy{constructor(t,e){super(),this.upstream=t,this.handler=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(t){if(!this.handler(t))return{value:null,done:!0}}}}class rb extends qy{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const t=await this.upstream.next();if(t.done)return{value:null,done:!0};const e=Zt(t.value),n=await this.transform(t.value),r=Zt(n);for(const t of e)Jt(t,r)||t.dispose();return{value:n,done:!1}}}class sb extends qy{constructor(){super(),this.outputQueue=new jy,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class ab extends sb{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const t=await this.upstream.next();if(t.done)return!1;const e=Zt(t.value),n=this.transform(t.value),r=Zt(n);this.outputQueue.pushAll(n);for(const t of e)Jt(t,r)||t.dispose();return!0}}class ib extends qy{constructor(t,e){super(),this.baseErrorHandler=e,this.lastRead=null,this.iterator=null,this.moreIterators=t}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(t){if(await t,null==this.iterator){const t=await this.moreIterators.next();if(t.done)return{value:null,done:!0};this.iterator=t.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const e=await this.iterator.next();return e.done?(this.iterator=null,this.readFromChain(t)):e}}var ob,ub;(ub=ob||(ob={}))[ub.FAIL=0]="FAIL",ub[ub.SHORTEST=1]="SHORTEST",ub[ub.LONGEST=2]="LONGEST";class lb extends qy{constructor(t,e){super(),this.upstream=t,this.bufferSize=e,this.buffer=new Hy(e)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const t=this.upstream.next();this.buffer.push(t)}}next(){return this.refill(),this.buffer.shift()}}class cb extends lb{constructor(t,e,n){super(t,e),this.upstream=t,this.windowSize=e,this.upstreamExhausted=!1,this.random=ai.alea(n||wt().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(t){return Math.floor(this.random()*t)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const t=this.chooseIndex(),e=await this.buffer.shuffleExcise(t);if(!e.done)return this.refill(),e;this.upstreamExhausted=!0}return{value:null,done:!0}}}class hb{constructor(){this.size=null}batch(t,e=!0){const n=this;let r;return u(t>0,(()=>`batchSize needs to be positive, but it is\n      ${t}`)),r=this.size===1/0||null==this.size?this.size:e?Math.ceil(this.size/t):Math.floor(this.size/t),pb((async()=>(await n.iterator()).columnMajorBatch(t,e,db)),r)}concatenate(t){const e=this;let n;return n=this.size===1/0||t.size===1/0?1/0:null!=this.size&&null!=t.size?this.size+t.size:null,pb((async()=>(await e.iterator()).concatenate(await t.iterator())),n)}filter(t){const e=this;let n;return n=this.size===1/0?1/0:null,pb((async()=>(await e.iterator()).filter((e=>Rr((()=>t(e)))))),n)}async forEachAsync(t){return(await this.iterator()).forEachAsync(t)}map(t){const e=this;return pb((async()=>(await e.iterator()).map((e=>Rr((()=>t(e)))))),this.size)}mapAsync(t){const e=this;return pb((async()=>(await e.iterator()).mapAsync(t)),this.size)}prefetch(t){if(null==t)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const e=this;return pb((async()=>(await e.iterator()).prefetch(t)),this.size)}repeat(t){const e=this;let n;return n=null!=this.size&&t>0?this.size*t:0===t?0:null!=this.size&&(void 0===t||t<0)?1/0:null,pb((async()=>{const n=new Xy((async()=>({value:await e.iterator(),done:!1})));var r,s;return r=n.take(t),new ib(r,s)}),n)}skip(t){const e=this;let n;return n=null!=this.size&&t>=0&&this.size>=t?this.size-t:null!=this.size&&(this.size<t||void 0===t||t<0)?0:null,pb((async()=>(await e.iterator()).skip(t)),n)}shuffle(t,e,n=!0){if(null==t||t<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const r=this,s=ai.alea(e||wt().toString());return pb((async()=>{let e=s.int32();return n&&(e+=s.int32()),(await r.iterator()).shuffle(t,e.toString())}),this.size)}take(t){const e=this;let n;return n=null!=this.size&&this.size>t?t:null!=this.size&&this.size<=t?this.size:null,pb((async()=>(await e.iterator()).take(t)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function pb(t,e=null){return new class extends hb{constructor(){super(...arguments),this.size=e}async iterator(){return t()}}}function db(t){if(null===t)return null;const e=t[0];if(null==(n=e)||null===(r=n)||"object"!=typeof r&&"function"!=typeof r||Array.isArray(n)||"object"==typeof n&&n instanceof Ot||N(n)){return{value:function(t){if(0===t.length)throw new Error("Can't make a batch of zero elements.");return t[0]instanceof Ot?Hi(t):pn(t)}(t),recurse:!1}}var n,r;return{value:null,recurse:!0}}hb.MAX_BUFFER_SIZE=1e4;Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");function fb(t,e){Array.isArray(t)||(t=[t]),t.forEach((t=>{null!=t&&u("complex64"!==t.dtype,(()=>`${e} does not support complex64 tensors in the CPU backend.`))}))}const mb=qo,gb=Vu,yb=Wu,bb=Uu,xb=no;class wb extends r{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new n(this,$r())}write(t,e,n){this.firstUse&&(this.firstUse=!1,W().get("IS_NODE")&&Ou("\n============================\nHi there 👋. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));const r={};return this.data.set(r,{values:t,dtype:n,refCount:1}),r}makeTensorInfo(t,e,n){let r;if("string"===e&&null!=n&&n.length>0&&C(n[0])){const s=n.map((t=>vt(t)));r=this.write(s,t,e)}else r=this.write(n,t,e);return{dataId:r,shape:t,dtype:e}}incRef(t){this.data.get(t).refCount++}decRef(t){if(this.data.has(t)){this.data.get(t).refCount--}}move(t,e,n,r){this.data.set(t,{values:e,dtype:r,refCount:1})}numDataIds(){return this.data.numDataIds()}async read(t){return this.readSync(t)}readSync(t){const{dtype:e,complexTensorInfos:n}=this.data.get(t);if("complex64"===e){return Fu(this.readSync(n.real.dataId),this.readSync(n.imag.dataId))}return this.data.get(t).values}bufferSync(t){const e=this.readSync(t.dataId);let n=e;if("string"===t.dtype)try{n=e.map((t=>It(t)))}catch(t){throw new Error("Failed to decode encoded string bytes into utf-8")}return Kn(t.shape,t.dtype,n)}makeOutput(t,e,n){const r=this.write(t,e,n);return $r().makeTensorFromDataId(r,e,n,this)}disposeData(t){if(this.data.has(t)){const{complexTensorInfos:e}=this.data.get(t);null!=e&&(this.disposeData(e.real.dataId),this.disposeData(e.imag.dataId)),this.data.delete(t)}}disposeIntermediateTensorInfo(t){const e=t.dataId;if(this.data.has(e)){const t=this.data.get(e);t.refCount--,t.refCount<1&&this.disposeData(e)}}async time(t){const e=wt();t();return{kernelMs:wt()-e}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}stridedSlice(t,e,n,r){fb(t,"stridedSlice");const s=gr(e,n,r);if(s.some((t=>0===t)))return pn([],s);const a=Kn(s,t.dtype),i=this.bufferSync(t);for(let t=0;t<a.size;t++){const n=a.indexToLoc(t),s=new Array(n.length);for(let t=0;t<s.length;t++)s[t]=n[t]*r[t]+e[t];a.set(i.get(...s),...n)}return a.toTensor()}diag(t){const e=this.readSync(t.dataId),n=Kn([t.size,t.size],t.dtype),r=n.values;for(let n=0;n<e.length;n++)r[n*t.size+n]=e[n];return n.toTensor()}unstack(t,e){const n=t.shape[e],r=new Array(t.rank-1);let s=0;for(let n=0;n<t.rank;n++)n!==e&&(r[s++]=t.shape[n]);const a=new Array(t.rank).fill(0),i=t.shape.slice();i[e]=1;const o=new Array(n);for(let n=0;n<o.length;n++)a[e]=n,o[n]=$i(t,a,i).reshape(r);return o}reverse(t,e){fb(t,"reverse");const n=Kn(t.shape,t.dtype),r=this.bufferSync(t);for(let s=0;s<n.size;s++){const a=n.indexToLoc(s),i=a.slice();e.forEach((e=>i[e]=t.shape[e]-1-i[e])),n.set(r.get(...i),...a)}return n.toTensor()}neg(t){return fb(t,"neg"),xa(wa(-1),t)}addN(t){fb(t,"addN");const e=t.map((t=>this.readSync(t.dataId))),n=Kn(t[0].shape,t[0].dtype),r=n.values;for(let n=0;n<t.length;n++){const t=e[n];for(let e=0;e<r.length;e++)r[e]+=t[e]}return n.toTensor()}softmax(t,e){const n=x([e],t.shape),r=Ra(t,n),s=Gr(r.shape,n),a=Ma(t,r.reshape(s)),i=ra(a),o=this.sum(i,n).reshape(s);return qs(i,o)}pow(t,e){return fb([t,e],"pow"),this.broadcastedBinaryOp(t,e,t.dtype,((t,e)=>Math.pow(t,e)))}floorDiv(t,e){fb([t,e],"floorDiv");return this.broadcastedBinaryOp(t,e,"int32",((t,e)=>Math.floor(t/e)))}sum(t,e){fb(t,"sum"),Hr("sum",e,t.rank);const[n,r]=Ur(t.shape,e),s=Wa(n,Kt(t.dtype,"int32")),a=p(r),i=this.readSync(s.dataId),o=this.readSync(t.dataId);for(let t=0;t<i.length;++t){const e=t*a;let n=0;for(let t=0;t<a;++t)n+=o[e+t];i[t]=n}return s}prod(t,e){fb(t,"sum");const[n,r]=Ur(t.shape,e),s=Wa(n,Kt(t.dtype,"int32")),a=p(r),i=this.readSync(s.dataId),o=this.readSync(t.dataId);for(let t=0;t<i.length;++t){const e=t*a;let n=1;for(let t=0;t<a;++t)n*=o[e+t];i[t]=n}return s}unsortedSegmentSum(t,e,n){fb(t,"unsortedSegmentSum");const r=[],s=t.rank-e.rank;for(let t=0;t<s;++t)e=e.expandDims(t+1);for(let s=0;s<n;++s){const n=wa(s,"int32"),a=Js(n,e).asType("float32").mul(t).sum(0);r.push(a)}return Hi(r)}argMin(t,e){fb(t,"argMin");const n=[e];Hr("argMin",n,t.rank);const[r,s]=Ur(t.shape,n),a=Wa(r,"int32"),i=p(s),o=this.readSync(a.dataId),u=this.readSync(t.dataId);for(let t=0;t<o.length;++t){const e=t*i;let n=u[e],r=0;for(let t=0;t<i;++t){const s=u[e+t];s<n&&(n=s,r=t)}o[t]=r}return a}argMax(t,e){fb(t,"argMax");const n=[e];Hr("argMax",n,t.rank);const[r,s]=Ur(t.shape,n),a=Wa(r,"int32"),i=p(s),o=this.readSync(a.dataId),u=this.readSync(t.dataId);for(let t=0;t<o.length;++t){const e=t*i;let n=u[e],r=0;for(let t=0;t<i;++t){const s=u[e+t];s>n&&(n=s,r=t)}o[t]=r}return a}cumsum(t,e,n,r){if(fb(t,"cumsum"),e!==t.rank-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${t.rank-1} but got axis=${e}`);const s=Kt(t.dtype,"int32"),a=Wa(t.shape,s),i=this.readSync(a.dataId),o=this.readSync(t.dataId),u=t.shape[t.rank-1],l=r?(t,e)=>t+u-e-1:(t,e)=>t+e;for(let t=0;t<o.length;t+=u)for(let e=0;e<u;e++){const r=l(t,e);if(0===e)i[r]=n?0:o[r];else{const s=l(t,e-1);i[r]=n?o[s]+i[s]:o[r]+i[s]}}return a}equal(t,e){return fb([t,e],"equal"),this.broadcastedBinaryOp(t,e,"bool",((t,e)=>t===e?1:0))}notEqual(t,e){return fb([t,e],"notEqual"),this.broadcastedBinaryOp(t,e,"bool",((t,e)=>t!==e?1:0))}less(t,e){return fb([t,e],"less"),this.broadcastedBinaryOp(t,e,"bool",((t,e)=>t<e?1:0))}lessEqual(t,e){return fb([t,e],"lessEqual"),this.broadcastedBinaryOp(t,e,"bool",((t,e)=>t<=e?1:0))}greater(t,e){return fb([t,e],"greater"),this.broadcastedBinaryOp(t,e,"bool",((t,e)=>t>e?1:0))}greaterEqual(t,e){return fb([t,e],"greaterEqual"),this.broadcastedBinaryOp(t,e,"bool",((t,e)=>t>=e?1:0))}logicalAnd(t,e){return fb([t,e],"logicalAnd"),this.broadcastedBinaryOp(t,e,"bool",((t,e)=>t&&e))}logicalOr(t,e){return fb([t,e],"logicalOr"),this.broadcastedBinaryOp(t,e,"bool",((t,e)=>t||e))}select(t,e,n){fb([t,e,n],"select");const r=this.readSync(t.dataId),s=this.readSync(e.dataId),a=this.readSync(n.dataId),i=Wa(e.shape,Kt(e.dtype,n.dtype)),o=this.readSync(i.dataId);let u=0;const l=0===t.rank||t.rank>1||1===e.rank?1:p(e.shape.slice(1));for(let t=0;t<r.length;t++)for(let e=0;e<l;e++)1===r[t]?o[u++]=s[t]:o[u++]=a[t];return i}where(t){fb([t],"where");const e=this.readSync(t.dataId);return xb(t.shape,e)}topk(t,e,n){fb(t,"topk");const r=this.readSync(t.dataId);return bb(r,t.shape,t.dtype,e,n)}min(t,e){fb(t,"min"),Hr("min",e,t.rank);const[n,r]=Ur(t.shape,e),s=Wa(n,t.dtype),a=p(r),i=this.readSync(s.dataId),o=this.readSync(t.dataId);for(let t=0;t<i.length;++t){const e=t*a;let n=o[e];for(let t=0;t<a;++t){const r=o[e+t];r<n&&(n=r)}i[t]=n}return s}minimum(t,e){return fb([t,e],"minimum"),this.broadcastedBinaryOp(t,e,t.dtype,((t,e)=>Math.min(t,e)))}mod(t,e){return fb([t,e],"mod"),this.broadcastedBinaryOp(t,e,t.dtype,((t,e)=>{const n=t%e;return t<0&&e<0||t>=0&&e>=0?n:(n+e)%e}))}maximum(t,e){return fb([t,e],"maximum"),this.broadcastedBinaryOp(t,e,t.dtype,((t,e)=>Math.max(t,e)))}all(t,e){fb(t,"all"),Hr("all",e,t.rank);const[n,r]=Ur(t.shape,e),s=Wa(n,t.dtype),a=p(r),i=this.readSync(s.dataId),o=this.readSync(t.dataId);for(let t=0;t<i.length;++t){const e=t*a;let n=o[e];for(let t=0;t<a;++t){const r=o[e+t];n=n&&r}i[t]=n}return s}any(t,e){fb(t,"any"),Hr("any",e,t.rank);const[n,r]=Ur(t.shape,e),s=Wa(n,t.dtype),a=p(r),i=this.readSync(s.dataId),o=this.readSync(t.dataId);for(let t=0;t<i.length;++t){const e=t*a;let n=o[e];for(let t=0;t<a;++t){const r=o[e+t];n=n||r}i[t]=n}return s}squaredDifference(t,e){return fb([t,e],"squaredDifference"),this.broadcastedBinaryOp(t,e,t.dtype,((t,e)=>{const n=t-e;return n*n}))}eluDer(t,e){fb([t,e],"eluDer");const n=new Float32Array(e.size),r=this.readSync(e.dataId),s=this.readSync(t.dataId);for(let t=0;t<r.length;++t){const e=r[t];n[t]=e>=1?s[t]:s[t]*(e+1)}return this.makeOutput(n,e.shape,"float32")}atan2(t,e){return fb([t,e],"atan2"),this.broadcastedBinaryOp(t,e,t.dtype,((t,e)=>Math.atan2(t,e)))}tile(t,e){return fb(t,"tile"),yb(this.bufferSync(t),e)}gather(t,e,n){fb([t,e],"gather");const r=t.shape.slice(),s=this.readSync(e.dataId);r[n]=s.length;const a=Kn(r,t.dtype),i=this.bufferSync(t);for(let t=0;t<a.size;++t){const e=a.indexToLoc(t),r=e.slice();r[n]=s[e[n]];const o=i.locToIndex(r);a.values[t]=i.values[o]}return a.toTensor()}batchToSpaceND(t,e,n){fb([t],"batchToSpaceND");const r=e.reduce(((t,e)=>t*e)),s=$u(t.shape,e,r),a=Au(s.length,e.length),i=Ru(t.shape,e,r),o=Mu(n,e.length),u=Du(i,n,e.length);return ur(t.reshape(s),a).reshape(i).slice(o,u)}pool3d(t,e,n){fb(t,"pool3d");const r=e.strideDepth,s=e.strideHeight,a=e.strideWidth,i=e.dilationDepth,o=e.dilationHeight,u=e.dilationWidth,l=e.effectiveFilterDepth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,p=e.padInfo.front,d=e.padInfo.top,f=e.padInfo.left,m="max"===n?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,g=this.readSync(t.dataId),y=Kn(e.outShape,t.dtype),b=y.values,x=e.outShape[1]*e.outShape[2]*e.outShape[3]*e.outShape[4],w=e.outShape[2]*e.outShape[3]*e.outShape[4],v=e.outShape[3]*e.outShape[4],I=e.outShape[4];for(let y=0;y<e.batchSize;++y){const k=y*x,N=y*t.strides[0];for(let y=0;y<e.inChannels;++y)for(let x=0;x<e.outDepth;++x){const S=x*r-p;let C=S;for(;C<0;)C+=i;const E=Math.min(e.inDepth,l+S),T=k+x*w;for(let r=0;r<e.outHeight;++r){const l=r*s-d;let p=l;for(;p<0;)p+=o;const x=Math.min(e.inHeight,c+l),w=T+r*v;for(let r=0;r<e.outWidth;++r){const s=r*a-f;let l=s;for(;l<0;)l+=u;const c=Math.min(e.inWidth,h+s),d=w+r*I;let v=m,k=0,S=0;for(let e=C;e<E;e+=i){const r=N+e*t.strides[1];for(let e=p;e<x;e+=o){const s=r+e*t.strides[2];for(let e=l;e<c;e+=u){const r=g[s+e*t.strides[3]+y];if("max"===n&&r>v?v=r:"avg"===n&&(k+=r,S++),isNaN(v))break}if(isNaN(v))break}if(isNaN(v))break}b[d+y]="avg"===n?k/S:v}}}}return y.toTensor()}avgPool3d(t,e){return fb(t,"avgPool3d"),this.pool3d(t,e,"avg").toFloat()}avgPool3dBackprop(t,e,n){fb([t,e],"avgPool3dBackprop");const r=n.strideDepth,s=n.strideHeight,a=n.strideWidth,i=n.filterDepth,o=n.filterHeight,u=n.filterWidth,l=n.dilationDepth,c=n.dilationHeight,h=n.dilationWidth,p=n.effectiveFilterDepth,d=n.effectiveFilterHeight,f=n.effectiveFilterWidth,m=p-1-n.padInfo.front,g=f-1-n.padInfo.left,y=d-1-n.padInfo.top,b=Kn(e.shape,"float32"),x=1/(i*o*u),w=this.bufferSync(t);for(let t=0;t<n.batchSize;++t)for(let e=0;e<n.inChannels;++e)for(let i=0;i<n.inDepth;++i)for(let o=0;o<n.inHeight;++o)for(let u=0;u<n.inWidth;++u){const v=i-m,I=o-y,k=u-g;let N=0;for(let i=0;i<p;i+=l){const o=(v+i)/r;if(!(o<0||o>=n.outDepth||Math.floor(o)!==o))for(let r=0;r<d;r+=c){const i=(I+r)/s;if(!(i<0||i>=n.outHeight||Math.floor(i)!==i))for(let r=0;r<f;r+=h){const s=(k+r)/a;if(s<0||s>=n.outWidth||Math.floor(s)!==s)continue;N+=w.get(t,o,i,s,e)}}}b.set(N*x,t,i,o,u,e)}return b.toTensor()}maxPool3d(t,e){return fb(t,"maxPool3d"),this.pool3d(t,e,"max").toFloat()}maxPool3dPositions(t,e){const n=Kn(e.outShape,"int32"),r=e.strideDepth,s=e.strideHeight,a=e.strideWidth,i=e.dilationDepth,o=e.dilationHeight,u=e.dilationWidth,l=e.effectiveFilterDepth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,p=e.padInfo.front,d=e.padInfo.top,f=e.padInfo.left,m=this.bufferSync(t);for(let t=0;t<e.batchSize;++t)for(let g=0;g<e.inChannels;++g)for(let y=0;y<e.outDepth;++y){const b=y*r-p;let x=b;for(;x<0;)x+=i;const w=Math.min(e.inDepth,l+b);for(let r=0;r<e.outHeight;++r){const l=r*s-d;let p=l;for(;p<0;)p+=o;const v=Math.min(e.inHeight,c+l);for(let s=0;s<e.outWidth;++s){const d=s*a-f;let I=d;for(;I<0;)I+=u;const k=Math.min(e.inWidth,h+d);let N=Number.NEGATIVE_INFINITY,S=-1;for(let e=x;e<w;e+=i){const n=e-b;for(let r=p;r<v;r+=o){const s=r-l;for(let a=I;a<k;a+=u){const i=a-d,o=m.get(t,e,r,a,g);o>=N&&(N=o,S=n*c*h+s*c+i)}}}n.set(S,t,y,r,s,g)}}}return n.toTensor()}maxPool3dBackprop(t,e,n,r){fb([e,n],"maxPool3dBackprop");const s=this.maxPool3dPositions(e,r),a=r.strideDepth,i=r.strideHeight,o=r.strideWidth,u=r.dilationDepth,l=r.dilationHeight,c=r.dilationWidth,h=r.effectiveFilterDepth,p=r.effectiveFilterHeight,d=r.effectiveFilterWidth,f=h-1-r.padInfo.front,m=d-1-r.padInfo.left,g=p-1-r.padInfo.top,y=Kn(e.shape,"float32"),b=this.bufferSync(s),x=this.bufferSync(t);for(let t=0;t<r.batchSize;++t)for(let e=0;e<r.inChannels;++e)for(let n=0;n<r.inDepth;++n)for(let s=0;s<r.inHeight;++s)for(let w=0;w<r.inWidth;++w){const v=n-f,I=s-g,k=w-m;let N=0;for(let n=0;n<h;n+=u){const s=(v+n)/a;if(!(s<0||s>=r.outDepth||Math.floor(s)!==s))for(let a=0;a<p;a+=l){const u=(I+a)/i;if(!(u<0||u>=r.outHeight||Math.floor(u)!==u))for(let i=0;i<d;i+=c){const l=(k+i)/o;if(l<0||l>=r.outWidth||Math.floor(l)!==l)continue;const c=h*p*d-1-b.get(t,s,u,l,e)===n*p*d+a*d+i?1:0;if(0===c)continue;N+=x.get(t,s,u,l,e)*c}}}y.set(N,t,n,s,w,e)}return y.toTensor()}resizeBilinear(t,e,n,r){fb(t,"resizeBilinear");const[s,a,i,o]=t.shape,u=this.readSync(t.dataId),l=new Float32Array(p([s,e,n,o])),c=[r&&e>1?a-1:a,r&&n>1?i-1:i],h=[r&&e>1?e-1:e,r&&n>1?n-1:n];let d=0;const f=c[0]/h[0],m=c[1]/h[1];for(let r=0;r<s;r++)for(let s=0;s<e;s++){const e=f*s,c=Math.floor(e),h=e-c,p=Math.min(a-1,Math.ceil(e)),g=r*t.strides[0]+c*t.strides[1],y=r*t.strides[0]+p*t.strides[1];for(let e=0;e<n;e++){const n=m*e,r=Math.floor(n),s=n-r,a=Math.min(i-1,Math.ceil(n)),c=g+r*t.strides[2],p=y+r*t.strides[2],f=g+a*t.strides[2],b=y+a*t.strides[2];for(let t=0;t<o;t++){const e=u[c+t],n=u[p+t],r=e+(u[f+t]-e)*s,a=r+(n+(u[b+t]-n)*s-r)*h;l[d++]=a}}}return pn(l,[s,e,n,o])}resizeBilinearBackprop(t,e,n){fb([t,e],"resizeBilinearBackprop");const[r,s,a,i]=e.shape,[,o,u]=t.shape,l=new Float32Array(r*s*a*i),c=[n&&o>1?s-1:s,n&&u>1?a-1:a],h=[n&&o>1?o-1:o,n&&u>1?u-1:u],p=c[0]/h[0],d=c[1]/h[1],f=this.readSync(t.dataId);let m=0;for(let t=0;t<r;t++){const n=t*e.strides[0];for(let t=0;t<o;t++){const r=t*p,o=Math.floor(r),c=Math.min(Math.ceil(r),s-1),h=n+o*e.strides[1],g=n+c*e.strides[1],y=r-o,b=1-y;for(let t=0;t<u;t++){const n=t*d,r=Math.floor(n),s=Math.min(Math.ceil(n),a-1),o=n-r,u=1-o,c=h+r*e.strides[2],p=h+s*e.strides[2],x=g+r*e.strides[2],w=g+s*e.strides[2],v=b*u,I=b*o,k=y*u,N=y*o;for(let t=0;t<i;t++){const e=f[m++];l[c+t]+=e*v,l[p+t]+=e*I,l[x+t]+=e*k,l[w+t]+=e*N}}}}return Ji(l,[r,a,s,i],e.dtype)}resizeNearestNeighbor(t,e,n,r){fb(t,"resizeNearestNeighbor");const[s,a,i,o]=t.shape,u=this.readSync(t.dataId),l=new Float32Array(s*e*n*o),c=[r&&e>1?a-1:a,r&&n>1?i-1:i],h=[r&&e>1?e-1:e,r&&n>1?n-1:n],p=c[0]/h[0],d=c[1]/h[1];let f=0;for(let c=0;c<s;c++){const s=c*t.strides[0];for(let c=0;c<e;c++){const e=p*c,h=s+Math.min(a-1,r?Math.round(e):Math.floor(e))*t.strides[1];for(let e=0;e<n;e++){const n=d*e,s=h+Math.min(i-1,r?Math.round(n):Math.floor(n))*t.strides[2];for(let t=0;t<o;t++){const e=u[s+t];l[f++]=e}}}}return pn(l,[s,e,n,o],t.dtype)}resizeNearestNeighborBackprop(t,e,n){fb([t,e],"resizeNearestNeighborBackprop");const[r,s,a,i]=e.shape,[,o,u]=t.shape,l=new Float32Array(r*s*a*i),c=this.readSync(t.dataId),h=[n&&o>1?s-1:s,n&&u>1?a-1:a],p=[n&&o>1?o-1:o,n&&u>1?u-1:u],d=h[0]/p[0],f=h[1]/p[1],m=1/d,g=1/f,y=2*Math.ceil(m)+2,b=2*Math.ceil(g)+2;for(let h=0;h<r;h++){const r=h*e.strides[0];for(let h=0;h<s;h++){const p=r+h*e.strides[1],x=Math.floor(h*m),w=Math.floor(x-y/2);for(let m=0;m<a;m++){const x=p+m*e.strides[2],v=Math.floor(m*g),I=Math.floor(v-b/2);for(let e=0;e<i;e++){let i=0;for(let l=0;l<y;l++){const p=l+w;if(p<0||p>=o)continue;const g=r+p*t.strides[1],y=p*d;if(h===Math.min(s-1,n?Math.round(y):Math.floor(y)))for(let r=0;r<b;r++){const s=r+I;if(s<0||s>=u)continue;const o=g+s*t.strides[2],l=s*f;m===Math.min(a-1,n?Math.round(l):Math.floor(l))&&(i+=c[o+e])}}l[x+e]=i}}}}return Ji(l,e.shape,e.dtype)}localResponseNormalization4D(t,e,n,r,s){fb(t,"localResponseNormalization4D");const a=t.shape[3],i=a-1,o=this.readSync(t.dataId),u=t.size,l=new Float32Array(u);function c(t){const n=t%a;let r=t-n+Math.max(0,n-e);const s=t-n+Math.min(n+e,i);let u=0;for(;r<=s;r++){const t=o[r];u+=t*t}return u}for(let t=0;t<u;t++){const e=c(t),a=o[t]*Math.pow(n+r*e,-s);l[t]=a}return Ji(l,t.shape)}LRNGrad(t,e,n,r,s,a,i){fb(t,"LRNGrad");const o=t.shape[3],u=this.readSync(t.dataId),l=this.readSync(e.dataId),c=this.readSync(n.dataId),h=new Float32Array(t.size),p=t.size;for(let t=0;t<p;t++){const e=t%o,n=t-e+Math.max(0,e-r),p=t-e+Math.min(o,e+r+1);let d=0;for(let t=n;t<p;t++)d+=Math.pow(l[t],2);d=a*d+s;for(let e=n;e<p;e++){let n=-2*a*i*l[e]*c[t]/d;t===e&&(n+=Math.pow(d,-i)),n*=u[t],h[e]+=n}}return Ji(h,t.shape)}multinomial(t,e,n,r){fb(t,"multinomial");const s=e?t:Oi(t),a=s.shape[0],i=s.shape[1],o=Wa([a,n],"int32"),u=this.readSync(o.dataId),l=this.readSync(s.dataId);for(let t=0;t<a;++t){const e=t*i,s=new Float32Array(i-1);s[0]=l[e];for(let t=1;t<s.length;++t)s[t]=s[t-1]+l[e+t];const a=ai.alea(r.toString()),o=t*n;for(let t=0;t<n;++t){const e=a();u[o+t]=s.length;for(let n=0;n<s.length;n++)if(e<s[n]){u[o+t]=n;break}}}return o}oneHot(t,e,n,r){fb(t,"oneHot");const s=new Float32Array(t.size*e);s.fill(r);const a=this.readSync(t.dataId);for(let r=0;r<t.size;++r)a[r]>=0&&a[r]<e&&(s[r*e+a[r]]=n);return Yi(s,[t.size,e],"int32")}nonMaxSuppression(t,e,n,r,s){fb(t,"nonMaxSuppression");const a=this.readSync(t.dataId),i=this.readSync(e.dataId);return mb(a,i,n,r,s)}depthToSpace(t,e,n){u("NHWC"===n,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${n}`)),u(e>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${e}`));const r=t.shape[0],s=t.shape[1],a=t.shape[2],i=t.shape[3],o=s*e,l=a*e,c=i/(e*e),h=this.readSync(t.dataId),p=new Float32Array(r*o*l*c);let d=0;for(let t=0;t<r;++t)for(let n=0;n<o;++n){const r=Math.floor(n/e),o=n%e;for(let n=0;n<l;++n){const u=Math.floor(n/e),l=(o*e+n%e)*c;for(let e=0;e<c;++e){const n=e+l+i*(u+a*(r+s*t));p[d++]=h[n]}}}return Ji(p,[r,o,l,c])}broadcastedBinaryOp(t,e,n,r){const s=Ys(t.shape,e.shape),a=Kn(s,n),i=this.readSync(t.dataId),o=this.readSync(e.dataId),u=Ks(t.shape,s),l=Ks(e.shape,s),c=a.values;if(u.length+l.length===0)for(let t=0;t<c.length;++t)c[t]=r(i[t%i.length],o[t%o.length]);else{const n=this.bufferSync(t),s=this.bufferSync(e);for(let h=0;h<c.length;++h){const p=a.indexToLoc(h),d=p.slice(-t.rank);u.forEach((t=>d[t]=0));const f=n.locToIndex(d),m=p.slice(-e.rank);l.forEach((t=>m[t]=0));const g=s.locToIndex(m);c[h]=r(i[f],o[g])}}return a.toTensor()}split(t,e,n){return gb(t,e,n)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}cropAndResize(t,e,n,r,s,a){const[i,o,u,l]=t.shape,c=e.shape[0],[h,p]=r,d=Kn([c,h,p,l],"float32"),f=this.readSync(e.dataId),m=this.readSync(n.dataId),g=this.readSync(t.dataId),y=t.strides,b=d.strides;for(let t=0;t<c;t++){const e=4*t,n=f[e],r=f[e+1],c=f[e+2],x=f[e+3],w=m[t];if(w>=i)continue;const v=h>1?(c-n)*(o-1)/(h-1):0,I=p>1?(x-r)*(u-1)/(p-1):0;for(let e=0;e<h;e++){const i=h>1?n*(o-1)+e*v:.5*(n+c)*(o-1);if(i<0||i>o-1)for(let n=0;n<p;n++)for(let r=0;r<l;r++){const s=r+n*b[2]+e*b[1]+t*b[0];d.values[s]=a}else if("bilinear"===s){const n=Math.floor(i),s=Math.ceil(i),o=i-n;for(let i=0;i<p;i++){const c=p>1?r*(u-1)+i*I:.5*(r+x)*(u-1);if(c<0||c>u-1){for(let n=0;n<l;n++){const r=n+i*b[2]+e*b[1]+t*b[0];d.values[r]=a}continue}const h=Math.floor(c),f=Math.ceil(c),m=c-h;for(let r=0;r<l;r++){let a=r+h*y[2]+n*y[1]+w*y[0];const u=g[a];a=r+f*y[2]+n*y[1]+w*y[0];const l=g[a];a=r+h*y[2]+s*y[1]+w*y[0];const c=g[a];a=r+f*y[2]+s*y[1]+w*y[0];const p=u+(l-u)*m,x=c+(g[a]-c)*m;a=r+i*b[2]+e*b[1]+t*b[0],d.values[a]=p+(x-p)*o}}}else for(let n=0;n<p;++n){const s=p>1?r*(u-1)+n*I:.5*(r+x)*(u-1);if(s<0||s>u-1){for(let r=0;r<l;r++){const s=r+n*b[2]+e*b[1]+t*b[0];d.values[s]=a}continue}const o=Math.round(s),c=Math.round(i);for(let r=0;r<l;r++){const s=r+o*y[2]+c*y[1]+w*y[0],a=r+n*b[2]+e*b[1]+t*b[0];d.values[a]=g[s]}}}}return d.toTensor()}sparseToDense(t,e,n,r){const{sliceRank:s,numUpdates:a,sliceSize:i,strides:o,outputSize:u}=dr(0,t,n);return this.scatter(t,e,n,u,i,a,s,o,r,!1)}gatherND(t,e){const n=e.shape,r=n[n.length-1],[s,a,i,o]=hr(t,e);if(0===a)return pn([],s,t.dtype);const u=new At([a,i],t.dtype),l=this.readSync(e.dataId),c=this.readSync(t.dataId);for(let e=0;e<a;e++){const n=[];let s=0;for(let t=0;t<r;t++){const a=l[e*r+t];s+=a*o[t],n.push(a)}if(s<0||s>=t.size/i)throw new Error(`Invalid indices: ${n} does not index into ${t.shape}`);for(let t=0;t<i;t++)u.values[e*i+t]=c[s*i+t]}return u.toTensor().reshape(s)}scatterND(t,e,n){const{sliceRank:r,numUpdates:s,sliceSize:a,strides:i,outputSize:o}=dr(0,t,n),u=wa(0);return this.scatter(t,e,n,o,a,s,r,i,u,!0)}onesLike(t){if("string"===t.dtype)throw new Error("onesLike is not supported for string tensors");return ua(t.shape,1,t.dtype)}zerosLike(t){const e=I(t.dtype,p(t.shape));return this.makeOutput(e,t.shape,t.dtype)}linspace(t,e,n){return Pu(t,e,n)}scatter(t,e,n,r,s,a,i,o,u,l){const c=[r/s,s],h=this.readSync(t.dataId),p=this.readSync(e.dataId);if(0===r)return pn([],n,e.dtype);const d=new At(c,e.dtype);d.values.fill(this.readSync(u.dataId)[0]);for(let t=0;t<a;t++){const a=[];let u=0;for(let e=0;e<i;e++){const n=h[t*i+e];a.push(n),u+=n*o[e]}if(u<0||u>=r/s)throw new Error(`Invalid indices: ${a} does not index into ${n}`);for(let n=0;n<s;n++)l?d.values[u*s+n]+=p[t*s+n]:d.values[u*s+n]=0===e.rank?p[0]:p[t*s+n]}return d.toTensor().reshape(n)}}function vb(t){const e=new Float32Array(t.length);for(let n=0;n<t.length;++n)e[n]=Math.abs(t[n]);return e}const Ib={kernelName:"Abs",backendName:"cpu",kernelFunc:t=>{const{x:e}=t.inputs,n=t.backend;let r=new Float32Array(p(e.shape));if("complex64"!==e.dtype){r=vb(n.data.get(e.dataId).values)}else{const t=n.data.get(e.dataId),s=t.complexTensorInfos.real,a=t.complexTensorInfos.imag,i=n.data.get(s.dataId).values,o=n.data.get(a.dataId).values;for(let t=0;t<i.length;t++){const e=i[t],n=o[t];r[t]=Math.hypot(e,n)}}return n.makeOutput(r,e.shape,"float32")}};function kb(t){return(e,n,r,s,a)=>{const i=Ys(e,n),o=i.length,u=A(i),l=v(a,p(i)),c=e.length,h=n.length,d=A(e),f=A(n),m=Ks(e,i),g=Ks(n,i);if(m.length+g.length===0)for(let e=0;e<l.length;++e)l[e]=t(r[e%r.length],s[e%s.length]);else for(let e=0;e<l.length;++e){const n=z(e,o,u),a=n.slice(-c);m.forEach((t=>a[t]=0));const i=B(a,c,d),p=n.slice(-h);g.forEach((t=>p[t]=0));const y=B(p,h,f);l[e]=t(r[i],s[y])}return[l,i]}}function Nb(t){const{inputs:e,backend:n}=t,{real:r,imag:s}=e,a=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,o=n.makeTensorInfo(r.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",a),imag:n.makeTensorInfo(s.shape,"float32",i)},o}const Sb={kernelName:"Complex",backendName:"cpu",kernelFunc:Nb};function Cb(t){const{inputs:e,backend:n}=t,{x:r}=e;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const Eb={kernelName:"Identity",backendName:"cpu",kernelFunc:Cb};function Tb(t){const{inputs:e,backend:n}=t,{input:r}=e,s=n.data.get(r.dataId).complexTensorInfos.real,a=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,a)}const _b={kernelName:"Real",backendName:"cpu",kernelFunc:Tb};function $b(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{dtype:a}=r;if("complex64"===a){if("complex64"===s.dtype)return Cb({inputs:{x:s},backend:n});const t=Wa(s.shape),e=$b({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),r=Nb({inputs:{real:e,imag:t},backend:n});return t.dispose(),n.disposeIntermediateTensorInfo(e),r}if("complex64"===s.dtype){const t=Tb({inputs:{input:s},backend:n}),e=$b({inputs:{x:t},backend:n,attrs:{dtype:a}});return n.disposeIntermediateTensorInfo(t),e}if(!k(s.dtype,a)){const t=Cb({inputs:{x:s},backend:n});return{dataId:t.dataId,shape:t.shape,dtype:a}}if("int32"===a){const t=n.data.get(s.dataId).values,e=Int32Array.from(t);return n.makeTensorInfo(s.shape,"int32",e)}if("bool"===a){const t=n.data.get(s.dataId).values,e=xt([0],s.dtype),[r,a]=kb(((t,e)=>t!==e?1:0))(s.shape,[],t,e,"bool");return n.makeTensorInfo(a,"bool",r)}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${a}`)}const Ab={kernelName:"Cast",backendName:"cpu",kernelFunc:$b};function Rb(t,e,n,r){return null==n?({inputs:n,backend:s})=>{const{a:a,b:i}=n,o=s;fb([a,i],t);const u=o.data.get(a.dataId).values,l=o.data.get(i.dataId).values,c=r||a.dtype,[h,p]=e(a.shape,i.shape,u,l,c);return o.makeTensorInfo(p,c,h)}:({inputs:t,backend:s})=>{const{a:a,b:i}=t,o=s;if("complex64"===a.dtype||"complex64"===i.dtype){const t=$b({inputs:{x:a},backend:o,attrs:{dtype:"complex64"}}),e=o.data.get(t.dataId),r=e.complexTensorInfos.real,s=e.complexTensorInfos.imag,u=o.data.get(r.dataId).values,l=o.data.get(s.dataId).values,c=$b({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),h=o.data.get(c.dataId),p=h.complexTensorInfos.real,d=h.complexTensorInfos.imag,f=o.data.get(p.dataId).values,m=o.data.get(d.dataId).values,[g,y,b]=n(a.shape,i.shape,u,l,f,m),x=o.makeTensorInfo(b,"float32",g),w=o.makeTensorInfo(b,"float32",y),v=Nb({inputs:{real:x,imag:w},backend:o});return o.disposeIntermediateTensorInfo(t),o.disposeIntermediateTensorInfo(c),o.disposeIntermediateTensorInfo(x),o.disposeIntermediateTensorInfo(w),v}{const t=o.data.get(a.dataId).values,n=o.data.get(i.dataId).values,s=r||a.dtype,[u,l]=e(a.shape,i.shape,t,n,s);return o.makeTensorInfo(l,s,u)}}}function Mb(t){return(e,n,r,s,a,i)=>{const o=Ys(e,n),u=p(o),l=o.length,c=A(o),h=v("float32",u),d=v("float32",u),f=Ks(e,o),m=Ks(n,o),g=Fu(r,s),y=Fu(a,i),b=e.length,x=A(e),w=n.length,I=A(n);if(f.length+m.length===0)for(let e=0;e<h.length;e++){const n=e%g.length,r=e%y.length,s=t(g[2*n],g[2*n+1],y[2*r],y[2*r+1]);h[e]=s.real,d[e]=s.imag}else for(let e=0;e<h.length;e++){const n=z(e,l,c),r=n.slice(-b);f.forEach((t=>r[t]=0));const s=B(r,b,x),a=n.slice(-w);m.forEach((t=>a[t]=0));const i=B(a,w,I),o=t(g[2*s],g[2*s+1],y[2*i],y[2*i+1]);h[e]=o.real,d[e]=o.imag}return[h,d,o]}}const Db=kb(((t,e)=>t+e)),Ob=Rb("Add",Db,Mb(((t,e,n,r)=>({real:t+n,imag:e+r})))),Fb={kernelName:"Add",backendName:"cpu",kernelFunc:Ob};function Lb(t){return(e,n,r)=>{const s=v(n,e.length);for(let n=0;n<e.length;++n)s[n]=t(e[n],r);return s}}function Bb(t,e,n){return({inputs:r,attrs:s,backend:a})=>{const{x:i}=r;if(fb(i,t),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=a,u=o.data.get(i.dataId).values,l=p(i.shape),c=n||i.dtype,h=I(c,l);for(let t=0;t<l;++t)h[t]=e(u[t],s);return o.makeTensorInfo(i.shape,c,h)}}function zb(t,e,n){return({inputs:r,attrs:s,backend:a})=>{const{x:i}=r;if(fb(i,t),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=a,u=o.data.get(i.dataId).values,l=n||i.dtype,c=e(u,l,s);return o.makeTensorInfo(i.shape,l,c)}}const Pb=Lb((t=>Math.ceil(t))),Vb={kernelName:"Ceil",backendName:"cpu",kernelFunc:zb("Ceil",Pb)},Wb=Lb((t=>Math.exp(t))),Ub={kernelName:"Exp",backendName:"cpu",kernelFunc:zb("Exp",Wb)},Gb=Lb((t=>Math.expm1(t))),Hb={kernelName:"Expm1",backendName:"cpu",kernelFunc:zb("Expm1",Gb)},jb=Lb((t=>Math.floor(t))),qb={kernelName:"Floor",backendName:"cpu",kernelFunc:zb("Floor",jb)},Kb=Lb((t=>Math.log(t))),Xb={kernelName:"Log",backendName:"cpu",kernelFunc:zb("Log",Kb)};function Yb(t,e,n,r){const s=v(r,p(n));for(let n=0;n<s.length;++n){const r=n*e;let a=t[r];for(let n=0;n<e;++n){const e=t[r+n];e>a&&(a=e)}s[n]=a}return s}const Jb=kb(((t,e)=>t*e)),Zb=Mb(((t,e,n,r)=>({real:t*n-e*r,imag:t*r+e*n}))),Qb=Rb("Multiply",Jb,Zb),tx={kernelName:"Multiply",backendName:"cpu",kernelFunc:Qb},ex={kernelName:"NotEqual",backendName:"cpu",kernelFunc:Rb("NotEqual",kb(((t,e)=>t!==e?1:0)),null,"bool")},nx=Lb((t=>1/Math.sqrt(t))),rx={kernelName:"Rsqrt",backendName:"cpu",kernelFunc:zb("Rsqrt",nx)};function sx(t,e,n,r,s){const a=kr(r,e,n),i=p(n),o=A(r);if(a){const n=Nr(e,o);return t.subarray(n,n+i)}const u=v(s,i);for(let s=0;s<i;++s){const a=B(z(s,n.length,A(n)).map(((t,n)=>t+e[n])),r.length,o);u[s]=t[a]}return u}function ax(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{begin:a,size:i}=r;fb(s,"slice");const[o,u]=Sr(s,a,i);fr(s,o,u);const l=sx(n.data.get(s.dataId).values,o,u,s.shape,s.dtype);return n.makeTensorInfo(u,s.dtype,l)}const ix={kernelName:"Slice",backendName:"cpu",kernelFunc:ax},ox={kernelName:"SquaredDifference",backendName:"cpu",kernelFunc:Rb("SquaredDifference",kb(((t,e)=>{const n=t-e;return n*n})))},ux=kb(((t,e)=>t-e)),lx=Rb("Sub",ux,Mb(((t,e,n,r)=>({real:t-n,imag:e-r})))),cx={kernelName:"Sub",backendName:"cpu",kernelFunc:lx};function hx(t,e,n,r,s){const a=e.length,i=p(e),o=A(e),u=A(s),l=v(n,p(s));for(let e=0;e<i;++e){const n=z(e,a,o),s=new Array(n.length);for(let t=0;t<s.length;t++)s[t]=n[r[t]];l[B(s,a,u)]=t[e]}return l}function px(t,e,n,r){const s=x(e,n)[0],a=[1,n[0],1];for(let t=0;t<s;t++)a[0]*=n[t];a[1]=n[s];for(let t=s+1;t<n.length;t++)a[2]*=n[t];const i={},o=new Int32Array(n[s]),u=new At(a,r,t),l=[],c=1===a[0]&&1===a[2];for(let e=0;e<n[s];e++){let n;if(c)n=t[e].toString();else{const t=[];for(let n=0;n<a[0];n++)for(let r=0;r<a[2];r++)t.push(u.get(n,e,r));n=t.join(",")}if(void 0!==i[n])o[e]=i[n];else{const t=Object.keys(i).length;i[n]=t,o[e]=t,l.push(e)}}const h=a.slice();h[1]=Object.keys(i).length;const p=new At(h,r);l.forEach(((t,e)=>{for(let n=0;n<a[0];n++)for(let r=0;r<a[2];r++)p.set(u.get(n,t,r),n,e,r)}));const d=n.slice();return d[s]=h[1],{outputValues:p.values,outputShape:d,indices:o}}Or("cpu",(()=>new wb),1);const dx=Bb("Elu",(t=>t>=0?t:Math.exp(t)-1)),fx={kernelName:"Elu",backendName:"cpu",kernelFunc:dx},mx=kb(((t,e)=>t<0?e*t:t));function gx(t){const{inputs:e,backend:n}=t,{x:r,alpha:s}=e;fb([r,s],"prelu");const a=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,[o,u]=mx(r.shape,s.shape,a,i,r.dtype);return n.makeTensorInfo(u,r.dtype,o)}const yx={kernelName:"Prelu",backendName:"cpu",kernelFunc:gx},bx=Bb("Relu",(t=>Math.max(0,t))),xx={kernelName:"Relu",backendName:"cpu",kernelFunc:bx},wx=Bb("Relu6",(t=>Math.min(Math.max(0,t),6))),vx={kernelName:"Relu6",backendName:"cpu",kernelFunc:wx};function Ix(t,e,n,r){if("linear"===n)return Cb({inputs:{x:e},backend:t});if("relu"===n)return bx({inputs:{x:e},backend:t});if("elu"===n)return dx({inputs:{x:e},backend:t});if("relu6"===n)return wx({inputs:{x:e},backend:t});if("prelu"===n)return gx({inputs:{x:e,alpha:r},backend:t});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function kx(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{shape:a}=r,i=p(s.shape),o=b(a,i),l=p(o);u(i===l,(()=>`The new shape (${o}) has ${l} elements and the old shape (${s.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(s.dataId);const c=n.data.get(s.dataId);if(null!=c.complexTensorInfos){const t=c.complexTensorInfos.real,e=c.complexTensorInfos.imag;t.shape=o,e.shape=o}return{dataId:s.dataId,shape:o,dtype:s.dtype}}const Nx={kernelName:"Reshape",backendName:"cpu",kernelFunc:kx};function Sx(t){const{inputs:e,backend:n,attrs:r}=t,{a:s,b:a}=e,{transposeA:i,transposeB:o}=r;fb([s,a],"matMul");const l=s.shape.length,c=a.shape.length,h=i?s.shape[l-2]:s.shape[l-1],d=o?a.shape[c-1]:a.shape[c-2],f=i?s.shape[l-1]:s.shape[l-2],m=o?a.shape[c-2]:a.shape[c-1],g=s.shape.slice(0,-2),y=a.shape.slice(0,-2),b=p(g),x=p(y);u(l>=2&&c>=2&&(b===x||1===b||1===x),(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${g}) and (${y}).`));const w=(b>x?s.shape.slice(0,-2):a.shape.slice(0,-2)).concat([f,m]);u(h===d,(()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${s.shape} and ${a.shape} and transposeA=${i} and transposeB=${o} must match.`));const v=o?[x,m,d]:[x,d,m],I=kx({inputs:{x:s},backend:n,attrs:{shape:i?[b,h,f]:[b,f,h]}}),k=kx({inputs:{x:a},backend:n,attrs:{shape:v}}),N=i?I.shape[1]:I.shape[2],S=i?I.shape[2]:I.shape[1],C=o?k.shape[1]:k.shape[2],E=Math.max(b,x),T=n.data.get(I.dataId).values,_=n.data.get(k.dataId).values,$=A(I.shape),R=A(k.shape),[M,D,O]=i?[$[0],1,$[1]]:[$[0],$[1],1],[F,L,B]=o?[1,R[1],R[0]]:[R[1],1,R[0]],z=S*C,P=Kn([E,S,C],I.dtype),V=P.values,W=n.blockSize;for(let t=0;t<E;t++)for(let e=0;e<S;e+=W)for(let n=0;n<C;n+=W)for(let r=0;r<N;r+=W){const s=Math.min(e+W,S),a=Math.min(n+W,C),i=Math.min(r+W,N);for(let o=e;o<s;o++)for(let e=n;e<a;e++){let n=0;for(let s=r;s<i;s++){const r=Math.min(t,b-1)*M,a=Math.min(t,x-1)*B;n+=T[r+o*D+s*O]*_[s*F+e*L+a]}V[t*z+(o*C+e)]+=n}}return n.disposeIntermediateTensorInfo(I),n.disposeIntermediateTensorInfo(k),n.makeTensorInfo(w,P.dtype,P.values)}const Cx={kernelName:"BatchMatMul",backendName:"cpu",kernelFunc:Sx};const Ex={kernelName:"_FusedMatMul",backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{a:s,b:a,bias:i,preluActivationWeights:o}=e,{transposeA:u,transposeB:l,activation:c}=r;let h,p,d;const f=[];h=Sx({inputs:{a:s,b:a},attrs:{transposeA:u,transposeB:l},backend:n}),i&&(p=Ob({inputs:{a:h,b:i},backend:n}),f.push(h),h=p),c&&(d=Ix(n,h,c,o),f.push(h),h=d);for(const t of f)n.disposeIntermediateTensorInfo(t);return h}},Tx={kernelName:"Acos",backendName:"cpu",kernelFunc:Bb("Acos",(t=>Math.acos(t)))},_x={kernelName:"Acosh",backendName:"cpu",kernelFunc:Bb("Acosh",(t=>Math.acosh(t)))},$x={kernelName:"Asin",backendName:"cpu",kernelFunc:Bb("Asin",(t=>Math.asin(t)))},Ax={kernelName:"Asinh",backendName:"cpu",kernelFunc:Bb("Asinh",(t=>Math.asinh(t)))},Rx={kernelName:"Atan",backendName:"cpu",kernelFunc:Bb("Atan",(t=>Math.atan(t)))},Mx={kernelName:"Atanh",backendName:"cpu",kernelFunc:Bb("Atanh",(t=>Math.atanh(t)))};function Dx(t,e,n,r,s,a){const i=s.strideHeight,o=s.strideWidth,u=s.dilationHeight,l=s.dilationWidth,c=s.effectiveFilterHeight,h=s.effectiveFilterWidth,p=s.padInfo.top,d=s.padInfo.left,f="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=Kn(s.outShape,n),g=m.values,y=s.outShape[1]*s.outShape[2]*s.outShape[3],b=s.outShape[2]*s.outShape[3],x=s.outShape[3];for(let e=0;e<s.batchSize;++e){const n=e*y,m=e*r[0];for(let e=0;e<s.inChannels;++e)for(let y=0;y<s.outHeight;++y){const w=y*i-p,v=Math.max(0,w),I=Math.min(s.inHeight,c+w),k=n+y*b;for(let n=0;n<s.outWidth;++n){const i=n*o-d,c=Math.max(0,i),p=Math.min(s.inWidth,h+i);let y=f,b=0,w=0;for(let n=v;n<I;n+=u){const s=m+n*r[1];for(let n=c;n<p;n+=l){const i=t[s+n*r[2]+e];"max"===a&&i>y?y=i:"avg"===a&&(b+=i,w++)}if(isNaN(y))break}g[k+n*x+e]="avg"===a?b/w:y}}}return m}function Ox(t,e,n,r,s=!1,a=!1){const i=Kn(r.outShape,"int32"),o=r.strideHeight,u=r.strideWidth,l=r.dilationHeight,c=r.dilationWidth,h=r.effectiveFilterHeight,p=r.effectiveFilterWidth,d=r.padInfo.top,f=r.padInfo.left,m=Kn(e,n,t);for(let t=0;t<r.batchSize;++t)for(let e=0;e<r.inChannels;++e)for(let n=0;n<r.outHeight;++n){const g=n*o-d;let y=g;for(;y<0;)y+=l;const b=Math.min(r.inHeight,h+g);for(let o=0;o<r.outWidth;++o){const h=o*u-f;let d=h;for(;d<0;)d+=c;const x=Math.min(r.inWidth,p+h);let w=Number.NEGATIVE_INFINITY,v=-1;for(let n=y;n<b;n+=l){const i=n-g;for(let o=d;o<x;o+=c){const u=o-h,l=m.get(t,n,o,e);l>w&&(w=l,v=s?a?((t*r.inHeight+n)*r.inWidth+o)*r.inChannels+e:(n*r.inWidth+o)*r.inChannels+e:i*p+u)}}i.set(v,t,n,o,e)}}return i}const Fx={kernelName:"AvgPool",backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e;fb(s,"avgPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=r;u(ms(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const c=as(s.shape,a,i,1,o,l);let h;if(1===c.filterWidth&&1===c.filterHeight&&d(c.inShape,c.outShape))h=Cb({inputs:{x:s},backend:n});else{const t=n.data.get(s.dataId).values,e=A(s.shape),r=Dx(t,s.shape,s.dtype,e,c,"avg");h=n.makeTensorInfo(c.outShape,s.dtype,r.values)}return h}};const Lx={kernelName:"AvgPoolBackprop",backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:a}=e,i=a;fb([s,a],"avgPoolBackprop");const{filterSize:o,strides:u,pad:l}=r,c=as(i.shape,o,u,1,l),h=c.strideHeight,p=c.strideWidth,d=c.filterHeight,f=c.filterWidth,m=c.dilationHeight,g=c.dilationWidth,y=c.effectiveFilterHeight,b=c.effectiveFilterWidth,x=b-1-c.padInfo.left,w=y-1-c.padInfo.top,v=Kn(i.shape,"float32"),I=1/(d*f),k=n.data.get(s.dataId).values,N=Kn(s.shape,"float32",k);for(let t=0;t<c.batchSize;++t)for(let e=0;e<c.inChannels;++e)for(let n=0;n<c.inHeight;++n)for(let r=0;r<c.inWidth;++r){const s=n-w,a=r-x;let i=0;for(let n=0;n<y;n+=m){const r=(s+n)/h;if(!(r<0||r>=c.outHeight||Math.floor(r)!==r))for(let n=0;n<b;n+=g){const s=(a+n)/p;if(s<0||s>=c.outWidth||Math.floor(s)!==s)continue;i+=N.get(t,r,s,e)}}v.set(i*I,t,n,r,e)}return n.makeTensorInfo(v.shape,v.dtype,v.values)}};const Bx={kernelName:"FusedBatchNorm",backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,scale:a,offset:i,mean:o,variance:l}=e;u(o.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),u(null==i||o.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),u(null==a||o.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),fb([s,o,l,a,i],"batchNorm");let{varianceEpsilon:c}=r;null==c&&(c=.001);const h=n.data.get(s.dataId).values,p=n.data.get(o.dataId).values,d=n.data.get(l.dataId).values,f=a?n.data.get(a.dataId).values:new Float32Array([1]),m=i?n.data.get(i.dataId).values:new Float32Array([0]),g=new Float32Array(h.length),y=m.length,b=f.length,x=d.length,w=p.length;let v=0,I=0,k=0,N=0;for(let t=0;t<h.length;++t)g[t]=m[v++]+(h[t]-p[I++])*f[k++]/Math.sqrt(d[N++]+c),v>=y&&(v=0),I>=w&&(I=0),k>=b&&(k=0),N>=x&&(N=0);return n.makeTensorInfo(s.shape,s.dtype,g)}},zx={kernelName:"ClipByValue",backendName:"cpu",kernelFunc:Bb("ClipByValue",((t,e)=>{const n=e;return t>n.clipValueMax?n.clipValueMax:t<n.clipValueMin?n.clipValueMin:t}))};function Px(t){const{inputs:e,backend:n}=t,{input:r}=e,s=n.data.get(r.dataId).complexTensorInfos.imag,a=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,a)}const Vx={kernelName:"Imag",backendName:"cpu",kernelFunc:Px};function Wx(t){const{inputs:e,backend:n,attrs:r}=t,{axis:s}=r,a=x(s,e[0].shape)[0];let i=_s(e.map((t=>t.shape)),a);if(0===p(i))return n.makeTensorInfo(i,e[0].dtype,[]);const o=e.filter((t=>p(t.shape)>0));if(1===o.length)return o[0];if(Ts(o.map((t=>t.shape)),a),"complex64"===o[0].dtype){const t=o.map((t=>Tb({inputs:{input:t},backend:n}))),e=o.map((t=>Px({inputs:{input:t},backend:n}))),r=Wx({inputs:t,backend:n,attrs:{axis:a}}),s=Wx({inputs:e,backend:n,attrs:{axis:a}}),i=Nb({inputs:{real:r,imag:s},backend:n});return t.forEach((t=>n.disposeIntermediateTensorInfo(t))),e.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),i}const u=o.map((t=>{const e=p(t.shape.slice(a));return kx({inputs:{x:t},backend:n,attrs:{shape:[-1,e]}})}));i=_s(u.map((t=>t.shape)),1);const l=v(o[0].dtype,p(i));if(1===u[0].shape[0]){let t=0;u.forEach((e=>{const r=n.data.get(e.dataId).values,s=p(e.shape);l.set(r,t),t+=s}))}else{let t=0;u.forEach((e=>{const r=n.data.get(e.dataId).values;let s=0;for(let n=0;n<e.shape[0];++n){const a=n*i[1]+t;for(let t=0;t<e.shape[1];++t)l[a+t]=r[s++]}t+=e.shape[1]}))}const c=_s(o.map((t=>t.shape)),a),h=n.makeTensorInfo(c,e[0].dtype,l);return u.forEach((t=>n.disposeIntermediateTensorInfo(t))),h}const Ux={kernelName:"Concat",backendName:"cpu",kernelFunc:Wx};function Gx(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:a}=e,{strides:i,pad:o,dataFormat:u,dilations:l,dimRoundingMode:c}=r;fb([s,a],"conv2d");const h=gs(u),p=os(s.shape,a.shape,i,l,o,c,!1,h),d=p.filterHeight,f=p.filterWidth,m=p.dilationHeight,g=p.dilationWidth,y=p.padInfo.left,b=p.padInfo.top,x="channelsLast"===p.dataFormat,w=new At(p.outShape,s.dtype),v=A(s.shape),I=A(a.shape),k=v[0],N=x?v[1]:v[2],S=x?v[2]:1,C=x?1:v[1],E=w.strides[0],T=x?w.strides[1]:w.strides[2],_=x?w.strides[2]:1,$=x?1:w.strides[1],R=n.data.get(s.dataId).values,M=n.data.get(a.dataId).values,D=w.values;for(let t=0;t<p.batchSize;++t){const e=t*k,n=t*E;for(let t=0;t<p.outHeight;++t){const r=n+t*T,s=t*p.strideHeight-b;for(let t=0;t<d;++t){const n=s+t*m;if(n<0||n>=p.inHeight)continue;const a=t*I[0],i=e+n*N;for(let t=0;t<p.outWidth;++t){const e=r+t*_,n=t*p.strideWidth-y;for(let t=0;t<f;++t){const r=n+t*g;if(r<0||r>=p.inWidth)continue;const s=i+r*S;let o=a+t*I[1];for(let t=0;t<p.inChannels;++t){const n=R[s+t*C];for(let t=0;t<p.outChannels;++t)D[e+t*$]+=n*M[o+t];o+=p.outChannels}}}}}}return n.makeTensorInfo(w.shape,w.dtype,D)}const Hx={kernelName:"Conv2D",backendName:"cpu",kernelFunc:Gx};const jx={kernelName:"Conv2DBackpropFilter",backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,dy:a}=e,{strides:i,pad:o,dataFormat:u,dimRoundingMode:l,filterShape:c}=r;fb([s,a],"conv2dBackpropFilter");const h=gs(u),p=os(s.shape,c,i,1,o,l,!1,h),{strideHeight:d,strideWidth:f,filterHeight:m,filterWidth:g}=p,y="channelsLast"===p.dataFormat,b=new At(p.filterShape,"float32"),x=p.padInfo.left,w=p.padInfo.top,v=n.data.get(s.dataId).values,I=n.data.get(a.dataId).values,k=new At(s.shape,s.dtype,v),N=new At(a.shape,a.dtype,I);for(let t=0;t<m;++t){const e=Math.max(0,Math.ceil((w-t)/d)),n=Math.min(p.outHeight,(p.inHeight+w-t)/d);for(let r=0;r<g;++r){const s=Math.max(0,Math.ceil((x-r)/f)),a=Math.min(p.outWidth,(p.inWidth+x-r)/f);for(let i=0;i<p.inChannels;++i)for(let o=0;o<p.outChannels;++o){let u=0;for(let l=0;l<p.batchSize;++l)for(let c=e;c<n;++c){const e=t+c*d-w;for(let t=s;t<a;++t){const n=r+t*f-x;u+=y?k.get(l,e,n,i)*N.get(l,c,t,o):k.get(l,i,e,n)*N.get(l,o,c,t)}}b.set(u,t,r,i,o)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};const qx={kernelName:"Conv2DBackpropInput",backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,filter:a}=e,{inputShape:i,strides:o,pad:u,dataFormat:l,dimRoundingMode:c}=r;fb([s,a],"conv2dBackpropInput");const h=A(a.shape),p=A(s.shape);let d=gs(l);const f=os(i,a.shape,o,1,u,c,!1,d),m=new At(f.inShape,"float32"),g=m.values,y=n.data.get(s.dataId).values,b=n.data.get(a.dataId).values,[x,w,v]=h,{batchSize:I,filterHeight:k,filterWidth:N,inChannels:S,inHeight:C,inWidth:E,outChannels:T,outHeight:_,outWidth:$,strideHeight:R,strideWidth:M}=f;d=f.dataFormat;const D=k-1-f.padInfo.top,O=N-1-f.padInfo.left,F="channelsLast"===d,L=m.strides[0],B=F?m.strides[1]:m.strides[2],z=F?m.strides[2]:1,P=F?1:m.strides[1],V=p[0],W=F?p[1]:p[2],U=F?p[2]:1,G=F?1:p[1];for(let t=0;t<I;++t)for(let e=0;e<S;++e)for(let n=0;n<C;++n){const r=n-D,s=Math.max(0,Math.ceil(r/R)),a=Math.min(_,(k+r)/R);for(let i=0;i<E;++i){const o=i-O,u=Math.max(0,Math.ceil(o/M)),l=Math.min($,(N+o)/M);let c=0;for(let n=s;n<a;++n){const s=n*R-r;for(let r=u;r<l;++r){const a=V*t+W*n+U*r,i=x*(k-1-s)+w*(N-1-(r*M-o))+v*e;for(let t=0;t<T;++t){c+=y[a+G*t]*b[i+t]}}}g[L*t+B*n+z*i+P*e]=c}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}};const Kx={kernelName:"Conv3D",backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:a}=e,{strides:i,pad:o,dilations:u}=r;fb([s,a],"conv3d");const l=us(s.shape,a.shape,i,u,o),{filterDepth:c,filterHeight:h,filterWidth:p,dilationDepth:d,dilationHeight:f,dilationWidth:m,padInfo:g}=l,y=g.front,b=g.left,x=g.top,w=new At(l.outShape,s.dtype),v=n.data.get(s.dataId).values,I=n.data.get(a.dataId).values,k=w.values,N=A(s.shape),S=A(a.shape);for(let t=0;t<l.batchSize;++t){const e=t*N[0],n=t*w.strides[0];for(let t=0;t<l.outDepth;++t){const r=n+t*w.strides[1],s=t*l.strideDepth-y;for(let t=0;t<c;++t){const n=s+t*d;if(n<0||n>=l.inDepth)continue;const a=t*S[0],i=e+n*N[1];for(let t=0;t<l.outHeight;++t){const e=r+t*w.strides[2],n=t*l.strideHeight-x;for(let t=0;t<h;++t){const r=n+t*f;if(r<0||r>=l.inHeight)continue;const s=a+t*S[1],o=i+r*N[2];for(let t=0;t<l.outWidth;++t){const n=e+t*l.outChannels,r=t*l.strideWidth-b;for(let t=0;t<p;++t){const e=r+t*m;if(e<0||e>=l.inWidth)continue;const a=s+t*S[2],i=o+e*l.inChannels;let u=a;for(let t=0;t<l.inChannels;++t){const e=v[i+t];for(let t=0;t<l.outChannels;++t)k[n+t]+=e*I[u+t];u+=l.outChannels}}}}}}}}return n.makeTensorInfo(w.shape,w.dtype,w.values)}};const Xx={kernelName:"Conv3DBackpropFilterV2",backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,dy:a}=e,{strides:i,pad:o,filterShape:u}=r;fb([s,a],"conv3dBackpropFilterV2");const l=A(s.shape),c=A(a.shape),h=us(s.shape,u,i,1,o),p=h.strideDepth,d=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,y=h.filterWidth,b=new At(h.filterShape,"float32"),x=b.values,[w,v,I,k]=b.strides,N=n.data.get(a.dataId).values,[S,C,E,T]=c,_=n.data.get(s.dataId).values,[$,R,M,D]=l,O=h.padInfo.front,F=h.padInfo.left,L=h.padInfo.top;for(let t=0;t<m;++t){const e=Math.max(0,Math.ceil((O-t)/p)),n=Math.min(h.outDepth,(h.inDepth+O-t)/p),r=t*w;for(let s=0;s<g;++s){const a=Math.max(0,Math.ceil((L-s)/d)),i=Math.min(h.outHeight,(h.inHeight+L-s)/d),o=s*v+r;for(let r=0;r<y;++r){const u=Math.max(0,Math.ceil((F-r)/f)),l=Math.min(h.outWidth,(h.inWidth+F-r)/f),c=r*I+o;for(let o=0;o<h.inChannels;++o){const m=o*k+c;for(let c=0;c<h.outChannels;++c){let g=0;for(let m=0;m<h.batchSize;++m){const h=m*$,y=m*S;for(let m=e;m<n;++m){const e=(t+m*p-O)*R+h,n=m*C+y;for(let t=a;t<i;++t){const a=(s+t*d-L)*M+e,i=t*E+n;for(let t=u;t<l;++t){const e=t*T+i;g+=_[(r+t*f-F)*D+a+o]*N[e+c]}}}}x[m+c]=g}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};const Yx={kernelName:"Conv3DBackpropInputV2",backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,filter:a}=e,{pad:i,strides:o,inputShape:u}=r;fb([s],"conv3dBackpropInputV2");const l=A(s.shape),c=A(a.shape),h=us(u,a.shape,o,1,i),p=new At(h.inShape,"float32"),d=p.values,[f,m,g,y]=p.strides,b=n.data.get(s.dataId).values,[x,w,v,I]=l,k=n.data.get(a.dataId).values,[N,S,C,E]=c,{batchSize:T,filterDepth:_,filterHeight:$,filterWidth:R,inChannels:M,inDepth:D,inHeight:O,inWidth:F,outChannels:L,outDepth:B,outHeight:z,outWidth:P,strideDepth:V,strideHeight:W,strideWidth:U}=h,G=_-1-h.padInfo.front,H=$-1-h.padInfo.top,j=R-1-h.padInfo.left;for(let t=0;t<T;++t)for(let e=0;e<M;++e)for(let n=0;n<D;++n){const r=n-G,s=Math.max(0,Math.ceil(r/V)),a=Math.min(B,(_+r)/V);for(let i=0;i<O;++i){const o=i-H,u=Math.max(0,Math.ceil(o/W)),l=Math.min(z,($+o)/W);for(let c=0;c<F;++c){const h=c-j,p=Math.max(0,Math.ceil(h/U)),T=Math.min(P,(R+h)/U);let A=0;for(let n=s;n<a;++n){const s=n*V-r;for(let r=u;r<l;++r){const a=r*W-o;for(let i=p;i<T;++i){const o=x*t+w*n+v*r+I*i,u=N*(_-1-s)+S*($-1-a)+C*(R-1-(i*U-h))+E*e;for(let t=0;t<L;++t){A+=b[o+t]*k[u+t]}}}}d[f*t+m*n+g*i+y*c+e]=A}}}return n.makeTensorInfo(p.shape,p.dtype,p.values)}},Jx={kernelName:"Cos",backendName:"cpu",kernelFunc:Bb("Cos",(t=>Math.cos(t)))},Zx={kernelName:"Cosh",backendName:"cpu",kernelFunc:Bb("Cosh",(t=>Math.cosh(t)))};function Qx(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:a}=e,{strides:i,pad:o,dilations:l,dimRoundingMode:c}=r;fb([s,a],"depthwiseConv2DNative");const h=A(s.shape),p=A(a.shape);let d=l;null==d&&(d=[1,1]),u(ms(i,d),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${d}'`));const f=os(s.shape,a.shape,i,d,o,c,!0),{filterHeight:m,filterWidth:g,dilationHeight:y,dilationWidth:b,padInfo:x}=f,w=x.left,v=x.top,I=f.outChannels/f.inChannels,k=new At(f.outShape,s.dtype),N=n.data.get(s.dataId).values,S=n.data.get(a.dataId).values,C=k.values;for(let t=0;t<f.batchSize;++t){const e=t*h[0],n=t*k.strides[0];for(let t=0;t<f.outHeight;++t){const r=n+t*k.strides[1],s=t*f.strideHeight-w;for(let t=0;t<m;++t){const n=s+t*y;if(n<0||n>=f.inHeight)continue;const a=t*p[0],i=e+n*h[1];for(let t=0;t<f.outWidth;++t){const e=r+t*k.strides[2],n=t*f.strideWidth-v;for(let t=0;t<g;++t){const r=n+t*b;if(r<0||r>=f.inWidth)continue;const s=a+t*p[1],o=i+r*f.inChannels;let u=e,l=s;for(let t=0;t<f.inChannels;++t){const e=N[o+t];for(let t=0;t<I;++t)C[u+t]+=e*S[l+t];u+=I,l+=I}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}const tw={kernelName:"DepthwiseConv2dNative",backendName:"cpu",kernelFunc:Qx};const ew={kernelName:"DepthwiseConv2dNativeBackpropFilter",backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,dy:a}=e,{strides:i,dilations:o,pad:u,dimRoundingMode:l,filterShape:c}=r;fb([s,a],"depthwiseConv2dNativeBackpropFilter");const h=os(s.shape,c,i,o,u,l,!0),{strideHeight:p,strideWidth:d,filterHeight:f,filterWidth:m}=h,g=new At(h.filterShape,"float32"),y=h.padInfo.left,b=h.padInfo.top,x=h.outChannels/h.inChannels,w=n.data.get(s.dataId).values,v=new At(s.shape,s.dtype,w),I=n.data.get(a.dataId).values,k=new At(a.shape,a.dtype,I);for(let t=0;t<f;++t){const e=Math.max(0,Math.ceil((b-t)/p)),n=Math.min(h.outHeight,(h.inHeight+b-t)/p);for(let r=0;r<m;++r){const s=Math.max(0,Math.ceil((y-r)/d)),a=Math.min(h.outWidth,(h.inWidth+y-r)/d);for(let i=0;i<h.outChannels;++i){const o=Math.trunc(i/x),u=i%x;let l=0;for(let u=0;u<h.batchSize;++u)for(let c=e;c<n;++c){const e=t+c*p-b;for(let t=s;t<a;++t){const n=r+t*d-y;l+=v.get(u,e,n,o)*k.get(u,c,t,i)}}g.set(l,t,r,o,u)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}};const nw={kernelName:"DepthwiseConv2dNativeBackpropInput",backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,filter:a}=e,{strides:i,dilations:o,pad:u,dimRoundingMode:l,inputShape:c}=r;fb([s,a],"depthwiseConv2DNativeBackpropInput");const h=A(s.shape),p=A(a.shape),d=os(c,a.shape,i,o,u,l,!0),f=new At(d.inShape,"float32"),m=f.values,[g,y,b]=f.strides,x=n.data.get(s.dataId).values,[w,v,I]=h,k=n.data.get(a.dataId).values,[N,S,C]=p,{batchSize:E,filterHeight:T,filterWidth:_,inChannels:$,inHeight:R,inWidth:M,outChannels:D,outHeight:O,outWidth:F,strideHeight:L,strideWidth:B}=d,z=T-1-d.padInfo.top,P=_-1-d.padInfo.left,V=D/$;for(let t=0;t<E;++t)for(let e=0;e<$;++e)for(let n=0;n<R;++n){const r=n-z,s=Math.max(0,Math.ceil(r/L)),a=Math.min(O,(T+r)/L);for(let i=0;i<M;++i){const o=i-P,u=Math.max(0,Math.ceil(o/B)),l=Math.min(F,(_+o)/B);let c=0;for(let n=s;n<a;++n){const s=n*L-r;for(let r=u;r<l;++r){const a=w*t+v*n+I*r,i=N*(T-1-s)+S*(_-1-(r*B-o))+C*e;for(let t=0;t<V;++t){c+=x[a+(e*V+t)]*k[i+t]}}}m[g*t+y*n+b*i+e]=c}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}},rw={kernelName:"Dilation2D",backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r,filter:s}=t,{strides:a,pad:i,dilations:o}=n,u=e,l=u.data.get(r.dataId).values,c=r.shape.length,h=u.data.get(s.dataId).values,d=s.shape.length,{batchSize:f,inHeight:m,inWidth:g,inChannels:y,outHeight:b,outWidth:x,padInfo:w,strideHeight:v,strideWidth:k,filterHeight:N,filterWidth:S,dilationHeight:C,dilationWidth:E,outShape:T}=ss(r.shape,s.shape,a,i,"NHWC",o),_=p(T),$=T.length,R=I(r.dtype,_);for(let t=0;t<f;++t)for(let e=0;e<b;++e){const n=e*v-w.top;for(let a=0;a<x;++a){const i=a*k-w.left;for(let o=0;o<y;++o){let u=Number.MIN_SAFE_INTEGER;for(let e=0;e<N;++e){const a=n+e*C;if(a>=0&&a<m)for(let n=0;n<S;++n){const p=i+n*E;if(p>=0&&p<g){const i=B([t,a,p,o],c,A(r.shape)),f=B([e,n,o],d,A(s.shape)),m=l[i]+h[f];m>u&&(u=m)}}}R[B([t,e,a,o],$,A(T))]=u}}}return{dataId:u.write(xt(R,r.dtype),T,r.dtype),shape:T,dtype:r.dtype}}},sw={kernelName:"Dilation2DBackpropFilter",backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r,filter:s,dy:a}=t,{strides:i,pad:o,dilations:l}=n,c=e,h=M(r.shape,c.data.get(r.dataId).values),p=M(s.shape,c.data.get(s.dataId).values),{batchSize:d,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:w,strideWidth:v,filterHeight:I,filterWidth:k,dilationHeight:N,dilationWidth:S,outShape:C}=ss(r.shape,s.shape,i,o,"NHWC",l);u(a.rank===C.length,(()=>`Error in Dilation2DBackpropFilter, dy must have the same rank as output ${C.length}, but got ${a.rank}`));const E=M(C,c.data.get(a.dataId).values),T=F(s.shape,s.dtype);for(let t=0;t<d;++t)for(let e=0;e<y;++e){const n=e*w-x.top;for(let r=0;r<b;++r){const s=r*v-x.left;for(let a=0;a<g;++a){let i=Number.MIN_SAFE_INTEGER,o=0,u=0;for(let e=0;e<I;++e){const r=n+e*N;if(r>=0&&r<f)for(let n=0;n<k;++n){const l=s+n*S;if(l>=0&&l<m){const s=h[t][r][l][a]+p[e][n][a];s>i&&(i=s,o=e,u=n)}}}T[o][u][a]+=E[t][e][r][a]}}}return{dataId:c.write(xt(T,r.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},aw={kernelName:"Dilation2DBackpropInput",backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r,filter:s,dy:a}=t,{strides:i,pad:o,dilations:l}=n,c=e,h=M(r.shape,c.data.get(r.dataId).values),p=M(s.shape,c.data.get(s.dataId).values),{batchSize:d,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:w,strideWidth:v,filterHeight:I,filterWidth:k,dilationHeight:N,dilationWidth:S,outShape:C}=ss(r.shape,s.shape,i,o,"NHWC",l);u(a.rank===C.length,(()=>`Error in Dilation2DBackpropInput, dy must have the same rank as output ${C.length}, but got ${a.rank}`));const E=M(C,c.data.get(a.dataId).values),T=F(r.shape,r.dtype);for(let t=0;t<d;++t)for(let e=0;e<y;++e){const n=e*w-x.top;for(let r=0;r<b;++r){const s=r*v-x.left;for(let a=0;a<g;++a){let i=Number.MIN_SAFE_INTEGER,o=n<0?0:n,u=s<0?0:s;for(let e=0;e<I;++e){const r=n+e*N;if(r>=0&&r<f)for(let n=0;n<k;++n){const l=s+n*S;if(l>=0&&l<m){const s=h[t][r][l][a]+p[e][n][a];s>i&&(i=s,o=r,u=l)}}}T[t][o][u][a]+=E[t][e][r][a]}}}return{dataId:c.write(xt(T,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},iw={kernelName:"Div",backendName:"cpu",kernelFunc:Rb("Div",kb(((t,e)=>t/e)))},ow={kernelName:"Erf",backendName:"cpu",kernelFunc:Bb("Erf",(t=>{const e=Math.sign(t),n=Math.abs(t),r=1/(1+.3275911*n);return e*(1-((((1.061405429*r-1.453152027)*r+1.421413741)*r-.284496736)*r+.254829592)*r*Math.exp(-n*n))}))};function uw(t,e,n){const r=t.shape,s=r[0],a=r[1],i=n.data.get(t.dataId),o=i.complexTensorInfos.real,u=i.complexTensorInfos.imag,l=[s,a],c=p(l),h=v("float32",c),d=v("float32",c);for(let t=0;t<s;t++){const r=ax({inputs:{x:o},backend:n,attrs:{begin:[t,0],size:[1,a]}}),s=ax({inputs:{x:u},backend:n,attrs:{begin:[t,0],size:[1,a]}}),i=Nb({inputs:{real:r,imag:s},backend:n}),{real:l,imag:c}=lw(i,e,n),p=Fu(l,c);for(let e=0;e<a;e++){const n=Lu(p,e);h[t*a+e]=n.real,d[t*a+e]=n.imag}n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i)}const f=n.makeTensorInfo(l,"float32",h),m=n.makeTensorInfo(l,"float32",d),g=Nb({inputs:{real:f,imag:m},backend:n});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}function lw(t,e,n){const r=p(t.shape),s=n.data.get(t.dataId),a=n.data.get(s.complexTensorInfos.real.dataId).values,i=n.data.get(s.complexTensorInfos.imag.dataId).values;if(0==((l=r)&l-1)){const s=cw(a,i,r,e,n),l=[t.shape[0],t.shape[1]];if(e){const t=n.makeTensorInfo(l,"float32",s.real),e=n.makeTensorInfo(l,"float32",s.imag),a=n.makeTensorInfo([],"float32",(o=r,"string"===(u="float32")?vt(o):xt([o],u))),i=Cb({inputs:{x:a},backend:n}),c=iw.kernelFunc({inputs:{a:t,b:a},backend:n}),h=iw.kernelFunc({inputs:{a:e,b:i},backend:n}),p=n.data.get(c.dataId).values,d=n.data.get(h.dataId).values;return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),{real:p,imag:d}}return s}return function(t){const e=new Float32Array(t.length/2),n=new Float32Array(t.length/2);for(let r=0;r<t.length;r+=2)e[r/2]=t[r],n[r/2]=t[r+1];return{real:e,imag:n}}(function(t,e,n){const r=new Float32Array(2*e);for(let s=0;s<e;s++){let a=0,i=0;for(let r=0;r<e;r++){const o=zu(s*r,e,n),u=Lu(t,r);a+=u.real*o.real-u.imag*o.imag,i+=u.real*o.imag+u.imag*o.real}n&&(a/=e,i/=e),Bu(r,a,i,s)}return r}(Fu(a,i),r,e));var o,u,l}function cw(t,e,n,r,s){if(1===n)return{real:t,imag:e};const a=Fu(t,e),i=n/2,o=function(t){const e=Math.ceil(t.length/4),n=new Float32Array(e),r=new Float32Array(e);for(let e=0;e<t.length;e+=4)n[Math.floor(e/4)]=t[e],r[Math.floor(e/4)]=t[e+1];return{real:n,imag:r}}(a),u=o.real,l=o.imag,c=[u.length],h=s.makeTensorInfo(c,"float32",u),p=s.makeTensorInfo(c,"float32",l),d=Nb({inputs:{real:h,imag:p},backend:s}),f=function(t){const e=Math.floor(t.length/4),n=new Float32Array(e),r=new Float32Array(e);for(let e=2;e<t.length;e+=4)n[Math.floor(e/4)]=t[e],r[Math.floor(e/4)]=t[e+1];return{real:n,imag:r}}(a),m=f.real,g=f.imag,y=[m.length],b=s.makeTensorInfo(y,"float32",m),x=s.makeTensorInfo(y,"float32",g),w=Nb({inputs:{real:b,imag:x},backend:s}),v=cw(u,l,i,r,s),I=v.real,k=v.imag,N=[I.length],S=s.makeTensorInfo(N,"float32",I),C=s.makeTensorInfo(N,"float32",k),E=Nb({inputs:{real:S,imag:C},backend:s}),T=cw(m,g,i,r,s),_=T.real,$=T.imag,A=[_.length],R=s.makeTensorInfo(A,"float32",_),M=s.makeTensorInfo(A,"float32",$),D=Nb({inputs:{real:R,imag:M},backend:s}),O=function(t,e){const n=new Float32Array(t/2),r=new Float32Array(t/2);for(let s=0;s<Math.ceil(t/2);s++){const a=(e?2:-2)*Math.PI*(s/t);n[s]=Math.cos(a),r[s]=Math.sin(a)}return{real:n,imag:r}}(n,r),F=[O.real.length],L=s.makeTensorInfo(F,"float32",O.real),B=s.makeTensorInfo(F,"float32",O.imag),z=Nb({inputs:{real:L,imag:B},backend:s}),P=Qb({inputs:{a:z,b:D},backend:s}),V=Ob({inputs:{a:E,b:P},backend:s}),W=lx({inputs:{a:E,b:P},backend:s}),U=Tb({inputs:{input:V},backend:s}),G=Tb({inputs:{input:W},backend:s}),H=Px({inputs:{input:V},backend:s}),j=Px({inputs:{input:W},backend:s}),q=Wx({inputs:[U,G],backend:s,attrs:{axis:0}}),K=Wx({inputs:[H,j],backend:s,attrs:{axis:0}}),X=s.data.get(q.dataId).values,Y=s.data.get(K.dataId).values;return s.disposeIntermediateTensorInfo(h),s.disposeIntermediateTensorInfo(p),s.disposeIntermediateTensorInfo(d),s.disposeIntermediateTensorInfo(b),s.disposeIntermediateTensorInfo(x),s.disposeIntermediateTensorInfo(w),s.disposeIntermediateTensorInfo(S),s.disposeIntermediateTensorInfo(C),s.disposeIntermediateTensorInfo(E),s.disposeIntermediateTensorInfo(R),s.disposeIntermediateTensorInfo(M),s.disposeIntermediateTensorInfo(D),s.disposeIntermediateTensorInfo(L),s.disposeIntermediateTensorInfo(B),s.disposeIntermediateTensorInfo(z),s.disposeIntermediateTensorInfo(P),s.disposeIntermediateTensorInfo(V),s.disposeIntermediateTensorInfo(W),s.disposeIntermediateTensorInfo(U),s.disposeIntermediateTensorInfo(H),s.disposeIntermediateTensorInfo(G),s.disposeIntermediateTensorInfo(j),s.disposeIntermediateTensorInfo(q),s.disposeIntermediateTensorInfo(K),{real:X,imag:Y}}const hw={kernelName:"FFT",backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:r}=e,s=p(r.shape),a=r.shape[r.shape.length-1],i=kx({inputs:{x:r},backend:n,attrs:{shape:[s/a,a]}}),o=uw(i,!1,n),u=kx({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}};const pw={kernelName:"Fill",backendName:"cpu",kernelFunc:function(t){const{backend:e,attrs:n}=t,{shape:r,value:s,dtype:a}=n,i=a||T(s),o=I(i,p(r));return function(t,e,n){t.fill(e)}(o,s),e.makeTensorInfo(r,i,o)}};const dw={kernelName:"FlipLeftRight",backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:r}=t,s=n,a=v(r.dtype,p(r.shape)),[i,o,u,l]=r.shape,c=s.data.get(r.dataId).values;for(let t=0;t<i;t++){const e=t*u*o*l;for(let t=0;t<o;t++){const n=t*(u*l);for(let r=0;r<u;r++){const s=r*l;for(let o=0;o<l;o++){const h=[i,t,r,o][2],p=Math.round(u-h),d=e+n+s+o;let f=c[d];if(p>=0&&p<u){f=c[e+n+p*l+o]}a[d]=f}}}}return{dataId:s.write(a,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};const fw={kernelName:"FusedConv2D",backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:a,bias:i,preluActivationWeights:o}=e,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:p,activation:d}=r;let f=Gx({inputs:{x:s,filter:a},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:p}});if(i){const t=f;f=Ob({inputs:{a:f,b:i},backend:n}),n.disposeIntermediateTensorInfo(t)}if(d){const t=f;f=Ix(n,f,d,o),n.disposeIntermediateTensorInfo(t)}return f}};const mw={kernelName:"FusedDepthwiseConv2D",backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:a,bias:i,preluActivationWeights:o}=e,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:p,activation:d}=r;let f=Qx({inputs:{x:s,filter:a},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:p}});if(i){const t=f;f=Ob({inputs:{a:f,b:i},backend:n}),n.disposeIntermediateTensorInfo(t)}if(d){const t=f;f=Ix(n,f,d,o),n.disposeIntermediateTensorInfo(t)}return f}};const gw={kernelName:"IFFT",backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:r}=e,s=p(r.shape),a=r.shape[r.shape.length-1],i=kx({inputs:{x:r},backend:n,attrs:{shape:[s/a,a]}}),o=uw(i,!0,n),u=kx({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}},yw={kernelName:"IsFinite",backendName:"cpu",kernelFunc:Bb("IsFinite",(t=>Number.isFinite(t)?1:0),"bool")},bw={kernelName:"IsInf",backendName:"cpu",kernelFunc:Bb("IsInf",(t=>Math.abs(t)===1/0?1:0),"bool")},xw={kernelName:"IsNan",backendName:"cpu",kernelFunc:Bb("IsNan",(t=>Number.isNaN(t)?1:0),"bool")},ww={kernelName:"Log1p",backendName:"cpu",kernelFunc:Bb("Log1p",(t=>Math.log1p(t)))},vw={kernelName:"LogicalNot",backendName:"cpu",kernelFunc:Bb("LogicalNot",(t=>t?0:1),"bool")},Iw={kernelName:"Max",backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{reductionIndices:s,keepDims:a}=e,i=n;let o=r.shape;const u=o.length,l=x(s,o);let c=l;const h=jr(c,u);let d=i.data.get(r.dataId).values;if(null!=h){const t=new Array(u);for(let e=0;e<t.length;e++)t[e]=o[h[e]];d=hx(d,o,r.dtype,h,t),c=Kr(c.length,u),o=t}fb(r,"max"),Hr("max",c,u);const[f,m]=Ur(o,c),g=Yb(d,p(m),f,r.dtype),y=i.write(g,f,r.dtype);let b=f;if(a){b=Gr(f,l)}return{dataId:y,shape:b,dtype:r.dtype}}};const kw={kernelName:"MaxPool",backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e;fb(s,"maxPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=r;u(ms(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const c=as(s.shape,a,i,1,o,l);let h;if(1===c.filterWidth&&1===c.filterHeight&&d(c.inShape,c.outShape))h=Cb({inputs:{x:s},backend:n});else{const t=n.data.get(s.dataId).values,e=A(s.shape),r=Dx(t,s.shape,s.dtype,e,c,"max");h=n.makeTensorInfo(c.outShape,s.dtype,r.values)}return h}};const Nw={kernelName:"MaxPoolBackprop",backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:a,output:i}=e,o=a;fb([a,i],"maxPoolBackprop");const{filterSize:u,strides:l,pad:c,dimRoundingMode:h}=r,p=as(o.shape,u,l,1,c,h),d=n.data.get(o.dataId).values,f=Kn(p.outShape,o.dtype,Ox(d,o.shape,o.dtype,p).values),m=p.strideHeight,g=p.strideWidth,y=p.dilationHeight,b=p.dilationWidth,x=p.effectiveFilterHeight,w=p.effectiveFilterWidth,v=w-1-p.padInfo.left,I=x-1-p.padInfo.top,k=Kn(o.shape,"float32"),N=n.data.get(s.dataId).values,S=Kn(s.shape,"float32",N);for(let t=0;t<p.batchSize;++t)for(let e=0;e<p.inChannels;++e)for(let n=0;n<p.inHeight;++n)for(let r=0;r<p.inWidth;++r){const s=n-I,a=r-v;let i=0;for(let n=0;n<x;n+=y){const r=(s+n)/m;if(!(r<0||r>=p.outHeight||Math.floor(r)!==r))for(let s=0;s<w;s+=b){const o=(a+s)/g;if(o<0||o>=p.outWidth||Math.floor(o)!==o)continue;const u=x*w-1-f.get(t,r,o,e)===n*w+s?1:0;if(0===u)continue;i+=S.get(t,r,o,e)*u}}k.set(i,t,n,r,e)}return n.makeTensorInfo(k.shape,k.dtype,k.values)}};const Sw={kernelName:"MaxPoolWithArgmax",backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{filterSize:s,strides:a,pad:i,includeBatchInIndex:o}=e,u=n;fb(r,"MaxPoolWithArgmax");const l=u.data.get(r.dataId).values,c=as(r.shape,s,a,[1,1],i),[h,p]=function(t,e,n,r,s){const a=Dx(t,0,n,A(e),s,"max"),i=Ox(t,e,n,s,!0,r);return[a.values,i.values]}(l,r.shape,r.dtype,o,c),d=u.write(h,c.outShape,r.dtype),f=u.write(p,c.outShape,r.dtype);return[{dataId:d,shape:c.outShape,dtype:r.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}};const Cw={kernelName:"MirrorPad",backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{paddings:a,mode:i}=r;fb(s,"mirrorPad");const o=a.map(((t,e)=>t[0]+s.shape[e]+t[1])),u=a.map((t=>t[0])),l=a.map(((t,e)=>t[0]+s.shape[e])),c="reflect"===i?0:1,h=n.data.get(s.dataId).values,d=s.shape.length,f=A(s.shape),m=p(o),g=o.length,y=A(o),b=v(s.dtype,m);for(let t=0;t<m;t++){let e=z(t,g,y);for(let t=0;t<g;t++)e[t]<u[t]?e[t]=2*u[t]-e[t]-c:e[t]>=l[t]&&(e[t]=2*(l[t]-1)-e[t]+c);e=e.map(((t,e)=>t-u[e]));const n=B(e,d,f);b[t]=h[n]}return{dataId:n.write(b,o,s.dtype),shape:o,dtype:s.dtype}}},Ew=Ko,Tw={kernelName:"NonMaxSuppressionV4",backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{boxes:r,scores:s}=t,{maxOutputSize:a,iouThreshold:i,scoreThreshold:o,padToMaxOutputSize:u}=n,l=e;fb(r,"NonMaxSuppressionPadded");const c=l.data.get(r.dataId).values,h=l.data.get(s.dataId).values,{selectedIndices:p,validOutputs:d}=Ew(c,h,a,i,o,u);return[p,d]}},_w=Xo,$w={kernelName:"NonMaxSuppressionV5",backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{boxes:r,scores:s}=t,{maxOutputSize:a,iouThreshold:i,scoreThreshold:o,softNmsSigma:u}=n,l=e;fb(r,"NonMaxSuppressionWithScore");const c=l.data.get(r.dataId).values,h=l.data.get(s.dataId).values,p=a,d=i,f=o,m=u,{selectedIndices:g,selectedScores:y}=_w(c,h,p,d,f,m);return[g,y]}};const Aw={kernelName:"PadV2",backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{paddings:a,constantValue:i}=r;fb(s,"pad");const o=a.map(((t,e)=>t[0]+s.shape[e]+t[1])),u=a.map((t=>t[0])),l=n.data.get(s.dataId).values,c=p(s.shape),h=s.shape.length,d=A(s.shape),f=p(o),m=o.length,g=A(o),y=v(s.dtype,f);0!==i&&y.fill(i);for(let t=0;t<c;t++){y[B(z(t,h,d).map(((t,e)=>t+u[e])),m,g)]=l[t]}return{dataId:n.write(y,o,s.dtype),shape:o,dtype:s.dtype}}},Rw={kernelName:"Reciprocal",backendName:"cpu",kernelFunc:Bb("Reciprocal",(t=>1/t))},Mw={kernelName:"RotateWithOffset",backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:r}=t,{radians:s,fillValue:a,center:i}=e,o=n,u=v(r.dtype,p(r.shape)),[l,c,h,d]=r.shape,[f,m]=_u(i,c,h),g=Math.sin(s),y=Math.cos(s),b=o.data.get(r.dataId).values;for(let t=0;t<l;t++){const e=t*h*c*d;for(let t=0;t<c;t++){const n=t*(h*d);for(let r=0;r<h;r++){const s=r*d;for(let i=0;i<d;i++){const o=[l,t,r,i],p=o[2],x=o[1];let w=(p-f)*y-(x-m)*g,v=(p-f)*g+(x-m)*y;w=Math.round(w+f),v=Math.round(v+m);let I=a;if("number"!=typeof a&&(I=3===i?255:a[i]),w>=0&&w<h&&v>=0&&v<c){I=b[e+v*(h*d)+w*d+i]}u[e+n+s+i]=I}}}}return{dataId:o.write(u,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},Dw={kernelName:"Round",backendName:"cpu",kernelFunc:Bb("Round",(t=>{const e=Math.floor(t);return t-e<.5?Math.floor(t):t-e>.5?Math.ceil(t):e%2==0?e:e+1}))},Ow={kernelName:"Selu",backendName:"cpu",kernelFunc:Bb("Selu",(t=>t>=0?1.0507009873554805*t:1.7580993408473768*(Math.exp(t)-1)))},Fw={kernelName:"Sigmoid",backendName:"cpu",kernelFunc:Bb("Sigmoid",(t=>1/(1+Math.exp(-t))))},Lw={kernelName:"Sign",backendName:"cpu",kernelFunc:Bb("Sign",(t=>t<0?-1:t>0?1:0))},Bw={kernelName:"Sin",backendName:"cpu",kernelFunc:Bb("Sin",(t=>Math.sin(t)))},zw={kernelName:"Sinh",backendName:"cpu",kernelFunc:Bb("Sinh",(t=>Math.sinh(t)))},Pw=Math.log(1.1920928955078125e-7)+2,Vw={kernelName:"Softplus",backendName:"cpu",kernelFunc:Bb("Softplus",(t=>{const e=t>-Pw,n=t<Pw,r=Math.exp(t);let s;return s=n?r:e?t:Math.log(1+r),s}))};function Ww(t){const{inputs:e,attrs:n,backend:r}=t,{x:s}=e,{perm:a}=n;fb(s,"transpose");const i=s.shape.length,o=new Array(i);for(let t=0;t<o.length;t++)o[t]=s.shape[a[t]];const u=hx(r.data.get(s.dataId).values,s.shape,s.dtype,a,o);return{dataId:r.write(u,o,s.dtype),shape:o,dtype:s.dtype}}const Uw={kernelName:"Transpose",backendName:"cpu",kernelFunc:Ww};const Gw={kernelName:"SpaceToBatchND",backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{blockShape:a,paddings:i}=r;fb([s],"spaceToBatchND");const o=p(a),u=[[0,0]];u.push(...i);for(let t=1+a.length;t<s.shape.length;++t)u.push([0,0]);const l=Aw.kernelFunc({inputs:{x:s},backend:n,attrs:{paddings:u,constantValue:0}}),c=$u(l.shape,a,o,!1),h=Au(c.length,a.length,!1),d=Ru(l.shape,a,o,!1),f=kx({inputs:{x:l},backend:n,attrs:{shape:c}}),m=Ww({inputs:{x:f},backend:n,attrs:{perm:h}}),g=kx({inputs:{x:m},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}},Hw={kernelName:"Sqrt",backendName:"cpu",kernelFunc:Bb("Sqrt",(t=>Math.sqrt(t)))},jw={kernelName:"Square",backendName:"cpu",kernelFunc:({inputs:t,backend:e})=>{const{x:n}=t,r=e;fb(n,"square");const s=r.data.get(n.dataId).values,a=new Float32Array(s.length);for(let t=0;t<s.length;++t){const e=s[t];a[t]=e*e}return{dataId:r.write(a,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},qw={kernelName:"Step",backendName:"cpu",kernelFunc:Bb("Step",((t,e)=>{const n=e;return isNaN(t)?NaN:t>0?1:n.alpha}))},Kw={kernelName:"Tan",backendName:"cpu",kernelFunc:Bb("Tan",(t=>Math.tan(t)))},Xw=Bb("Tanh",(t=>Math.tanh(t)));const Yw=[Ex,Ib,Tx,_x,Fb,$x,Ax,Rx,Mx,Fx,Lx,Cx,Bx,Ab,Vb,zx,Sb,Ux,jx,qx,Hx,Xx,Yx,Kx,Jx,Zx,tw,ew,nw,rw,aw,sw,iw,fx,ow,Ub,Hb,hw,pw,dw,qb,fw,mw,Eb,gw,Vx,yw,bw,xw,Xb,ww,vw,kw,Nw,Sw,Iw,Cw,tx,Tw,$w,ex,Aw,yx,_b,Rw,xx,vx,Nx,Mw,Dw,rx,Ow,Fw,Lw,Bw,zw,ix,Vw,Gw,Hw,jw,ox,qw,cx,Kw,{kernelName:"Tanh",backendName:"cpu",kernelFunc:Xw},Uw,{kernelName:"Unique",backendName:"cpu",kernelFunc:function(t){const{inputs:e,attrs:n,backend:r}=t,{axis:s}=n,{x:a}=e;fb(a,"unique");const i=r.data.get(a.dataId).values,{outputValues:o,outputShape:u,indices:l}=px(i,s,a.shape,a.dtype);return[r.makeTensorInfo(u,a.dtype,o),r.makeTensorInfo([l.length],"int32",l)]}}];for(const t of Yw)gt(t);const Jw={},Zw={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function Qw(t){if(!(t in Jw)){const e=function(t){if(1!==t&&2!==t)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const e=function(t){if("undefined"!=typeof OffscreenCanvas&&2===t)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(t);if(e.addEventListener("webglcontextlost",(e=>{e.preventDefault(),delete Jw[t]}),!1),1===t)return e.getContext("webgl",Zw)||e.getContext("experimental-webgl",Zw);return e.getContext("webgl2",Zw)}(t);if(null===e)return console.log("Could not get context for WebGL version",t),null;Jw[t]=e}const e=Jw[t];return e.isContextLost()?(delete Jw[t],Qw(t)):(e.disable(e.DEPTH_TEST),e.disable(e.STENCIL_TEST),e.disable(e.BLEND),e.disable(e.DITHER),e.disable(e.POLYGON_OFFSET_FILL),e.disable(e.SAMPLE_COVERAGE),e.enable(e.SCISSOR_TEST),e.enable(e.CULL_FACE),e.cullFace(e.BACK),Jw[t])}var tv,ev,nv,rv,sv,av;function iv(t,e){return[e,t]}function ov(t){const e=p(t);return m(Math.ceil(e/4))}function uv(t,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(t/2))]}function lv(t,e){const n=t;let r,s,a,i,o,u,l,c,h,p;return 2===W().getNumber("WEBGL_VERSION")?(r=n.R32F,s=n.R16F,a=n.RGBA16F,i=n.RGBA32F,o=n.RED,l=4,c=1,h=n.HALF_FLOAT,p=n.FLOAT):(r=t.RGBA,s=t.RGBA,a=t.RGBA,i=n.RGBA,o=t.RGBA,l=4,c=4,h=null!=e?e.HALF_FLOAT_OES:null,p=t.FLOAT),u=t.RGBA,{internalFormatFloat:r,internalFormatHalfFloat:s,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:i,textureFormatFloat:o,downloadTextureFormat:u,downloadUnpackNumChannels:l,defaultNumChannels:c,textureTypeHalfFloat:h,textureTypeFloat:p}}function cv(t,e){const n=e();return W().getBool("DEBUG")&&function(t){const e=t.getError();if(e!==t.NO_ERROR)throw new Error("WebGL Error: "+function(t,e){switch(e){case t.NO_ERROR:return"NO_ERROR";case t.INVALID_ENUM:return"INVALID_ENUM";case t.INVALID_VALUE:return"INVALID_VALUE";case t.INVALID_OPERATION:return"INVALID_OPERATION";case t.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case t.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case t.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${e}`}}(t,e))}(t),n}(ev=tv||(tv={}))[ev.DENSE=0]="DENSE",ev[ev.SHARED_BATCH=1]="SHARED_BATCH",(rv=nv||(nv={}))[rv.RENDER=0]="RENDER",rv[rv.UPLOAD=1]="UPLOAD",rv[rv.PIXELS=2]="PIXELS",rv[rv.DOWNLOAD=3]="DOWNLOAD",(av=sv||(sv={}))[av.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",av[av.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",av[av.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",av[av.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",av[av.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16";function hv(t){return!!(W().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===t||5.96e-8<Math.abs(t)&&Math.abs(t)<65504)}function pv(t,e){return vv(t,(()=>t.getExtension(e)),'Extension "'+e+'" not supported on this browser.')}function dv(t,e){const n=vv(t,(()=>t.createShader(t.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(cv(t,(()=>t.shaderSource(n,e))),cv(t,(()=>t.compileShader(n))),!1===t.getShaderParameter(n,t.COMPILE_STATUS))throw function(t,e){const n=fv.exec(e);if(null==n)return console.log(`Couldn't parse line number in error: ${e}`),void console.log(t);const r=+n[1],s=t.split("\n"),a=s.length.toString().length+2,i=s.map(((t,e)=>g((e+1).toString(),a)+t));let o=0;for(let t=0;t<i.length;t++)o=Math.max(i[t].length,o);const u=i.slice(0,r-1),l=i.slice(r-1,r),c=i.slice(r);console.log(u.join("\n")),console.log(e.split("\n")[0]),console.log(`%c ${g(l[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join("\n"))}(e,t.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}const fv=/ERROR: [0-9]+:([0-9]+):/g;function mv(t,e){if(cv(t,(()=>t.validateProgram(e))),!1===t.getProgramParameter(e,t.VALIDATE_STATUS))throw console.log(t.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function gv(t,e,n,r,s,a,i){const o=t.getAttribLocation(e,n);return-1!==o&&(cv(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,r))),cv(t,(()=>t.vertexAttribPointer(o,s,t.FLOAT,!1,a,i))),cv(t,(()=>t.enableVertexAttribArray(o))),!0)}function yv(t,e,n){!function(t,e){const n=t.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=e+t.TEXTURE0;if(r<t.TEXTURE0||r>n){throw new Error(`textureUnit must be in ${`[gl.TEXTURE0, gl.TEXTURE${n}]`}.`)}}(t,n),cv(t,(()=>t.activeTexture(t.TEXTURE0+n))),cv(t,(()=>t.bindTexture(t.TEXTURE_2D,e)))}function bv(t,e,n){cv(t,(()=>t.bindFramebuffer(t.FRAMEBUFFER,n))),cv(t,(()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,e,0)))}function xv(t,e){cv(t,(()=>t.bindFramebuffer(t.FRAMEBUFFER,e))),cv(t,(()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,null,0)))}function wv(t){const e=t.checkFramebufferStatus(t.FRAMEBUFFER);if(e!==t.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(t,e){switch(e){case t.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case t.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${e}`}}(t,e))}function vv(t,e,n){const r=cv(t,(()=>e()));if(null==r)throw new Error(n);return r}function Iv(t,e=2){return p(t.slice(0,t.length-e))}function kv(t){if(0===t.length)throw Error("Cannot get rows and columns of an empty shape array.");return[t.length>1?t[t.length-2]:1,t[t.length-1]]}function Nv(t){let e=[1,1,1];return 0===t.length||1===t.length&&1===t[0]||(e=[Iv(t),...kv(t)]),e}function Sv(t){return t%2==0}function Cv(t,e){if(d(t=t.slice(-2),e=e.slice(-2)))return!0;if(!t.length||!e.length)return!0;if(0===t[0]||0===t[1]||0===e[0]||0===e[1])return!0;if(t.length!==e.length){const n=t.slice(-1)[0],r=e.slice(-1)[0];if(n===r)return!0;if(Sv(n)&&Sv(r)&&(1===t[0]||1===e[0]))return!0}return t[1]===e[1]&&Sv(t[0])&&Sv(e[0])}let Ev,Tv;function _v(t,e){return null!=t.getExtension(e)}function $v(t){try{if(null!=Qw(t))return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function Av(t){if(0===t)return!1;const e=Qw(t);if(1!==t){if(_v(e,"EXT_color_buffer_float"))return Rv(e);const t="EXT_color_buffer_half_float";if(_v(e,t)){const n=e.getExtension(t);return function(t,e){const n=lv(t,e),r=t.createTexture();t.bindTexture(t.TEXTURE_2D,r);const s=1,a=1;t.texImage2D(t.TEXTURE_2D,0,n.internalFormatHalfFloat,s,a,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const i=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,i),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,r,0);const o=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(r),t.deleteFramebuffer(i),o}(e,n)}return!1}if(!_v(e,"OES_texture_float"))return!1;if(!_v(e,"WEBGL_color_buffer_float"))return!1;return Rv(e)}function Rv(t){const e=lv(t),n=t.createTexture();t.bindTexture(t.TEXTURE_2D,n);t.texImage2D(t.TEXTURE_2D,0,e.internalFormatFloat,1,1,0,e.textureFormatFloat,e.textureTypeFloat,null);const r=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,r),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,n,0);const s=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(n),t.deleteFramebuffer(r),s}function Mv(t,e){Array.isArray(t)||(t=[t]),t.forEach((t=>{null!=t&&u("complex64"!==t.dtype,(()=>`${e} does not support complex64 tensors in the WebGL backend.`))}))}const Dv=W();Dv.registerFlag("HAS_WEBGL",(()=>Dv.getNumber("WEBGL_VERSION")>0)),Dv.registerFlag("WEBGL_VERSION",(()=>$v(2)?2:$v(1)?1:0)),Dv.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),Dv.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===Dv.get("WEBGL_VERSION"))),Dv.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),Dv.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),Dv.registerFlag("WEBGL_PACK",(()=>Dv.getBool("HAS_WEBGL"))),Dv.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>Dv.getBool("WEBGL_PACK"))),Dv.registerFlag("WEBGL_PACK_CLIP",(()=>Dv.getBool("WEBGL_PACK"))),Dv.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>!1)),Dv.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>Dv.getBool("WEBGL_PACK"))),Dv.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>Dv.getBool("WEBGL_PACK"))),Dv.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>Dv.getBool("WEBGL_PACK"))),Dv.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>Dv.getBool("WEBGL_PACK"))),Dv.registerFlag("WEBGL_PACK_REDUCE",(()=>Dv.getBool("WEBGL_PACK"))),Dv.registerFlag("WEBGL_LAZILY_UNPACK",(()=>Dv.getBool("WEBGL_PACK"))),Dv.registerFlag("WEBGL_CONV_IM2COL",(()=>Dv.getBool("WEBGL_PACK"))),Dv.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(t){if(null==Ev){const e=Qw(t);Ev=e.getParameter(e.MAX_TEXTURE_SIZE)}return Ev}(Dv.getNumber("WEBGL_VERSION")))),Dv.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(t){if(null==Tv){const e=Qw(t);Tv=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,Tv)}(Dv.getNumber("WEBGL_VERSION")))),Dv.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const t=Dv.getNumber("WEBGL_VERSION");return 0===t?0:function(t){if(0===t)return 0;let e;const n=Qw(t);return e=_v(n,"EXT_disjoint_timer_query_webgl2")&&2===t?2:_v(n,"EXT_disjoint_timer_query")?1:0,e}(t)})),Dv.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>Dv.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!ae())),Dv.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(t){if(0===t)return!1;const e=Qw(t);if(1===t){if(!_v(e,"OES_texture_float"))return!1}else if(!_v(e,"EXT_color_buffer_float"))return!1;return Rv(e)}(Dv.getNumber("WEBGL_VERSION")))),Dv.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!Dv.getBool("WEBGL_FORCE_F16_TEXTURES")&&Dv.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),Dv.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>Av(Dv.getNumber("WEBGL_VERSION")))),Dv.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(t=Dv.getNumber("WEBGL_VERSION"))&&null!=Qw(t).fenceSync;var t})),Dv.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>Dv.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),Dv.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(t=>{if(t<0&&-1!==t)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${t}.`)}));class Ov{constructor(t,e){this.outputShape=[],this.outputShape=t,this.variableNames=e.map(((t,e)=>`T${e}`));const n=[];this.variableNames.forEach((t=>{n.push(`float v${t} = get${t}AtOutCoords();`)}));const r=this.variableNames.map((t=>`v${t}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class Fv{constructor(t,e){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.variableNames=e.map(((t,e)=>`T${e}`));const n=[];this.variableNames.forEach((t=>{n.push(`vec4 v${t} = get${t}AtOutCoords();`)}));const r=this.variableNames.map((t=>`v${t}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}class Lv{constructor(t,e,n){this.variableNames=["A"];const{windowSize:r,batchSize:s,outSize:a}=t;n||this.variableNames.push("bestIndicesA"),this.outputShape=[s,a];const i="max"===e?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${i} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}function Bv(t,e){return["x","y","z","w","u","v"].slice(0,e).map((e=>`${t}.${e}`))}function zv(t,e){return 1===e?[t]:Bv(t,e)}function Pv(){let t,e,n,r,s,a,i,o,u,l;return 2===W().getNumber("WEBGL_VERSION")?(t="#version 300 es",e="in",n="out",r="in",s="texture",a="outputColor",i="out vec4 outputColor;",o="\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",u="",l="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(t="",e="attribute",n="varying",r="varying",s="texture2D",a="gl_FragColor",i="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",u="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",l="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:t,attribute:e,varyingVs:n,varyingFs:r,texture2D:s,output:a,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:u,defineRound:l}}function Vv(t,e,n="index"){const r=A(e);return r.map(((e,s)=>`${`int ${t[s]} = ${n} / ${e}`}; ${s===r.length-1?`int ${t[s+1]} = ${n} - ${t[s]} * ${e}`:`index -= ${t[s]} * ${e}`};`)).join("")}function Wv(t){const e=A(t).map((t=>t.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;\n  }\n`}const Uv="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n";function Gv(t,e,n,r){const s=[];t.forEach((t=>{const e=p(t.shapeInfo.logicalShape);t.shapeInfo.isUniform?s.push(`uniform float ${t.name}${e>1?`[${e}]`:""};`):(s.push(`uniform sampler2D ${t.name};`),s.push(`uniform int offset${t.name};`))}));const a=s.join("\n"),i=t.map((t=>function(t,e,n=!1){let r="";r+=n?jv(t):Hv(t);const s=t.shapeInfo.logicalShape,a=e.logicalShape;s.length<=a.length&&(r+=n?function(t,e){const n=t.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",a=t.shapeInfo.logicalShape.length,i=e.logicalShape.length,o=Ks(t.shapeInfo.logicalShape,e.logicalShape),u=tI(i),l=i-a;let c;const h=["x","y","z","w","u","v"];c=0===a?"":i<2&&o.length>=1?"coords = 0;":o.map((t=>`coords.${h[t+l]} = 0;`)).join("\n");let d="";d=i<2&&a>0?"coords":t.shapeInfo.logicalShape.map(((t,e)=>`coords.${h[e+l]}`)).join(", ");let f="return outputValue;";const m=1===p(t.shapeInfo.logicalShape),g=1===p(e.logicalShape);if(1!==a||m||g){if(m&&!g)f=1===i?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(o.length){const t=a-2,e=a-1;o.indexOf(t)>-1&&o.indexOf(e)>-1?f="return vec4(outputValue.x);":o.indexOf(t)>-1?f="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(e)>-1&&(f="return vec4(outputValue.xx, outputValue.zz);")}}else f="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${s}() {\n      ${u} coords = getOutputCoords();\n      ${c}\n      vec4 outputValue = get${r}(${d});\n      ${f}\n    }\n  `}(t,e):function(t,e){const n=t.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",a=e.texShape,i=t.shapeInfo.texShape,o=t.shapeInfo.logicalShape.length,u=e.logicalShape.length;if(!t.shapeInfo.isUniform&&o===u&&null==t.shapeInfo.flatOffset&&d(i,a))return`\n      float ${s}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const l=tI(u),c=Ks(t.shapeInfo.logicalShape,e.logicalShape),h=u-o;let p;const f=["x","y","z","w","u","v"];p=0===o?"":u<2&&c.length>=1?"coords = 0;":c.map((t=>`coords.${f[t+h]} = 0;`)).join("\n");let m="";m=u<2&&o>0?"coords":t.shapeInfo.logicalShape.map(((t,e)=>`coords.${f[e+h]}`)).join(", ");return`\n    float ${s}() {\n      ${l} coords = getOutputCoords();\n      ${p}\n      return get${r}(${m});\n    }\n  `}(t,e));return r}(t,e,r))).join("\n"),o=e.texShape,u=Pv(),l=function(t){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${t.texture2D}(textureSampler, uv).r;\n    }\n  `}(u);let c,h,f=function(t){return`${t.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${t.varyingFs} vec2 resultUV;\n    ${t.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${t.defineSpecialNaN}\n    ${t.defineSpecialInf}\n    ${t.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${qv}\n    ${Kv}\n    ${Xv}\n  `}(u);e.isPacked?(c=function(t,e){switch(t.length){case 0:return Jv();case 1:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(1===n[0])return`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${n[1]}.0);\n      }\n    `;if(1===n[1])return`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${n[0]}.0);\n      }\n    `;return`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      return 2 * (resTexRC.x * ${n[1]} + resTexRC.y);\n    }\n  `}(0,e);case 2:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(d(t,e))return`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${n[0]}, ${n[1]}));\n      }\n    `;const r=Math.ceil(t[1]/2);return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(t,e);case 3:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],r=Math.ceil(t[2]/2),s=r*Math.ceil(t[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(t,e);default:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],r=Math.ceil(t[t.length-1]/2),s=r*Math.ceil(t[t.length-2]/2);let a=s,i="",o="b, r, c";for(let e=2;e<t.length-1;e++)a*=t[t.length-e-1],i=`\n      int b${e} = index / ${a};\n      index -= b${e} * ${a};\n    `+i,o=`b${e}, `+o;return`\n    ivec${t.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      ${i}\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec${t.length}(${o});\n    }\n  `}(t,e)}}(e.logicalShape,o),h=function(t){return`\n    void setOutput(vec4 val) {\n      ${t.output} = val;\n    }\n  `}(u)):(c=function(t,e){switch(t.length){case 0:return Jv();case 1:return function(t,e){if(1===e[0])return`\n      int getOutputCoords() {\n        return int(resultUV.x * ${e[1]}.0);\n      }\n    `;if(1===e[1])return`\n      int getOutputCoords() {\n        return int(resultUV.y * ${e[0]}.0);\n      }\n    `;return`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n      return resTexRC.x * ${e[1]} + resTexRC.y;\n    }\n  `}(0,e);case 2:return function(t,e){if(d(t,e))return`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));\n      }\n    `;if(1===t[1])return`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${e[0]}, ${e[1]}));\n        int index = resTexRC.x * ${e[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `;if(1===t[0])return`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${e[0]}, ${e[1]}));\n        int index = resTexRC.x * ${e[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `;return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      int r = index / ${t[1]};\n      int c = index - r * ${t[1]};\n      return ivec2(r, c);\n    }\n  `}(t,e);case 3:return function(t,e){const n=Vv(["r","c","d"],t);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      ${n}\n      return ivec3(r, c, d);\n    }\n  `}(t,e);case 4:return function(t,e){const n=Vv(["r","c","d","d2"],t);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      ${n}\n      return ivec4(r, c, d, d2);\n    }\n  `}(t,e);case 5:return function(t,e){const n=Vv(["r","c","d","d2","d3"],t);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${e[0]},\n                             ${e[1]}));\n\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(t,e);case 6:return function(t,e){const n=Vv(["r","c","d","d2","d3","d4"],t);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(t,e);default:throw new Error(`${t.length}-D output sampling is not yet supported`)}}(e.logicalShape,o),h=function(t){return`\n    void setOutput(float val) {\n      ${t.output} = vec4(val, 0, 0, 0);\n    }\n  `}(u)),r&&(f+=Yv);return[f,l,h,a,c,i,n].join("\n")}function Hv(t){const e=t.shapeInfo.logicalShape;switch(e.length){case 0:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1);if(t.shapeInfo.isUniform)return`float ${n}() {return ${e};}`;const[r,s]=t.shapeInfo.texShape;if(1===r&&1===s)return`\n      float ${n}() {\n        return sampleTexture(${e}, halfCR);\n      }\n    `;const[a,i]=t.shapeInfo.texShape,o=Zv(e);return`\n    float ${n}() {\n      vec2 uv = uvFromFlat(${a}, ${i}, ${o});\n      return sampleTexture(${e}, uv);\n    }\n  `}(t);case 1:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1);if(t.shapeInfo.isUniform)return`\n      float ${n}(int index) {\n        ${Qv(t)}\n      }\n    `;const r=t.shapeInfo.texShape,s=r[0],a=r[1];if(1===a&&1===s)return`\n      float ${n}(int index) {\n        return sampleTexture(${e}, halfCR);\n      }\n    `;const i=Zv(e);if(1===a)return`\n      float ${n}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / ${s}.0);\n        return sampleTexture(${e}, uv);\n      }\n    `;if(1===s)return`\n      float ${n}(int index) {\n        vec2 uv = vec2((float(index + ${i}) + 0.5) / ${a}.0, 0.5);\n        return sampleTexture(${e}, uv);\n      }\n    `;return`\n    float ${n}(int index) {\n      vec2 uv = uvFromFlat(${s}, ${a}, index + ${i});\n      return sampleTexture(${e}, uv);\n    }\n  `}(t);case 2:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t.shapeInfo.texShape;if(null!=s&&d(e,s)){const t=s[0];return`\n    float ${r}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${s[1]}.0, ${t}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `}const{newShape:a,keptDims:i}=w(e),o=a;if(o.length<e.length){const e=["row","col"];return`\n      ${Hv(eI(t,o))}\n      float ${r}(int row, int col) {\n        return ${r}(${nI(e,i)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${e[1]}, 1)));\n        ${Qv(t)}\n      }\n    `;const u=s[0],l=s[1],c=Zv(n);if(1===l)return`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${c}), vec3(${e[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `;if(1===u)return`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${c}), vec3(${e[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${l}.0, 0.5);\n      return sampleTexture(${n}, uv);\n    }\n  `;return`\n  float ${r}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${e[1]} + col + ${c};\n    vec2 uv = uvFromFlat(${u}, ${l}, index);\n    return sampleTexture(${n}, uv);\n  }\n`}(t);case 3:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e[1]*e[2],a=e[2],{newShape:i,keptDims:o}=w(e),u=i;if(u.length<e.length){const e=["row","col","depth"];return`\n        ${Hv(eI(t,u))}\n        float ${r}(int row, int col, int depth) {\n          return ${r}(${nI(e,o)});\n        }\n      `}if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${s}, ${a}, 1)));\n        ${Qv(t)}\n      }\n    `;const l=t.shapeInfo.texShape,c=l[0],h=l[1],p=t.shapeInfo.flatOffset;if(h===s&&null==p)return`\n        float ${r}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${a}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${h}.0, ${c}.0);\n          return sampleTexture(${n}, uv);\n        }\n      `;if(h===a&&null==p)return`\n    float ${r}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${e[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${h}.0, ${c}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `;const d=Zv(n);return`\n      float ${r}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${s} + col * ${a} + depth + ${d};\n        vec2 uv = uvFromFlat(${c}, ${h}, index);\n        return sampleTexture(${n}, uv);\n      }\n  `}(t);case 4:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e[3],a=e[2]*s,i=e[1]*a,{newShape:o,keptDims:u}=w(e);if(o.length<e.length){const e=["row","col","depth","depth2"];return`\n      ${Hv(eI(t,o))}\n      float ${r}(int row, int col, int depth, int depth2) {\n        return ${r}(${nI(e,u)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${i}, ${a}, ${s}, 1)));\n        ${Qv(t)}\n      }\n    `;const l=t.shapeInfo.flatOffset,c=t.shapeInfo.texShape,h=c[0],p=c[1];if(p===i&&null==l)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${a}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(p===s&&null==l)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${e[1]*e[2]}, ${e[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const d=Zv(n);return`\n    float ${r}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${i} + col * ${a} +\n          depth * ${s} + depth2;\n      vec2 uv = uvFromFlat(${h}, ${p}, index + ${d});\n      return sampleTexture(${n}, uv);\n    }\n  `}(t);case 5:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e[4],a=e[3]*s,i=e[2]*a,o=e[1]*i,{newShape:u,keptDims:l}=w(e);if(u.length<e.length){const e=["row","col","depth","depth2","depth3"];return`\n      ${Hv(eI(t,u))}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${nI(e,l)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${i}, ${a}, ${s})) +\n          depth3;\n        ${Qv(t)}\n      }\n    `;const c=t.shapeInfo.flatOffset,h=t.shapeInfo.texShape,p=h[0],d=h[1];if(d===o&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${i}, ${a}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${d}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(d===s&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${e[1]*e[2]*e[3]},\n               ${e[2]*e[3]}, ${e[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${d}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const f=Zv(n);return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} + depth * ${a} +\n          depth2 * ${s} + depth3 + ${f};\n      vec2 uv = uvFromFlat(${p}, ${d}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(t);case 6:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:s,keptDims:a}=w(e);if(s.length<e.length){const e=["row","col","depth","depth2","depth3","depth4"];return`\n      ${Hv(eI(t,s))}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${nI(e,a)});\n      }\n    `}const i=e[5],o=e[4]*i,u=e[3]*o,l=e[2]*u,c=e[1]*l;if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${c}, ${l}, ${u}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${i}, 1)));\n        ${Qv(t)}\n      }\n    `;const h=t.shapeInfo.flatOffset,p=t.shapeInfo.texShape,d=p[0],f=p[1];if(f===c&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${l}, ${u}, ${o}, ${i})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===i&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${e[1]*e[2]*e[3]*e[4]},\n               ${e[2]*e[3]*e[4]},\n               ${e[3]*e[4]},\n               ${e[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const m=Zv(n);return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${c} + col * ${l} + depth * ${u} +\n          depth2 * ${o} + depth3 * ${i} + depth4 + ${m};\n      vec2 uv = uvFromFlat(${d}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(t);default:throw new Error(`${e.length}-D input sampling is not yet supported`)}}function jv(t){switch(t.shapeInfo.logicalShape.length){case 0:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),r=Pv();return`\n    vec4 ${n}() {\n      return ${r.texture2D}(${e}, halfCR);\n    }\n  `}(t);case 1:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),r=t.shapeInfo.texShape,s=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],a=Pv();return`\n    vec4 ${n}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${s[0]}, ${s[1]}, index);\n      return ${a.texture2D}(${e}, uv);\n    }\n  `}(t);case 2:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t.shapeInfo.texShape,a=s[0],i=s[1],o=Pv();if(null!=s&&d(e,s))return`\n      vec4 ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${i}.0, ${a}.0);\n\n        return ${o.texture2D}(${n}, uv);\n      }\n    `;const u=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],l=Math.ceil(e[1]/2);return`\n    vec4 ${r}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${l}, ${u[0]}, ${u[1]}, row, col);\n      return ${o.texture2D}(${n}, uv);\n    }\n  `}(t);case 3:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t.shapeInfo.texShape,a=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(1===e[0]){const n=[1,2],s=["b","row","col"];return`\n        ${jv(eI(t,e.slice(1)))}\n        vec4 ${r}(int b, int row, int col) {\n          return ${r}(${nI(s,n)});\n        }\n      `}const i=a[0],o=a[1],u=Math.ceil(e[2]/2),l=u*Math.ceil(e[1]/2),c=Pv();return`\n    vec4 ${r}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${i}, ${o}, ${l}, ${u}, b, row, col);\n      return ${c.texture2D}(${n}, uv);\n    }\n  `}(t);default:return function(t){const e=t.shapeInfo.logicalShape,n=e.length,r=t.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=t.shapeInfo.texShape,i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],o=i[0],u=i[1],l=Math.ceil(e[n-1]/2);let c=l*Math.ceil(e[n-2]/2),h="int b, int row, int col",p=`b * ${c} + (row / 2) * ${l} + (col / 2)`;for(let t=2;t<n-1;t++)h=`int b${t}, `+h,c*=e[n-t-1],p=`b${t} * ${c} + `+p;const d=Pv();return`\n    vec4 ${s}(${h}) {\n      int index = ${p};\n      int texR = index / ${u};\n      int texC = index - texR * ${u};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${u}, ${o});\n      return ${d.texture2D}(${r}, uv);\n    }\n  `}(t)}}const qv="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Kv="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Xv="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Yv="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function Jv(){return"\n    int getOutputCoords() {\n      return 0;\n    }\n  "}function Zv(t){return`offset${t}`}function Qv(t){const e=t.name,n=p(t.shapeInfo.logicalShape);return n<2?`return ${e};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${e}[i];\n      }\n    }\n  `}function tI(t){if(t<=1)return"int";if(2===t)return"ivec2";if(3===t)return"ivec3";if(4===t)return"ivec4";if(5===t)return"ivec5";if(6===t)return"ivec6";throw Error(`GPU for rank ${t} is not yet supported`)}function eI(t,e){const n=JSON.parse(JSON.stringify(t));return n.shapeInfo.logicalShape=e,n}function nI(t,e){return e.map((e=>t[e])).join(", ")}class rI{constructor(t,e,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,u(t.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const s=t[t.length-1],a=Math.ceil(s/e);this.outputShape=t.slice(0,-1),a>1&&this.outputShape.push(a),r||this.variableNames.push("bestIndicesA");const i=this.outputShape,o=i.length,l=tI(o),c=zv("coords",o);let h,p;if(1===a){p=o+1;const t=tI(p);h=`\n        ${t} sourceLocR = ${t}(${c.join()}, 0);\n        ++${c[o-1]};\n        ${t} sourceLocG = ${t}(${c.join()}, 0);\n        ++${c[o-2]};\n        ${t} sourceLocA = ${t}(${c.join()}, 0);\n        --${c[o-1]};\n        ${t} sourceLocB = ${t}(${c.join()}, 0);\n        --${c[o-2]};`}else p=o,h=`\n        ${l} sourceLocR = coords;\n        ++${c[o-1]};\n        ${l} sourceLocG = coords;\n        ++${c[o-2]};\n        ${l} sourceLocA = coords;\n        --${c[o-1]};\n        ${l} sourceLocB = coords;\n        --${c[o-2]};`;const d=["x","y","z","w","u","v"].slice(0,p),f="."+d[p-1],m=d.map((t=>"int "+t)),g=zv("sourceLocR",p-1).concat("inIdx.r"),y=zv("sourceLocG",p-1).concat("inIdx.g"),b=zv("sourceLocB",p-1).concat("inIdx.b"),x=zv("sourceLocA",p-1).concat("inIdx.a"),w="max"===n?"greaterThan":"lessThan",v=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${b.join()}),\n                             getBestIndicesAChannel(${x.join()})));`,I=`vec4(\n            getAChannel(${g.join()}),\n            hasNextCol ? getAChannel(${y.join()}) : 0.,\n            hasNextRow ? getAChannel(${b.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${x.join()}) : 0.)`,k=r?"":`\n      float getBestIndicesAChannel(${m.join()}) {\n        return getChannel(getBestIndicesA(${d.join()}),\n                                          vec2(${d.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${m.join()}) {\n        return getChannel(getA(${d.join()}),\n                               vec2(${d.slice(-2).join()}));\n      }\n      ${k}\n      void main() {\n        ${l} coords = getOutputCoords();\n        bool hasNextCol = ${c[o-1]} < ${i[o-1]-1};\n        bool hasNextRow = ${c[o-2]} < ${i[o-2]-1};\n        ${h}\n        ivec4 srcIdx = ivec4(sourceLocR${f}, sourceLocG${f},\n          sourceLocB${f}, sourceLocA${f}) * ${e};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${I};\n\n        for (int i = 0; i < ${e}; i++) {\n          inIdx = srcIdx;\n          ${v}\n          vec4 candidate = ${I};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${w}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}class sI{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,r=t.strideHeight,s=t.strideWidth,a=t.dilationHeight,i=t.dilationWidth,o=t.effectiveFilterHeight,u=t.effectiveFilterWidth,l=o-1-t.padInfo.top,c=u-1-t.padInfo.left,h=1/(e*n);this.userCode=`\n      const ivec2 pads = ivec2(${l}, ${c});\n      const float avgMultiplier = float(${h});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${a}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${u};\n            wC+= ${i}) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class aI{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterDepth,n=t.filterHeight,r=t.filterWidth,s=t.strideDepth,a=t.strideHeight,i=t.strideWidth,o=t.dilationDepth,u=t.dilationHeight,l=t.dilationWidth,c=t.effectiveFilterDepth,h=t.effectiveFilterHeight,p=t.effectiveFilterWidth,d=c-1-t.padInfo.front,f=h-1-t.padInfo.top,m=p-1-t.padInfo.left,g=1/(e*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${d}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${s}.0;\n\n          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${h};\n              wR += ${u}) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${p};\n                wC += ${l}) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class iI{constructor(t,e,n){this.variableNames=["A","B"],this.outputShape=Ys(e,n),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${t}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}class oI{constructor(t,e,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=Ys(e,n);const s=this.outputShape.length;let a="";if(r)if(0===s||1===p(this.outputShape))a="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else{if(a=`\n          ${tI(s)} coords = getOutputCoords();\n        `,1===s)a+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const t=zv("coords",s);a+=`\n            bool nextRowOutOfBounds =\n              (${t[s-2]} + 1) >= ${this.outputShape[s-2]};\n            bool nextColOutOfBounds =\n              (${t[s-1]} + 1) >= ${this.outputShape[s-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${t}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${a}\n\n        setOutput(result);\n      }\n    `}}class uI{constructor(t){this.variableNames=["A"],this.outputShape=t,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}getCustomSetupFunc(t,e){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,t),n.gl.uniform1f(this.maxLoc,e)}}}class lI{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}getCustomSetupFunc(t,e){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,t),n.gl.uniform1f(this.maxLoc,e)}}}class cI{constructor(t){this.variableNames=["real","imag"],this.outputShape=t,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}class hI{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,n=t.strideWidth,r=t.padInfo.top,s=t.padInfo.left,a="channelsLast"===t.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yR = 0; yR < ${t.outHeight}; yR++) {\n            int xR = wR + yR * ${e} - ${r};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${t.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              if (${a}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class pI{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,r=t.strideHeight,s=t.strideWidth,a="channelsLast"===t.dataFormat,i=e-1-t.padInfo.top,o=n-1-t.padInfo.left,u=a?1:2,l=a?2:3,c=a?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${u}], coords[${l}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${e}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${e} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${t.outChannels}; d2++) {\n\n              if (${a}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class dI{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideDepth,n=t.strideHeight,r=t.strideWidth,s=t.padInfo.front,a=t.padInfo.top,i=t.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yF = 0; yF < ${t.outDepth}; yF++) {\n            int xF = wF + yF * ${e} - ${s};\n\n            if (xF < 0 || xF >= ${t.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${t.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${a};\n\n              if (xR < 0 || xR >= ${t.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${t.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${i};\n\n                if (xC < 0 || xC >= ${t.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class fI{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterDepth,n=t.filterHeight,r=t.filterWidth,s=t.strideDepth,a=t.strideHeight,i=t.strideWidth,o=e-1-t.padInfo.front,u=n-1-t.padInfo.top,l=r-1-t.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${u}, ${l});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${e}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${s}.0;\n\n          if (dyF < 0.0 || dyF >= ${t.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${e} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${t.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class mI{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,n=t.strideWidth,r=t.padInfo.top,s=t.padInfo.left,a=t.outChannels/t.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${a} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yR = 0; yR < ${t.outHeight}; yR++) {\n            int xR = wR + yR * ${e} - ${r};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${t.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class gI{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,r=t.strideHeight,s=t.strideWidth,a=e-1-t.padInfo.top,i=n-1-t.padInfo.left,o=t.outChannels/t.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${e}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${e} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class yI{constructor(t,e=!1,n=null,r=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;const s=t.padInfo.top,a=t.padInfo.left,i=t.strideHeight,o=t.strideWidth,u=t.dilationHeight,l=t.dilationWidth,c=t.filterHeight,h=t.filterWidth,p=4*Math.floor(t.inChannels/4),d=t.inChannels%4,f="channelsLast"===t.dataFormat,m=f?1:2,g=f?2:3,y=f?3:1;let b="",x="";n&&(b=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,x="result = activation(result);");const w=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.userCode=`\n      ${b}\n\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${s}, ${a});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${y}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${m}], coords[${g}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${c}; wR++) {\n          int xR = xRCorner + wR * ${u};\n\n          if (xR < 0 || xR >= ${t.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${h}; wC++) {\n            int xC = xCCorner + wC * ${l};\n\n            if (xC < 0 || xC >= ${t.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${p}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${f}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===d}) {\n\n              if (${f}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${p}) *\n                    getW(wR, wC, ${p}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${p}, xR, xC) *\n                    getW(wR, wC, ${p}, d2);\n              }\n\n            } else if (${2===d}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2)\n              );\n\n              if (${f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===d}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2),\n                getW(wR, wC, ${p} + 2, d2)\n              );\n\n              if (${f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1),\n                  getX(batch, xR, xC, ${p} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC),\n                  getX(batch, ${p} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${w}\n        ${x}\n        setOutput(result);\n      }\n    `}}class bI{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const e=t.padInfo.front,n=t.padInfo.top,r=t.padInfo.left,s=t.strideDepth,a=t.strideHeight,i=t.strideWidth,o=t.dilationDepth,u=t.dilationHeight,l=t.dilationWidth,c=t.filterDepth,h=t.filterHeight,p=t.filterWidth,d=4*Math.floor(t.inChannels/4),f=t.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${s}, ${a}, ${i});\n      const ivec3 pads = ivec3(${e}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${t.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${u};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${p}; wC++) {\n              int xC = xCCorner + wC * ${l};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${d}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${d}) *\n                  getW(wF, wR, wC, ${d}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${d}),\n                  getX(batch, xF, xR, xC, ${d} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${d}, d2),\n                  getW(wF, wR, wC, ${d} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${d}),\n                  getX(batch, xF, xR, xC, ${d} + 1),\n                  getX(batch, xF, xR, xC, ${d} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${d}, d2),\n                  getW(wF, wR, wC, ${d} + 1, d2),\n                  getW(wF, wR, wC, ${d} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class xI{constructor(t,e=!1,n=null,r=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;const s=t.inHeight,a=t.inWidth,i=t.padInfo.top,o=t.padInfo.left,u=t.strideHeight,l=t.strideWidth,c=t.dilationHeight,h=t.dilationWidth,p=t.filterHeight,d=t.filterWidth,f=t.outChannels/t.inChannels;let m="",g="";n&&(m=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,g="result = activation(result);");const y=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.userCode=`\n      ${m}\n\n      const ivec2 strides = ivec2(${u}, ${l});\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${f};\n        int q = d2 - d1 * ${f};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${p}; wR++) {\n          int xR = xRCorner + wR * ${c};\n\n          if (xR < 0 || xR >= ${s}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${d}; wC++) {\n            int xC = xCCorner + wC * ${h};\n\n            if (xC < 0 || xC >= ${a}) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${y}\n        ${g}\n        setOutput(result);\n      }\n    `}}class wI{constructor(t,e=!1,n=null,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.outShape;const s=t.inHeight,a=t.inWidth,i=t.padInfo.top,u=t.padInfo.left,l=t.strideHeight,c=t.strideWidth,h=t.dilationHeight,p=t.dilationWidth,d=t.filterHeight,f=t.filterWidth,m=f;let g="int xR; int xC; int xCOffset;";for(let t=0;t<d;t++)for(let e=0;e<f;e++)g+=`\n          vec4 xTexelR${t}C${2*e} = vec4(0.);\n          vec4 wR${t}C${e} = vec4(0.);\n          vec4 xR${t}C${e} = vec4(0.);`;for(let t=0;t<d;t++)for(let e=0;e<m;e++){const n=2*e;if(g+=`\n          xR = xRCorner + ${t*h};\n          xC = xCCorner + ${n*p};\n        `,1===c){if(n<f&&(g+=u%2==1?`\n                xCOffset = xC + 1;\n                if(xR >= 0 && xR < ${s} && xCOffset >= 0 && xCOffset < ${a}) {\n                  xTexelR${t}C${n} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ${a}) {\n                    xTexelR${t}C${n}.zw = vec2(0.);\n                  }\n                } else {\n                  xTexelR${t}C${n} = vec4(0.);\n                }\n\n                xCOffset = xC + 1 - 2;\n                if(xR >= 0 && xR < ${s} && xCOffset >= 0 && xCOffset < ${a}) {\n                  vec4 previous = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ${a}) {\n                    previous.zw = vec2(0.);\n                  }\n\n                  xR${t}C${n} = vec4(previous.zw, xTexelR${t}C${n}.xy);\n                } else {\n                  xR${t}C${n} = vec4(0, 0, xTexelR${t}C${n}.xy);\n                }\n              `:`\n                if(xR >= 0 && xR < ${s} && xC >= 0 && xC < ${a}) {\n                  xTexelR${t}C${n} = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR${t}C${n} = vec4(0.);\n                }\n\n                xR${t}C${n} = xTexelR${t}C${n};\n              `,n+1<f)){const e=u%2==0?o(p):p;p%2==0&&u%2==1||p%2!=0&&u%2!=1?(g+=`\n                  xCOffset = xC + ${u%2} + ${e};\n\n                  if(xR >= 0 && xR < ${s} &&\n                    xCOffset >= 0 && xCOffset < ${a}) {\n                    xTexelR${t}C${n+2} = getX(batch, xR, xCOffset, d1);\n                  }\n                `,p>1&&(g+=`\n                    xCOffset -= 2;\n                    if(xR >= 0 && xR < ${s} &&\n                      xCOffset >= 0 && xCOffset < ${a}) {\n                      xTexelR${t}C${n} = getX(batch, xR, xCOffset, d1);\n                    } else {\n                      xTexelR${t}C${n} = vec4(0.);\n                    }\n                  `),g+=`\n                  xR${t}C${n+1} = vec4(\n                    xTexelR${t}C${n}.zw, xTexelR${t}C${n+2}.xy);\n                `):g+=`\n                  xCOffset = xC + ${e};\n\n                  if(xR >= 0 && xR < ${s} &&\n                    xCOffset >= 0 && xCOffset < ${a}) {\n                    xTexelR${t}C${n+2} = getX(batch, xR, xCOffset, d1);\n                  }\n\n                  xR${t}C${n+1} = xTexelR${t}C${n+2};\n                `}}else n<f&&(g+=`\n              if(xR >= 0 && xR < ${s}) {\n            `,u%2==1?(g+=`\n                xCOffset = xC + 1 - ${c};\n                if(xCOffset >= 0 && xCOffset < ${a}) {\n                  xTexelR${t}C${n} = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR${t}C${n} = vec4(0.);\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < ${a}) {\n                  xTexelR${t}C${n+2} = getX(batch, xR, xC + 1, d1);\n                } else {\n                  xTexelR${t}C${n+2} = vec4(0.);\n                }\n\n                xR${t}C${n} = vec4(\n                  xTexelR${t}C${n}.zw, xTexelR${t}C${n+2}.zw);\n              `,n+1<f&&(g+=`\n                  vec4 final = vec4(0.);\n                  xCOffset = xC + 1 + ${c};\n                  if(xCOffset >= 0 && xCOffset < ${a}) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xR${t}C${n+1} = vec4(xTexelR${t}C${n+2}.xy, final.xy);\n                `)):(g+=`\n                if(xC >= 0 && xC < ${a}) {\n                  xTexelR${t}C${n} = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR${t}C${n} = vec4(0.);\n                }\n\n                xCOffset = xC + ${c};\n                if(xCOffset >= 0 && xCOffset < ${a}) {\n                  xTexelR${t}C${n+2} = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR${t}C${n+2} = vec4(0.);\n                }\n\n                xR${t}C${n} = vec4(\n                  xTexelR${t}C${n}.xy, xTexelR${t}C${n+2}.xy);\n              `,n+1<f&&(g+=`\n                  xR${t}C${n+1} = vec4(\n                    xTexelR${t}C${n}.zw, xTexelR${t}C${n+2}.zw);\n                `)),g+="}");n<f&&(g+=`\n            vec4 wTexelR${t}C${n} = getW(${t}, ${n}, d1, q);\n            wR${t}C${n} = vec4(wTexelR${t}C${n}.xz, wTexelR${t}C${n}.xz);\n          `,n+1<f&&(g+=`\n              vec4 wTexelR${t}C${n+1} = getW(${t}, ${n+1}, d1, q);\n              wR${t}C${n+1} =\n                vec4(wTexelR${t}C${n+1}.xz, wTexelR${t}C${n+1}.xz);`))}for(let t=0;t<d;t++)for(let e=0;e<f;e++)g+=`dotProd += xR${t}C${e} * wR${t}C${e};`;let y="",b="";n&&(y=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,b="result = activation(result);");const x=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.userCode=`\n      ${y}\n\n      const ivec2 strides = ivec2(${l}, ${c});\n      const ivec2 pads = ivec2(${i}, ${u});\n\n      void main() {\n\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2;\n        int q = 0;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        vec4 dotProd = vec4(0.);\n\n        ${g}\n\n        vec4 result = dotProd;\n        ${x}\n        ${b}\n        setOutput(result);\n      }\n    `}}class vI{constructor(t,e,n,r,s){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[a,i,o,u]=t,[l]=e,[c,h]=n;this.outputShape=[l,c,h,u];const p="bilinear"===r?1:0,[d,f]=[i-1+".0",o-1+".0"],[m,g,y]=c>1?[""+(i-1)/(c-1),"(y2-y1) * height_ratio",`y1*${d} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${d}`],[b,x,w]=h>1?[""+(o-1)/(h-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${b});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${a}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${x};\n\n        float in_y = ${y};\n        if( in_y < 0.0 || in_y > ${d} ) {\n          setOutput(float(${s}));\n          return;\n        }\n        float in_x = ${w};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${s}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${p} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}class II{constructor(t,e,n){this.variableNames=["x"],this.outputShape=t;const r=t.length,s=e?"0.0":`getX(${kI(r,"coords")})`,a=t[t.length-1];let i="",o="";e?(i=n?"end != "+(a-1):"end != 0",o=n?"end + 1":"end - 1"):(i=n?`end + pow2 < ${a}`:"end >= pow2",o=n?"end + pow2":"end - pow2"),this.userCode=`\n      uniform float index;\n      void main() {\n        ${tI(r)} coords = getOutputCoords();\n        int end = ${NI(r,"coords")};\n        float val = ${s};\n        int pow2 = int(pow(2.0, index));\n        if (${i}) {\n          int idx = ${o};\n          ${NI(r,"coords")} = idx;\n          val += getX(${kI(r,"coords")});\n        }\n        setOutput(val);\n      }\n    `}getCustomSetupFunc(t){return(e,n)=>{null==this.index&&(this.index=e.getUniformLocation(n,"index")),e.gl.uniform1f(this.index,t)}}}function kI(t,e){if(1===t)return`${e}`;if(2===t)return`${e}.x, ${e}.y`;if(3===t)return`${e}.x, ${e}.y, ${e}.z`;if(4===t)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw Error(`Cumulative sum for rank ${t} is not yet supported`)}function NI(t,e){if(1===t)return`${e}`;if(2===t)return`${e}.y`;if(3===t)return`${e}.z`;if(4===t)return`${e}.w`;throw Error(`Cumulative sum for rank ${t} is not yet supported`)}class SI{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=tv.DENSE;const e=ov(t),n=Pv();this.outputShape=t,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${Vv(["r","c","d"],t)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${e[0]}, ${e[1]}));\n        int index = 4 * (resTexRC.x * ${e[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${n.output} = result;\n      }\n    `}}class CI{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=tv.DENSE;const e=ov(t),n=Pv();this.outputShape=t,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${Vv(["r","c","d"],t)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${e[0]}, ${e[1]}));\n        int index = 4 * (resTexRC.x * ${e[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${n.output} = result;\n      }\n    `}}class EI{constructor(t,e,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=t,this.blockSize=e,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${e};\n      int offset_h = imod(h, ${e});\n      int in_w = w / ${e};\n      int offset_w = imod(w, ${e});\n      int offset_d = (offset_h * ${e} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}class TI{constructor(t){this.variableNames=["X"],this.outputShape=[t,t],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}class _I{constructor(t){this.variableNames=["A"],this.outTexUsage=nv.DOWNLOAD;const e=Pv();this.outputShape=t,this.userCode=`\n      ${Uv}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${e.output} = encode_float(x);\n      }\n    `}}class $I{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=nv.DOWNLOAD;const e=Pv();this.outputShape=t,this.userCode=`\n      ${Uv}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${e.output} = encode_float(x);\n      }\n    `}}class AI{constructor(t,e,n=!1){this.variableNames=["A"];const r=Pv(),[s,a]=e;this.outputShape=t;let i="result";n&&(i="floor(result * 255. + 0.5)"),this.userCode=`\n      ${Wv(t)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / ${a};\n        int c = imod(flatIndex, ${a});\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(${a}.0, ${s}.0);\n        vec4 values = ${r.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${r.output} = vec4(${i}, 0., 0., 0.);\n      }\n    `}}class RI{constructor(t,e,n=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const r=Pv(),[s,a]=e;this.outputShape=t;let i="",o="result";n&&(o="floor(result * 255. + 0.5)");for(let e=0;e<=1;e++)for(let n=0;n<=1;n++){const o=2*e+n;i+=`\n          localCoords = coords;\n          if(localCoords[2] + ${n} < ${t[2]}) {\n            localCoords[2] += ${n};\n            if(localCoords[1] + ${e} < ${t[1]}) {\n              localCoords[1] += ${e};\n\n              flatIndex = getFlatIndex(localCoords);\n              offset = imod(flatIndex, 4);\n\n              flatIndex = idiv(flatIndex, 4, 1.);\n\n              r = flatIndex / ${a};\n              c = imod(flatIndex, ${a});\n              uv = (vec2(c, r) + halfCR) / vec2(${a}.0, ${s}.0);\n              values = ${r.texture2D}(A, uv);\n\n              if(offset == 0) {\n                result[${o}] = values[0];\n              } else if(offset == 1) {\n                result[${o}] = values[1];\n              } else if(offset == 2) {\n                result[${o}] = values[2];\n              } else {\n                result[${o}] = values[3];\n              }\n            }\n          }\n        `}this.userCode=`\n      ${Wv(t)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        vec4 result = vec4(0.);\n        int flatIndex, r, c, offset;\n        ivec3 localCoords;\n        vec2 uv;\n        vec4 values;\n\n        ${i}\n\n        ${r.output} = ${o};\n      }\n    `}}class MI{constructor(t,e){this.outputShape=[],this.variableNames=["x"],this.outputShape=t,this.userCode="\n      uniform float value;\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}getCustomSetupFunc(t){return(e,n)=>{null==this.valueLoc&&(this.valueLoc=e.getUniformLocationNoThrow(n,"value")),e.gl.uniform1f(this.valueLoc,t)}}}class DI{constructor(t,e,n){this.variableNames=["A","indices"];const r=t.slice();r[n]=e,this.outputShape=r,this.rank=r.length;const s=tI(this.rank),a=function(t,e){const n=t.length;if(n>4)throw Error(`Gather for rank ${n} is not yet supported`);if(1===n)return"int(getIndices(resRC))";const r=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let n=0;n<t.length;n++)n===e?s.push(`int(getIndices(${r[n]}))`):s.push(`${r[n]}`);return s.join()}(t,n);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        setOutput(getA(${a}));\n      }\n    `}}class OI{constructor(t,e,n){this.sliceDim=t,this.strides=e,this.variableNames=["x","indices"],this.outputShape=n;const r=tI(e.length),s=tI(n.length),a=this.sliceDim>1?"strides[j]":"strides";this.userCode=`\n        ${r} strides = ${r}(${this.strides});\n         void main() {\n          ${s} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${a};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}function FI(t){const e=Pv();return function(t,e){const n=vv(t,(()=>t.createShader(t.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(cv(t,(()=>t.shaderSource(n,e))),cv(t,(()=>t.compileShader(n))),!1===t.getShaderParameter(n,t.COMPILE_STATUS))throw console.log(t.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(t,`${e.version}\n    precision highp float;\n    ${e.attribute} vec3 clipSpacePos;\n    ${e.attribute} vec2 uv;\n    ${e.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}function LI(t){return function(t,e){const n=vv(t,(()=>t.createBuffer()),"Unable to create WebGLBuffer");return cv(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,n))),cv(t,(()=>t.bufferData(t.ARRAY_BUFFER,e,t.STATIC_DRAW))),n}(t,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function BI(t){return function(t,e){const n=vv(t,(()=>t.createBuffer()),"Unable to create WebGLBuffer");return cv(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,n))),cv(t,(()=>t.bufferData(t.ELEMENT_ARRAY_BUFFER,e,t.STATIC_DRAW))),n}(t,new Uint16Array([0,1,2,2,1,3]))}function zI(t,e,n,r,s,a){!function(t,e){const n=W().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t<=0||e<=0)throw new Error(`Requested texture size [${t}x${e}] is invalid.`);if(t>n||e>n)throw new Error(`Requested texture size [${t}x${e}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(e,n);const i=function(t){return vv(t,(()=>t.createTexture()),"Unable to create WebGLTexture.")}(t),o=t.TEXTURE_2D;return cv(t,(()=>t.bindTexture(o,i))),cv(t,(()=>t.texParameteri(o,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE))),cv(t,(()=>t.texParameteri(o,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE))),cv(t,(()=>t.texParameteri(o,t.TEXTURE_MIN_FILTER,t.NEAREST))),cv(t,(()=>t.texParameteri(o,t.TEXTURE_MAG_FILTER,t.NEAREST))),cv(t,(()=>t.texImage2D(o,0,r,e,n,0,s,a,null))),cv(t,(()=>t.bindTexture(t.TEXTURE_2D,null))),i}function PI(t){return t.internalFormatFloat}function VI(t){return t.internalFormatHalfFloat}function WI(t){return t.downloadTextureFormat}function UI(t){return t.internalFormatPackedFloat}function GI(t){return t.internalFormatPackedHalfFloat}function HI(t,e,n,r,s,a,i,o){const u=t,l=new Float32Array(function(t,e){const[n,r]=uv(t,e);return n*r*4}(a,i));return u.bindBuffer(u.PIXEL_PACK_BUFFER,e),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,l),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),l}class jI{constructor(t){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const e=W().getNumber("WEBGL_VERSION");null!=t?(this.gl=t,function(t,e){Jw[t]=e}(e,t)):this.gl=Qw(e);let n="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(1===W().getNumber("WEBGL_VERSION")){const t="OES_texture_float",e="OES_texture_half_float";if(this.textureFloatExtension=pv(this.gl,t),_v(this.gl,e))this.textureHalfFloatExtension=pv(this.gl,e);else if(W().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),_v(this.gl,r))this.colorBufferHalfFloatExtension=pv(this.gl,r);else if(W().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",_v(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!_v(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=LI(this.gl),this.indexBuffer=BI(this.gl),this.framebuffer=function(t){return vv(t,(()=>t.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=lv(this.gl,this.textureHalfFloatExtension)}get debug(){return W().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const t=this.gl;cv(t,(()=>t.finish())),cv(t,(()=>t.bindFramebuffer(t.FRAMEBUFFER,null))),cv(t,(()=>t.deleteFramebuffer(this.framebuffer))),cv(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,null))),cv(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null))),cv(t,(()=>t.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[s,a]=iv(e,n);return zI(t,s,a,PI(r),r.textureFormatFloat,t.FLOAT)}(this.gl,t,e,this.textureConfig)}createFloat16MatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[s,a]=iv(e,n);return zI(t,s,a,VI(r),r.textureFormatFloat,r.textureTypeHalfFloat)}(this.gl,t,e,this.textureConfig)}createUnsignedBytesMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[s,a]=iv(e,n);return zI(t,s,a,WI(r),t.RGBA,t.UNSIGNED_BYTE)}(this.gl,t,e,this.textureConfig)}uploadPixelDataToTexture(t,e){this.throwIfDisposed(),function(t,e,n){cv(t,(()=>t.bindTexture(t.TEXTURE_2D,e))),n.data instanceof Uint8Array?cv(t,(()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,n.width,n.height,0,t.RGBA,t.UNSIGNED_BYTE,n.data))):cv(t,(()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,n))),cv(t,(()=>t.bindTexture(t.TEXTURE_2D,null)))}(this.gl,t,e)}uploadDenseMatrixToTexture(t,e,n,r){this.throwIfDisposed(),function(t,e,n,r,s,a){let i,o,u;cv(t,(()=>t.bindTexture(t.TEXTURE_2D,e))),s instanceof Uint8Array?(i=new Uint8Array(n*r*4),o=t.UNSIGNED_BYTE,u=t.RGBA):(i=new Float32Array(n*r*4),o=t.FLOAT,u=a.internalFormatPackedFloat),i.set(s),cv(t,(()=>t.texImage2D(t.TEXTURE_2D,0,u,n,r,0,t.RGBA,o,i))),cv(t,(()=>t.bindTexture(t.TEXTURE_2D,null)))}(this.gl,t,e,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[s,a]=uv(e,n);return zI(t,s,a,GI(r),t.RGBA,r.textureTypeHalfFloat)}(this.gl,t,e,this.textureConfig)}createPackedMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[s,a]=uv(e,n);return zI(t,s,a,UI(r),t.RGBA,t.FLOAT)}(this.gl,t,e,this.textureConfig)}deleteMatrixTexture(t){this.throwIfDisposed(),this.outputTexture===t&&(xv(this.gl,this.framebuffer),this.outputTexture=null),cv(this.gl,(()=>this.gl.deleteTexture(t)))}downloadByteEncodedFloatMatrixFromOutputTexture(t,e,n){return this.downloadMatrixDriver(t,(()=>function(t,e,n,r){const[s,a]=iv(e,n),i=new Uint8Array(e*n*4);return cv(t,(()=>t.readPixels(0,0,s,a,r.downloadTextureFormat,t.UNSIGNED_BYTE,i))),new Float32Array(i.buffer)}(this.gl,e,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(t,e,n,r,s,a){return HI(this.gl,t,0,0,0,s,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(t,e){return function(t,e,n){const r=t,s=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,e),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,s),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),s}(this.gl,t,e)}createBufferFromTexture(t,e,n){this.bindTextureToFrameBuffer(t);const r=function(t,e,n,r){const s=t.createBuffer();cv(t,(()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,s)));const a=16*e*n;return cv(t,(()=>t.bufferData(t.PIXEL_PACK_BUFFER,a,t.STREAM_READ))),cv(t,(()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,0))),cv(t,(()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,null))),s}(this.gl,e,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const t=this.createFence(this.gl);return this.pollFence(t)}createFence(t){let e,n;if(W().getBool("WEBGL_FENCE_API_ENABLED")){const r=t,s=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);t.flush(),n=()=>{const t=r.clientWaitSync(s,0,0);return t===r.ALREADY_SIGNALED||t===r.CONDITION_SATISFIED},e=s}else W().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(e=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(e,W().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:e,isFencePassed:n}}downloadMatrixFromPackedTexture(t,e,n){return this.downloadMatrixDriver(t,(()=>function(t,e,n){const r=new Float32Array(e*n*4);return cv(t,(()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,r))),r}(this.gl,e,n)))}createProgram(t){this.throwIfDisposed();const e=this.gl,n=dv(e,t),r=FI(e),s=function(t){return vv(t,(()=>t.createProgram()),"Unable to create WebGLProgram.")}(e);return cv(e,(()=>e.attachShader(s,r))),cv(e,(()=>e.attachShader(s,n))),function(t,e){if(cv(t,(()=>t.linkProgram(e))),!1===t.getProgramParameter(e,t.LINK_STATUS))throw console.log(t.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}(e,s),this.debug&&mv(e,s),this.vertexAttrsAreBound||(this.setProgram(s),this.vertexAttrsAreBound=function(t,e,n){return cv(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,n))),gv(t,e,"clipSpacePos",n,3,20,0)&&gv(t,e,"uv",n,2,20,12)}(e,this.program,this.vertexBuffer)),s}deleteProgram(t){this.throwIfDisposed(),t===this.program&&(this.program=null),null!=t&&cv(this.gl,(()=>this.gl.deleteProgram(t)))}setProgram(t){this.throwIfDisposed(),this.program=t,null!=this.program&&this.debug&&mv(this.gl,this.program),cv(this.gl,(()=>this.gl.useProgram(t)))}getUniformLocation(t,e,n=!0){return this.throwIfDisposed(),n?function(t,e,n){return vv(t,(()=>t.getUniformLocation(e,n)),'uniform "'+n+'" not present in program.')}(this.gl,t,e):function(t,e,n){return t.getUniformLocation(e,n)}(this.gl,t,e)}getAttributeLocation(t,e){return this.throwIfDisposed(),cv(this.gl,(()=>this.gl.getAttribLocation(t,e)))}getUniformLocationNoThrow(t,e){return this.throwIfDisposed(),this.gl.getUniformLocation(t,e)}setInputMatrixTexture(t,e,n){this.throwIfDisposed(),this.throwIfNoProgram(),function(t,e,n,r){cv(t,(()=>yv(t,e,r))),cv(t,(()=>t.uniform1i(n,r)))}(this.gl,t,e,n)}setOutputMatrixTexture(t,e,n){this.setOutputMatrixTextureDriver(t,n,e)}setOutputPackedMatrixTexture(t,e,n){this.throwIfDisposed();const[r,s]=uv(e,n);this.setOutputMatrixTextureDriver(t,r,s)}setOutputMatrixWriteRegion(t,e,n,r){this.setOutputMatrixWriteRegionDriver(n,t,r,e)}setOutputPackedMatrixWriteRegion(t,e,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&mv(this.gl,this.program),wv(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const t=this.gl;this.debug&&this.debugValidate(),cv(t,(()=>t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),cv(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=pv(this.gl,2===W().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===W().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const t=this.gl,e=this.getQueryTimerExtensionWebGL2(),n=t.createQuery();return t.beginQuery(e.TIME_ELAPSED_EXT,n),n}const t=this.getQueryTimerExtensionWebGL1(),e=t.createQueryEXT();return t.beginQueryEXT(t.TIME_ELAPSED_EXT,e),e}endQuery(){if(2===W().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const t=this.gl,e=this.getQueryTimerExtensionWebGL2();return void t.endQuery(e.TIME_ELAPSED_EXT)}const t=this.getQueryTimerExtensionWebGL1();t.endQueryEXT(t.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(t){return await y((()=>this.disposed||this.isQueryAvailable(t,W().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(t,W().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(t,e){if(0===e)return null;if(2===e){const e=this.gl;return e.getQueryParameter(t,e.QUERY_RESULT)/1e6}{const e=this.getQueryTimerExtensionWebGL1();return e.getQueryObjectEXT(t,e.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(t,e){if(0===e)return!0;if(2===e){const e=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=e.getQueryParameter(t,e.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const e=this.getQueryTimerExtensionWebGL1(),n=e.getQueryObjectEXT(t,e.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(e.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(t){return new Promise((e=>{this.addItemToPoll((()=>t.isFencePassed()),(()=>e()))}))}pollItems(){const t=function(t){let e=0;for(;e<t.length;++e){if(!t[e]())break}return e-1}(this.itemsToPoll.map((t=>t.isDoneFn)));for(let e=0;e<=t;++e){const{resolveFn:t}=this.itemsToPoll[e];t()}this.itemsToPoll=this.itemsToPoll.slice(t+1)}addItemToPoll(t,e){this.itemsToPoll.push({isDoneFn:t,resolveFn:e}),this.itemsToPoll.length>1||y((()=>(this.pollItems(),0===this.itemsToPoll.length)))}bindTextureToFrameBuffer(t){this.throwIfDisposed(),bv(this.gl,t,this.framebuffer),this.debug&&wv(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(bv(this.gl,this.outputTexture,this.framebuffer),this.debug&&wv(this.gl)):xv(this.gl,this.framebuffer)}downloadMatrixDriver(t,e){this.bindTextureToFrameBuffer(t);const n=e();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(t,e,n){this.throwIfDisposed();const r=this.gl;bv(r,t,this.framebuffer),this.debug&&wv(r),this.outputTexture=t,cv(r,(()=>r.viewport(0,0,e,n))),cv(r,(()=>r.scissor(0,0,e,n)))}setOutputMatrixWriteRegionDriver(t,e,n,r){this.throwIfDisposed(),cv(this.gl,(()=>this.gl.scissor(t,e,n,r)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}function qI(t,e){if(t.length!==e.length)throw Error(`Binary was compiled with ${t.length} inputs, but was executed with ${e.length} inputs`);t.forEach(((t,n)=>{const r=t.logicalShape,s=e[n],a=s.shape;if(!d(r,a))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${a} must match`);if(t.isUniform&&s.isUniform)return;const i=t.texShape,o=s.isUniform?null:s.texData.texShape;if(!d(i,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${o} must match`)}))}class KI{constructor(t,e,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t;const{filterWidth:r,inChannels:s,strideWidth:a,strideHeight:i,padInfo:o,outWidth:u,dilationWidth:l,dilationHeight:c,dataFormat:h}=n,{left:p,top:d}=o,f=s*r,m=Pv(),g="channelsLast"===h,y=g?0:1,b=g?1:2;let x="";for(let n=0;n<=1;n++)for(let r=0;r<=1;r++)x+=`\n          blockIndex = rc.y + ${r};\n          pos = rc.x + ${n};\n\n          if(blockIndex < ${t[1]} && pos < ${t[0]}) {\n            offsetY = int(blockIndex / (${u})) * ${i} - ${d};\n            d0 = offsetY + ${c} * (pos / ${f});\n\n            if(d0 < ${e[y]} && d0 >= 0) {\n\n              offsetX = int(mod(float(blockIndex), ${u}.) * ${a}. - ${p}.);\n              d1 = offsetX + ${l} * (int(mod(float(pos), ${f}.) / ${s}.));\n\n              if(d1 < ${e[b]} && d1 >= 0) {\n\n                ch = int(mod(float(pos), ${s}.));\n\n                if (${g}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*n+r}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*n+r}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${x}\n\n        ${m.output} = result;\n      }\n    `}}class XI{constructor(t,e,n,r,s){this.variableNames=["x"],this.outputShape=[];const a=e,i=t[3]-1;let o;this.outputShape=t;const u=`float(${n}) + float(${r}) * sum`;o=.5===s?`inversesqrt(${u})`:1===s?`1.0/(${u})`:`exp(log(${u}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${a}; j <= ${a}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}class YI{constructor(t,e,n,r,s){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=t,this.depth=t[3],this.depthRadius=e,this.bias=n,this.alpha=r,this.beta=s,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${e})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${e} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${s})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${s});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}class JI{constructor(t,e,n,r,s){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const a=e,i=t[3]-1;let o;this.outputShape=t;const u=`float(${n}) + float(${r}) * sum`;o=.5===s?`inversesqrt(${u})`:1===s?`1.0/(${u})`:`exp(log(${u}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${a};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${a}; j <= ${a}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}class ZI{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideHeight,n=t.strideWidth,r=t.dilationHeight,s=t.effectiveFilterHeight,a=t.effectiveFilterWidth,i=s-1-t.padInfo.top,o=a-1-t.padInfo.left,u=s*a-1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${s};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${e}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${a}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${a} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class QI{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideDepth,n=t.strideHeight,r=t.strideWidth,s=t.dilationDepth,a=t.dilationHeight,i=t.dilationWidth,o=t.effectiveFilterDepth,u=t.effectiveFilterHeight,l=t.effectiveFilterWidth,c=o-1-t.padInfo.front,h=u-1-t.padInfo.top,p=l-1-t.padInfo.left,d=o*u*l-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${h}, ${p});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${s}) {\n          float dyD = float(dyDCorner + wD) / ${e}.0;\n\n          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${u};\n              wR += ${a}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${l};\n                wC += ${i}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${d} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${u} * ${l} +\n                  wR * ${l} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class tk{constructor(t,e,n,r=!1,s=!1,a=!1,i=null,o=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n;const u=r?t[1]:t[2],l=Math.ceil(u/2),c=r?"i * 2, rc.y":"rc.y, i * 2",h=s?"rc.z, i * 2":"i * 2, rc.z",p=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],d=s?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let f="",m="";i&&(f=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,m="result = activation(result);");const g=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights");let y="rc.x",b="rc.x";t[0]<e[0]?y=`int(min(float(rc.x), ${t[0]-1}.))`:e[0]<t[0]&&(b=`int(min(float(rc.x), ${e[0]-1}.))`),this.userCode=`\n      ${f}\n\n      const float sharedDimension = ${l}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${l}; i++) {\n          int batchA = ${y};\n          int batchB = ${b};\n          vec4 a = getMatrixA(batchA, ${c});\n          vec4 b = getMatrixB(batchB, ${h});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${p[0]} * ${d[0]});\n          result += (${p[1]} * ${d[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${g}\n\n        ${m}\n\n        setOutput(result);\n      }\n    `}}class ek{constructor(t,e,n){this.variableNames=["probs"],this.outputShape=[t,n],this.userCode=`\n      uniform float seed;\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${e-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${e-1}));\n      }\n    `}getCustomSetupFunc(t){return(e,n)=>{null==this.seedLoc&&(this.seedLoc=e.getUniformLocation(n,"seed")),e.gl.uniform1f(this.seedLoc,t)}}}class nk{constructor(t,e,n,r){this.variableNames=["indices"],this.outputShape=[t,e],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}class rk{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=t;const e=t.length;if(0===e)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const n=zv("rc",e),r=tI(e),s=function(t,e,n){if(1===t)return`rc > ${e[0]}`;let r="";for(let s=t-2;s<t;s++)r+=`${n[s]} >= ${e[s]}`,s<t-1&&(r+="||");return r}(e,t,n),a=function(t,e,n,r){if(1===t)return"";const s=r.slice(-2);return`\n    int r = ${s[0]};\n    int c = ${s[1]};\n    int rp1 = r + 1;\n    int cp1 = c + 1;\n\n    bool cEdge = cp1 >= ${e};\n    bool rEdge = rp1 >= ${n};\n  `}(e,t[t.length-1],t[t.length-2],n),i=function(t,e){const n=t.length,r=function(t,e){const n=[];for(let r=0;r<=1;r++)for(let s=0;s<=1;s++){let a=`${0===r?"r":"rp1"}, ${0===s?"c":"cp1"}`;for(let n=2;n<t;n++)a=`${e[e.length-1-n]},`+a;n.push(a)}return n}(n,e);if(1===n)return`getA(rc),\n            rc + 1 >= ${t[0]} ? 0. : getA(rc + 1),\n            0, 0`;return`getA(${r[0]}),\n          cEdge ? 0. : getA(${r[1]}),\n          rEdge ? 0. : getA(${r[2]}),\n          rEdge || cEdge ? 0. : getA(${r[3]})`}(t,n);this.userCode=`\n        void main() {\n          ${r} rc = getOutputCoords();\n\n          if(${s}) {\n            setOutput(vec4(0));\n          } else {\n            ${a}\n\n            setOutput(vec4(${i}));\n          }\n        }\n      `}}}class sk{constructor(t,e,n){this.variableNames=["x"],this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const r=t.length,s=tI(r),a=e.map((t=>t[0])).join(","),i=e.map(((e,n)=>e[0]+t[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${s} start = ${s}(${a});\n      ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(float(${n}));\n        } else {\n          ${s} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${a};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(float(${n}));\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class ak{constructor(t,e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const r=t.length,s=tI(r),a=e.map((t=>t[0])).join(","),i=e.map(((e,n)=>e[0]+t[n])).join(","),o=zv("rc",r),u=zv("source",r),l=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${u.slice(-2).join()})`,h=[`${s} rc = outputLoc;`,`${o[r-1]} += 1;\n       if(${l}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${o[r-2]} += 1;\n       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;\n         if(${l}) {`],p=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let d="";for(let t=0,e=1===r?2:4;t<e;t++)d+=`\n        ${h[t]}\n        if (${p}) {\n          result[${t}] = float(${n});\n        } else {\n          ${s} source = rc - start;\n          result[${t}] = getChannel(getX(${u.join()}), ${c});\n        }\n      `;d+=1===r?"} ":"}}",this.userCode=`\n      const ${s} start = ${s}(${a});\n      const ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}}class ik{constructor(t,e,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===e&&n)throw new Error("Cannot compute positions for average pool.");const a=t.filterWidth,i=t.strideHeight,o=t.strideWidth,u=t.dilationHeight,l=t.dilationWidth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,p=t.padInfo.top,d=t.padInfo.left;this.outputShape=t.outShape;const f="avg"===e,m=`((batch  * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + d`,g=`(xR * ${t.inWidth} + xC) * ${t.inChannels} + d`;let y="0.0";if(f||(y="-1.0 / 1e-20"),n){const e=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${p}, ${d});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${u}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${l}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${e} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?s?m:g:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let b=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===e&&(b="avgValue / count");const x=4*Math.floor(a/4),w=a%4,v=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${p}, ${d});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${t.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${u}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${t.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${x}; wC += 4) {\n            int xC = xCCorner + wC * ${l};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              getValue(batch, xR, xC + 3 * ${l}, d)\n            );\n\n            ${v}\n          }\n\n          int xC = xCCorner + ${x};\n          if (${1===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${2===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${3===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              initializationValue\n            );\n\n            ${v}\n          }\n        }\n        setOutput(${b});\n      }\n    `}}class ok{constructor(t,e,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===e&&n)throw new Error("Cannot compute positions for average pool.");const a=t.filterWidth,i=t.strideDepth,o=t.strideHeight,u=t.strideWidth,l=t.dilationDepth,c=t.dilationHeight,h=t.dilationWidth,p=t.effectiveFilterDepth,d=t.effectiveFilterHeight,f=t.effectiveFilterWidth,m=t.padInfo.front,g=t.padInfo.top,y=t.padInfo.left;this.outputShape=t.outShape;const b="avg"===e;let x="0.0";if(b||(x="-1.0 / 1e-20"),n){const e=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${u});\n        const ivec3 pads = ivec3(${m}, ${g}, ${y});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${p};\n              wD += ${l}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${t.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${d};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${t.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${t.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${e} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?s?`(((batch * ${t.inDepth} + xD) * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`((xD * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`wD * ${d} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let w=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===e&&(w="avgValue / count");const v=4*Math.floor(a/4),I=a%4,k=`\n      if (${b}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${u});\n      const ivec3 pads = ivec3(${m}, ${g}, ${y});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${t.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${p};\n            wD += ${l}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${t.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${d};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${v}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${k}\n            }\n\n            int xC = xCCorner + ${v};\n            if (${1===I}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${k}\n            } else if (${2===I}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${k}\n            } else if (${3===I}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${k}\n            }\n          }\n          setOutput(${w});\n        }\n      }\n    `}}class uk{constructor(t,e){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:a}=t;this.outputShape=[r,a];let i="0.0",o="";"prod"===e?i="1.0":"min"===e?(i="1.0 / 1e-20",o="min"):"max"===e&&(i="-1.0 / 1e-20",o="max");let u=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===e?u="sumValue":"prod"===e?u="prodValue":"all"===e?u="allValue":"any"===e&&(u="anyValue");const l=4*Math.floor(n/4),c=n%4;let h=`\n      if (${"sum"===e}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===e}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n      }\n    `,p="vec4";"all"===e?(i="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",p="bvec4"):"any"===e&&(i="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",p="bvec4");let d="";s%n>0&&(d=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${d}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${l}; i += 4) {\n          int inIdx = inOffset + i;\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${l};\n        if (${1===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${u});\n      }\n    `}}class lk{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t;let n="";for(let t=0;t<4;t++){let e="thisRC = rc;";t%2==1&&(e+="thisRC.z += 1;"),t>1&&(e+="thisRC.y += 1;"),n+=`\n        ${e}\n        ${t>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${t}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${t>0?"}":""}\n      `}var r;this.userCode=`\n      ${r=e,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${Vv(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${Wv(t)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${t[1]};\n        int cols = ${t[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class ck{constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e.shape;const[,r,s]=e.shape,[,a,i]=t.shape,o=[n&&a>1?r-1:r,n&&i>1?s-1:s],u=[n&&a>1?a-1:a,n&&i>1?i-1:i],l=o[0]/u[0],c=o[1]/u[1],h=1/l,p=1/c,d=2*Math.ceil(h)+2,f=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${d});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${s-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}class hk{constructor(t,e,n,r){this.variableNames=["A"],this.outputShape=[];const[s,a,i,o]=t;this.outputShape=[s,e,n,o];const u=[r&&e>1?a-1:a,r&&n>1?i-1:i],l=[r&&e>1?e-1:e,r&&n>1?n-1:n];this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/l[0]},\n          ${u[1]/l[1]});\n      const vec2 inputShapeRC = vec2(${a}.0, ${i}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = vec2(yRC) * effectiveInputOverOutputRatioRC;\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(sourceFracIndexRC);\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class pk{constructor(t,e,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,a,i,o]=t;this.outputShape=[s,e,n,o];const u=[r&&e>1?a-1:a,r&&n>1?i-1:i],l=[r&&e>1?e-1:e,r&&n>1?n-1:n];this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/l[0]},\n          ${u[1]/l[1]},\n          ${u[1]/l[1]});\n      const vec3 inputShapeRC = vec3(${a}.0, ${i}.0,\n                                     ${i}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = vec3(yRC) * effectiveInputOverOutputRatioRC;\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(sourceFracIndexRC);\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${o-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}class dk{constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e.shape;const[,r,s]=e.shape,[,a,i]=t.shape,o=[n&&a>1?r-1:r,n&&i>1?s-1:s],u=[n&&a>1?a-1:a,n&&i>1?i-1:i],l=o[0]/u[0],c=o[1]/u[1],h=1/l,p=1/c,d=2*Math.ceil(h)+2,f=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${d});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${u[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${u[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${s}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}class fk{constructor(t,e,n,r){this.variableNames=["A"],this.outputShape=[];const[s,a,i,o]=t;this.outputShape=[s,e,n,o];const u=[r&&e>1?a-1:a,r&&n>1?i-1:i],l=[r&&e>1?e-1:e,r&&n>1?n-1:n],c=r?"0.5":"0.0";this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/l[0]},\n          ${u[1]/l[1]});\n      const vec2 inputShapeRC = vec2(${a}.0, ${i}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = vec2(yRC) * effectiveInputOverOutputRatioRC;\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${c})));\n\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class mk{constructor(t,e){this.variableNames=["x"];const n=t.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=t,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${t[0]} - coord - 1));\n        }\n      `);const r=t.map(((n,r)=>(n=>-1!==e.indexOf(n)&&1!==t[n]?`${t[n]} - coords[${n}] - 1`:`coords[${n}]`)(r))).join(","),s=tI(n);this.userCode=`\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}class gk{constructor(t,e){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=t.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=t;const r=zv("rc",n),s=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,a=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,i=tI(n);function o(n){const r=t.map(((r,s)=>function(n,r){return-1!==e.indexOf(n)&&1!==t[n]?`${t[n]} - ${r[n]} - 1`:`${r[n]}`}(s,n)));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${t[0]} - rc - 1),\n            ${t[0]} - rc - 1);\n          if(${s}){\n              result.g = getChannel(getX(${t[0]} - (rc  + 1) - 1),\n                ${t[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(t){return o(t)}(r.slice())};\n          if(${s}){\n            result.g = ${function(t){return t[n-1]="("+t[n-1]+" + 1)",o(t)}(r.slice())};\n          }\n          if(${a}) {\n            result.b = ${function(t){return t[n-2]="("+t[n-2]+" + 1)",o(t)}(r.slice())};\n            if(${s}) {\n              result.a = ${function(t){return t[n-1]="("+t[n-1]+" + 1)",t[n-2]="("+t[n-2]+" + 1)",o(t)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}class yk{constructor(t,e,n,r,s,a,i=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;const o=tI(s.length),u=tI(a.length);let l="";1===n?l="i":2===n&&(l="i, j");const c=`getIndices(${l})`;let h="";1===r?h="i":2===r&&(h="i, coords[1]");const p=`getUpdates(${h})`,d=e>1?"strides[j]":"strides";this.userCode=`\n        ${o} strides = ${o}(${s});\n\n        void main() {\n          ${u} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${t}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${e}; j++) {\n              int index = round(${c});\n              flattenedIndex += index * ${d};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${p};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}class bk{constructor(t,e){this.variableNames=["x","segmentIds"];const n=t.windowSize,r=t.batchSize,s=t.inSize,a=t.numSegments,i=a*Math.ceil(s/n);this.outputShape=[r,i];const o=4*Math.floor(n/4),u=n%4,l="\n        sumValue += dot(values, segFilter);\n    ";let c="";s%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `);let h="";s%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${h}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${a})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${a})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${l}\n        } else if (${2===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${l}\n        } else if (${3===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}class xk{constructor(t,e,n){let r,s;if(this.variableNames=["c","a","b"],this.outputShape=e,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)s="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[],i=[];for(let r=0;r<e.length;r++)i.push(`${n[r]}`),r<t&&a.push(`${n[r]}`);r=a.join(),s=i.join()}const a=tI(n);this.userCode=`\n      void main() {\n        ${a} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${s}));\n        } else {\n          setOutput(getB(${s}));\n        }\n      }\n    `}}class wk{constructor(t){this.variableNames=["source"],this.outputShape=t,this.rank=t.length;const e=tI(this.rank),n=`uniform int start[${this.rank}];`,r=function(t){if(1===t)return"sourceLoc";if(t<=6)return vk.slice(0,t).map((t=>"sourceLoc."+t)).join(",");throw Error(`Slicing for rank ${t} is not yet supported`)}(this.rank);let s;s=`\n        ${e} sourceLoc;\n        ${e} coords = getOutputCoords();\n        ${t.map(((t,e)=>`sourceLoc.${vk[e]} = start[${e}] + coords.${vk[e]};`)).join("\n")}\n      `,this.userCode=`\n      ${n}\n      void main() {\n        ${s}\n        setOutput(getSource(${r}));\n      }\n    `}getCustomSetupFunc(t){if(t.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${t.length})`);return(e,n)=>{null==this.startLoc&&(this.startLoc=e.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||e.gl.uniform1iv(this.startLoc,t)}}}const vk=["x","y","z","w","u","v"];class Ik{constructor(t){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.rank=t.length;const e=tI(this.rank),n=zv("coords",this.rank),r=zv("sourceLoc",this.rank),s=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,a=`getChannel(getSource(${r.join()}), ${s})`,i=`\n      result.x = ${a};\n      if (++${n[this.rank-1]} < ${t[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${a};\n        --${r[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${t[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${a};\n        if (++${n[this.rank-1]} < ${t[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${a};\n        }\n      }\n    `,u=this.rank<=4?`sourceLoc = coords +\n            ${e}(${t.map(((t,e)=>`start[${e}]`)).join()});`:t.map(((t,e)=>`${r[e]} = ${n[e]} + start[${e}];`)).join("\n");this.userCode=`\n      uniform int start[${this.rank}];\n      void main() {\n        ${e} coords = getOutputCoords();\n        ${e} sourceLoc;\n        ${u}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}getCustomSetupFunc(t){if(t.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${t.length})`);return(e,n)=>{null==this.startLoc&&(this.startLoc=e.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||e.gl.uniform1iv(this.startLoc,t)}}}class kk{constructor(t,e,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,s=tI(n.length),a=tI(n.length);let i="";if(1===r)i="coords * strides + begin";else{let t=0;i=n.map(((e,r)=>(t++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${t-1}] * strides[${r}] + begin[${r}]`))).join(",")}this.userCode=`\n      ${s} begin = ${s}(${t});\n      ${s} strides = ${s}(${e});\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}}class Nk{constructor(t){this.gpgpu=t,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(t,e,n){const r=Ck(e,n),s=Ek(t,r,n);s in this.freeTextures||(this.freeTextures[s]=[]),s in this.usedTextures||(this.usedTextures[s]=[]);const a=Sk(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[s].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();const t=this.freeTextures[s].shift();return this.usedTextures[s].push(t),t}let i;return r===sv.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(t[0],t[1]):r===sv.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(t[0],t[1]):r===sv.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(t[0],t[1]):r===sv.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(t[0],t[1]):r===sv.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(t[0],t[1])),this.usedTextures[s].push(i),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),i}releaseTexture(t,e,n,r){if(null==this.freeTextures)return;const s=Ck(n,r),a=Ek(e,s,r);a in this.freeTextures||(this.freeTextures[a]=[]);const i=Sk(e,s,this.gpgpu.gl,this.gpgpu.textureConfig,r),o=W().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(t),this._numBytesAllocated-=i):(this.freeTextures[a].push(t),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const u=this.usedTextures[a],l=u.indexOf(t);if(l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u.splice(l,1),this.log()}log(){if(!this.logEnabled)return;const t=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${t})`);const e=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*e)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const t in this.freeTextures)this.freeTextures[t].forEach((t=>{this.gpgpu.deleteMatrixTexture(t)}));for(const t in this.usedTextures)this.usedTextures[t].forEach((t=>{this.gpgpu.deleteMatrixTexture(t)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function Sk(t,e,n,r,s){const a=function(t,e){switch(t){case sv.PACKED_2X2_FLOAT32:return UI(e);case sv.PACKED_2X2_FLOAT16:return GI(e);case sv.UNPACKED_FLOAT32:return PI(e);case sv.UNPACKED_FLOAT16:return VI(e);case sv.PACKED_4X1_UNSIGNED_BYTE:return WI(e);default:throw new Error(`Unknown physical texture type ${t}`)}}(e,r);let i;if(s){const[e,n]=uv(t[0],t[1]);i=e*n}else{const[e,n]=iv(t[0],t[1]);i=e*n}return i*function(t,e){const n=t;if(e===n.R32F)return 4;if(e===n.R16F)return 2;if(e===n.RGBA32F)return 16;if(e===t.RGBA)return 16;if(e===n.RGBA16F)return 8;throw new Error(`Unknown internal format ${e}`)}(n,a)}function Ck(t,e){if(t===nv.UPLOAD)return sv.PACKED_2X2_FLOAT32;if(t===nv.RENDER||null==t)return function(t){return W().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?t?sv.PACKED_2X2_FLOAT32:sv.UNPACKED_FLOAT32:t?sv.PACKED_2X2_FLOAT16:sv.UNPACKED_FLOAT16}(e);if(t===nv.DOWNLOAD||t===nv.PIXELS)return sv.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${t}`)}function Ek(t,e,n){return`${t[0]}_${t[1]}_${e}_${n}`}class Tk{constructor(t,e){this.variableNames=["A"];const n=new Array(t.length);for(let r=0;r<n.length;r++)n[r]=t[r]*e[r];this.outputShape=n,this.rank=n.length;const r=tI(this.rank),s=function(t){const e=t.length;if(e>5)throw Error(`Tile for rank ${e} is not yet supported`);if(1===e)return`imod(resRC, ${t[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let e=0;e<t.length;e++)r.push(`imod(${n[e]}, ${t[e]})`);return r.join()}(t);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${s}));\n      }\n    `}}class _k{constructor(t,e){this.variableNames=["A"],this.outputShape=t,this.userCode=`\n      float unaryOperation(float x) {\n        ${e}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const $k="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",Ak="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",Rk="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n";class Mk{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${e}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class Dk{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=t;const e=t.length,n=zv("rc",e),r=tI(e),s=function(t,e){if(1===t)return"rc";let n="";for(let r=0;r<t;r++)n+=e[r],r<t-1&&(n+=",");return n}(e,n),a=n.slice(-2),i=e<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${s});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}}const Ok=Vu,Fk=Wu,Lk=Uu,Bk=no,zk={};function Pk(t,e=!1){if("linear"===t)return"return x;";if("relu"===t)return e?$k:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n";if("elu"===t)return e?Rk:"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===t)return e?Ak:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n";if("prelu"===t)return e?"\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n":"return (a < 0.) ? b * a : a;";throw new Error(`Activation ${t} has not been implemented for the WebGL backend.`)}class Vk extends r{constructor(t){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.warnedAboutMemory=!1,this.warnedAboutCPUBackend=!1,this.pendingDeletes=0,this.disposed=!1,!W().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(null==t){const t=Qw(W().getNumber("WEBGL_VERSION"));this.binaryCache=((e=W().getNumber("WEBGL_VERSION"))in zk||(zk[e]={}),zk[e]),this.gpgpu=new jI(t),this.canvas=t.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=t,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=t.gl.canvas;var e;this.textureManager=new Nk(this.gpgpu),this.numMBBeforeWarning=null==W().global.screen?1024:W().global.screen.height*W().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new n(this,$r())}numDataIds(){return this.texData.numDataIds()+(this.cpuBackend?this.cpuBackend.numDataIds():0)-this.pendingDeletes}write(t,e,n){if((W().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||W().getBool("DEBUG"))&&this.checkNumericalProblems(t),"complex64"===n&&null!=t)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={};return this.texData.set(r,{shape:e,dtype:n,values:t,usage:nv.UPLOAD,refCount:1,complexParentRefCount:0}),r}incRef(t){this.texData.get(t).refCount++}decRef(t){if(this.texData.has(t)){this.texData.get(t).refCount--}}move(t,e,n,r){if(W().getBool("DEBUG")&&this.checkNumericalProblems(e),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(t,{shape:n,dtype:r,values:e,usage:nv.UPLOAD,refCount:1,complexParentRefCount:0})}disposeIntermediateTensorInfo(t){const e=t.dataId;if(this.texData.has(e)){const t=this.texData.get(e);t.refCount--,t.refCount<1&&this.disposeData(e)}}readSync(t){const e=this.texData.get(t),{values:n,dtype:r,complexTensorInfos:s,slice:a,shape:i,isPacked:o}=e;if(null!=a){let e;e=o?new Mk(i,"return x;"):new _k(i,"return x;");const n=this.runWebGLProgram(e,[{dataId:t,shape:i,dtype:r}],r),s=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(t);if("string"===r)return n;const u=null!=this.activeTimers;let l,c;if(u&&(l=wt()),"complex64"===r){c=Fu(this.readSync(s.real.dataId),this.readSync(s.imag.dataId))}else c=this.getValuesFromTexture(t);return u&&(this.downloadWaitMs+=wt()-l),this.convertAndCacheOnCPU(t,c)}async read(t){if(this.pendingRead.has(t)){const e=this.pendingRead.get(t);return new Promise((t=>e.push(t)))}const e=this.texData.get(t),{values:n,shape:r,slice:s,dtype:a,complexTensorInfos:i,isPacked:o}=e;if(null!=s){let e;e=o?new Mk(r,"return x;"):new _k(r,"return x;");const n=this.runWebGLProgram(e,[{dataId:t,shape:r,dtype:a}],a),s=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(t);if(!W().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===W().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u,l,c=null;if("complex64"!==a&&W().get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(t);const e=this.texData.get(u.dataId);c=this.gpgpu.createBufferFromTexture(e.texture,...ov(r))}if(this.pendingRead.set(t,[]),"complex64"!==a&&await this.gpgpu.createAndWaitForFence(),"complex64"===a){const t=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]);l=Fu(t[0],t[1])}else if(null==c)l=this.getValuesFromTexture(t);else{const t=p(r);l=this.gpgpu.downloadFloat32MatrixFromBuffer(c,t)}null!=u&&this.disposeIntermediateTensorInfo(u);const h=this.convertAndCacheOnCPU(t,l),d=this.pendingRead.get(t);return this.pendingRead.delete(t),d.forEach((t=>t(h))),this.pendingDisposal.has(t)&&(this.pendingDisposal.delete(t),this.disposeData(t),this.pendingDeletes--),h}checkNumericalProblems(t){if(null!=t)for(let e=0;e<t.length;e++){const n=t[e];if(!hv(n)){if(W().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(t){const{shape:e,dtype:n,isPacked:r}=this.texData.get(t),s=p(e);if(W().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(t),r=this.texData.get(n.dataId),a=this.gpgpu.downloadMatrixFromPackedTexture(r.texture,...ov(e)).subarray(0,s);return this.disposeIntermediateTensorInfo(n),a}const a=W().getBool("WEBGL_PACK")&&!0===r,i=a?Nv(e):e,o=a?new $I(i):new _I(i),u=this.runWebGLProgram(o,[{shape:i,dtype:n,dataId:t}],"float32"),l=this.texData.get(u.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(l.texture,l.texShape[0],l.texShape[1]).subarray(0,s);return this.disposeIntermediateTensorInfo(u),c}async time(t){const e=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,t();const s=h(this.activeTimers.map((t=>t.query))).filter((t=>null!=t)),a=h(this.activeTimers.map((t=>t.name))).filter((t=>null!=t));this.activeTimers=e,r&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if(W().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const t=await Promise.all(s);i.kernelMs=function(t){let e=0;for(let n=0;n<t.length;n++)e+=t[n];return e}(t),i.getExtraProfileInfo=()=>t.map(((t,e)=>({name:a[e],ms:t}))).map((t=>`${t.name}: ${t.ms}`)).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return W().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:wt(),endMs:null}}endTimer(t){return W().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),t):(t.endMs=wt(),t)}async getQueryTime(t){if(W().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(t);const e=t;return e.endMs-e.startMs}disposeData(t){if(this.pendingDisposal.has(t))return;if(this.pendingRead.has(t))return this.pendingDisposal.add(t),void this.pendingDeletes++;if(!this.texData.has(t))return;if(this.texData.get(t).complexParentRefCount>0)return void this.texData.get(t).refCount--;this.releaseGPUData(t);const{complexTensorInfos:e}=this.texData.get(t);null!=e&&(this.texData.get(e.real.dataId).complexParentRefCount--,this.disposeIntermediateTensorInfo(e.real),this.texData.get(e.imag.dataId).complexParentRefCount--,this.disposeIntermediateTensorInfo(e.imag)),this.texData.delete(t)}releaseGPUData(t){const{texture:e,dtype:n,texShape:r,usage:s,isPacked:a,slice:i}=this.texData.get(t),o=i&&i.origDataId||t,u=this.dataRefCount.get(o);u>1?this.dataRefCount.set(o,u-1):(this.dataRefCount.delete(o),null!=e&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(e,r,s,a)));const l=this.texData.get(t);l.texture=null,l.texShape=null,l.isPacked=!1,l.slice=null}getTexture(t){return this.uploadToGPU(t),this.texData.get(t).texture}getDataInfo(t){return this.texData.get(t)}getCPUBackend(){return W().getBool("WEBGL_CPU_FORWARD")?(null==this.cpuBackend&&(this.cpuBackend=$r().findBackend("cpu")),this.cpuBackend):null}shouldExecuteOnCPU(t,e=128){const n=this.getCPUBackend();return this.warnedAboutCPUBackend||null!=n||(console.warn("Your application contains ops that are small enough to be executed on the CPU backend, however the CPU backend cannot be found. Consider importing the CPU backend (@tensorflow/tfjs-backend-cpu) for better performance."),this.warnedAboutCPUBackend=!0),null!=n&&t.every((t=>null==this.texData.get(t.dataId).texture&&p(t.shape)<e))}getGPGPUContext(){return this.gpgpu}slice(t,e,n){if(this.shouldExecuteOnCPU([t])){const r=sx(this.texData.get(t.dataId).values,e,n,t.shape,t.dtype);return this.makeOutput(n,t.dtype,r)}if(0===p(n))return pn([],n,t.dtype);const{isPacked:r}=this.texData.get(t.dataId),s=kr(t.shape,e,n);if(r||!s){const r=W().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Ik(n):new wk(n),s=r.getCustomSetupFunc(e);return this.compileAndRun(r,[t],null,s)}return this.uploadToGPU(t.dataId),this.shallowSlice(t,e,n)}shallowSlice(t,e,n){const r=this.texData.get(t.dataId),s=this.makeOutput(n,t.dtype),a=this.texData.get(s.dataId);Object.assign(a,r),a.shape=n,a.dtype=t.dtype;let i=Nr(e,t.strides);r.slice&&(i+=r.slice.flatOffset),a.slice={flatOffset:i,origDataId:r.slice&&r.slice.origDataId||t.dataId};const o=this.dataRefCount.get(a.slice.origDataId)||1;return this.dataRefCount.set(a.slice.origDataId,o+1),s}stridedSlice(t,e,n,r){const s=this.tryRunOnCpuOrThrow([t],(()=>this.cpuBackend.stridedSlice(t,e,n,r)));if(s)return s;const a=gr(e,n,r);if(a.some((t=>0===t)))return pn([],a);const i=new kk(e,r,a);return this.compileAndRun(i,[t])}reverse(t,e){const n=W().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new gk(t.shape,e):new mk(t.shape,e);return this.compileAndRun(n,[t])}neg(t){const e=this.tryRunOnCpuOrThrow([t],(()=>this.cpuBackend.neg(t)));if(e)return e;if(W().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,"return -x;",t.dtype);const n=new _k(t.shape,"return -x;");return this.compileAndRun(n,[t])}batchMatMul(t,e,n,r){const s=n?t.shape[2]:t.shape[1],a=r?e.shape[1]:e.shape[2],i=n?t.shape[1]:t.shape[2],o=Math.max(t.shape[0],e.shape[0]);if((1===s||1===a)&&i>1e3){n&&(t=ur(t,[0,2,1])),r&&(e=ur(e,[0,2,1]));const s=1===a?t:t.as3D(o,i,1),u=1===a?2:1,l=1===a?e.as3D(o,1,i):e;return xa(s,l).sum(u,!0)}const u=Kt(t.dtype,e.dtype),l=new tk(t.shape,e.shape,[o,s,a],n,r);return this.compileAndRun(l,[t,e],u)}fusedBatchMatMul({a:t,b:e,transposeA:n,transposeB:r,bias:s,activation:a,preluActivationWeights:i}){const o=n?t.shape[2]:t.shape[1],u=r?e.shape[1]:e.shape[2],l=Math.max(t.shape[0],e.shape[0]),c=Kt(t.dtype,e.dtype),h=null!=s,p=null!=i,d=a?Pk(a,!0):null,f=new tk(t.shape,e.shape,[l,o,u],n,r,h,d,p),m=[t,e];return s&&m.push(s),i&&m.push(i),this.compileAndRun(f,m,c)}localResponseNormalization4D(t,e,n,r,s){const a=W().getBool("WEBGL_PACK_NORMALIZATION")?new JI(t.shape,e,n,r,s):new XI(t.shape,e,n,r,s);return this.compileAndRun(a,[t])}LRNGrad(t,e,n,r,s,a,i){const o=new YI(e.shape,r,s,a,i);return this.compileAndRun(o,[e,n,t])}tile(t,e){if("string"===t.dtype){const n=this.readSync(t.dataId).map((t=>It(t))),r=Kn(t.shape,t.dtype,n);return Fk(r,e)}const n=new Tk(t.shape,e);return this.compileAndRun(n,[t])}pad(t,e,n){const r=W().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new ak(t.shape,e,n):new sk(t.shape,e,n);return this.compileAndRun(r,[t])}gather(t,e,n){const r=this.tryRunOnCpuOrThrow([t,e],(()=>this.cpuBackend.gather(t,e,n)));if(r)return r;const s=new DI(t.shape,e.size,n);return this.compileAndRun(s,[t,e])}batchToSpaceND(t,e,n){u(t.rank<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const r=e.reduce(((t,e)=>t*e)),s=$u(t.shape,e,r),a=Au(s.length,e.length),i=Ru(t.shape,e,r),o=Mu(n,e.length),l=Du(i,n,e.length);return ur(t.reshape(s),a).reshape(i).slice(o,l)}spaceToBatchND(t,e,n){u(t.rank<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const r=e.reduce(((t,e)=>t*e)),s=[[0,0]];s.push(...n);for(let n=1+e.length;n<t.shape.length;++n)s.push([0,0]);const a=t.pad(s),i=$u(a.shape,e,r,!1),o=Au(i.length,e.length,!1),l=Ru(a.shape,e,r,!1),c=ur(a.reshape(i),o);return ar(c,l)}reduce(t,e,n){const r=t.shape[0],s=t.shape[1],a=ca(s),i=Math.ceil(s/a),o=new uk({windowSize:a,inSize:s,batchSize:r,outSize:i},e),u=this.compileAndRun(o,[t],n);return 1===u.shape[1]?u:this.reduce(u,e,n)}argReduce(t,e,n=null){let r=t.shape[0],s=t.shape[1];null!=n&&(r=n.shape[0],s=n.shape[1]);const a=ca(s),i={windowSize:a,inSize:s,batchSize:r,outSize:Math.ceil(s/a)},o=new Lv(i,e,null==n),u=[t];null!=n&&u.push(n);const l=this.compileAndRun(o,u,"int32");return 1===l.shape[1]?l:this.argReduce(t,e,l)}argReducePacked(t,e,n=null){const r=null!=n?n.shape:t.shape,s=ca(r[r.length-1]),a=new rI(r,s,e,null==n),i=null==n?[t]:[t,n],o=this.compileAndRun(a,i,"int32");return o.rank===t.rank?this.argReducePacked(t,e,o):o}sum(t,e){Hr("sum",e,t.rank);const[n,r]=Ur(t.shape,e),s=p(r),a=t.as2D(-1,s),i=Xt(t.dtype);return this.reduce(a,"sum",i).reshape(n)}prod(t,e){const n=this.tryRunOnCpuOrThrow([t],(()=>this.cpuBackend.prod(t,e)));if(n)return n;const[r,s]=Ur(t.shape,e),a=p(s),i=t.as2D(-1,a),o=Xt(t.dtype);return this.reduce(i,"prod",o).reshape(r)}unsortedSegmentSum(t,e,n){let r=0;const s=jr([r],t.rank);let a=t;null!=s&&(a=ur(t,s),r=Kr(1,t.rank)[0]);const i=function(t,e,n){const r=[],s=t.length;for(let a=0;a<s;a++)a!==e?r.push(t[a]):r.push(n);return r}(a.shape,r,n),o=p([a.shape[r]]),u=a.as2D(-1,o),l=Xt(t.dtype);let c=this.segOpCompute(u,"unsortedSegmentSum",e,l,n).reshape(i);return null!=s&&(c=ur(c,qr(s))),c}segOpCompute(t,e,n,r,s){const a=t.shape[0],i=t.shape[1],o=function(t,e){let n,r=!1;for(t<=30?(n=t,r=!0):n=$(t,Math.floor(Math.sqrt(t)));!r;)n>e||n===t?r=!0:n=$(t,n+1);return n}(i,s),u=new bk({windowSize:o,inSize:i,batchSize:a,numSegments:s},e),l=this.compileAndRun(u,[t,n],r);return l.shape[1]===s?l:(n=bi(0,s).tile([i/o]),this.segOpCompute(l,e,n,r,s))}argMinMaxReduce(t,e,n){const r=[e];if(Hr("arg"+n.charAt(0).toUpperCase()+n.slice(1),r,t.rank),!W().getBool("WEBGL_PACK_REDUCE")||t.rank<=2){const[e,s]=Ur(t.shape,r),a=p(s),i=t.as2D(-1,a);return this.argReduce(i,n).reshape(e)}return this.argReducePacked(t,n)}argMin(t,e){return this.argMinMaxReduce(t,e,"min")}argMax(t,e){return this.argMinMaxReduce(t,e,"max")}cumsum(t,e,n,r){if(e!==t.rank-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${t.rank-1} but got axis=${e}`);const s=t.shape[e];let a=t;for(let e=0;e<=Math.ceil(Math.log2(s))-1;e++){const n=new II(t.shape,!1,r),s=n.getCustomSetupFunc(e),i=a;a=this.compileAndRun(n,[a],a.dtype,s),i.dispose()}if(n){const e=new II(t.shape,n,r),s=a;a=this.compileAndRun(e,[a]),s.dispose()}return a}equal(t,e){if(W().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(equal(a, b));\n","bool");const n=new iI("return float(a == b);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}less(t,e){const n=this.tryRunOnCpuOrThrow([t,e],(()=>this.cpuBackend.less(t,e)));if(n)return n;if(W().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(lessThan(a, b));\n","bool");const r=new iI("return float(a < b);",t.shape,e.shape);return this.compileAndRun(r,[t,e],"bool")}lessEqual(t,e){if(W().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(lessThanEqual(a, b));\n","bool");const n=new iI("return float(a <= b);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}greater(t,e){const n=this.tryRunOnCpuOrThrow([t,e],(()=>this.cpuBackend.greater(t,e)));if(n)return n;if(W().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(greaterThan(a, b));\n","bool");const r=new iI("return float(a > b);",t.shape,e.shape);return this.compileAndRun(r,[t,e],"bool")}greaterEqual(t,e){if(W().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(greaterThanEqual(a, b));\n","bool");const n=new iI("return float(a >= b);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}logicalNot(t){const e=new _k(t.shape,"return float(!(x >= 1.0));");return this.compileAndRun(e,[t])}logicalAnd(t,e){if(W().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n","bool");const n=new iI("return float(a >= 1.0 && b >= 1.0);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}logicalOr(t,e){if(W().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n","bool");const n=new iI("return float(a >= 1.0 || b >= 1.0);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}select(t,e,n){const r=new xk(t.rank,e.shape,e.rank);return this.compileAndRun(r,[t,e,n],Kt(e.dtype,n.dtype))}where(t){Ou("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const e=t.dataSync();return Bk(t.shape,e)}topk(t,e,n){const r=t.dataSync();return Lk(r,t.shape,t.dtype,e,n)}min(t,e){Hr("min",e,t.rank);const[n,r]=Ur(t.shape,e),s=p(r),a=t.as2D(-1,s);return this.reduce(a,"min",a.dtype).reshape(n)}minimum(t,e){const n=this.tryRunOnCpuOrThrow([t,e],(()=>this.cpuBackend.minimum(t,e)));if(n)return n;const r=W().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new oI("\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",t.shape,e.shape):new iI("\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",t.shape,e.shape);return this.compileAndRun(r,[t,e])}mod(t,e){const n=W().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new oI("\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",t.shape,e.shape):new iI("if (b == 0.0) return NAN;\n  return mod(a, b);",t.shape,e.shape);return this.compileAndRun(n,[t,e])}maximum(t,e){const n=this.tryRunOnCpuOrThrow([t,e],(()=>this.cpuBackend.maximum(t,e)));if(n)return n;const r=W().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new oI("\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",t.shape,e.shape):new iI("\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",t.shape,e.shape);return this.compileAndRun(r,[t,e])}all(t,e){Hr("all",e,t.rank);const[n,r]=Ur(t.shape,e),s=p(r),a=t.as2D(-1,s);return this.reduce(a,"all",a.dtype).reshape(n)}any(t,e){Hr("any",e,t.rank);const[n,r]=Ur(t.shape,e),s=p(r),a=t.as2D(-1,s);return this.reduce(a,"any",a.dtype).reshape(n)}floorDiv(t,e){const n="int32";if(W().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",n);const r=new iI("\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",t.shape,e.shape);return this.compileAndRun(r,[t,e],n)}packedUnaryOp(t,e,n){const r=new Mk(t.shape,e);return this.compileAndRun(r,[t],n)}packedBinaryOp(t,e,n,r,s=!1){const a=new oI(n,t.shape,e.shape,s);return this.compileAndRun(a,[t,e],r)}makeComplexComponentTensorInfo(t,e){return{dataId:e.dataId,dtype:e.dtype,shape:t.shape}}addN(t){if(1===t.length)return t[0];if(t.length>W().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const e=Math.floor(t.length/2),n=this.addN(t.slice(0,e)),r=this.addN(t.slice(e));return this.addN([n,r])}const e=t.map((t=>t.dtype)).reduce(((t,e)=>Kt(t,e))),n=t.map((t=>t.shape)),r=W().getBool("WEBGL_PACK")?new Fv(t[0].shape,n):new Ov(t[0].shape,n);return this.compileAndRun(r,t,e)}pow(t,e){const n=W().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new oI("\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",t.shape,e.shape):new iI("\nif(a < 0.0 && floor(b) < b){\n  return NAN;\n}\nif (b == 0.0) {\n  return 1.0;\n}\nreturn (round(mod(b, 2.0)) != 1) ?\n    pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",t.shape,e.shape),r=Kt(t.dtype,e.dtype);return this.compileAndRun(n,[t,e],r)}ceil(t){if(this.shouldExecuteOnCPU([t])){const e=Pb(this.texData.get(t.dataId).values,t.dtype);return this.makeOutput(t.shape,t.dtype,e)}if(W().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,"return ceil(x);",t.dtype);const e=new _k(t.shape,"return ceil(x);");return this.compileAndRun(e,[t])}floor(t){if(this.shouldExecuteOnCPU([t])){const e=jb(this.texData.get(t.dataId).values,t.dtype);return this.makeOutput(t.shape,t.dtype,e)}if(W().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,"return floor(x);",t.dtype);const e=new _k(t.shape,"return floor(x);");return this.compileAndRun(e,[t])}sign(t){const e=new _k(t.shape,"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n");return this.compileAndRun(e,[t])}isNaN(t){const e=new _k(t.shape,"return float(isnan(x));");return this.compileAndRun(e,[t],"bool")}isInf(t){const e=new _k(t.shape,"return float(isinf(x));");return this.compileAndRun(e,[t],"bool")}isFinite(t){const e=new _k(t.shape,"return float(!isnan(x) && !isinf(x));");return this.compileAndRun(e,[t],"bool")}round(t){const e=new _k(t.shape,"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n");return this.compileAndRun(e,[t])}exp(t){if(this.shouldExecuteOnCPU([t])){const e=Wb(this.texData.get(t.dataId).values,t.dtype);return this.makeOutput(t.shape,t.dtype,e)}if(W().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,"return exp(x);",t.dtype);const e=new _k(t.shape,"return exp(x);");return this.compileAndRun(e,[t])}expm1(t){if(this.shouldExecuteOnCPU([t])){const e=Gb(this.texData.get(t.dataId).values,t.dtype);return this.makeOutput(t.shape,t.dtype,e)}if(W().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,"return exp(x) - 1.0;",t.dtype);const e=new _k(t.shape,"return exp(x) - 1.0;");return this.compileAndRun(e,[t])}softmax(t,e){const n=x([e],t.shape),r=Ra(t,n),s=Gr(r.shape,n),a=Ma(t,r.reshape(s)),i=this.exp(a),o=this.sum(i,n).reshape(s);return qs(i,o)}log(t){if(this.shouldExecuteOnCPU([t])){const e=Kb(this.texData.get(t.dataId).values,t.dtype);return this.makeOutput(t.shape,t.dtype,e)}if(W().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,"\n  vec4 result = log(x);\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\n\n  return result;\n",t.dtype);const e=new _k(t.shape,"if (x < 0.0) return NAN;\n  return log(x);");return this.compileAndRun(e,[t])}log1p(t){const e=new _k(t.shape,"return log(1.0 + x);");return this.compileAndRun(e,[t])}sqrt(t){const e=new _k(t.shape,"return sqrt(x);");return this.compileAndRun(e,[t])}rsqrt(t){if(this.shouldExecuteOnCPU([t])){const e=nx(this.texData.get(t.dataId).values,t.dtype);return this.makeOutput(t.shape,t.dtype,e)}const e=new _k(t.shape,"return inversesqrt(x);");return this.compileAndRun(e,[t])}reciprocal(t){const e=new _k(t.shape,"return 1.0 / x;");return this.compileAndRun(e,[t])}relu(t){let e;return e=W().getBool("WEBGL_PACK")?new Mk(t.shape,$k):new _k(t.shape,"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n"),this.compileAndRun(e,[t])}relu6(t){let e;return e=W().getBool("WEBGL_PACK")?new Mk(t.shape,Ak):new _k(t.shape,"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n"),this.compileAndRun(e,[t])}prelu(t,e){const n=W().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new oI("\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",t.shape,e.shape):new iI("return (a < 0.) ? b * a : a;",t.shape,e.shape);return this.compileAndRun(n,[t,e])}elu(t){if(W().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,Rk,t.dtype);const e=new _k(t.shape,"return (x >= 0.0) ? x : (exp(x) - 1.0);");return this.compileAndRun(e,[t])}eluDer(t,e){const n=W().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new oI("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",t.shape,e.shape):new iI("return (b >= 1.0) ? a : a * (b + 1.0);",t.shape,e.shape);return this.compileAndRun(n,[t,e])}selu(t){const e=new _k(t.shape,"\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = 1.7580993408473768;\n  float scale = 1.0507009873554805;\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n");return this.compileAndRun(e,[t])}clip(t,e,n){let r;r=W().getBool("WEBGL_PACK_CLIP")?new lI(t.shape):new uI(t.shape);const s=r.getCustomSetupFunc(e,n);return this.compileAndRun(r,[t],null,s)}abs(t){if(this.shouldExecuteOnCPU([t])&&"complex64"!==t.dtype){const e=vb(this.texData.get(t.dataId).values);return this.makeOutput(t.shape,t.dtype,e)}if(W().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,"return abs(x);",t.dtype);const e=new _k(t.shape,"return abs(x);");return this.compileAndRun(e,[t])}complexAbs(t){const e=this.texData.get(t.dataId),n=new cI(t.shape),r=[this.makeComplexComponentTensorInfo(t,e.complexTensorInfos.real),this.makeComplexComponentTensorInfo(t,e.complexTensorInfos.imag)];return this.compileAndRun(n,r)}sigmoid(t){const e=new _k(t.shape,"return 1.0 / (1.0 + exp(-1.0 * x));");return this.compileAndRun(e,[t])}softplus(t){const e=new _k(t.shape,"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n");return this.compileAndRun(e,[t])}asin(t){const e=new _k(t.shape,"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n");return this.compileAndRun(e,[t])}acos(t){const e=new _k(t.shape,"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n");return this.compileAndRun(e,[t])}atan(t){const e=new _k(t.shape,"if (isnan(x)) return x;\n  return atan(x);\n");return this.compileAndRun(e,[t])}sinh(t){const e=new _k(t.shape,"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n");return this.compileAndRun(e,[t])}cosh(t){const e=new _k(t.shape,"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n");return this.compileAndRun(e,[t])}tanh(t){const e=new _k(t.shape,"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n");return this.compileAndRun(e,[t])}asinh(t){const e=new _k(t.shape,"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));");return this.compileAndRun(e,[t])}acosh(t){const e=new _k(t.shape,"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\n  return log(x + sqrt(x * x - 1.0));");return this.compileAndRun(e,[t])}atanh(t){const e=new _k(t.shape,"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\n  return (log(1.0 + x) - log(1.0 - x)) / 2.0;");return this.compileAndRun(e,[t])}erf(t){const e=new _k(t.shape,'\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = 0.3275911;\n  float a1 = 0.254829592;\n  float a2 = -0.284496736;\n  float a3 = 1.421413741;\n  float a4 = -1.453152027;\n  float a5 = 1.061405429;\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n');return this.compileAndRun(e,[t])}step(t,e){const n=new _k(t.shape,function(t=0){return`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${t});\n  `}(e));return this.compileAndRun(n,[t])}conv2dByMatMul(t,e,n,r,s,a){const i=t.shape,o=this.texData.get(t.dataId),l=n.inChannels,c=i[0]*i[1]*i[2],h=n.outChannels,p="channelsLast"===n.dataFormat,d=(1===c||1===h)&&l>1e3,f=i[2]%2!=0&&!!o.isPacked;if(d||!W().getBool("WEBGL_LAZILY_UNPACK")||!W().getBool("WEBGL_PACK_BINARY_OPERATIONS")||!f){const o=p?i[0]*i[1]*i[2]:i[0]*i[2]*i[3],u=ar(t,[1,o,n.inChannels]),l=ar(e,[1,n.inChannels,n.outChannels]),c=this.fusedBatchMatMul({a:u,b:l,transposeA:false,transposeB:false,bias:r,activation:s,preluActivationWeights:a});return ar(c,n.outShape)}const m=p?i[0]*i[1]*(i[2]+1):i[0]*i[2]*(i[3]+1),g={dataId:t.dataId,shape:[1,m,n.inChannels],dtype:t.dtype},y=o.shape;o.shape=o.shape.slice(),o.shape[o.shape.length-2]++,u(Cv(o.shape,g.shape),(()=>`packed reshape ${o.shape} to ${g.shape} isn't free`));const b=ar(e,[1,n.inChannels,n.outChannels]),x=this.fusedBatchMatMul({a:g,b:b,transposeA:false,transposeB:false,bias:r,activation:s,preluActivationWeights:a}),w=this.texData.get(x.dataId);return u(w.isPacked,(()=>"batchMatMul result is expected to be packed")),o.shape=y,w.shape=n.outShape,$r().makeTensorFromDataId(x.dataId,n.outShape,x.dtype)}conv2dWithIm2Row(t,e,n,r,s,a){const{filterWidth:i,filterHeight:o,inChannels:u,outWidth:l,outHeight:c,dataFormat:h}=n,p="channelsLast"===h,d=i*o*u,f=c*l,m=[d,f],g=t.squeeze([0]),y=e.reshape([1,d,-1]),b=new KI(m,g.shape,n),x=this.compileAndRun(b,[g]).reshape([1,m[0],m[1]]),w=null!=r,v=null!=a,I=s?Pk(s,!0):null,k=new tk(x.shape,y.shape,[1,f,n.outChannels],!0,!1,w,I,v),N=[x,y];r&&N.push(r),v&&N.push(a);const S=this.compileAndRun(k,N);return p?S.reshape([1,c,l,n.outChannels]):S.reshape([1,n.outChannels,c,l])}fusedConv2d({input:t,filter:e,convInfo:n,bias:r,activation:s,preluActivationWeights:a}){if(1===n.filterHeight&&1===n.filterWidth&&1===n.dilationHeight&&1===n.dilationWidth&&1===n.strideHeight&&1===n.strideWidth&&("SAME"===n.padInfo.type||"VALID"===n.padInfo.type))return this.conv2dByMatMul(t,e,n,r,s,a);if(W().getBool("WEBGL_CONV_IM2COL")&&1===t.shape[0])return this.conv2dWithIm2Row(t,e,n,r,s,a);const i=null!=r,o=null!=a,u=s?Pk(s,!1):null,l=new yI(n,i,u,o),c=[t,e];return r&&c.push(r),a&&c.push(a),this.compileAndRun(l,c)}conv2d(t,e,n){if(1===n.filterHeight&&1===n.filterWidth&&1===n.dilationHeight&&1===n.dilationWidth&&1===n.strideHeight&&1===n.strideWidth&&("SAME"===n.padInfo.type||"VALID"===n.padInfo.type))return this.conv2dByMatMul(t,e,n);if(W().getBool("WEBGL_CONV_IM2COL")&&1===t.shape[0])return this.conv2dWithIm2Row(t,e,n);const r=new yI(n);return this.compileAndRun(r,[t,e])}conv2dDerInput(t,e,n){const r=new pI(n);return this.compileAndRun(r,[t,e])}conv2dDerFilter(t,e,n){const r=new hI(n);return this.compileAndRun(r,[t,e])}fusedDepthwiseConv2D({input:t,filter:e,convInfo:n,bias:r,activation:s,preluActivationWeights:a}){const i=W().getBool("WEBGL_PACK_DEPTHWISECONV")&&n.strideWidth<=2&&n.outChannels/n.inChannels==1,o=s?Pk(s,i):null,u=[t,e],l=null!=r,c=null!=a;let h;return l&&u.push(r),c&&u.push(a),i?(h=new wI(n,l,o,c),this.compileAndRun(h,u)):(h=new xI(n,l,o,c),this.compileAndRun(h,u))}depthwiseConv2D(t,e,n){let r;return W().getBool("WEBGL_PACK_DEPTHWISECONV")&&n.strideWidth<=2&&n.outChannels/n.inChannels==1?(r=new wI(n),this.compileAndRun(r,[t,e])):(r=new xI(n),this.compileAndRun(r,[t,e]))}depthwiseConv2DDerInput(t,e,n){const r=new gI(n);return this.compileAndRun(r,[t,e])}depthwiseConv2DDerFilter(t,e,n){const r=new mI(n);return this.compileAndRun(r,[t,e])}conv3d(t,e,n){const r=new bI(n);return this.compileAndRun(r,[t,e])}conv3dDerInput(t,e,n){const r=new fI(n);return this.compileAndRun(r,[t,e])}conv3dDerFilter(t,e,n){const r=new dI(n);return this.compileAndRun(r,[t,e])}unstack(t,e){const n=t.shape[e],r=new Array(t.rank-1);let s=0;for(let n=0;n<t.rank;n++)n!==e&&(r[s++]=t.shape[n]);const a=new Array(t.rank).fill(0),i=t.shape.slice();i[e]=1;const o=new Array(n);for(let n=0;n<o.length;n++)a[e]=n,o[n]=this.slice(t,a,i).reshape(r);return o}avgPool3d(t,e){const n=new ok(e,"avg",!1);return this.compileAndRun(n,[t],"float32")}avgPool3dBackprop(t,e,n){const r=new aI(n);return this.compileAndRun(r,[t],e.dtype)}maxPool3d(t,e){const n=new ok(e,"max",!1);return this.compileAndRun(n,[t],"float32")}maxPool3dBackprop(t,e,n,r){const s=new ok(r,"max",!0),a=this.compileAndRun(s,[e]),i=new QI(r),o=this.compileAndRun(i,[t,a],e.dtype);return a.dispose(),o}resizeBilinear(t,e,n,r){const s=W().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new pk(t.shape,e,n,r):new hk(t.shape,e,n,r);return this.compileAndRun(s,[t],"float32")}resizeBilinearBackprop(t,e,n){const r=new ck(t,e,n);return this.compileAndRun(r,[t])}resizeNearestNeighbor(t,e,n,r){const s=new fk(t.shape,e,n,r);return this.compileAndRun(s,[t])}resizeNearestNeighborBackprop(t,e,n){const r=new dk(t,e,n);return this.compileAndRun(r,[t])}multinomial(t,e,n,r){const s=e?t:Oi(t),a=s.shape[0],i=s.shape[1],o=new ek(a,i,n),u=o.getCustomSetupFunc(r);return this.compileAndRun(o,[s],"int32",u)}oneHot(t,e,n,r){const s=new nk(t.size,e,n,r);return this.compileAndRun(s,[t])}diag(t){const e=new TI(t.size);return this.compileAndRun(e,[t])}cropAndResize(t,e,n,r,s,a){const i=new vI(t.shape,e.shape,r,s,a);return this.compileAndRun(i,[t,e,n],"float32")}depthToSpace(t,e,n){u(e>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${e}`));const r=t.shape[0],s="NHWC"===n?t.shape[1]:t.shape[2],a="NHWC"===n?t.shape[2]:t.shape[3],i="NHWC"===n?t.shape[3]:t.shape[1],o=s*e,l=a*e,c=i/(e*e),h=new EI("NHWC"===n?[r,o,l,c]:[r,c,o,l],e,n);return this.compileAndRun(h,[t])}split(t,e,n){return Ok(t,e,n)}scatterND(t,e,n){const{sliceRank:r,numUpdates:s,sliceSize:a,strides:i,outputSize:o}=dr(0,t,n),u=[o/a,a],l=t.reshape([s,r]),c=e.reshape([s,a]);if(0===o)return function(t,e){return re.makeTensorFromDataId(t.dataId,e,t.dtype)}(pn([]),n);const h=wa(0),p=new yk(s,r,l.rank,c.rank,i,u);return this.compileAndRun(p,[c,l,h]).reshape(n)}sparseToDense(t,e,n,r){const{sliceRank:s,numUpdates:a,strides:i,outputSize:o}=dr(0,t,n),u=new yk(a,s,t.rank,e.rank,i,[o,1],!1);return this.compileAndRun(u,[e,t,r]).reshape(n)}gatherND(t,e){const n=e.shape,r=n[n.length-1],[s,a,i,o]=hr(t,e),u=e.reshape([a,r]),l=t.reshape([t.size/i,i]),c=new OI(r,o,[a,i]);return this.compileAndRun(c,[l,u]).reshape(s)}fill(t,e,n){if("string"===(n=n||T(e))){const r=I(n,p(t));return r.fill(e),$r().makeTensor(r,t,n,this)}{const r=new MI(t,e),s=r.getCustomSetupFunc(e);return this.compileAndRun(r,[],n,s)}}onesLike(t){if("string"===t.dtype)throw new Error("onesLike is not supported under string dtype");return this.fill(t.shape,1,t.dtype)}zerosLike(t){return this.fill(t.shape,"string"===t.dtype?"":0,t.dtype)}linspace(t,e,n){return Pu(t,e,n)}makeTensorInfo(t,e,n){const r=this.write(n,t,e);return this.texData.get(r).usage=null,{dataId:r,shape:t,dtype:e}}makeOutput(t,e,n){const{dataId:r}=this.makeTensorInfo(t,e,n);return $r().makeTensorFromDataId(r,t,e,this)}unpackTensor(t){const e=new Dk(t.shape);return this.runWebGLProgram(e,[t],t.dtype)}packTensor(t){const e=new rk(t.shape);return this.runWebGLProgram(e,[t],t.dtype,null,!0)}packedReshape(t,e){const n=[Iv(t.shape),...kv(t.shape)],r={dtype:t.dtype,shape:n,dataId:t.dataId},s=[Iv(e),...kv(e)],a=new lk(s,n),i=this.runWebGLProgram(a,[r],t.dtype,null,!0);return{dataId:i.dataId,shape:e,dtype:i.dtype}}decode(t){const e=this.texData.get(t),{isPacked:n,shape:r,dtype:s}=e,a=Nv(r);let i;i=n?new CI(a):new SI(a);return{dtype:s,shape:r,dataId:this.runWebGLProgram(i,[{shape:a,dtype:s,dataId:t}],s,null,!0).dataId}}runWebGLProgram(t,e,n,r,s=!1){const a=this.makeTensorInfo(t.outputShape,n),i=this.texData.get(a.dataId);if(t.packedOutput&&(i.isPacked=!0),t.outPackingScheme===tv.DENSE){const e=ov(t.outputShape);i.texShape=e.map((t=>2*t))}if(null!=t.outTexUsage&&(i.usage=t.outTexUsage),0===p(a.shape))return i.values=v(a.dtype,0),a;const o=[],u=e.map((e=>{if("complex64"===e.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(e.dataId);if(null==n.texture){if(!t.packedInputs&&p(e.shape)<=W().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:e.shape,texData:null,isUniform:!0,uniformValues:n.values};t.packedInputs&&(n.isPacked=!0,n.shape=e.shape)}else if(!!n.isPacked!=!!t.packedInputs)e=n.isPacked?this.unpackTensor(e):this.packTensor(e),o.push(e),n=this.texData.get(e.dataId);else if(n.isPacked&&!Cv(n.shape,e.shape)){const t=e,r=e.shape;e.shape=n.shape,e=this.packedReshape(e,r),o.push(e),n=this.texData.get(e.dataId),t.shape=r}return this.uploadToGPU(e.dataId),{shape:e.shape,texData:n,isUniform:!1}}));this.uploadToGPU(a.dataId);const l={shape:a.shape,texData:i,isUniform:!1},c=function(t,e,n){let r="";e.concat(n).forEach((t=>{const e=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0,n=t.isUniform?"uniform":t.texData.texShape;r+=`${t.shape}_${n}_${e}`}));const s=t.userCode;let a=t.constructor.name;return a+="_"+r+"_"+s,a}(t,u,l),h=this.getAndSaveBinary(c,(()=>function(t,e,n,r){const s=e.userCode,a=n.map(((t,n)=>{const r={logicalShape:t.shape,texShape:t.isUniform?null:t.texData.texShape,isUniform:t.isUniform,isPacked:!t.isUniform&&t.texData.isPacked,flatOffset:null};return null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0&&(r.flatOffset=t.texData.slice.flatOffset),{name:e.variableNames[n],shapeInfo:r}})),i=a.map((t=>t.shapeInfo)),o={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},u=Gv(a,o,s,e.packedInputs),l=t.createProgram(u);let c=null;const h=t.getUniformLocation(l,"NAN",!1);1===W().getNumber("WEBGL_VERSION")&&(c=t.getUniformLocation(l,"INFINITY",!1));const p={};for(let n=0;n<e.variableNames.length;n++){const r=e.variableNames[n],s=!1;p[r]=t.getUniformLocation(l,r,s),p[`offset${r}`]=t.getUniformLocation(l,`offset${r}`,s)}return{program:e,source:u,webGLProgram:l,uniformLocations:p,inShapeInfos:i,outShapeInfo:o,infLoc:c,nanLoc:h}}(this.gpgpu,t,u,l))),d=null!=this.activeTimers;let f;if(d&&(f=this.startTimer()),function(t,e,n,r,s){qI(e.inShapeInfos,n),qI([e.outShapeInfo],[r]);const a=r.texData.texture,i=r.texData.texShape;r.texData.isPacked?t.setOutputPackedMatrixTexture(a,i[0],i[1]):t.setOutputMatrixTexture(a,i[0],i[1]),t.setProgram(e.webGLProgram),1===W().getNumber("WEBGL_VERSION")&&null!==e.infLoc&&t.gl.uniform1f(e.infLoc,1/0),null!==e.nanLoc&&t.gl.uniform1f(e.nanLoc,NaN),n.forEach(((n,r)=>{const s=e.program.variableNames[r],a=e.uniformLocations[s],i=e.uniformLocations[`offset${s}`];if(null!=a)if(n.isUniform)if(p(n.shape)<2)t.gl.uniform1f(a,n.uniformValues[0]);else{let e=n.uniformValues;e instanceof Float32Array||(e=new Float32Array(e)),t.gl.uniform1fv(a,e)}else null!=n.texData.slice&&null!=i&&t.gl.uniform1i(i,n.texData.slice.flatOffset),t.setInputMatrixTexture(n.texData.texture,a,r)})),null!=s&&s(t,e.webGLProgram),t.executeProgram()}(this.gpgpu,h,u,l,r),o.forEach((t=>this.disposeIntermediateTensorInfo(t))),d&&(f=this.endTimer(f),this.activeTimers.push({name:t.constructor.name,query:this.getQueryTime(f)})),!W().getBool("WEBGL_LAZILY_UNPACK")&&i.isPacked&&!1===s){const t=this.unpackTensor(a);return this.disposeIntermediateTensorInfo(a),t}return a}compileAndRun(t,e,n,r,s=!1){n=n||e[0].dtype;const a=this.runWebGLProgram(t,e,n,r,s);return $r().makeTensorFromDataId(a.dataId,a.shape,a.dtype)}getAndSaveBinary(t,e){return t in this.binaryCache||(this.binaryCache[t]=e()),this.binaryCache[t]}getTextureManager(){return this.textureManager}dispose(){if(!this.disposed){if(!W().getBool("IS_TEST")){Object.keys(this.binaryCache).forEach((t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]}))}this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0}}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=Rr((()=>{if(!W().get("WEBGL_RENDER_FLOAT32_ENABLED")){const t=W().getBool("DEBUG");W().set("DEBUG",!1);const e=this.abs(wa(1e-8)).dataSync()[0];if(W().set("DEBUG",t),e>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(t){const e=this.texData.get(t),{shape:n,dtype:r,values:s,texture:a,usage:i,isPacked:u}=e;if(null!=a)return;const l=null!=this.activeTimers;let c;l&&(c=wt());let h=e.texShape;if(null==h&&(h=function(t,e=!1){let n=W().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e&&(n*=2,1===(t=t.map(((e,n)=>n>=t.length-2?o(t[n]):t[n]))).length&&(t=[2,t[0]])),2!==t.length){const e=w(t);t=e.newShape}let r=p(t);if(t.length<=1&&r<=n)return[1,r];if(2===t.length&&t[0]<=n&&t[1]<=n)return t;if(3===t.length&&t[0]*t[1]<=n&&t[2]<=n)return[t[0]*t[1],t[2]];if(3===t.length&&t[0]<=n&&t[1]*t[2]<=n)return[t[0],t[1]*t[2]];if(4===t.length&&t[0]*t[1]*t[2]<=n&&t[3]<=n)return[t[0]*t[1]*t[2],t[3]];if(4===t.length&&t[0]<=n&&t[1]*t[2]*t[3]<=n)return[t[0],t[1]*t[2]*t[3]];if(e){const e=Iv(t);let n=2,s=2;return t.length&&([n,s]=kv(t)),r=e*(n/2)*(s/2),m(r).map((t=>2*t))}return m(r)}(n,u),e.texShape=h),null!=s){const t=Nv(n);let a,i=h[1],o=h[0];const p=s instanceof Uint8Array;u?([i,o]=uv(h[0],h[1]),a=new RI(t,[o,i],p)):a=new AI(t,[o,i],p);const d=this.makeTensorInfo([o,i],r);this.texData.get(d.dataId).usage=p?nv.PIXELS:nv.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(d.dataId),i,o,s);const f=!0,m=this.runWebGLProgram(a,[d],r,null,f),g=this.texData.get(m.dataId);e.texture=g.texture,e.texShape=g.texShape,e.isPacked=g.isPacked,e.usage=g.usage,this.disposeIntermediateTensorInfo(d),this.texData.delete(m.dataId),e.values=null,l&&(this.uploadWaitMs+=wt()-c)}else{const t=this.acquireTexture(h,i,r,u);e.texture=t}}convertAndCacheOnCPU(t,e){const n=this.texData.get(t),{dtype:r}=n;return this.releaseGPUData(t),null!=e&&(n.values=function(t,e){if("float32"===e||"complex64"===e)return t;if("int32"===e||"bool"===e){const n="int32"===e?new Int32Array(t.length):new Uint8Array(t.length);for(let e=0;e<n.length;++e)n[e]=Math.round(t[e]);return n}throw new Error(`Unknown dtype ${e}`)}(e,r)),n.values}acquireTexture(t,e,n,r){if(this.numBytesInGPU+=this.computeBytes(t,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const t=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${t} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(t,e,r)}computeBytes(t,e){return t[0]*t[1]*S(e)}tryRunOnCpuOrThrow(t,e){if(this.shouldExecuteOnCPU(t))try{return e()}catch(t){if(W().getBool("IS_TEST"))throw new Error("CPU forwarding failed")}return null}}function Wk(t){const{inputs:e,backend:n}=t,{x:r}=e;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}ie()&&Or("webgl",(()=>new Vk),2);const Uk={kernelName:"Identity",backendName:"webgl",kernelFunc:Wk};function Gk(t){const{inputs:e,backend:n}=t,{real:r,imag:s}=e,a=n.makeTensorInfo(r.shape,"complex64"),i=n.texData.get(a.dataId),o=Wk({inputs:{x:r},backend:n});n.texData.get(o.dataId).complexParentRefCount++;const u=Wk({inputs:{x:s},backend:n});return n.texData.get(u.dataId).complexParentRefCount++,i.complexTensorInfos={real:o,imag:u},a}const Hk={kernelName:"Complex",backendName:"webgl",kernelFunc:Gk};function jk(t){return({inputs:e,backend:n})=>{const{x:r}=e,s=n,a=new _k(r.shape,t);return s.runWebGLProgram(a,[r],r.dtype)}}function qk({opSnippet:t,packedOpSnippet:e,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:s,dtype:a}){return({inputs:i,backend:o})=>{const{a:u,b:l}=i,c=o;if(r&&"complex64"===u.dtype){const e=c.texData.get(u.dataId),n=c.texData.get(l.dataId),[r,s]=[[e.complexTensorInfos.real,n.complexTensorInfos.real],[e.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((e=>{const[n,r]=e,s={dataId:n.dataId,dtype:n.dtype,shape:u.shape},a={dataId:r.dataId,dtype:r.dtype,shape:l.shape},i=new iI(t,u.shape,l.shape);return c.runWebGLProgram(i,[s,a],Kt(n.dtype,r.dtype))})),a=Gk({inputs:{real:r,imag:s},backend:c});return c.disposeIntermediateTensorInfo(r),c.disposeIntermediateTensorInfo(s),a}const h=a||Kt(u.dtype,l.dtype);if(c.shouldExecuteOnCPU([u,l])&&null!=s){const t=c.texData.get(u.dataId),e=c.texData.get(l.dataId),[n,r]=s(u.shape,l.shape,t.values,e.values,h),a=c.makeTensorInfo(r,h);return c.texData.get(a.dataId).values=n,a}let p;return p=W().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=e?new oI(e,u.shape,l.shape,n):new iI(t,u.shape,l.shape),c.runWebGLProgram(p,[u,l],h)}}const Kk={kernelName:"Add",backendName:"webgl",kernelFunc:qk({opSnippet:"return a + b;",packedOpSnippet:"return a + b;",supportsComplex:!0,cpuKernelImpl:Db})},Xk={kernelName:"Atan2",backendName:"webgl",kernelFunc:qk({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"})};const Yk={kernelName:"AvgPool",backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e;Mv(s,"avgPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=r;u(ms(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const c=as(s.shape,a,i,1,o,l);if(1===c.filterWidth&&1===c.filterHeight&&d(c.inShape,c.outShape))return Wk({inputs:{x:s},backend:n});const h=new ik(c,"avg",!1);return n.runWebGLProgram(h,[s],"float32")}};const Jk={kernelName:"AvgPoolBackprop",backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:a}=e,i=a;Mv([s,a],"avgPoolBackprop");const{filterSize:o,strides:u,pad:l}=r,c=as(i.shape,o,u,1,l),h=new sI(c);return n.runWebGLProgram(h,[s],i.dtype)}};class Zk{constructor(t,e,n,r,s,a){this.outputShape=[],this.variableNames=["x","mean","variance"],Ys(t,e),Ys(t,n);let i="0.0";null!=r&&(Ys(t,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";null!=s&&(Ys(t,s),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${i};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${a}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class Qk{constructor(t,e,n,r,s,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],Ys(t,e),Ys(t,n);let i="vec4(0.0)";null!=r&&(Ys(t,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=s&&(Ys(t,s),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`\n      void main() {\n        vec4 offset = ${i};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${a}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const tN={kernelName:"FusedBatchNorm",backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r,mean:s,variance:a,offset:i,scale:o}=t;u(s.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),u(null==i||s.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),u(null==o||s.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:l}=n;null==l&&(l=.001);const c=[r,s,a];let h=null;null!=i&&(h=i.shape,c.push(i));let p=null;null!=o&&(p=o.shape,c.push(o));const d=W().getBool("WEBGL_PACK_NORMALIZATION")?new Qk(r.shape,s.shape,a.shape,h,p,l):new Zk(r.shape,s.shape,a.shape,h,p,l);return e.runWebGLProgram(d,c,c[0].dtype)}},eN=qk({opSnippet:"return float(a != b);",dtype:"bool"}),nN={kernelName:"NotEqual",backendName:"webgl",kernelFunc:eN};function rN(t){const{inputs:e,backend:n}=t,{input:r}=e;return Wk({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}const sN={kernelName:"Real",backendName:"webgl",kernelFunc:rN};const aN={kernelName:"Cast",backendName:"webgl",kernelFunc:function t(e){const{inputs:n,backend:r,attrs:s}=e,{x:a}=n,{dtype:i}=s;if("complex64"===i){if("complex64"===a.dtype)return Wk({inputs:{x:a},backend:r});const e=Wa(a.shape),n=t({inputs:{x:a},backend:r,attrs:{dtype:"float32"}}),s=Gk({inputs:{real:n,imag:e},backend:r});return e.dispose(),r.disposeIntermediateTensorInfo(n),s}if("complex64"===a.dtype){const e=rN({inputs:{input:a},backend:r}),n=t({inputs:{x:e},backend:r,attrs:{dtype:i}});return r.disposeIntermediateTensorInfo(e),n}if(!k(a.dtype,i)){const t=Wk({inputs:{x:a},backend:r});return{dataId:t.dataId,shape:t.shape,dtype:i}}if("int32"===i)return function(t,e){const n=new _k(t.shape,"return float(int(x));"),r=e.runWebGLProgram(n,[t],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(a,r);if("bool"===i){const t=r.makeTensorInfo([],"bool",v("bool",1)),e=eN({inputs:{a:a,b:t},backend:r});return r.disposeIntermediateTensorInfo(t),e}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${i}`)}};class iN{constructor(t){this.outputShape=[],this.outputShape=_s(t,1),this.variableNames=t.map(((t,e)=>`T${e}`));const e=new Array(t.length-1);e[0]=t[0][1];for(let n=1;n<e.length;n++)e[n]=e[n-1]+t[n][1];const n=[`if (yC < ${e[0]}) setOutput(getT0(yR, yC));`];for(let t=1;t<e.length;t++){const r=e[t-1];n.push(`else if (yC < ${e[t]}) setOutput(getT${t}(yR, yC-${r}));`)}const r=e.length,s=e[e.length-1];n.push(`else setOutput(getT${r}(yR, yC-${s}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class oN{constructor(t,e){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=_s(t,e);const n=this.outputShape,r=n.length,s=tI(r),a=zv("coords",r),i=["x","y","z","w","u","v"].slice(0,r);this.variableNames=t.map(((t,e)=>`T${e}`));const o=new Array(t.length-1);o[0]=t[0][e];for(let n=1;n<o.length;n++)o[n]=o[n-1]+t[n][e];const u=i[e],l=i.slice(-2),c=i.join();let h=`if (${u} < ${o[0]}) {\n        return getChannel(\n            getT0(${c}), vec2(${l.join()}));\n        }`;for(let t=1;t<o.length;t++){const e=o[t-1];h+=`\n        if (${u} < ${o[t]}  && ${u} >= ${o[t-1]}) {\n          return getChannel(\n            getT${t}(${uN(i,u,e)}),\n            vec2(${uN(l,u,e)}));\n        }`}const p=o.length,d=o[o.length-1];h+=`\n        return getChannel(\n          getT${p}(${uN(i,u,d)}),\n          vec2(${uN(l,u,d)}));`,this.userCode=`\n      float getValue(${i.map((t=>"int "+t))}) {\n        ${h}\n      }\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${a}), 0., 0., 0.);\n\n        ${a[r-1]} = ${a[r-1]} + 1;\n        if (${a[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${a});\n        }\n\n        ${a[r-2]} = ${a[r-2]} + 1;\n        if (${a[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${a});\n        }\n\n        ${a[r-1]} = ${a[r-1]} - 1;\n        if (${a[r-2]} < ${n[r-2]} &&\n            ${a[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${a});\n        }\n        setOutput(result);\n      }\n    `}}function uN(t,e,n){const r=t.indexOf(e);return t.map(((t,e)=>e===r?`${t} - ${n}`:t)).join()}function lN(t){const{inputs:e,backend:n}=t,{input:r}=e;return Wk({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}const cN={kernelName:"Imag",backendName:"webgl",kernelFunc:lN};function hN(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{shape:a}=r,i=n,o=p(s.shape),l=b(a,o),c=p(l);u(o===c,(()=>`The new shape (${l}) has ${c} elements and the old shape (${s.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`));const h=i.texData.get(s.dataId);return!h.isPacked||Cv(s.shape,l)||null!==h.texture&&Cv(h.shape,l)?(i.incRef(s.dataId),{dataId:s.dataId,shape:l,dtype:s.dtype}):function(t,e,n){const r=[Iv(t.shape),...kv(t.shape)],s={dtype:t.dtype,shape:r,dataId:t.dataId},a=[Iv(e),...kv(e)],i=new lk(a,r),o=n.runWebGLProgram(i,[s],t.dtype,null,!0);return{dataId:o.dataId,shape:e,dtype:o.dtype}}(s,l,i)}const pN={kernelName:"Reshape",backendName:"webgl",kernelFunc:hN};function dN(t,e,n){const r=t[0].dtype;if("complex64"===r){const r=t.map((t=>rN({inputs:{input:t},backend:n}))),s=t.map((t=>lN({inputs:{input:t},backend:n}))),a=dN(r,e,n),i=dN(s,e,n),o=Gk({inputs:{real:a,imag:i},backend:n});return r.forEach((t=>n.disposeIntermediateTensorInfo(t))),s.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),o}if(t.length>W().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const r=Math.floor(t.length/2),s=dN(t.slice(0,r),e,n),a=dN(t.slice(r),e,n),i=dN([s,a],e,n);return n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),i}if(W().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&t[0].shape.length>1){const s=new oN(t.map((t=>t.shape)),e);return n.runWebGLProgram(s,t,r)}const s=_s(t.map((t=>t.shape)),e),a=t.map((t=>hN({inputs:{x:t},attrs:{shape:[-1,p(t.shape.slice(e))]},backend:n}))),i=new iN(a.map((t=>t.shape))),o=n.runWebGLProgram(i,a,r);a.forEach((t=>n.disposeIntermediateTensorInfo(t)));const u=hN({inputs:{x:o},attrs:{shape:s},backend:n});return n.disposeIntermediateTensorInfo(o),u}const fN={kernelName:"Concat",backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{axis:s}=r,a=x(s,e[0].shape)[0],i=_s(e.map((t=>t.shape)),a);if(0===p(i))return n.makeTensorInfo(i,e[0].dtype,[]);const o=e.filter((t=>p(t.shape)>0));return 1===o.length?o[0]:(Ts(o.map((t=>t.shape)),a),dN(o,a,n))}},mN={kernelName:"Cos",backendName:"webgl",kernelFunc:jk("if (isnan(x)) return x;\n  return cos(x);\n")},gN={kernelName:"Div",backendName:"webgl",kernelFunc:qk({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0})};class yN{constructor(t,e,n){this.variableNames=["real","imag"];const r=e[1];this.outputShape=e;const s=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=n?`${r}.0`:"1.0";let i;if("real"===t)i="return real * expR - imag * expI;";else{if("imag"!==t)throw new Error(`FFT component must be either "real" or "imag", got ${t}.`);i="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${s};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${i}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${a};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function bN(t,e,n){const r=n.texData.get(t.dataId),s=p(t.shape),a=t.shape[t.shape.length-1],i=hN({inputs:{x:t},backend:n,attrs:{shape:[s/a,a]}}).shape,o=new yN("real",i,e),u=new yN("imag",i,e),l=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:i},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:i}],c=n.runWebGLProgram(o,l,"float32"),h=n.runWebGLProgram(u,l,"float32"),d=Gk({inputs:{real:c,imag:h},backend:n});n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h);const f=hN({inputs:{x:d},backend:n,attrs:{shape:t.shape}});return n.disposeIntermediateTensorInfo(f),f}const xN={kernelName:"FFT",backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:r}=e;return bN(r,!1,n)}};class wN{constructor(t){this.variableNames=["Image"],this.outputShape=[];const e=t[2];this.outputShape=t,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${e} - x;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${e}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const vN={kernelName:"FlipLeftRight",backendName:"webgl",kernelFunc:({inputs:t,backend:e})=>{const{image:n}=t,r=e,s=new wN(n.shape);return r.runWebGLProgram(s,[n],n.dtype)}};class IN{constructor(t){this.variableNames=["A"];const e=Pv(),[n,r]=t;this.outputShape=t,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${e.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class kN{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const e=Pv(),[n,r]=t;this.outputShape=t,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${e.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${e.output} = result;\n      }\n    `}}const NN={kernelName:"FromPixels",backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t;let{pixels:s}=e;const{numChannels:a}=r,i="undefined"!=typeof HTMLVideoElement&&s instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&s instanceof HTMLImageElement,[u,l]=i?[s.videoWidth,s.videoHeight]:[s.width,s.height],c=[l,u],h=[l,u,a];(o||i)&&(null==SN&&(SN=document.createElement("canvas").getContext("2d")),SN.canvas.width=u,SN.canvas.height=l,SN.drawImage(s,0,0,u,l),s=SN.canvas);const p=n.makeTensorInfo(c,"int32");n.texData.get(p.dataId).usage=nv.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(p.dataId),s);const d=W().getBool("WEBGL_PACK")?new kN(h):new IN(h),f=n.runWebGLProgram(d,[p],"int32");return n.disposeData(p.dataId),f}};let SN;const CN={kernelName:"IFFT",backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:r}=e;return bN(r,!0,n)}};class EN{constructor(t,e){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:a}=t;this.outputShape=[r,a];const i=4*Math.floor(n/4),o=n%4;let u="sumValue += dot(values, ones);";if(null!=e){const t=1/e;u=`sumValue += dot(values * ${f(t)?t.toPrecision(2):t}, ones);`}let l="";s%n>0&&(l=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${l}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${u}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${u}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}function TN(t,e,n,r){const s=function(t){const e=[];for(;0===e.length||1!==e[e.length-1].outSize;){const n=e.length?e[e.length-1].outSize:t[1],r=ca(n);e.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return e}(t.shape);let a=t;for(let i=0;i<s.length;i++){const{inSize:o,windowSize:u,outSize:l}=s[i];let c,h;c="mean"===n?0===i?new EN({windowSize:u,inSize:o,batchSize:t.shape[0],outSize:l},o):new EN({windowSize:u,inSize:o,batchSize:t.shape[0],outSize:l}):new uk({windowSize:u,inSize:o,batchSize:t.shape[0],outSize:l},n),h=a,a=r.runWebGLProgram(c,[a],e),h.dataId!==t.dataId&&r.disposeIntermediateTensorInfo(h)}return a}class _N{constructor(t,e){this.variableNames=["A"];const n=new Array(t.length);for(let r=0;r<n.length;r++)n[r]=t[e[r]];this.outputShape=n,this.rank=n.length;const r=tI(this.rank),s=function(t){const e=t.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(e);for(let e=0;e<t.length;e++)r[t[e]]=n[e];return r.join()}(e);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${s}));\n    }\n    `}}class $N{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(t.length);for(let r=0;r<n.length;r++)n[r]=t[e[r]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=tI(this.rank),s=Bv("rc",this.rank),a=new Array(this.rank);for(let t=0;t<e.length;t++)a[e[t]]=s[t];const i=`vec2(${a.slice(-2).join()})`,o=`++${s[this.rank-1]} < ${n[this.rank-1]}`,u=`getChannel(getA(${a.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${u};\n      if(${o}) {\n        result[1] = ${u};\n      }\n      --${s[this.rank-1]};\n      if(++${s[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${u};\n        if(${o}) {\n          result[3] = ${u};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function AN(t,e,n){const r=W().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new $N(t.shape,e):new _N(t.shape,e);return n.runWebGLProgram(r,[t],t.dtype)}const RN={kernelName:"Max",backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{reductionIndices:s,keepDims:a}=e,i=n,o=r.shape.length,u=x(s,r.shape);let l=u;const c=jr(l,o),h=null!=c,d=i.shouldExecuteOnCPU([r]);let f=r;if(h){if(d){const t=i.texData.get(f.dataId).values,e=new Array(o);for(let t=0;t<e.length;t++)e[t]=r.shape[c[t]];const n=hx(t,r.shape,r.dtype,c,e);f=i.makeTensorInfo(e,r.dtype);i.texData.get(f.dataId).values=n}else f=AN(r,c,i);l=Kr(l.length,o)}Hr("max",l,o);const[m,g]=Ur(f.shape,l);let y,b=m;if(a&&(b=Gr(m,u)),d){const t=Yb(i.texData.get(f.dataId).values,p(g),b,r.dtype);y=i.makeTensorInfo(b,r.dtype);i.texData.get(y.dataId).values=t}else y=function(t,e,n,r){const s=p(e),a=hN({inputs:{x:t},attrs:{shape:[p(t.shape)/s,s]},backend:r}),i=TN(a,t.dtype,"max",r),o=hN({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}(f,g,b,i);return h&&i.disposeIntermediateTensorInfo(f),y}};const MN={kernelName:"MaxPool",backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e;Mv(s,"maxPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=r;u(ms(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const c=as(s.shape,a,i,1,o,l);if(1===c.filterWidth&&1===c.filterHeight&&d(c.inShape,c.outShape))return Wk({inputs:{x:s},backend:n});const h=new ik(c,"max",!1);return n.runWebGLProgram(h,[s],s.dtype)}};const DN={kernelName:"MaxPoolBackprop",backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:a,output:i}=e,o=a;Mv([a,i],"maxPoolBackprop");const{filterSize:u,strides:l,pad:c,dimRoundingMode:h}=r,p=as(o.shape,u,l,1,c,h),d=new ik(p,"max",!0),f=n.runWebGLProgram(d,[o],o.dtype),m=new ZI(p),g=n.runWebGLProgram(m,[s,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}};const ON={kernelName:"MaxPoolWithArgmax",backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{filterSize:s,strides:a,pad:i,includeBatchInIndex:o}=e,l=n;u(4===r.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`));const c=[1,1];u(ms(a,c),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${c}'`));const h=as(r.shape,s,a,c,i),[p,d]=function(t,e,n,r){let s=new ik(n,"max",!1);const a=r.runWebGLProgram(s,[t],"float32");return s=new ik(n,"max",!0,!0,e),[a,r.runWebGLProgram(s,[t],"float32")]}(r,o,h,l);return[p,d]}};const FN={kernelName:"Mean",backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{keepDims:s,axis:a}=e,i=n,o=r.shape.length,u=x(a,r.shape);let l=u;const c=jr(l,o),h=null!=c,d=i.shouldExecuteOnCPU([r]),f=[];let m=r;if(h){if(d){const t=i.texData.get(m.dataId).values,e=new Array(o);for(let t=0;t<e.length;t++)e[t]=r.shape[c[t]];const n=hx(t,r.shape,r.dtype,c,e);m=i.makeTensorInfo(e,r.dtype);i.texData.get(m.dataId).values=n}else m=AN(r,c,i);f.push(m),l=Kr(l.length,o)}Hr("sum",l,o);const[g,y]=Ur(m.shape,l);let b=g;s&&(b=Gr(g,u));const w=function(t,e,n,r){const s=p(e),a=hN({inputs:{x:t},attrs:{shape:[p(t.shape)/s,s]},backend:r}),i=TN(a,"float32","mean",r),o=hN({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}(m,y,b,i);for(const t of f)i.disposeIntermediateTensorInfo(t);return w}};class LN{constructor(t,e,n){this.variableNames=["x"],this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const r=t.length,s=tI(r),a=e.map((t=>t[0])).join(","),i=e.map(((e,n)=>e[0]+t[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),u="reflect"===n?0:1;this.userCode=1!==r?`\n      ${s} start = ${s}(${a});\n      ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${u};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};\n          }\n        }\n        ${s} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${a};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${u};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${u};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class BN{constructor(t,e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const r=t.length,s=tI(r),a=e.map((t=>t[0])).join(","),i=e.map(((e,n)=>e[0]+t[n])).join(","),o=zv("rc",r),u=zv("source",r),l=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${u.slice(-2).join()})`,h="reflect"===n?0:1;let p="";if(1===r){const t=`\n        ${s} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${h};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${h};\n        }\n        source -= start;\n      `;p=`\n        ${s} rc = outputLoc;\n        ${t}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${l}) {\n          ${t}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n      `}else{const t=`\n        ${s} source = rc;\n        ${s} lt = ${s}(lessThan(source, start));\n        ${s} gte = ${s}(greaterThanEqual(source, end));\n        ${s} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${h}) +\n                gte * ((end - 1) * 2 - source + ${h});\n        source -= start;\n      `;p=`\n        ${s} rc = outputLoc;\n        ${t}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${l}) {\n          ${t}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${o[r-2]} += 1;\n        if(${o[r-2]} < ${this.outputShape[r-2]}) {\n          ${t}\n          result[2] = getChannel(getX(${u.join()}), ${c});\n          ${o[r-1]} += 1;\n          if(${l}) {\n            ${t}\n            result[3] = getChannel(getX(${u.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${s} start = ${s}(${a});\n      const ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}const zN={kernelName:"MirrorPad",backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r}=t,{paddings:s,mode:a}=n,i=W().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new BN(r.shape,s,a):new LN(r.shape,s,a);return e.runWebGLProgram(i,[r],r.dtype)}},PN="return areal * breal - aimag * bimag;",VN="return areal * bimag + aimag * breal;";class WN{constructor(t,e,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=Ys(e,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${t}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const UN={kernelName:"Multiply",backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{a:r,b:s}=e,a=Kt(r.dtype,s.dtype);if("complex64"===r.dtype){const t=n.texData.get(r.dataId),e=n.texData.get(s.dataId),a=new WN(PN,r.shape,s.shape),i=new WN(VN,r.shape,s.shape),o=[{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:r.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:s.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:s.shape}],u=n.runWebGLProgram(a,o,"float32"),l=n.runWebGLProgram(i,o,"float32"),c=Gk({inputs:{real:u,imag:l},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),c}if(n.shouldExecuteOnCPU([r,s])){const t=n.texData.get(r.dataId),e=n.texData.get(s.dataId),[i,o]=Jb(r.shape,s.shape,t.values,e.values,a),u=n.makeTensorInfo(o,a);return n.texData.get(u.dataId).values=i,u}let i;return i=W().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new oI("return a * b;",r.shape,s.shape):new iI("return a * b;",r.shape,s.shape),n.runWebGLProgram(i,[r,s],a)}},GN={kernelName:"NonMaxSuppressionV3",backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{Ou("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{boxes:r,scores:s}=t,{maxOutputSize:a,iouThreshold:i,scoreThreshold:o}=n,u=e;return qo(u.readSync(r.dataId),u.readSync(s.dataId),a,i,o)}},HN=Ko,jN={kernelName:"NonMaxSuppressionV4",backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{Ou("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{boxes:r,scores:s}=t,{maxOutputSize:a,iouThreshold:i,scoreThreshold:o,padToMaxOutputSize:u}=n,l=e,c=l.readSync(r.dataId),h=l.readSync(s.dataId),{selectedIndices:p,validOutputs:d}=HN(c,h,a,i,o,u);return[p,d]}},qN=Xo,KN={kernelName:"NonMaxSuppressionV5",backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{Ou("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{boxes:r,scores:s}=t,{maxOutputSize:a,iouThreshold:i,scoreThreshold:o,softNmsSigma:u}=n,l=e,c=l.readSync(r.dataId),h=l.readSync(s.dataId),p=a,d=i,f=o,m=u,{selectedIndices:g,selectedScores:y}=qN(c,h,p,d,f,m);return[g,y]}};class XN{constructor(t,e,n,r){this.variableNames=["Image"],this.outputShape=[];const s=t[1],a=t[2],i=Math.sin(e).toFixed(3),o=Math.cos(e).toFixed(3);this.outputShape=t;const[u,l]=_u(r,s,a),c=u.toFixed(3),h=l.toFixed(3);let p="";p="number"==typeof n?`float outputValue = ${n.toFixed(2)};`:`\n        vec3 fill = vec3(${n.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - ${c}) * ${o} - (float(y) - ${h}) * ${i};\n          float coordYFloat = (float(x) - ${c}) * ${i} + (float(y) - ${h}) * ${o};\n          int coordX = int(round(coordXFloat + ${c}));\n          int coordY = int(round(coordYFloat + ${h}));\n          ${p}\n          if(coordX >= 0 && coordX < ${a} && coordY >= 0 && coordY < ${s}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const YN={kernelName:"RotateWithOffset",backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:r}=t,{radians:s,fillValue:a,center:i}=e,o=n,u=new XN(r.shape,s,a,i);return o.runWebGLProgram(u,[r],r.dtype)}},JN={kernelName:"Sin",backendName:"webgl",kernelFunc:jk("if (isnan(x)) return x;\n  return sin(x);\n")},ZN={kernelName:"Square",backendName:"webgl",kernelFunc:jk("return x * x;")},QN={kernelName:"SquaredDifference",backendName:"webgl",kernelFunc:qk({opSnippet:"return (a - b) * (a - b);",packedOpSnippet:"return (a - b) * (a - b);"})};const tS=[Kk,Xk,Yk,Jk,tN,aN,Hk,fN,mN,gN,xN,vN,NN,Uk,CN,cN,RN,MN,DN,ON,FN,zN,UN,GN,jN,KN,nN,sN,pN,YN,JN,ZN,{kernelName:"Sub",backendName:"webgl",kernelFunc:qk({opSnippet:"return a - b;",packedOpSnippet:"return a - b;",supportsComplex:!0,cpuKernelImpl:ux})},QN,{kernelName:"Tan",backendName:"webgl",kernelFunc:jk("return tan(x);")},{kernelName:"Transpose",backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{perm:s}=e,a=n,i=r.shape.length,o=new Array(i);for(let t=0;t<o.length;t++)o[t]=r.shape[s[t]];let u;if(a.shouldExecuteOnCPU([r])){const t=hx(a.texData.get(r.dataId).values,r.shape,r.dtype,s,o);u=a.makeTensorInfo(o,r.dtype);a.texData.get(u.dataId).values=t}else u=AN(r,s,a);return u}},{kernelName:"Unique",backendName:"webgl",kernelFunc:function(t){const{inputs:e,attrs:n,backend:r}=t,{axis:s}=n,{x:a}=e;Mv(a,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=r.readSync(a.dataId),{outputValues:o,outputShape:u,indices:l}=px(i,s,a.shape,a.dtype);return[r.makeTensorInfo(u,a.dtype,o),r.makeTensorInfo([l.length],"int32",l)]}}];for(const t of tS)gt(t);Math.PI;const eS=.5*Math.PI,nS=async(t,e)=>{const n=Performance.now,r=await e.estimateFaces({input:t,returnTensors:!1,flipHorizontal:true,predictIrises:!0});if(r.length>0)for(let t=0,e=r.length;t<e;t++){const e=r[t],{boundingBox:s,mesh:a,scaledMesh:i,annotations:o}=e,{bottomRight:u,topLeft:l}=s,{noseTip:c,noseBottom:h,noseRightCorner:p}=o,d=i[109],f=i[400],m=f[1]-d[1],{leftEyeIris:g,rightEyeIris:y,leftEyeLower0:b,rightEyeLower0:x,midwayBetweenEyes:w}=o,v=g[0],I=y[0],k=w[0],N=Math.abs(v[0]-I[0]),S=v[2]<I[2],C=2*(k[0]-v[0])/N-1,E=b[0][0],T=x[0][0],_=b[0][1],$=x[0][1],A=w[0][0],R=(w[0][1],-1*(A-E)),M=A-T,{rightCheek:D,leftCheek:O,silhouette:F}=o;e.lookingRight=!S,e.eyeDirection=-1*C,e.eyeDistance=N,e.headHeight=m;const L=-1*(Math.atan2(R,M)-2),B=(Math.atan2(d[2],f[2])-1.9-.2)/eS,z=E-T,P=_-$,V=-1*(Math.atan2(z,P)+eS);e.pitch=B,e.roll=V,e.yaw=L;const{lipsUpperInner:W,lipsLowerInner:U}=o,G=W.length,H=W[0],j=U[0],q=W[5],K=U[5],X=W[G-1],Y=U[G-1],J=K[0]-q[0],Z=K[1]-q[1],Q=(Y[0],j[0],X[1],H[1],Math.sqrt(J*J+Z*Z)),tt=Math.sqrt(J*J+Z*Z);e.mouthRange=Q,e.mouthRatio=Q/m,e.mouthWidth=tt,e.mouthOpen=Q/(.25*m),e.happiness=0,e.time=n}return r},rS=async(t,e)=>{await re.ready();const n=e.maxFaces,r=await function(t,e){return void 0===t&&(t=dp.mediapipeFacemesh),void 0===e&&(e={}),Dh(this,void 0,void 0,(function(){return Oh(this,(function(n){if(t===dp.mediapipeFacemesh)return[2,up(e)];throw new Error(t+" is not a valid package name.")}))}))}(dp.mediapipeFacemesh,e);console.log("Loaded TF model",r,"for",n,"people");const s=async(e,a)=>{const i=await nS(t,r);if(i.length>0){const t=Math.min(n,i.length),e=[];for(let n=0;n<t;++n){const t=i[n];e.push(t)}a&&a(e)}else a&&a(null);e&&requestAnimationFrame((()=>s(e,a)))};return s},sS=2*Math.PI,aS=(t,e,n)=>t>n?n:t<e?e:t;const iS=["♫","𝅗𝅥","𝅘𝅥","𝅘𝅥𝅮","𝅘𝅥𝅯","𝅘𝅥𝅰","𝅘𝅥𝅱","𝅘𝅥𝅲"],oS=["accordion-mp3","acoustic_bass-mp3","acoustic_grand_piano-mp3","acoustic_guitar_nylon-mp3","acoustic_guitar_steel-mp3","agogo-mp3","alto_sax-mp3","applause-mp3","bagpipe-mp3","banjo-mp3","baritone_sax-mp3","bassoon-mp3","bird_tweet-mp3","blown_bottle-mp3","brass_section-mp3","breath_noise-mp3","bright_acoustic_piano-mp3","celesta-mp3","cello-mp3","choir_aahs-mp3","church_organ-mp3","clarinet-mp3","clavinet-mp3","contrabass-mp3","distortion_guitar-mp3","drawbar_organ-mp3","dulcimer-mp3","electric_bass_finger-mp3","electric_bass_pick-mp3","electric_grand_piano-mp3","electric_guitar_clean-mp3","electric_guitar_jazz-mp3","electric_guitar_muted-mp3","electric_piano_1-mp3","electric_piano_2-mp3","english_horn-mp3","fiddle-mp3","flute-mp3","french_horn-mp3","fretless_bass-mp3","fx_1_rain-mp3","fx_2_soundtrack-mp3","fx_3_crystal-mp3","fx_4_atmosphere-mp3","fx_5_brightness-mp3","fx_6_goblins-mp3","fx_7_echoes-mp3","fx_8_scifi-mp3","glockenspiel-mp3","guitar_fret_noise-mp3","guitar_harmonics-mp3","gunshot-mp3","harmonica-mp3","harpsichord-mp3","helicopter-mp3","honkytonk_piano-mp3","kalimba-mp3","koto-mp3","lead_1_square-mp3","lead_2_sawtooth-mp3","lead_3_calliope-mp3","lead_4_chiff-mp3","lead_5_charang-mp3","lead_6_voice-mp3","lead_7_fifths-mp3","lead_8_bass__lead-mp3","marimba-mp3","melodic_tom-mp3","music_box-mp3","muted_trumpet-mp3","oboe-mp3","ocarina-mp3","orchestra_hit-mp3","orchestral_harp-mp3","overdriven_guitar-mp3","pad_1_new_age-mp3","pad_2_warm-mp3","pad_3_polysynth-mp3","pad_4_choir-mp3","pad_5_bowed-mp3","pad_6_metallic-mp3","pad_7_halo-mp3","pad_8_sweep-mp3","pan_flute-mp3","percussive_organ-mp3","piccolo-mp3","pizzicato_strings-mp3","recorder-mp3","reed_organ-mp3","reverse_cymbal-mp3","rock_organ-mp3","seashore-mp3","shakuhachi-mp3","shamisen-mp3","shanai-mp3","sitar-mp3","slap_bass_1-mp3","slap_bass_2-mp3","soprano_sax-mp3","steel_drums-mp3","string_ensemble_1-mp3","string_ensemble_2-mp3","synth_bass_1-mp3","synth_bass_2-mp3","synth_brass_1-mp3","synth_brass_2-mp3","synth_choir-mp3","synth_drum-mp3","synth_strings_1-mp3","synth_strings_2-mp3","taiko_drum-mp3","tango_accordion-mp3","telephone_ring-mp3","tenor_sax-mp3","timpani-mp3","tinkle_bell-mp3","tremolo_strings-mp3","trombone-mp3","trumpet-mp3","tuba-mp3","tubular_bells-mp3","vibraphone-mp3","viola-mp3","violin-mp3","voice_oohs-mp3","whistle-mp3","woodblock-mp3","xylophone-mp3"],uS=t=>t&&t.length>1?t.replaceAll("_"," ").replace("-mp3",""):"",lS=oS.map((t=>uS(t))),cS=["A","Ab","B","Bb","C","D","Db","E","Eb","F","G","Gb"],hS=["Ab","Bb","Db","Eb","Gb"],pS=["A","B","C","D","E","F","G"],dS=()=>oS[Math.floor(Math.random()*oS.length)];let fS,mS,gS,yS,bS,xS,wS,vS,IS,kS,NS=0,SS=!1;const CS=()=>bS,ES=()=>{const t=bS.gain.value+.1*(NS-bS.gain.value);bS.gain.setValueAtTime(t,fS.currentTime),bS.gain.value===NS||requestAnimationFrame(ES)};const TS=(t="mp3",e=".")=>{const n=[];for(let r=0;r<cS.length;++r){const s=cS[r];"A"===s&&n.push(`A0${e}${t}`);for(let r=1;r<8;++r)n.push(`${s}${r}${e}${t}`);"C"===s&&n.push(`C8${e}${t}`)}return n},_S=TS("",""),$S={};_S.forEach((t=>{$S[t]=t})),console.error({BANKS:cS,NOTE_NAMES:_S,NOTE_NAMES_FRIENDLY:$S});const AS=(t="alto_sax-mp3",e="./FluidR3_GM")=>{const n=`${e}/${t}`;return TS().map((t=>async function(t){const e=await fetch(t),n=await e.arrayBuffer();return await fS.decodeAudioData(n)}(`${n}/${t}`)))},RS="hsl(196, 18%, 33%)",MS={dots:"red",mouth:"rgba(255,0,0,0.5)",mouthClosed:"rgba(255,0,0,0.2)",lipsUpperInner:"pink",lipsLowerInner:"pink",midwayBetweenEyes:"blue",leftEyeLower0:"red",rightEyeLower0:"red",leftEyeIris:"yellow",rightEyeIris:"yellow"};let DS,OS,FS;const LS=(t,e=200)=>{let n=null,r=-1;const s=function(t,e){let n;return(...r)=>(clearTimeout(n),n=setTimeout((()=>t(...r)),e),n)}((e=>{t.innerHTML=e}),e);return t?a=>{n!=a&&(n=a,0===e?(clearTimeout(r),t.innerHTML=a):r=s(a))}:null};const BS=t=>{if("string"==typeof t){const e=t.toLowerCase();return"true"===e||"1"===e||"false"!==e&&"0"!==e&&t}return Array.isArray(t)?t.toString():data},zS=()=>{const t=fS.createOscillator(),e=fS.createOscillator(),n=fS.createGain(),r=fS.createGain();t.type="triangle",e.type="sine";return t.connect(n),e.connect(r),n.connect(CS()),r.connect(CS()),(s=.05,a=255,i=.01,o=.5)=>{const u=fS.currentTime;n.gain.cancelScheduledValues(u),r.gain.cancelScheduledValues(u),t.frequency.cancelScheduledValues(u),e.frequency.cancelScheduledValues(u),n.gain.setValueAtTime(1,u),n.gain.exponentialRampToValueAtTime(1e-7,u+s),r.gain.setValueAtTime(1,fS.currentTime),r.gain.exponentialRampToValueAtTime(1e-7,u+s),t.frequency.setValueAtTime(120,fS.currentTime),t.frequency.exponentialRampToValueAtTime(i,u+s),e.frequency.setValueAtTime(50,fS.currentTime),e.frequency.exponentialRampToValueAtTime(i,u+s);try{t.start(u),e.start(u)}catch(t){}}},PS=(t=2)=>((t,e=5)=>{const n=[];for(let r=0;r<e;++r){const e=t();n.push(e)}let r=0;return()=>{r=r+1<e?r+1:0,n[r].apply(null,arguments)}})(zS,t),VS=()=>{const t=PS(),e=(()=>{const t=fS.createGain(),e=fS.createBiquadFilter();e.type="bandpass",e.frequency.value=1e4;const n=fS.createBiquadFilter();n.type="highpass",n.frequency.value=7e3;const r=[2,3,4.16,5.43,6.79,8.21].map((t=>{const n=fS.createOscillator();return n.type="square",n.frequency.value=40*t,n.connect(e),n}));return e.connect(n),n.connect(t),t.connect(CS()),(e=.05)=>{const n=fS.currentTime;t.gain.cancelScheduledValues(n),r.forEach((t=>t.frequency.cancelScheduledValues(n))),t.gain.setValueAtTime(1,n),t.gain.exponentialRampToValueAtTime(1e-7,n+e);try{r.forEach((t=>t.start(n)))}catch(t){}}})();return{kick:t,snare:(()=>{const t=fS.createOscillator(),e=fS.createGain(),n=fS.createGain(),r=fS.createBufferSource(),s=fS.createBuffer(1,4096,fS.sampleRate),a=fS.createBiquadFilter();a.type="highpass",t.type="triangle",t.frequency.value=100;const i=s.getChannelData(0);for(var o=0;o<4096;o++)i[o]=Math.random();return r.buffer=s,r.loop=!0,t.connect(e),e.connect(CS()),r.connect(a),a.connect(n),n.connect(CS()),(s=.2)=>{const i=fS.currentTime;n.gain.cancelScheduledValues(i),n.gain.setValueAtTime(1,i),n.gain.exponentialRampToValueAtTime(1e-7,i+s),e.gain.cancelScheduledValues(i),e.gain.setValueAtTime(1e-7,i),e.gain.exponentialRampToValueAtTime(1e-7,i+s/2),a.frequency.cancelScheduledValues(i),a.frequency.setValueAtTime(100,i),a.frequency.linearRampToValueAtTime(1e3,i+s);try{t.start(i),r.start(i)}catch(t){}}})(),hat:e,cowbell:(()=>{const t=fS.createGain(),e=fS.createBiquadFilter();e.type="bandpass",e.frequency.value=2640,e.Q.value=3.5;const n=[587,845].map((t=>{const n=fS.createOscillator();return n.type="triangle",n.frequency.value=1*t,n.connect(e),n}));return e.connect(t),t.connect(CS()),(e=.05)=>{const r=fS.currentTime;t.gain.cancelScheduledValues(r),n.forEach((t=>t.frequency.cancelScheduledValues(r))),t.gain.setValueAtTime(1,r),t.gain.exponentialRampToValueAtTime(1e-7,r+e);try{n.forEach((t=>t.start(r)))}catch(t){}}})(),clack:(()=>{const t=fS.createGain(),e=fS.createBiquadFilter();e.type="bandpass",e.frequency.value=2640,e.Q.value=3.5;const n=fS.createBiquadFilter();n.type="highpass",n.frequency.value=7e3;const r=[587,845].map((t=>{const n=fS.createOscillator();return n.type="triangle",n.frequency.value=1*t,n.connect(e),n}));return e.connect(n),n.connect(t),t.connect(CS()),(e=.05)=>{const n=fS.currentTime;t.gain.cancelScheduledValues(n),r.forEach((t=>t.frequency.cancelScheduledValues(n))),t.gain.setValueAtTime(1,n),t.gain.exponentialRampToValueAtTime(1e-7,n+e);try{r.forEach((t=>t.start(n)))}catch(t){}}})()}},WS=window.AudioContext||window.webkitAudioContext;let US=new Worker("timing.requestframe.worker.js"),GS=-1,HS=1,jS=null,qS=!1;const KS=()=>jS.currentTime,XS=t=>{HS=t,US.postMessage({command:"update",interval:HS,time:KS()})};var YS=it();class JS{constructor(t=!1){this.eventMap={},this.eventsSuspended=1==t}addListener(t,e,n={}){if("string"==typeof t&&t.length<1||t instanceof String&&t.length<1||"string"!=typeof t&&!(t instanceof String)&&t!==JS.ANY_EVENT)throw new TypeError("The 'event' parameter must be a string or EventEmitter.ANY_EVENT.");if("function"!=typeof e)throw new TypeError("The callback must be a function.");const r=new ZS(t,this,e,n);return this.eventMap[t]||(this.eventMap[t]=[]),n.prepend?this.eventMap[t].unshift(r):this.eventMap[t].push(r),r}addOneTimeListener(t,e,n={}){n.remaining=1,this.addListener(t,e,n)}static get ANY_EVENT(){return Symbol.for("Any event")}hasListener(t,e){return void 0===t?!!(this.eventMap[JS.ANY_EVENT]&&this.eventMap[JS.ANY_EVENT].length>0)||Object.entries(this.eventMap).some((([,t])=>t.length>0)):!!(this.eventMap[t]&&this.eventMap[t].length>0)&&(e instanceof ZS?this.eventMap[t].filter((t=>t===e)).length>0:"function"==typeof e?this.eventMap[t].filter((t=>t.callback===e)).length>0:null==e)}get eventNames(){return Object.keys(this.eventMap)}getListeners(t){return this.eventMap[t]||[]}suspendEvent(t){this.getListeners(t).forEach((t=>{t.suspended=!0}))}unsuspendEvent(t){this.getListeners(t).forEach((t=>{t.suspended=!1}))}getListenerCount(t){return this.getListeners(t).length}emit(t,...e){if("string"!=typeof t&&!(t instanceof String))throw new TypeError("The 'event' parameter must be a string.");if(this.eventsSuspended)return;let n=[],r=this.eventMap[JS.ANY_EVENT]||[];return this.eventMap[t]&&(r=r.concat(this.eventMap[t])),r.forEach((t=>{if(t.suspended)return;let r=[...e];Array.isArray(t.arguments)&&(r=r.concat(t.arguments)),t.remaining>0&&(n.push(t.callback.apply(t.context,r)),t.count++),--t.remaining<1&&t.remove()})),n}removeListener(t,e,n={}){if(void 0===t)return void(this.eventMap={});if(!this.eventMap[t])return;let r=this.eventMap[t].filter((t=>e&&t.callback!==e||n.remaining&&n.remaining!==t.remaining||n.context&&n.context!==t.context));r.length?this.eventMap[t]=r:delete this.eventMap[t]}async waitFor(t,e={}){return e.duration=parseInt(e.duration),(isNaN(e.duration)||e.duration<=0)&&(e.duration=1/0),new Promise(((n,r)=>{let s,a=this.addListener(t,(()=>{clearTimeout(s),n()}),{remaining:1});e.duration!==1/0&&(s=setTimeout((()=>{a.remove(),r("The duration expired before the event was emitted.")}),e.duration))}))}get eventCount(){return Object.keys(this.eventMap).length}}class ZS{constructor(t,e,n,r={}){if("string"!=typeof t&&!(t instanceof String)&&t!==JS.ANY_EVENT)throw new TypeError("The 'event' parameter must be a string or EventEmitter.ANY_EVENT.");if(!e)throw new ReferenceError("The 'target' parameter is mandatory.");if("function"!=typeof n)throw new TypeError("The 'callback' must be a function.");void 0===r.arguments||Array.isArray(r.arguments)||(r.arguments=[r.arguments]),(r=Object.assign({context:e,remaining:1/0,arguments:void 0,duration:1/0},r)).duration!==1/0&&setTimeout((()=>this.remove()),r.duration),this.event=t,this.target=e,this.callback=n,this.context=r.context,this.remaining=parseInt(r.remaining)>=1?parseInt(r.remaining):1/0,this.count=0,this.arguments=r.arguments,this.suspended=!1}remove(){this.target.removeListener(this.event,this.callback,{context:this.context,remaining:this.remaining})}}class QS extends JS{constructor(t,e){super(),this.input=t,this.number=e}destroy(){this.input=null,this.number=null,this.removeListener()}_parseEvent(t){let e=null;t.data[0]!==fC.MIDI_SYSTEM_MESSAGES.sysex&&(e=t.data.slice(1));let n={target:this,data:Array.from(t.data),rawData:t.data,statusByte:t.data[0],dataBytes:e,timestamp:t.timeStamp,type:"midimessage"};this.emit("midimessage",n),this._parseEventForStandardMessages(t)}getStructuredMidiMessage(t){return{command:t[0]>>4,data1:t.length>1?t[1]:void 0,data2:t.length>2?t[2]:void 0}}_parseEventForStandardMessages(t){let{command:e,data1:n,data2:r}=this.getStructuredMidiMessage(t.data),s={target:this,data:Array.from(t.data),rawData:t.data,timestamp:t.timeStamp};e===fC.MIDI_CHANNEL_VOICE_MESSAGES.noteoff||e===fC.MIDI_CHANNEL_VOICE_MESSAGES.noteon&&0===r?(s.type="noteoff",s.note=new rC(n,{rawRelease:r}),s.release=s.note.release,s.rawRelease=s.note.rawRelease):e===fC.MIDI_CHANNEL_VOICE_MESSAGES.noteon?(s.type="noteon",s.note=new rC(n,{rawAttack:r}),s.attack=s.note.attack,s.rawAttack=s.note.rawAttack):e===fC.MIDI_CHANNEL_VOICE_MESSAGES.keyaftertouch?(s.type="keyaftertouch",s.note=new rC(n),s.value=r/127,s.rawValue=r):e===fC.MIDI_CHANNEL_VOICE_MESSAGES.controlchange&&n>=0&&n<=119?(s.type="controlchange",s.controller={number:n,name:this.getCcNameByNumber(n)},s.value=r/127,s.rawValue=r):e===fC.MIDI_CHANNEL_VOICE_MESSAGES.channelmode&&n>=120&&n<=127?(s.type="channelmode",s.controller={number:n,name:this.getChannelModeByNumber(n)},s.value=r,this._parseChannelModeMessage(t)):e===fC.MIDI_CHANNEL_VOICE_MESSAGES.programchange?(s.type="programchange",s.value=n+1,s.rawValue=n):e===fC.MIDI_CHANNEL_VOICE_MESSAGES.channelaftertouch?(s.type="channelaftertouch",s.value=n/127,s.rawValue=n):e===fC.MIDI_CHANNEL_VOICE_MESSAGES.pitchbend?(s.type="pitchbend",s.value=((r<<7)+n-8192)/8192,s.rawValue=(r<<7)+n):s.type="unknownmessage",this.emit(s.type,s)}getChannelModeByNumber(t){if(fC.validation&&(t=Math.floor(t)),!(t>=120&&t<=127))return!1;for(let e in fC.MIDI_CHANNEL_MODE_MESSAGES)if(fC.MIDI_CHANNEL_MODE_MESSAGES.hasOwnProperty(e)&&t===fC.MIDI_CHANNEL_MODE_MESSAGES[e])return e}_parseChannelModeMessage(t){let e,n;t.data.length>1&&(e=t.data[1],n=t.data.length>2?t.data[2]:void 0);let r={target:this,data:Array.from(t.data),rawData:t.data,timestamp:t.timeStamp,type:this.getChannelModeByNumber(e)};"localcontrol"===r.type&&(r.value=127===n),"omnimodeon"===r.type?(r.type="omnimode",r.value=!0):"omnimodeoff"===r.type&&(r.type="omnimode",r.value=!1),"monomodeon"===r.type?(r.type="monomode",r.value=!0):"polymodeon"===r.type&&(r.type="monomode",r.value=!1),this.emit(r.type,r)}getCcNameByNumber(t){if(fC.validation&&!((t=parseInt(t))>=0&&t<=119))throw new RangeError("Invalid control change number.");for(let e in fC.MIDI_CONTROL_CHANGE_MESSAGES)if(fC.MIDI_CONTROL_CHANGE_MESSAGES.hasOwnProperty(e)&&t===fC.MIDI_CONTROL_CHANGE_MESSAGES[e])return e;return!1}}class tC extends JS{constructor(t){super(),this._midiInput=t,this.channels=[];for(let t=1;t<=16;t++)this.channels[t]=new QS(this,t);this._midiInput.onstatechange=this._onStateChange.bind(this),this._midiInput.onmidimessage=this._onMidiMessage.bind(this)}async destroy(){this.removeListener(),this.channels.forEach((t=>t.destroy())),this.channels=[],this._midiInput.onstatechange=null,this._midiInput.onmidimessage=null,await this.close(),this._midiInput=null}_onStateChange(t){let e={timestamp:fC.time,target:this};"open"===t.port.connection?(e.type="opened",this.emit("opened",e)):"closed"===t.port.connection&&"connected"===t.port.state?(e.type="closed",this.emit("closed",e)):"closed"===t.port.connection&&"disconnected"===t.port.state?(e.type="disconnected",e.target={connection:t.port.connection,id:t.port.id,manufacturer:t.port.manufacturer,name:t.port.name,state:t.port.state,type:t.port.type},this.emit("disconnected",e)):"pending"===t.port.connection&&"disconnected"===t.port.state||console.warn("This statechange event was not caught: ",t.port.connection,t.port.state)}_onMidiMessage(t){let e=null;t.data[0]!==fC.MIDI_SYSTEM_MESSAGES.sysex&&(e=t.data.slice(1));let n={target:this,data:Array.from(t.data),rawData:t.data,statusByte:t.data[0],dataBytes:e,timestamp:t.timeStamp,type:"midimessage"};if(this.emit("midimessage",n),t.data[0]<240){let e=1+(15&t.data[0]);this.channels[e]._parseEvent(t)}else t.data[0]<=255&&this._parseEvent(t)}_parseEvent(t){let e=t.data[0];var n={target:this,data:Array.from(t.data),rawData:t.data,timestamp:t.timeStamp};e===fC.MIDI_SYSTEM_MESSAGES.sysex?n.type="sysex":e===fC.MIDI_SYSTEM_MESSAGES.timecode?n.type="timecode":e===fC.MIDI_SYSTEM_MESSAGES.songposition?n.type="songposition":e===fC.MIDI_SYSTEM_MESSAGES.songselect?(n.type="songselect",n.song=t.data[1]+1):e===fC.MIDI_SYSTEM_MESSAGES.tunerequest?n.type="tunerequest":e===fC.MIDI_SYSTEM_MESSAGES.clock?n.type="clock":e===fC.MIDI_SYSTEM_MESSAGES.start?n.type="start":e===fC.MIDI_SYSTEM_MESSAGES.continue?n.type="continue":e===fC.MIDI_SYSTEM_MESSAGES.stop?n.type="stop":e===fC.MIDI_SYSTEM_MESSAGES.activesensing?n.type="activesensing":e===fC.MIDI_SYSTEM_MESSAGES.reset?n.type="reset":n.type="unknownmidimessage",this.emit(n.type,n)}async open(){try{return await this._midiInput.open(),Promise.resolve(this)}catch(t){return Promise.reject(t)}}async close(){return this._midiInput?this._midiInput.close():Promise.resolve()}getChannelModeByNumber(){fC.validation&&console.warn("The 'getChannelModeByNumber()' method has been moved to the 'InputChannel' class.")}addListener(t,e,n){if(fC.validation){if("function"==typeof n){let t=null!=e?[].concat(e):void 0;e=n,n={channels:t}}if(void 0!==fC.MIDI_CHANNEL_VOICE_MESSAGES[t]&&void 0===n.channels)throw new Error("For channel-specific events, 'options.channels' must be defined.")}let r=[];return void 0===fC.MIDI_CHANNEL_VOICE_MESSAGES[t]?r.push(super.addListener(t,e,n)):fC.sanitizeChannels(n.channels).forEach((s=>{r.push(this.channels[s].addListener(t,e,n))})),r}addOneTimeListener(t,e,n={}){return n.remaining=1,this.addListener(t,e,n)}on(t,e,n,r){return this.addListener(t,e,n,r)}hasListener(t,e,n={}){if(fC.validation){if("function"==typeof n){let t=[].concat(e);e=n,n={channels:t}}if(void 0!==fC.MIDI_CHANNEL_VOICE_MESSAGES[t]&&void 0===n.channels)throw new Error("For channel-specific events, 'options.channels' must be defined.")}return void 0!==fC.MIDI_CHANNEL_VOICE_MESSAGES[t]?fC.sanitizeChannels(n.channels).every((n=>this.channels[n].hasListener(t,e))):super.hasListener(t,e)}removeListener(t,e,n={}){if(fC.validation&&"function"==typeof n){let t=[].concat(e);e=n,n={channels:t}}if(void 0===n.channels&&(n.channels=[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]),null==t)return fC.sanitizeChannels(n.channels).forEach((t=>this.channels[t].removeListener())),super.removeListener();void 0!==fC.MIDI_CHANNEL_VOICE_MESSAGES[t]?fC.sanitizeChannels(n.channels).forEach((r=>{this.channels[r].removeListener(t,e,n)})):super.removeListener(t,e,n)}get name(){return this._midiInput.name}get id(){return this._midiInput.id}get connection(){return this._midiInput.connection}get manufacturer(){return this._midiInput.manufacturer}get state(){return this._midiInput.state}get type(){return this._midiInput.type}get nrpnEventsEnabled(){return fC.validation&&console.warn("The 'nrpnEventsEnabled' property has been moved to the 'InputChannel' class."),!1}}class eC extends JS{constructor(t,e){super(),this.output=t,this.number=e}destroy(){this.output=null,this.number=null,this.removeListener()}send(t,e=[],n={}){return this.output.send(t,e,n),this}setKeyAftertouch(t,e,n={}){if(fC.validation){if(n.useRawValue&&(n.rawValue=n.useRawValue),isNaN(parseFloat(e)))throw new RangeError("Invalid key aftertouch value.");if(n.rawValue){if(!(e>=0&&e<=127&&Number.isInteger(e)))throw new RangeError("Key aftertouch raw value must be an integer between 0 and 127.")}else if(!(e>=0&&e<=1))throw new RangeError("Key aftertouch value must be a float between 0 and 1.")}return n.rawValue||(e=Math.round(127*e)),fC.getValidNoteArray(t,n).forEach((t=>{this.send((fC.MIDI_CHANNEL_VOICE_MESSAGES.keyaftertouch<<4)+(this.number-1),[t.number,e],fC.convertToTimestamp(n.time))})),this}sendControlChange(t,e,n={}){if("string"==typeof t&&(t=fC.MIDI_CONTROL_CHANGE_MESSAGES[t]),fC.validation){if(void 0===t)throw new TypeError("Control change must be identified with a valid name or an integer between 0 and 119.");if(!Number.isInteger(t)||!(t>=0&&t<=119))throw new TypeError("Control change number must be an integer between 0 and 119.");if(!Number.isInteger(e)||!(e>=0&&e<=127))throw new TypeError("Control change value must be an integer between 0 and 127")}return this.send((fC.MIDI_CHANNEL_VOICE_MESSAGES.controlchange<<4)+(this.number-1),[t,e],fC.convertToTimestamp(n.time)),this}_selectNonRegisteredParameter(t,e={}){return this.sendControlChange(99,t[0],e),this.sendControlChange(98,t[1],e),this}_deselectRegisteredParameter(t={}){return this.sendControlChange(101,127,t),this.sendControlChange(100,127,t),this}_deselectNonRegisteredParameter(t={}){return this.sendControlChange(101,127,t),this.sendControlChange(100,127,t),this}_selectRegisteredParameter(t,e={}){return this.sendControlChange(101,t[0],e),this.sendControlChange(100,t[1],e),this}_setCurrentParameter(t,e={}){return t=[].concat(t),this.sendControlChange(6,t[0],e),t.length<2||this.sendControlChange(38,t[1],e),this}decrementRegisteredParameter(t,e={}){if(Array.isArray(t)||(t=fC.MIDI_REGISTERED_PARAMETER[t]),fC.validation){if(void 0===t)throw new TypeError("The specified registered parameter is invalid.");let e=!1;if(Object.getOwnPropertyNames(fC.MIDI_REGISTERED_PARAMETER).forEach((n=>{fC.MIDI_REGISTERED_PARAMETER[n][0]===t[0]&&fC.MIDI_REGISTERED_PARAMETER[n][1]===t[1]&&(e=!0)})),!e)throw new TypeError("The specified registered parameter is invalid.")}return this._selectRegisteredParameter(t,e),this.sendControlChange(97,0,e),this._deselectRegisteredParameter(e),this}incrementRegisteredParameter(t,e={}){if(Array.isArray(t)||(t=fC.MIDI_REGISTERED_PARAMETER[t]),fC.validation){if(void 0===t)throw new TypeError("The specified registered parameter is invalid.");let e=!1;if(Object.getOwnPropertyNames(fC.MIDI_REGISTERED_PARAMETER).forEach((n=>{fC.MIDI_REGISTERED_PARAMETER[n][0]===t[0]&&fC.MIDI_REGISTERED_PARAMETER[n][1]===t[1]&&(e=!0)})),!e)throw new TypeError("The specified registered parameter is invalid.")}return this._selectRegisteredParameter(t,e),this.sendControlChange(96,0,e),this._deselectRegisteredParameter(e),this}playNote(t,e={}){if(this.sendNoteOn(t,e),e.duration>0&&isFinite(String(e.duration).trim()||NaN)){let n={time:fC.convertToTimestamp(e.time)+e.duration,release:e.release,rawRelease:e.rawRelease};this.sendNoteOff(t,n)}return this}sendNoteOff(t,e={}){if(fC.validation){if(null!=e.rawRelease&&!(e.rawRelease>=0&&e.rawRelease<=127))throw new RangeError("The 'rawRelease' option must be an integer between 0 and 127");if(null!=e.release&&!(e.release>=0&&e.release<=1))throw new RangeError("The 'release' option must be an number between 0 and 1");e.rawVelocity&&(e.rawRelease=e.velocity,console.warn("The 'rawVelocity' option is deprecated. Use 'rawRelease' instead.")),e.velocity&&(e.release=e.velocity,console.warn("The 'velocity' option is deprecated. Use 'attack' instead."))}let n=64;null!=e.rawRelease?n=e.rawRelease:isNaN(e.release)||(n=Math.round(127*e.release));let r={rawRelease:parseInt(n)};return fC.getValidNoteArray(t,r).forEach((t=>{this.send((fC.MIDI_CHANNEL_VOICE_MESSAGES.noteoff<<4)+(this.number-1),[t.number,t.rawRelease],fC.convertToTimestamp(e.time))})),this}stopNote(t,e={}){return this.sendNoteOff(t,e)}sendNoteOn(t,e={}){if(fC.validation){if(null!=e.rawAttack&&!(e.rawAttack>=0&&e.rawAttack<=127))throw new RangeError("The 'rawAttack' option must be an integer between 0 and 127");if(null!=e.attack&&!(e.attack>=0&&e.attack<=1))throw new RangeError("The 'attack' option must be an number between 0 and 1");e.rawVelocity&&(e.rawAttack=e.velocity,e.rawRelease=e.release,console.warn("The 'rawVelocity' option is deprecated. Use 'rawAttack' or 'rawRelease'.")),e.velocity&&(e.attack=e.velocity,console.warn("The 'velocity' option is deprecated. Use 'attack' instead."))}let n=64;null!=e.rawAttack?n=e.rawAttack:isNaN(e.attack)||(n=Math.round(127*e.attack));let r={rawAttack:n};return fC.getValidNoteArray(t,r).forEach((t=>{this.send((fC.MIDI_CHANNEL_VOICE_MESSAGES.noteon<<4)+(this.number-1),[t.number,t.rawAttack],fC.convertToTimestamp(e.time))})),this}sendChannelMode(t,e,n={}){if("string"==typeof t&&(t=fC.MIDI_CHANNEL_MODE_MESSAGES[t]),fC.validation){if(void 0===t)throw new TypeError("Invalid channel mode message name or number.");if(isNaN(t)||!(t>=120&&t<=127))throw new TypeError("Invalid channel mode message number.");if(isNaN(parseInt(e))||e<0||e>127)throw new RangeError("Value must be an integer between 0 and 127.")}return this.send((fC.MIDI_CHANNEL_VOICE_MESSAGES.channelmode<<4)+(this.number-1),[t,e],fC.convertToTimestamp(n.time)),this}setOmniMode(t,e={}){return void 0===t||t?this.sendChannelMode("omnimodeon",0,e):this.sendChannelMode("omnimodeoff",0,e),this}setChannelAftertouch(t,e={}){if(fC.validation){if(isNaN(parseFloat(t)))throw new RangeError("Invalid channel aftertouch value.");if(e.rawValue){if(!(t>=0&&t<=127&&Number.isInteger(t)))throw new RangeError("Channel aftertouch raw value must be an integer between 0 and 127.")}else if(!(t>=0&&t<=1))throw new RangeError("Channel aftertouch value must be a float between 0 and 1.")}return this.send((fC.MIDI_CHANNEL_VOICE_MESSAGES.channelaftertouch<<4)+(this.number-1),[Math.round(127*t)],fC.convertToTimestamp(e.time)),this}setMasterTuning(t,e={}){if(t=parseFloat(t)||0,fC.validation&&!(t>-65&&t<64))throw new RangeError("The value must be a decimal number larger than -65 and smaller than 64.");let n=Math.floor(t)+64,r=t-Math.floor(t);r=Math.round((r+1)/2*16383);let s=r>>7&127,a=127&r;return this.setRegisteredParameter("channelcoarsetuning",n,e),this.setRegisteredParameter("channelfinetuning",[s,a],e),this}setModulationRange(t,e,n={}){if(fC.validation){if(!Number.isInteger(t)||!(t>=0&&t<=127))throw new RangeError("The semitones value must be an integer between 0 and 127.");if(!(null==e||Number.isInteger(e)&&e>=0&&e<=127))throw new RangeError("If specified, the cents value must be an integer between 0 and 127.")}return e>=0&&e<=127||(e=0),this.setRegisteredParameter("modulationrange",[t,e],n),this}setNonRegisteredParameter(t,e,n={}){if(e=[].concat(e),fC.validation){if(!Array.isArray(t)||!Number.isInteger(t[0])||!Number.isInteger(t[1]))throw new TypeError("The specified NRPN is invalid.");if(!(t[0]>=0&&t[0]<=127))throw new RangeError("The first byte of the NRPN must be between 0 and 127.");if(!(t[1]>=0&&t[1]<=127))throw new RangeError("The second byte of the NRPN must be between 0 and 127.");e.forEach((t=>{if(!(t>=0&&t<=127))throw new RangeError("The data bytes of the NRPN must be between 0 and 127.")}))}return this._selectNonRegisteredParameter(t,n),this._setCurrentParameter(e,n),this._deselectNonRegisteredParameter(n),this}setPitchBend(t,e={}){if(fC.validation)if(e.rawValue&&Array.isArray(t)){if(!(t[0]>=0&&t[0]<=127))throw new RangeError("The pitch bend MSB must be an integer between 0 and 127.");if(!(t[1]>=0&&t[1]<=127))throw new RangeError("The pitch bend LSB must be an integer between 0 and 127.")}else if(e.rawValue&&!Array.isArray(t)){if(!(t>=0&&t<=127))throw new RangeError("The pitch bend MSB must be an integer between 0 and 127.")}else{if(isNaN(t)||null===t)throw new RangeError("Invalid pitch bend value.");if(!(t>=-1&&t<=1))throw new RangeError("The pitch bend MSB must be an integer between 0 and 127.")}let n=0,r=0;if(e.rawValue&&Array.isArray(t))n=t[0],r=t[1];else if(e.rawValue&&!Array.isArray(t))n=t;else{let e=Math.round((t+1)/2*16383);n=e>>7&127,r=127&e}return this.send((fC.MIDI_CHANNEL_VOICE_MESSAGES.pitchbend<<4)+(this.number-1),[r,n],fC.convertToTimestamp(e.time)),this}setPitchBendRange(t,e,n={}){if(fC.validation){if(!Number.isInteger(t)||!(t>=0&&t<=127))throw new RangeError("The semitones value must be an integer between 0 and 127.");if(!Number.isInteger(e)||!(e>=0&&e<=127))throw new RangeError("The cents value must be an integer between 0 and 127.")}return this.setRegisteredParameter("pitchbendrange",[t,e],n),this}setProgram(t,e={}){if(t=parseInt(t)||1,fC.validation&&!(t>=1&&t<=128))throw new RangeError("The program number must be between 1 and 128.");return this.send((fC.MIDI_CHANNEL_VOICE_MESSAGES.programchange<<4)+(this.number-1),[t-1],fC.convertToTimestamp(e.time)),this}setRegisteredParameter(t,e,n={}){if(Array.isArray(t)||(t=fC.MIDI_REGISTERED_PARAMETER[t]),fC.validation){if(!Number.isInteger(t[0])||!Number.isInteger(t[1]))throw new TypeError("The specified NRPN is invalid.");if(!(t[0]>=0&&t[0]<=127))throw new RangeError("The first byte of the RPN must be between 0 and 127.");if(!(t[1]>=0&&t[1]<=127))throw new RangeError("The second byte of the RPN must be between 0 and 127.");[].concat(e).forEach((t=>{if(!(t>=0&&t<=127))throw new RangeError("The data bytes of the RPN must be between 0 and 127.")}))}return this._selectRegisteredParameter(t,n),this._setCurrentParameter(e,n),this._deselectRegisteredParameter(n),this}setTuningBank(t,e={}){if(fC.validation&&(!Number.isInteger(t)||!(t>=1&&t<=128)))throw new RangeError("The tuning bank number must be between 1 and 128.");return this.setRegisteredParameter("tuningbank",t-1,e),this}setTuningProgram(t,e={}){if(fC.validation&&(!Number.isInteger(t)||!(t>=1&&t<=128)))throw new RangeError("The tuning program number must be between 1 and 128.");return this.setRegisteredParameter("tuningprogram",t-1,e),this}setLocalControl(t,e={}){return t?this.sendChannelMode("localcontrol",127,e):this.sendChannelMode("localcontrol",0,e)}turnNotesOff(t={}){return this.sendChannelMode("allnotesoff",0,t)}turnSoundOff(t={}){return this.sendChannelMode("allsoundoff",0,t)}resetAllControllers(t={}){return this.sendChannelMode("resetallcontrollers",0,t)}setPolyphonicMode(t,e={}){return"mono"===t?this.sendChannelMode("monomodeon",0,e):this.sendChannelMode("polymodeon",0,e)}}class nC extends JS{constructor(t){if(super(),fC.validation&&(!t||"output"!==t.type))throw new TypeError("The supplied MIDIOutput is invalid.");this._midiOutput=t,this.channels=[];for(let t=1;t<=16;t++)this.channels[t]=new eC(this,t);this._midiOutput.onstatechange=this._onStateChange.bind(this)}async destroy(){this.removeListener(),this.channels.forEach((t=>t.destroy())),this.channels=[],this._midiOutput.onstatechange=null,await this.close(),this._midiOutput=null}_onStateChange(t){let e={timestamp:fC.time};"open"===t.port.connection?(e.type="opened",e.target=this,this.emit("opened",e)):"closed"===t.port.connection&&"connected"===t.port.state?(e.type="closed",e.target=this,this.emit("closed",e)):"closed"===t.port.connection&&"disconnected"===t.port.state?(e.type="disconnected",e.target={connection:t.port.connection,id:t.port.id,manufacturer:t.port.manufacturer,name:t.port.name,state:t.port.state,type:t.port.type},this.emit("disconnected",e)):"pending"===t.port.connection&&"disconnected"===t.port.state||console.warn("This statechange event was not caught:",t.port.connection,t.port.state)}async open(){try{return await this._midiOutput.open(),Promise.resolve(this)}catch(t){return Promise.reject(t)}}async close(){this._midiOutput?await this._midiOutput.close():await Promise.resolve()}send(t,e=[],n={}){if(Array.isArray(e)||(e=[e]),fC.validation){if(!(parseInt(t)>=128&&parseInt(t)<=255))throw new RangeError("The status must be an integer between 128 and 255.");e.forEach((t=>{if(t=parseInt(t),isNaN(t))throw new TypeError("Data bytes must be integers.");if(!(parseInt(t)>=0&&parseInt(t)<=255))throw new RangeError("The data bytes must be integers between 0 and 255.")})),"number"==typeof n&&(n={time:n})}return this._midiOutput.send([t].concat(e),fC.convertToTimestamp(n.time)),this}sendSysex(t,e,n={}){return e=(t=[].concat(t)).concat(e,fC.MIDI_SYSTEM_MESSAGES.sysexend),this.send(fC.MIDI_SYSTEM_MESSAGES.sysex,e,{time:n.time}),this}clear(){return this._midiOutput.clear?this._midiOutput.clear():fC.validation&&console.warn("The 'clear()' method has not yet been implemented in your environment."),this}sendTimecodeQuarterFrame(t,e={}){if(fC.validation&&(t=parseInt(t),isNaN(t)||!(t>=0&&t<=127)))throw new RangeError("The value must be an integer between 0 and 127.");return this.send(fC.MIDI_SYSTEM_MESSAGES.timecode,t,{time:e.time}),this}setSongPosition(t,e={}){var n=(t=Math.floor(t)||0)>>7&127,r=127&t;return this.send(fC.MIDI_SYSTEM_MESSAGES.songposition,[n,r],{time:e.time}),this}sendSongPosition(t,e={}){return fC.validation&&console.warn("The sendSongPosition() method has been deprecated. Use setSongPosition() instead."),this.setSongPosition(t,e)}setSong(t,e={}){if(fC.validation&&(t=parseInt(t),isNaN(t)||!(t>=1&&t<=128)))throw new RangeError("The program value must be between 1 and 128");return this.send(fC.MIDI_SYSTEM_MESSAGES.songselect,[t],{time:e.time}),this}sendSongSelect(t,e={}){return fC.validation&&console.warn("The sendSongSelect() method has been deprecated. Use setSong() instead."),this.setSong(t,e)}sendTuneRequest(t={}){return this.send(fC.MIDI_SYSTEM_MESSAGES.tunerequest,void 0,{time:t.time}),this}sendClock(t={}){return this.send(fC.MIDI_SYSTEM_MESSAGES.clock,void 0,{time:t.time}),this}sendStart(t={}){return this.send(fC.MIDI_SYSTEM_MESSAGES.start,void 0,{time:t.time}),this}sendContinue(t={}){return this.send(fC.MIDI_SYSTEM_MESSAGES.continue,void 0,{time:t.time}),this}sendStop(t={}){return this.send(fC.MIDI_SYSTEM_MESSAGES.stop,void 0,{time:t.time}),this}sendActiveSensing(t={}){return this.send(fC.MIDI_SYSTEM_MESSAGES.activesensing,[],{time:t.time}),this}sendReset(t={}){return this.send(fC.MIDI_SYSTEM_MESSAGES.reset,void 0,{time:t.time}),this}sendTuningRequest(t={}){return fC.validation&&console.warn("The sendTuningRequest() method has been deprecated. Use sendTuningRequest() instead."),this.sendTuneRequest(t)}setKeyAftertouch(t,e,n={},r={}){if(fC.validation&&(Array.isArray(e)||Number.isInteger(e)||"all"===e)){let t=e;e=n,(n=r).channels=t}return null==n.channels&&(n.channels="all"),fC.sanitizeChannels(n.channels).forEach((r=>{this.channels[r].setKeyAftertouch(t,e,n)})),this}sendKeyAftertouch(t,e,n,r={}){return fC.validation&&console.warn("The sendKeyAftertouch() method has been deprecated. Use setKeyAftertouch() instead."),r.channels=e,this.setKeyAftertouch(t,n,r)}sendControlChange(t,e,n={},r={}){if(fC.validation&&(Array.isArray(n)||Number.isInteger(n)||"all"===n)){let t=n;(n=r).channels=t}return null==n.channels&&(n.channels="all"),fC.sanitizeChannels(n.channels).forEach((r=>{this.channels[r].sendControlChange(t,e,n)})),this}setPitchBendRange(t,e,n={},r={}){if(fC.validation&&(Array.isArray(n)||Number.isInteger(n)||"all"===n)){let t=n;(n=r).channels=t}return null==n.channels&&(n.channels="all"),fC.sanitizeChannels(n.channels).forEach((r=>{this.channels[r].setPitchBendRange(t,e,n)})),this}setRegisteredParameter(t,e,n={},r={}){if(fC.validation&&(Array.isArray(n)||Number.isInteger(n)||"all"===n)){let t=n;(n=r).channels=t}return null==n.channels&&(n.channels="all"),fC.sanitizeChannels(n.channels).forEach((r=>{this.channels[r].setRegisteredParameter(t,e,n)})),this}setChannelAftertouch(t,e={},n={}){if(fC.validation&&(Array.isArray(e)||Number.isInteger(e)||"all"===e)){let t=e;(e=n).channels=t}return null==e.channels&&(e.channels="all"),fC.sanitizeChannels(e.channels).forEach((n=>{this.channels[n].setChannelAftertouch(t,e)})),this}sendChannelAftertouch(t,e,n={}){return fC.validation&&console.warn("The sendChannelAftertouch() method has been deprecated. Use setChannelAftertouch()."),n.channels=e,this.setChannelAftertouch(t,n)}setPitchBend(t,e={},n={}){if(fC.validation&&(Array.isArray(e)||Number.isInteger(e)||"all"===e)){let t=e;(e=n).channels=t}return null==e.channels&&(e.channels="all"),fC.sanitizeChannels(e.channels).forEach((n=>{this.channels[n].setPitchBend(t,e)})),this}sendPitchBend(t,e,n={}){return fC.validation&&console.warn("The sendPitchBend() method has been deprecated. Use setPitchBend() instead."),n.channels=e,this.setPitchBend(t,n)}setProgram(t,e={},n={}){if(fC.validation&&(Array.isArray(e)||Number.isInteger(e)||"all"===e)){let t=e;(e=n).channels=t}return null==e.channels&&(e.channels="all"),fC.sanitizeChannels(e.channels).forEach((n=>{this.channels[n].setProgram(t,e)})),this}sendProgramChange(t,e,n={}){return fC.validation&&console.warn("The sendProgramChange() method has been deprecated. Use setProgram() instead."),n.channels=e,this.setProgram(t,n)}setModulationRange(t,e,n={},r={}){if(fC.validation&&(Array.isArray(n)||Number.isInteger(n)||"all"===n)){let t=n;(n=r).channels=t}return null==n.channels&&(n.channels="all"),fC.sanitizeChannels(n.channels).forEach((r=>{this.channels[r].setModulationRange(t,e,n)})),this}setMasterTuning(t,e={},n={}){if(fC.validation&&(Array.isArray(e)||Number.isInteger(e)||"all"===e)){let t=e;(e=n).channels=t}return null==e.channels&&(e.channels="all"),fC.sanitizeChannels(e.channels).forEach((n=>{this.channels[n].setMasterTuning(t,e)})),this}setTuningProgram(t,e={},n={}){if(fC.validation&&(Array.isArray(e)||Number.isInteger(e)||"all"===e)){let t=e;(e=n).channels=t}return null==e.channels&&(e.channels="all"),fC.sanitizeChannels(e.channels).forEach((n=>{this.channels[n].setTuningProgram(t,e)})),this}setTuningBank(t,e={},n={}){if(fC.validation&&(Array.isArray(e)||Number.isInteger(e)||"all"===e)){let t=e;(e=n).channels=t}return null==e.channels&&(e.channels="all"),fC.sanitizeChannels(e.channels).forEach((n=>{this.channels[n].setTuningBank(t,e)})),this}sendChannelMode(t,e,n={},r={}){if(fC.validation&&(Array.isArray(n)||Number.isInteger(n)||"all"===n)){let t=n;(n=r).channels=t}return null==n.channels&&(n.channels="all"),fC.sanitizeChannels(n.channels).forEach((r=>{this.channels[r].sendChannelMode(t,e,n)})),this}turnSoundOff(t={},e={}){if(fC.validation&&(Array.isArray(t)||Number.isInteger(t)||"all"===t)){let n=t;(t=e).channels=n}return null==t.channels&&(t.channels="all"),fC.sanitizeChannels(t.channels).forEach((e=>{this.channels[e].turnSoundOff(t)})),this}turnNotesOff(t={},e={}){if(fC.validation&&(Array.isArray(t)||Number.isInteger(t)||"all"===t)){let n=t;(t=e).channels=n}return null==t.channels&&(t.channels="all"),fC.sanitizeChannels(t.channels).forEach((e=>{this.channels[e].turnNotesOff(t)})),this}resetAllControllers(t={},e={}){if(fC.validation&&(Array.isArray(t)||Number.isInteger(t)||"all"===t)){let n=t;(t=e).channels=n}return null==t.channels&&(t.channels="all"),fC.sanitizeChannels(t.channels).forEach((e=>{this.channels[e].resetAllControllers(t)})),this}setPolyphonicMode(t,e={},n={}){if(fC.validation&&(Array.isArray(e)||Number.isInteger(e)||"all"===e)){let t=e;(e=n).channels=t}return null==e.channels&&(e.channels="all"),fC.sanitizeChannels(e.channels).forEach((n=>{this.channels[n].setPolyphonicMode(t,e)})),this}setLocalControl(t,e={},n={}){if(fC.validation&&(Array.isArray(e)||Number.isInteger(e)||"all"===e)){let t=e;(e=n).channels=t}return null==e.channels&&(e.channels="all"),fC.sanitizeChannels(e.channels).forEach((n=>{this.channels[n].setLocalControl(t,e)})),this}setOmniMode(t,e={},n={}){if(fC.validation&&(Array.isArray(e)||Number.isInteger(e)||"all"===e)){let t=e;(e=n).channels=t}return null==e.channels&&(e.channels="all"),fC.sanitizeChannels(e.channels).forEach((n=>{this.channels[n].setOmniMode(t,e)})),this}setNonRegisteredParameter(t,e,n={},r={}){if(fC.validation&&(Array.isArray(n)||Number.isInteger(n)||"all"===n)){let t=n;(n=r).channels=t}return null==n.channels&&(n.channels="all"),fC.sanitizeChannels(n.channels).forEach((r=>{this.channels[r].setNonRegisteredParameter(t,e,n)})),this}incrementRegisteredParameter(t,e={},n={}){if(fC.validation&&(Array.isArray(e)||Number.isInteger(e)||"all"===e)){let t=e;(e=n).channels=t}return null==e.channels&&(e.channels="all"),fC.sanitizeChannels(e.channels).forEach((n=>{this.channels[n].incrementRegisteredParameter(t,e)})),this}decrementRegisteredParameter(t,e={},n={}){if(fC.validation&&(Array.isArray(e)||Number.isInteger(e)||"all"===e)){let t=e;(e=n).channels=t}return null==e.channels&&(e.channels="all"),fC.sanitizeChannels(e.channels).forEach((n=>{this.channels[n].decrementRegisteredParameter(t,e)})),this}sendNoteOff(t,e={},n={}){if(fC.validation&&(Array.isArray(e)||Number.isInteger(e)||"all"===e)){let t=e;(e=n).channels=t}return null==e.channels&&(e.channels="all"),fC.sanitizeChannels(e.channels).forEach((n=>{this.channels[n].sendNoteOff(t,e)})),this}stopNote(t,e){return this.sendNoteOff(t,e)}playNote(t,e={},n={}){if(fC.validation&&(e.rawVelocity&&console.warn("The 'rawVelocity' option is deprecated. Use 'rawAttack' instead."),e.velocity&&console.warn("The 'velocity' option is deprecated. Use 'velocity' instead."),Array.isArray(e)||Number.isInteger(e)||"all"===e)){let t=e;(e=n).channels=t}return null==e.channels&&(e.channels="all"),fC.sanitizeChannels(e.channels).forEach((n=>{this.channels[n].playNote(t,e)})),this}sendNoteOn(t,e={},n={}){if(fC.validation&&(Array.isArray(e)||Number.isInteger(e)||"all"===e)){let t=e;(e=n).channels=t}return null==e.channels&&(e.channels="all"),fC.sanitizeChannels(e.channels).forEach((n=>{this.channels[n].sendNoteOn(t,e)})),this}get name(){return this._midiOutput.name}get id(){return this._midiOutput.id}get connection(){return this._midiOutput.connection}get manufacturer(){return this._midiOutput.manufacturer}get state(){return this._midiOutput.state}get type(){return this._midiOutput.type}}class rC{constructor(t,e={}){Number.isInteger(t)?this.number=t:this.name=t,this.duration=null==e.duration?1/0:e.duration,this.attack=null==e.attack?.5:e.attack,this.release=null==e.release?.5:e.release,null!=e.rawAttack&&(this.rawAttack=e.rawAttack),null!=e.rawRelease&&(this.rawRelease=e.rawRelease)}get name(){return fC.NOTES[this._number%12]+fC.getOctave(this.number)}set name(t){if(fC.validation&&!1===fC.guessNoteNumber(t))throw new Error("Invalid note name.");this._number=fC.guessNoteNumber(t)}get number(){return this._number}set number(t){if(fC.validation&&!1===fC.guessNoteNumber(t))throw new Error("Invalid note number.");this._number=fC.guessNoteNumber(t)}get duration(){return this._duration}set duration(t){if(fC.validation&&(t=parseFloat(t),isNaN(t)||null===t||t<0))throw new RangeError("Invalid duration.");this._duration=t}get attack(){return this._rawAttack/127}set attack(t){if(fC.validation&&(t=parseFloat(t),isNaN(t)||null===t||!(t>=0&&t<=1)))throw new RangeError("Invalid attack value.");this._rawAttack=Math.round(127*t)}get rawAttack(){return this._rawAttack}set rawAttack(t){if(fC.validation&&(t=parseFloat(t),isNaN(t)||null===t||!(t>=0&&t<=127)))throw new RangeError("Invalid rawAttack value.");this._rawAttack=t}get release(){return this._rawRelease/127}set release(t){if(fC.validation&&(t=parseFloat(t),isNaN(t)||null===t||!(t>=0&&t<=1)))throw new RangeError("Invalid release value.");this._rawRelease=Math.round(127*t)}get rawRelease(){return this._rawRelease}set rawRelease(t){if(fC.validation&&(t=parseFloat(t),isNaN(t)||null===t||!(t>=0&&t<=127)))throw new RangeError("Invalid rawRelease value.");this._rawRelease=t}get octave(){return Math.floor(Math.floor(this._number)/12-1)}}var sC,aC,iC,oC,uC,lC=!1;function cC(){return lC||(lC=!0,sC={},aC=it(),"S:\\Synch\\Work\\Code\\musicalface\\MusicalFace\\node_modules\\jazz-midi",iC="./bin/",(oC=aC.versions.node.split("."))[0]<=10?iC+="10_15/":oC[0]<=11&&(iC+="11_15/"),"win32"==aC.platform&&"ia32"==aC.arch?iC+="win32/jazz":"win32"==aC.platform&&"x64"==aC.arch?iC+="win64/jazz":"darwin"==aC.platform&&"x64"==aC.arch?iC+="macos64/jazz":"linux"==aC.platform&&"x64"==aC.arch?iC+="linux64/jazz":"linux"==aC.platform&&"arm"==aC.arch&&(iC+="linuxa7/jazz"),sC=require(iC),uC=require("S:\\Synch\\Work\\Code\\musicalface\\MusicalFace\\node_modules\\jazz-midi/package.json"),sC.package=uC),sC}var hC,pC=!1;function dC(){!function(t,e){if("object"==typeof hC)hC=e();else{if(t||(t=window),t.JZZ&&t.JZZ.MIDI)return;t.JZZ=e()}}(hC={},(function(){var t,n,r,s,a,i="undefined"==typeof window?e:window,o="1.1.7",u=Date.now||function(){return(new Date).getTime()},l=u(),c="undefined"!=typeof performance&&performance.now?function(){return performance.now()}:function(){return u()-l},h=function(t){setTimeout(t,0)};function p(){this._orig=this,this._ready=!1,this._queue=[],this._log=[]}function d(t,e){this._bad?e instanceof Function&&e.apply(this,[new Error(this._err())]):t instanceof Function&&t.apply(this,[this])}function f(t,e){this._bad?t._crash(this._err()):setTimeout((function(){t._resume()}),e)}function m(t){this._bad&&t._break(this._err()),t._resume()}function g(t,e,n){t[n]=function(){var t=arguments,r=e._image();return this._push(m,[r]),r[n].apply(r,t)}}function y(t){this._bad||(t instanceof Function?t.apply(this):console.log(t))}function b(t){this._bad&&(t instanceof Function?t.apply(this):console.log(t))}function x(t){this._bad?t._crash(this._err()):(this._break("Closed"),t._resume())}function w(t){if(t.length){var e=t.shift();if(t.length){var n=this;this._slip(b,[function(){w.apply(n,[t])}])}try{this._repair(),e.apply(this)}catch(t){this._break(t.toString())}}else this._break()}function v(t,e){for(var n=0;n<t.length;n++)if(t[n]===e)return;t.push(e)}function I(t,e){for(var n=0;n<t.length;n++)if(t[n]===e)return void t.splice(n,1)}function k(){p.apply(this)}function N(t,e,n){if(void 0===e)return N(t,[],[]);if(t instanceof Object){for(var r=0;r<e.length;r++)if(e[r]===t)return n[r];var s;for(var a in s=t instanceof Array?[]:{},e.push(t),n.push(s),t)t.hasOwnProperty(a)&&(s[a]=N(t[a],e,n));return s}return t}p.prototype._exec=function(){for(;this._ready&&this._queue.length;){var t=this._queue.shift();t[0].apply(this,t[1])}},p.prototype._push=function(t,e){this._queue.push([t,e]),p.prototype._exec.apply(this)},p.prototype._slip=function(t,e){this._queue.unshift([t,e])},p.prototype._pause=function(){this._ready=!1},p.prototype._resume=function(){this._ready=!0,p.prototype._exec.apply(this)},p.prototype._break=function(t){this._orig._bad=!0,this._orig._log.push(t||"Unknown JZZ error")},p.prototype._repair=function(){this._orig._bad=!1},p.prototype._crash=function(t){this._break(t),this._resume()},p.prototype._err=function(){return this._log[this._log.length-1]},p.prototype.log=function(){return N(this._log)},p.prototype._image=function(){var t=function(){};t.prototype=this._orig;var e=new t;return e._ready=!1,e._queue=[],e},p.prototype._thenable=function(){var t=this,e=function(){};e.prototype=t;var n=new e;return n.then=function(e,n){return t._push(d,[e,n]),this},n},p.prototype.wait=function(t){if(!t)return this;var e=this._image();return this._push(f,[e,t]),e._thenable()},p.prototype.and=function(t){return this._push(y,[t]),this._thenable()},p.prototype.or=function(t){return this._push(b,[t]),this._thenable()},p.prototype._info={},p.prototype.info=function(){var t=N(this._orig._info);return void 0===t.engine&&(t.engine="none"),void 0===t.sysex&&(t.sysex=!0),t},p.prototype.name=function(){return this.info().name},p.prototype.close=function(){var t=new p;return this._close&&this._push(this._close,[]),this._push(x,[t]),t._thenable()},k.prototype=new p,k.prototype._info={name:"JZZ.js",ver:o,version:o,inputs:[],outputs:[]};var S,C=[],E=[],T=[],_=[];function $(){var t,e;for(S._info.engine=Z._type,S._info.version=Z._version,S._info.sysex=Z._sysex,S._info.inputs=[],S._info.outputs=[],C=[],E=[],Z._allOuts={},Z._allIns={},t=0;t<Z._outs.length;t++)(e=Z._outs[t]).engine=Z,Z._allOuts[e.name]=e,S._info.outputs.push({id:e.name,name:e.name,manufacturer:e.manufacturer,version:e.version,engine:Z._type}),C.push(e);for(t=0;t<Q._outs.length;t++)e=Q._outs[t],S._info.outputs.push({id:e.name,name:e.name,manufacturer:e.manufacturer,version:e.version,engine:e.type}),C.push(e);for(t=0;t<Z._ins.length;t++)(e=Z._ins[t]).engine=Z,Z._allIns[e.name]=e,S._info.inputs.push({id:e.name,name:e.name,manufacturer:e.manufacturer,version:e.version,engine:Z._type}),E.push(e);for(t=0;t<Q._ins.length;t++)e=Q._ins[t],S._info.inputs.push({id:e.name,name:e.name,manufacturer:e.manufacturer,version:e.version,engine:e.type}),E.push(e);if(S._watcher&&S._watcher._handles.length){var r=function(t,e,n,r){if(!function(t,e,n,r){var s;if(t.length!=n.length||e.length!=r.length)return!0;for(s=0;s<t.length;s++)if(t[s].name!=n[s].name)return!0;for(s=0;s<e.length;s++)if(e[s].name!=r[s].name)return!0;return!1}(t,e,n,r))return;var s,a=[],i=[],o=[],u=[],l={};for(s=0;s<t.length;s++)l[t[s].name]=!0;for(s=0;s<n.length;s++)l[n[s].name]||a.push(n[s]);for(l={},s=0;s<n.length;s++)l[n[s].name]=!0;for(s=0;s<t.length;s++)l[t[s].name]||o.push(t[s]);for(l={},s=0;s<e.length;s++)l[e[s].name]=!0;for(s=0;s<r.length;s++)l[r[s].name]||i.push(r[s]);for(l={},s=0;s<r.length;s++)l[r[s].name]=!0;for(s=0;s<e.length;s++)l[e[s].name]||u.push(e[s]);return{inputs:{added:a,removed:o},outputs:{added:i,removed:u}}}(_,T,S._info.inputs,S._info.outputs);if(r){for(n=0;n<r.inputs.removed.length;n++)(e=Z._inMap[r.inputs.removed[n].name])&&e._closeAll();for(n=0;n<r.outputs.removed.length;n++)(e=Z._outMap[r.outputs.removed[n].name])&&e._closeAll();X(r)}}_=S._info.inputs,T=S._info.outputs}function A(){this._bad||Z._refresh(this)}function R(t,e){var n,r;t instanceof Function&&(t=t(e)),t instanceof Array||(t=[t]);var s=[],a=[],i=e.slice(),o=s;for(n=0;n<t.length;n++)if(void 0===t[n])o=a;else if(t[n]instanceof RegExp)for(r=0;r<i.length;r++)t[n].test(i[r].name)&&(o.push(i[r]),i.splice(r,1),r--);else for(r=0;r<i.length;r++)(t[n]+""==r+""||t[n]===i[r].name||t[n]instanceof Object&&t[n].name===i[r].name)&&(o.push(i[r]),i.splice(r,1),r--);return o==s?s:s.concat(i).concat(a)}function M(t,e){var n;n=e instanceof RegExp?"Port matching "+e+" not found":e instanceof Object||void 0===e?"Port not found":'Port "'+e+'" not found',t._crash(n)}function D(t,e){if(this._bad)t._crash(this._err());else{var n=R(e,C);if(!n.length)return void M(t,e);for(var r=function(t){return function(){t.engine._openOut(this,t.name)}},s=0;s<n.length;s++)n[s]=r(n[s]);t._slip(w,[n]),t._resume()}}function O(t,e){if(this._bad)t._crash(this._err());else{var n=R(e,E);if(!n.length)return void M(t,e);for(var r=function(t){return function(){t.engine._openIn(this,t.name)}},s=0;s<n.length;s++)n[s]=r(n[s]);t._slip(w,[n]),t._resume()}}function F(t,e){this._bad?t._crash():(t._slip(q,[e]),t._resume())}function L(){p.apply(this),this._handles=[],this._outs=[]}function B(t){this._bad||this._receive(t)}function z(t){this._emit(t)}function P(t){v(t instanceof Function?this._orig._handles:this._orig._outs,t)}function V(t){void 0===t?(this._orig._handles=[],this._orig._outs=[]):I(t instanceof Function?this._orig._handles:this._orig._outs,t)}function W(t,e){this._orig._mpe||(this._orig._mpe=new Yt),this._orig._mpe.setup(t,e)}function U(t){if(t!=parseInt(t)||t<0||t>15)throw RangeError("Bad channel value (must not be less than 0 or more than 15): "+t)}function G(t,e){L.apply(this),this._port=t._orig,this._chan=e,g(this,this._port,"ch"),g(this,this._port,"mpe"),g(this,this._port,"connect"),g(this,this._port,"disconnect"),g(this,this._port,"close")}function H(t,e,n){L.apply(this),this._port=t._orig,this._master=e,this._band=n,g(this,this._port,"ch"),g(this,this._port,"mpe"),g(this,this._port,"connect"),g(this,this._port,"disconnect"),g(this,this._port,"close")}function j(){p.apply(this),this._handles=[],g(this,S,"refresh"),g(this,S,"openMidiOut"),g(this,S,"openMidiIn"),g(this,S,"onChange"),g(this,S,"close")}function q(t){t instanceof Function&&(this._orig._handles.length||Z._watch(),v(this._orig._handles,t))}function K(t){void 0===t?this._orig._handles=[]:I(this._orig._handles,t),this._orig._handles.length||Z._unwatch()}function X(e){for(t=0;t<S._watcher._handles.length;t++)S._watcher._handles[t].apply(S,[e])}k.prototype.refresh=function(){return this._push(A,[]),this._thenable()},k.prototype.openMidiOut=function(t){var e=new L;return this._push(A,[]),this._push(D,[e,t]),e._thenable()},k.prototype._openMidiOutNR=function(t){var e=new L;return this._push(D,[e,t]),e._thenable()},k.prototype.openMidiIn=function(t){var e=new L;return this._push(A,[]),this._push(O,[e,t]),e._thenable()},k.prototype._openMidiInNR=function(t){var e=new L;return this._push(O,[e,t]),e._thenable()},k.prototype.onChange=function(t){this._orig._watcher||(this._orig._watcher=new j);var e=this._orig._watcher._image();return this._push(F,[e,t]),e._thenable()},k.prototype._close=function(){Z._close()},L.prototype=new p,L.prototype._filter=function(t){if(this._orig._mpe){var e,n=0;this._handles&&this._handles.length&&(n=this._handles.length,e=this._handles[0]),this._outs&&this._outs.length&&(n=this._outs.length,e=this._outs[0]),1!=n||e._mpe||(t=this._orig._mpe.filter(t))}return t},L.prototype._receive=function(t){this._emit(this._filter(t))},L.prototype.send=function(){return this._push(B,[bt.apply(null,arguments)]),this._thenable()},L.prototype.note=function(t,e,n,r){return this.noteOn(t,e,n),r>0&&this.wait(r).noteOff(t,e),this._thenable()},L.prototype._emit=function(t){var e;for(e=0;e<this._handles.length;e++)this._handles[e].apply(this,[bt(t)._stamp(this)]);for(e=0;e<this._outs.length;e++){var n=bt(t);n._stamped(this._outs[e])||this._outs[e].send(n._stamp(this))}},L.prototype.emit=function(t){return this._push(z,[t]),this._thenable()},L.prototype.connect=function(t){return this._push(P,[t]),this._thenable()},L.prototype.disconnect=function(t){return this._push(V,[t]),this._thenable()},L.prototype.connected=function(){return this._orig._handles.length+this._orig._outs.length},L.prototype.ch=function(t){if(void 0===t)return this;U(t);var e=new G(this,t);return this._push(m,[e]),e._thenable()},L.prototype.mpe=function(t,e){if(void 0===t&&void 0===e)return this;Yt.validate(t,e);var n=e?new H(this,t,e):new G(this,t);return this._push(W,[t,e]),this._push(m,[n]),n._thenable()},G.prototype=new L,G.prototype.channel=function(){return this._chan},G.prototype._receive=function(t){this._port._receive(t)},G.prototype.note=function(t,e,n){return this.noteOn(t,e),n&&this.wait(n).noteOff(t),this._thenable()},H.prototype=new L,H.prototype.channel=function(){return this._master},H.prototype._receive=function(t){this._port._receive(t)},H.prototype.note=function(t,e,n){return this.noteOn(t,e),n&&this.wait(n).noteOff(t),this._thenable()},j.prototype=new p,j.prototype.connect=function(t){return this._push(q,[t]),this._thenable()},j.prototype.disconnect=function(t){return this._push(K,[t]),this._thenable()};var Y,J,Z={_outs:[],_ins:[]},Q={_outs:[],_ins:[]};function tt(){if(hC)return t=cC(),Z._type="node",Z._main=t,Z._pool=[],Z._newPlugin=function(){return new t.MIDI},void ut();var t;this._break()}function et(){var t=document.createElement("div");t.style.visibility="hidden",document.body.appendChild(t);var e=document.createElement("object");e.style.visibility="hidden",e.style.width="0px",e.style.height="0px",e.classid="CLSID:1ACE1618-1C7D-4561-AEE1-34842AA85E90",e.type="audio/x-jazz",document.body.appendChild(e),e.isJazz?function(t){Z._type="plugin",Z._main=t,Z._pool=[t],Z._newPlugin=function(){var e=document.createElement("object");return e.style.visibility="hidden",e.style.width="0px",t.style.height="0px",e.classid="CLSID:1ACE1618-1C7D-4561-AEE1-34842AA85E90",e.type="audio/x-jazz",document.body.appendChild(e),e.isJazz?e:void 0},ut()}(e):this._break()}if("undefined"!=typeof navigator&&navigator.requestMIDIAccess){Y=navigator,J=navigator.requestMIDIAccess;try{-1!=J.toString().indexOf("JZZ(")&&(J=void 0)}catch(t){}}function nt(){if(J){var t=this;return J.call(Y,{}).then((function(e){lt(e),t._resume()}),(function(e){t._crash(e)})),void this._pause()}this._break()}function rt(){if(J){var t=this;return J.call(Y,{sysex:!0}).then((function(e){lt(e,!0),t._resume()}),(function(e){t._crash(e)})),void this._pause()}this._break()}function st(){var t,e,n=this;this._pause(),document.addEventListener("jazz-midi-msg",(function r(){if(t=!0,e||(e=document.getElementById("jazz-midi-msg")),e){var s=[];try{s=JSON.parse(e.innerText)}catch(t){}e.innerText="",document.removeEventListener("jazz-midi-msg",r),"version"===s[0]?(!function(t,e){function n(){for(var t=0;t<this.clients.length;t++)this._close(this.clients[t])}var r;Z._type="extension",Z._version=e,Z._sysex=!0,Z._pool=[],Z._outs=[],Z._ins=[],Z._inArr=[],Z._outArr=[],Z._inMap={},Z._outMap={},Z._outsW=[],Z._insW=[],Z.refreshClients=[],Z._msg=t,Z._newPlugin=function(){var t={id:Z._pool.length};Z._pool.push(t),t.id?document.dispatchEvent(new CustomEvent("jazz-midi",{detail:["new"]})):t.ready=!0},Z._newPlugin(),Z._refresh=function(t){Z.refreshClients.push(t),t._pause(),h((function(){document.dispatchEvent(new CustomEvent("jazz-midi",{detail:["refresh"]}))}))},Z._openOut=function(t,e){var r=Z._outMap[e];if(!r){Z._pool.length<=Z._outArr.length&&Z._newPlugin();var s=Z._pool[Z._outArr.length];(r={name:e,clients:[],info:{name:e,manufacturer:Z._allOuts[e].manufacturer,version:Z._allOuts[e].version,type:"MIDI-out",sysex:Z._sysex,engine:Z._type},_start:function(){document.dispatchEvent(new CustomEvent("jazz-midi",{detail:["openout",s.id,e]}))},_close:function(t){Z._closeOut(t)},_closeAll:n,_receive:function(t){if(t.length){var e=t.slice();e.splice(0,0,"play",s.id),document.dispatchEvent(new CustomEvent("jazz-midi",{detail:e}))}}}).plugin=s,s.output=r,Z._outArr.push(r),Z._outMap[e]=r}t._orig._impl=r,v(r.clients,t._orig),t._info=r.info,t._receive=function(t){r._receive(t)},t._close=function(){r._close(this)},r.open||(t._pause(),r.plugin.ready&&r._start())},Z._openIn=function(t,e){var r=Z._inMap[e];if(!r){Z._pool.length<=Z._inArr.length&&Z._newPlugin();var s=Z._pool[Z._inArr.length];(r={name:e,clients:[],info:{name:e,manufacturer:Z._allIns[e].manufacturer,version:Z._allIns[e].version,type:"MIDI-in",sysex:Z._sysex,engine:Z._type},_start:function(){document.dispatchEvent(new CustomEvent("jazz-midi",{detail:["openin",s.id,e]}))},_close:function(t){Z._closeIn(t)},_closeAll:n}).plugin=s,s.input=r,Z._inArr.push(r),Z._inMap[e]=r}t._orig._impl=r,v(r.clients,t._orig),t._info=r.info,t._close=function(){r._close(this)},r.open||(t._pause(),r.plugin.ready&&r._start())},Z._closeOut=function(t){var e=t._impl;I(e.clients,t._orig),!e.clients.length&&e.open&&(e.open=!1,document.dispatchEvent(new CustomEvent("jazz-midi",{detail:["closeout",e.plugin.id]})))},Z._closeIn=function(t){var e=t._impl;I(e.clients,t._orig),!e.clients.length&&e.open&&(e.open=!1,document.dispatchEvent(new CustomEvent("jazz-midi",{detail:["closein",e.plugin.id]})))},Z._close=function(){Z._unwatch()},Z._watch=function(){Z._insW=Z._ins,Z._outsW=Z._outs,r=setInterval((function(){document.dispatchEvent(new CustomEvent("jazz-midi",{detail:["refresh"]}))}),250)},Z._unwatch=function(){clearInterval(r),r=void 0},document.addEventListener("jazz-midi-msg",(function(){var t,e,n,r=Z._msg.innerText.split("\n");for(Z._msg.innerText="",e=0;e<r.length;e++){var s=[];try{s=JSON.parse(r[e])}catch(t){}if(s.length)if("refresh"===s[0]){if(s[1].ins){for(n=0;n<s[1].ins.length;n++)s[1].ins[n].type=Z._type;Z._ins=s[1].ins}if(s[1].outs){for(n=0;n<s[1].outs.length;n++)s[1].outs[n].type=Z._type;Z._outs=s[1].outs}for($(),n=0;n<Z.refreshClients.length;n++)Z.refreshClients[n]._resume();Z.refreshClients=[]}else if("version"===s[0]){var a=Z._pool[s[1]];a&&(a.ready=!0,a.input&&a.input._start(),a.output&&a.output._start())}else if("openout"===s[0]){if(t=Z._pool[s[1]].output)if(s[2]==t.name){if(t.open=!0,t.clients)for(n=0;n<t.clients.length;n++)t.clients[n]._resume()}else if(t.clients)for(n=0;n<t.clients.length;n++)t.clients[n]._crash()}else if("openin"===s[0]){if(t=Z._pool[s[1]].input)if(s[2]==t.name){if(t.open=!0,t.clients)for(n=0;n<t.clients.length;n++)t.clients[n]._resume()}else if(t.clients)for(n=0;n<t.clients.length;n++)t.clients[n]._crash()}else if("midi"===s[0]&&(t=Z._pool[s[1]].input)&&t.clients)for(n=0;n<t.clients.length;n++){var i=bt(s.slice(3));t.clients[n]._emit(i)}}}))}(e,s[2]),n._resume()):n._crash()}}));try{document.dispatchEvent(new Event("jazz-midi"))}catch(t){}h((function(){t||n._crash()}))}function at(){this._pause();var t=this;h((function(){t._crash()}))}function it(t){for(var e=[],n=function(t){var e=["node","extension","plugin","webmidi"];if(!t||!t.engine)return e;var n,r,s,a=t.engine instanceof Array?t.engine:[t.engine],i={},o=[],u=[];for(s=0;s<a.length;s++){var l=a[s].toString().toLowerCase();i[l]||(i[l]=!0,"none"===l&&(n=!0),"etc"!==l&&void 0!==l||(r=!0),r?u.push(l):o.push(l),I(e,l))}(r||o.length||u.length)&&(n=!1);return n?[]:o.concat(r?e:u)}(t),r=0;r<n.length;r++)"webmidi"==n[r]?(t&&!0===t.sysex&&e.push(rt),t&&!0===t.sysex&&!0!==t.degrade||e.push(nt)):"node"==n[r]?(e.push(tt),e.push(at)):"extension"==n[r]?e.push(st):"plugin"==n[r]&&e.push(et);return e.push(ot),e}function ot(){Z._type="none",Z._version=o,Z._sysex=!0,Z._outs=[],Z._ins=[],Z._refresh=function(){$()},Z._watch=function(){},Z._unwatch=function(){},Z._close=function(){}}function ut(){var t;function e(){for(var t=0;t<this.clients.length;t++)this._close(this.clients[t])}Z._inArr=[],Z._outArr=[],Z._inMap={},Z._outMap={},Z._outsW=[],Z._insW=[],Z._version=Z._main.version,Z._sysex=!0,Z._refresh=function(){var t,e;for(Z._outs=[],Z._ins=[],t=0;(e=Z._main.MidiOutInfo(t)).length;t++)Z._outs.push({type:Z._type,name:e[0],manufacturer:e[1],version:e[2]});for(t=0;(e=Z._main.MidiInInfo(t)).length;t++)Z._ins.push({type:Z._type,name:e[0],manufacturer:e[1],version:e[2]});$()},Z._openOut=function(t,n){var r=Z._outMap[n];if(!r){Z._pool.length<=Z._outArr.length&&Z._pool.push(Z._newPlugin()),r={name:n,clients:[],info:{name:n,manufacturer:Z._allOuts[n].manufacturer,version:Z._allOuts[n].version,type:"MIDI-out",sysex:Z._sysex,engine:Z._type},_close:function(t){Z._closeOut(t)},_closeAll:e,_receive:function(t){t.length&&this.plugin.MidiOutRaw(t.slice())}};var s=Z._pool[Z._outArr.length];r.plugin=s,Z._outArr.push(r),Z._outMap[n]=r}if(!r.open){var a=r.plugin.MidiOutOpen(n);if(a!==n)return a&&r.plugin.MidiOutClose(),void t._break();r.open=!0}t._orig._impl=r,v(r.clients,t._orig),t._info=r.info,t._receive=function(t){r._receive(t)},t._close=function(){r._close(this)}},Z._openIn=function(t,n){var r,s=Z._inMap[n];if(!s){Z._pool.length<=Z._inArr.length&&Z._pool.push(Z._newPlugin());(s={name:n,clients:[],info:{name:n,manufacturer:Z._allIns[n].manufacturer,version:Z._allIns[n].version,type:"MIDI-in",sysex:Z._sysex,engine:Z._type},_close:function(t){Z._closeIn(t)},_closeAll:e,handle:function(t,e){for(var n=0;n<this.clients.length;n++){var r=bt(e);this.clients[n]._emit(r)}}}).onmidi=(r=s,function(t,e){r.handle(t,e)});var a=Z._pool[Z._inArr.length];s.plugin=a,Z._inArr.push(s),Z._inMap[n]=s}if(!s.open){var i=s.plugin.MidiInOpen(n,s.onmidi);if(i!==n)return i&&s.plugin.MidiInClose(),void t._break();s.open=!0}t._orig._impl=s,v(s.clients,t._orig),t._info=s.info,t._close=function(){s._close(this)}},Z._closeOut=function(t){var e=t._impl;I(e.clients,t._orig),!e.clients.length&&e.open&&(e.open=!1,e.plugin.MidiOutClose())},Z._closeIn=function(t){var e=t._impl;I(e.clients,t._orig),!e.clients.length&&e.open&&(e.open=!1,e.plugin.MidiInClose())},Z._close=function(){for(var t=0;t<Z._inArr.length;t++)Z._inArr[t].open&&Z._inArr[t].plugin.MidiInClose();Z._unwatch()},Z._watch=function(){t||(t=setInterval((function(){Z._refresh()}),250))},Z._unwatch=function(){t&&clearInterval(t),t=void 0}}function lt(t,e){var n;function r(){for(var t=0;t<this.clients.length;t++)this._close(this.clients[t])}Z._type="webmidi",Z._version=43,Z._sysex=!!e,Z._access=t,Z._inMap={},Z._outMap={},Z._outsW=[],Z._insW=[],Z._refresh=function(){Z._outs=[],Z._ins=[],Z._access.outputs.forEach((function(t){Z._outs.push({type:Z._type,name:t.name,manufacturer:t.manufacturer,version:t.version})})),Z._access.inputs.forEach((function(t){Z._ins.push({type:Z._type,name:t.name,manufacturer:t.manufacturer,version:t.version})})),$()},Z._openOut=function(t,e){var n,s=Z._outMap[e];s||(s={name:e,clients:[],info:{name:e,manufacturer:Z._allOuts[e].manufacturer,version:Z._allOuts[e].version,type:"MIDI-out",sysex:Z._sysex,engine:Z._type},_close:function(t){Z._closeOut(t)},_closeAll:r,_receive:function(t){s.dev&&t.length&&this.dev.send(t.slice())}}),Z._access.outputs.forEach((function(t){t.name===e&&(n=t)})),n?(s.dev=n,Z._outMap[e]=s,t._orig._impl=s,v(s.clients,t._orig),t._info=s.info,t._receive=function(t){s._receive(t)},t._close=function(){s._close(this)},s.dev.open&&(t._pause(),s.dev.open().then((function(){t._resume()}),(function(){t._crash()})))):t._break()},Z._openIn=function(t,e){var n,s,a=Z._inMap[e];if(a||(a={name:e,clients:[],info:{name:e,manufacturer:Z._allIns[e].manufacturer,version:Z._allIns[e].version,type:"MIDI-in",sysex:Z._sysex,engine:Z._type},_close:function(t){Z._closeIn(t)},_closeAll:r,handle:function(t){for(var e=0;e<this.clients.length;e++){var n=bt([].slice.call(t.data));this.clients[e]._emit(n)}}}),Z._access.inputs.forEach((function(t){t.name===e&&(n=t)})),n){a.dev=n;a.dev.onmidimessage=(s=a,function(t){s.handle(t)}),Z._inMap[e]=a,t._orig._impl=a,v(a.clients,t._orig),t._info=a.info,t._close=function(){a._close(this)},a.dev.open&&(t._pause(),a.dev.open().then((function(){t._resume()}),(function(){t._crash()})))}else t._break()},Z._closeOut=function(t){var e=t._impl;I(e.clients,t._orig),e.clients.length||(e.dev&&e.dev.close&&e.dev.close(),e.dev=void 0)},Z._closeIn=function(t){var e=t._impl;I(e.clients,t._orig),e.clients.length||(e.dev&&(e.dev.onmidimessage=null,e.dev.close&&e.dev.close()),e.dev=void 0)},Z._close=function(){Z._unwatch()},Z._watch=function(){Z._access.onstatechange=function(){n=!0,h((function(){n&&(Z._refresh(),n=!1)}))}},Z._unwatch=function(){Z._access.onstatechange=void 0}}var ct=function(t){return S||function(t){Jt(),(S=new k)._options=t,S._push(w,[it(t)]),S.refresh(),S._resume()}(t),S._thenable()};function ht(){var t=this instanceof ht?this:t=new ht;return ht.prototype.reset.apply(t,arguments),t}function pt(){29.97==this.type&&!this.second&&this.frame<2&&this.minute%10&&(this.frame=2)}function dt(t){return[[24,25,29.97,30][t[7]>>1&3],(1&t[7])<<4|t[6],t[5]<<4|t[4],t[3]<<4|t[2],t[1]<<4|t[0]]}function ft(t){var e;switch(!t.backwards&&t.quarter>=4?t.decrFrame():t.backwards&&t.quarter<4&&t.incrFrame(),t.quarter>>1){case 0:e=t.frame;break;case 1:e=t.second;break;case 2:e=t.minute;break;default:e=t.hour}return 1&t.quarter?e>>=4:e&=15,7==t.quarter&&(25==t.type?e|=2:29.97==t.type?e|=4:30==t.type&&(e|=6)),!t.backwards&&t.quarter>=4?t.incrFrame():t.backwards&&t.quarter<4&&t.decrFrame(),e|t.quarter<<4}function mt(t){return 25==t.type?32|t.hour:29.97==t.type?64|t.hour:30==t.type?96|t.hour:t.hour}function gt(t){return t<10?"0"+t:t}function yt(t){for(var e=[],n=0;n<t.length;n++)e[n]=gt(t[n]);return e.join(":")}function bt(t){var e,n=this instanceof bt?this:n=new bt;if(t instanceof bt){for(e in n._from=t._from.slice(),t)t.hasOwnProperty(e)&&"_from"!=e&&(n[e]=t[e]);return n}if(n._from=[],void 0===t)return n;var r=t instanceof Array?t:arguments;for(e=0;e<r.length;e++)a=r[e],1==e&&(n[0]>=128&&n[0]<=175&&(a=bt.noteValue(a)),n[0]>=192&&n[0]<=207&&(a=bt.programValue(a))),(a!=parseInt(a)||a<0||a>255)&&vt(r[e]),n.push(a);return n}ct.JZZ=ct,ct.version=o,ct.info=function(){return k.prototype.info()},ct.Widget=function(t){var e=new L;if(t instanceof Object)for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n]);return e._resume(),e},k.prototype.Widget=ct.Widget,ct.addMidiIn=function(t,e){var n=N(e._info||{});n.name=t,n.type=n.type||"javascript",n.manufacturer=n.manufacturer||"virtual",n.version=n.version||"0.0";var r={_info:function(){return n},_openIn:function(t){t._pause(),t._info=N(n),t._close=function(){e.disconnect(t)},e.connect(t),t._resume()}};return ct.lib.registerMidiIn(t,r)},ct.addMidiOut=function(t,e){var n=N(e._info||{});n.name=t,n.type=n.type||"javascript",n.manufacturer=n.manufacturer||"virtual",n.version=n.version||"0.0";var r={_info:function(){return n},_openOut:function(t){t._pause(),t._info=N(n),t._close=function(){t.disconnect()},P.apply(t,[e]),t._resume()}};return ct.lib.registerMidiOut(t,r)},ht.prototype.reset=function(t){if(t instanceof ht)return this.setType(t.getType()),this.setHour(t.getHour()),this.setMinute(t.getMinute()),this.setSecond(t.getSecond()),this.setFrame(t.getFrame()),this.setQuarter(t.getQuarter()),this;var e=t instanceof Array?t:arguments;return this.setType(e[0]),this.setHour(e[1]),this.setMinute(e[2]),this.setSecond(e[3]),this.setFrame(e[4]),this.setQuarter(e[5]),this},ht.prototype.isFullFrame=function(){return 0==this.quarter||4==this.quarter},ht.prototype.getType=function(){return this.type},ht.prototype.getHour=function(){return this.hour},ht.prototype.getMinute=function(){return this.minute},ht.prototype.getSecond=function(){return this.second},ht.prototype.getFrame=function(){return this.frame},ht.prototype.getQuarter=function(){return this.quarter},ht.prototype.setType=function(t){if(void 0===t||24==t)this.type=24;else if(25==t)this.type=25;else if(29.97==t)this.type=29.97,pt.apply(this);else{if(30!=t)throw RangeError("Bad SMPTE frame rate: "+t);this.type=30}return this.frame>=this.type&&(this.frame=this.type-1),this},ht.prototype.setHour=function(t){if(void 0===t&&(t=0),t!=parseInt(t)||t<0||t>=24)throw RangeError("Bad SMPTE hours value: "+t);return this.hour=t,this},ht.prototype.setMinute=function(t){if(void 0===t&&(t=0),t!=parseInt(t)||t<0||t>=60)throw RangeError("Bad SMPTE minutes value: "+t);return this.minute=t,pt.apply(this),this},ht.prototype.setSecond=function(t){if(void 0===t&&(t=0),t!=parseInt(t)||t<0||t>=60)throw RangeError("Bad SMPTE seconds value: "+t);return this.second=t,pt.apply(this),this},ht.prototype.setFrame=function(t){if(void 0===t&&(t=0),t!=parseInt(t)||t<0||t>=this.type)throw RangeError("Bad SMPTE frame number: "+t);return this.frame=t,pt.apply(this),this},ht.prototype.setQuarter=function(t){if(void 0===t&&(t=0),t!=parseInt(t)||t<0||t>=8)throw RangeError("Bad SMPTE quarter frame: "+t);return this.quarter=t,this},ht.prototype.incrFrame=function(){return this.frame++,this.frame>=this.type&&(this.frame=0,this.second++,this.second>=60&&(this.second=0,this.minute++,this.minute>=60&&(this.minute=0,this.hour=this.hour>=23?0:this.hour+1))),pt.apply(this),this},ht.prototype.decrFrame=function(){return!this.second&&2==this.frame&&29.97==this.type&&this.minute%10&&(this.frame=0),this.frame--,this.frame<0&&(this.frame=29.97==this.type?29:this.type-1,this.second--,this.second<0&&(this.second=59,this.minute--,this.minute<0&&(this.minute=59,this.hour=this.hour?this.hour-1:23))),this},ht.prototype.incrQF=function(){return this.backwards=!1,this.quarter=this.quarter+1&7,0!=this.quarter&&4!=this.quarter||this.incrFrame(),this},ht.prototype.decrQF=function(){return this.backwards=!0,this.quarter=this.quarter+7&7,3!=this.quarter&&7!=this.quarter||this.decrFrame(),this},ht.prototype.read=function(t){if(t instanceof bt||(t=bt.apply(null,arguments)),240==t[0]&&127==t[1]&&1==t[3]&&1==t[4]&&247==t[9])return this.type=[24,25,29.97,30][t[5]>>5&3],this.hour=31&t[5],this.minute=t[6],this.second=t[7],this.frame=t[8],this.quarter=0,this._=void 0,this._b=void 0,this._f=void 0,!0;if(241==t[0]&&void 0!==t[1]){var e=t[1]>>4,n=15&t[1];return 0==e?7==this._&&(7==this._f&&(this.reset(dt(this._a)),this.incrFrame()),this.incrFrame()):3==e?4==this._&&this.decrFrame():4==e?3==this._&&this.incrFrame():7==e&&0===this._&&(0===this._b&&(this.reset(dt(this._a)),this.decrFrame()),this.decrFrame()),this._a||(this._a=[]),this._a[e]=n,this._f=this._f===e-1||0==e?e:void 0,this._b=this._b===e+1||7==e?e:void 0,this._=e,this.quarter=e,!0}return!1},ht.prototype.toString=function(){return yt([this.hour,this.minute,this.second,this.frame])},ct.SMPTE=ht,bt.prototype=[],bt.prototype.constructor=bt;var xt={};bt.noteValue=function(t){return void 0===t?void 0:xt[t.toString().toLowerCase()]},bt.programValue=function(t){return t},bt.freq=function(t,e){return void 0===e&&(e=440),e*Math.pow(2,(kt(bt.noteValue(t),t)-69)/12)},bt.shift=function(t,e){return void 0===e&&(e=440),12*Math.log2(t/e)},bt.to14b=function(t){return t<=0?0:t>=1?16383:Math.floor(16384*t)};var wt={c:0,d:2,e:4,f:5,g:7,a:9,b:11,h:11};for(r in wt)if(wt.hasOwnProperty(r))for(a=0;a<12&&!((s=wt[r]+12*a)>127);a++)xt[r+a]=s,s>0&&(xt[r+"b"+a]=s-1,xt[r+"bb"+a]=s-2),s<127&&(xt[r+"#"+a]=s+1,xt[r+"##"+a]=s+2);for(a=0;a<128;a++)xt[a]=a;function vt(t){throw RangeError("Bad MIDI value: "+t)}function It(t){return U(t),parseInt(t)}function kt(t,e){return(t!=parseInt(t)||t<0||t>127)&&vt(void 0===e?t:e),parseInt(t)}function Nt(t,e){return(t!=parseInt(t)||t<0||t>255)&&vt(void 0===e?t:e),parseInt(t)}function St(t){return(t!=parseInt(t)||t<0||t>16383)&&vt(t),127&parseInt(t)}function Ct(t){return(t!=parseInt(t)||t<0||t>16383)&&vt(t),parseInt(t)>>7}var Et={noteOff:function(t,e,n){return void 0===n&&(n=64),[128+It(t),kt(bt.noteValue(e),e),kt(n)]},noteOn:function(t,e,n){return void 0===n&&(n=127),[144+It(t),kt(bt.noteValue(e),e),kt(n)]},aftertouch:function(t,e,n){return[160+It(t),kt(bt.noteValue(e),e),kt(n)]},control:function(t,e,n){return[176+It(t),kt(e),kt(n)]},program:function(t,e){return[192+It(t),kt(bt.programValue(e),e)]},pressure:function(t,e){return[208+It(t),kt(e)]},pitchBend:function(t,e,n){return void 0===n?[224+It(t),St(e),Ct(e)]:[224+It(t),kt(n),kt(e)]},pitchBendF:function(t,e){return Et.pitchBend(t,bt.to14b((e+1)/2))},bankMSB:function(t,e){return[176+It(t),0,kt(e)]},bankLSB:function(t,e){return[176+It(t),32,kt(e)]},modMSB:function(t,e){return[176+It(t),1,kt(e)]},modLSB:function(t,e){return[176+It(t),33,kt(e)]},breathMSB:function(t,e){return[176+It(t),2,kt(e)]},breathLSB:function(t,e){return[176+It(t),34,kt(e)]},footMSB:function(t,e){return[176+It(t),4,kt(e)]},footLSB:function(t,e){return[176+It(t),36,kt(e)]},portamentoMSB:function(t,e){return[176+It(t),5,kt(e)]},portamentoLSB:function(t,e){return[176+It(t),37,kt(e)]},dataMSB:function(t,e){return[176+It(t),6,kt(e)]},dataLSB:function(t,e){return[176+It(t),38,kt(e)]},volumeMSB:function(t,e){return[176+It(t),7,kt(e)]},volumeLSB:function(t,e){return[176+It(t),39,kt(e)]},balanceMSB:function(t,e){return[176+It(t),8,kt(e)]},balanceLSB:function(t,e){return[176+It(t),40,kt(e)]},panMSB:function(t,e){return[176+It(t),10,kt(e)]},panLSB:function(t,e){return[176+It(t),42,kt(e)]},expressionMSB:function(t,e){return[176+It(t),11,kt(e)]},expressionLSB:function(t,e){return[176+It(t),43,kt(e)]},damper:function(t,e){return[176+It(t),64,e?127:0]},portamento:function(t,e){return[176+It(t),65,e?127:0]},sostenuto:function(t,e){return[176+It(t),66,e?127:0]},soft:function(t,e){return[176+It(t),67,e?127:0]},dataIncr:function(t){return[176+It(t),96,0]},dataDecr:function(t){return[176+It(t),97,0]},nrpnLSB:function(t,e){return[176+It(t),98,kt(e)]},nrpnMSB:function(t,e){return[176+It(t),99,kt(e)]},rpnLSB:function(t,e){return[176+It(t),100,kt(e)]},rpnMSB:function(t,e){return[176+It(t),101,kt(e)]},allSoundOff:function(t){return[176+It(t),120,0]},allNotesOff:function(t){return[176+It(t),123,0]}},Tt={mtc:function(t){return[241,ft(t)]},songPosition:function(t,e){return void 0===e?[242,St(t),Ct(t)]:[242,kt(e),kt(t)]},songSelect:function(t){return[243,kt(t)]},tune:function(){return[246]},clock:function(){return[248]},start:function(){return[250]},continue:function(){return[251]},stop:function(){return[252]},active:function(){return[254]},sxIdRequest:function(){return[240,126,127,6,1,247]},sxFullFrame:function(t){return[240,127,127,1,1,mt(t),t.getMinute(),t.getSecond(),t.getFrame(),247]},sxMasterVolume:function(t){return[240,127,127,4,1,St(t=bt.to14b(t)),Ct(t),247]},sxMasterFineTuning:function(t){return[240,127,127,4,3,St(t=bt.to14b((t%1+1)/2)),Ct(t),247]},sxMasterCoarseTuning:function(t){return[240,127,127,4,4,0,64+t-t%1,247]},reset:function(){return[255]}},_t={bank:function(t,e,n){return void 0===n?[Et.bankMSB(t,Ct(e)),Et.bankLSB(t,St(e))]:[Et.bankMSB(t,e),Et.bankLSB(t,n)]},modF:function(t,e){return _t.mod(t,bt.to14b(e))},mod:function(t,e,n){return void 0===n?[Et.modMSB(t,Ct(e)),Et.modLSB(t,St(e))]:[Et.modMSB(t,e),Et.modLSB(t,n)]},breathF:function(t,e){return _t.breath(t,bt.to14b(e))},breath:function(t,e,n){return void 0===n?[Et.breathMSB(t,Ct(e)),Et.breathLSB(t,St(e))]:[Et.breathMSB(t,e),Et.breathLSB(t,n)]},footF:function(t,e){return _t.foot(t,bt.to14b(e))},foot:function(t,e,n){return void 0===n?[Et.footMSB(t,Ct(e)),Et.footLSB(t,St(e))]:[Et.footMSB(t,e),Et.footLSB(t,n)]},portamentoTimeF:function(t,e){return _t.portamentoTime(t,bt.to14b(e))},portamentoTime:function(t,e,n){return void 0===n?[Et.portamentoMSB(t,Ct(e)),Et.portamentoLSB(t,St(e))]:[Et.portamentoMSB(t,e),Et.portamentoLSB(t,n)]},dataF:function(t,e){return _t.data(t,bt.to14b(e))},data:function(t,e,n){return void 0===n?[Et.dataMSB(t,Ct(e)),Et.dataLSB(t,St(e))]:[Et.dataMSB(t,e),Et.dataLSB(t,n)]},volumeF:function(t,e){return _t.volume(t,bt.to14b(e))},volume:function(t,e,n){return void 0===n?[Et.volumeMSB(t,Ct(e)),Et.volumeLSB(t,St(e))]:[Et.volumeMSB(t,e),Et.volumeLSB(t,n)]},balanceF:function(t,e){return _t.balance(t,bt.to14b((e+1)/2))},balance:function(t,e,n){return void 0===n?[Et.balanceMSB(t,Ct(e)),Et.balanceLSB(t,St(e))]:[Et.balanceMSB(t,e),Et.balanceLSB(t,n)]},panF:function(t,e){return _t.pan(t,bt.to14b((e+1)/2))},pan:function(t,e,n){return void 0===n?[Et.panMSB(t,Ct(e)),Et.panLSB(t,St(e))]:[Et.panMSB(t,e),Et.panLSB(t,n)]},expressionF:function(t,e){return _t.expression(t,bt.to14b(e))},expression:function(t,e,n){return void 0===n?[Et.expressionMSB(t,Ct(e)),Et.expressionLSB(t,St(e))]:[Et.expressionMSB(t,e),Et.expressionLSB(t,n)]},nrpn:function(t,e,n){return void 0===n?[Et.nrpnMSB(t,Ct(e)),Et.nrpnLSB(t,St(e))]:[Et.nrpnMSB(t,e),Et.nrpnLSB(t,n)]},rpn:function(t,e,n){return void 0===n?[Et.rpnMSB(t,Ct(e)),Et.rpnLSB(t,St(e))]:[Et.rpnMSB(t,e),Et.rpnLSB(t,n)]},rpnPitchBendRange:function(t,e){return _t.rpn(t,0,0).concat(_t.data(t,kt(e-e%1),Math.floor(e%1*128)))},rpnFineTuning:function(t,e){return _t.rpn(t,0,1).concat(_t.dataF(t,(e%1+1)/2))},rpnCoarseTuning:function(t,e){return _t.rpn(t,0,2).concat([Et.dataMSB(t,64+e-e%1)])},rpnTuning:function(t,e){return _t.rpnCoarseTuning(t,e).concat(_t.rpnFineTuning(t,e))},rpnTuningA:function(t,e){return _t.rpnTuning(t,bt.shift(e))}},$t={sxMasterTuning:function(t){return[Tt.sxMasterCoarseTuning(t),Tt.sxMasterFineTuning(t)]},sxMasterTuningA:function(t){return $t.sxMasterTuning(bt.shift(t))}};function At(t,e){var n=new bt;return n.ff=Nt(t),n.dd=void 0===e?"":function(t){t=""+t;for(var e=0;e<t.length;e++)t.charCodeAt(e)>255&&vt(t[e]);return t}(e),n}var Rt={smf:function(t){if(t instanceof bt)return new bt(t);var e=t instanceof Array?t:arguments,n=Nt(e[0]),r="";return 2==e.length?r=Ht(e[1]):e.length>2&&(r=Ht(Array.prototype.slice.call(e,1))),At(n,r)},smfSeqNumber:function(t){if(t==parseInt(t)){if(t<0||t>65535)throw RangeError("Sequence number out of range: "+t);t=String.fromCharCode(t>>8)+String.fromCharCode(255&t)}else if(0==(t=""+t).length)t="\0\0";else if(1==t.length)t="\0"+t;else if(t.length>2)throw RangeError("Sequence number out of range: "+Xt(t));return At(0,t)},smfText:function(t){return At(1,ct.lib.toUTF8(t))},smfCopyright:function(t){return At(2,ct.lib.toUTF8(t))},smfSeqName:function(t){return At(3,ct.lib.toUTF8(t))},smfInstrName:function(t){return At(4,ct.lib.toUTF8(t))},smfLyric:function(t){return At(5,ct.lib.toUTF8(t))},smfMarker:function(t){return At(6,ct.lib.toUTF8(t))},smfCuePoint:function(t){return At(7,ct.lib.toUTF8(t))},smfProgName:function(t){return At(8,ct.lib.toUTF8(t))},smfDevName:function(t){return At(9,ct.lib.toUTF8(t))},smfChannelPrefix:function(t){if(t==parseInt(t))U(t),t=String.fromCharCode(t);else if(0==(t=""+t).length)t="\0";else if(t.length>1||t.charCodeAt(0)>15)throw RangeError("Channel number out of range: "+Xt(t));return At(32,t)},smfMidiPort:function(t){if(t==parseInt(t)){if(t<0||t>127)throw RangeError("Port number out of range: "+t);t=String.fromCharCode(t)}else if(0==(t=""+t).length)t="\0";else if(t.length>1||t.charCodeAt(0)>127)throw RangeError("Port number out of range: "+Xt(t));return At(33,t)},smfEndOfTrack:function(t){if(""!=Ht(t))throw RangeError("Unexpected data: "+Xt(Ht(t)));return At(47)},smfTempo:function(t){if(3==(""+t).length)return At(81,t);if(t==parseInt(t)&&t>0&&t<=16777215)return At(81,String.fromCharCode(t>>16)+String.fromCharCode(t>>8&255)+String.fromCharCode(255&t));throw RangeError("Out of range: "+Xt(Ht(t)))},smfBPM:function(t){return Rt.smfTempo(Math.round(6e7/t))},smfSMPTE:function(t){if(t instanceof ht)return At(84,String.fromCharCode(t.hour)+String.fromCharCode(t.minute)+String.fromCharCode(t.second)+String.fromCharCode(t.frame)+String.fromCharCode(t.quarter%4*25));var e=""+t;if(5==e.length)return At(84,t);var n=t instanceof Array?t:Array.prototype.slice.call(arguments);return n.splice(0,0,30),Rt.smfSMPTE(new ht(n))},smfTimeSignature:function(t,e,n,r){var s,a,i,o,u=(""+t).match(/^\s*(\d+)\s*\/\s*(\d+)\s*$/);if(u){if(s=parseInt(u[1]),a=parseInt(u[2]),s>0&&s<=255&&a&&!(a&a-1)){for(i=a,a=0,i>>=1;i;i>>=1)a++;return i=e==parseInt(e)?e:24,o=n==parseInt(n)?n:8,At(88,String.fromCharCode(s)+String.fromCharCode(a)+String.fromCharCode(i)+String.fromCharCode(o))}if(4==(""+t).length)return At(88,t)}else{if(t==parseInt(t)&&e==parseInt(e)&&e&&!(e&e-1)){for(s=t,a=0,i=e,i>>=1;i;i>>=1)a++;return i=n==parseInt(n)?n:24,o=r==parseInt(r)?r:8,At(88,String.fromCharCode(s)+String.fromCharCode(a)+String.fromCharCode(i)+String.fromCharCode(o))}if(4==(""+t).length)return At(88,t)}throw RangeError("Wrong time signature: "+Xt(Ht(t)))},smfKeySignature:function(t){var e=(t=""+t).match(/^\s*([A-H][b#]?)\s*(|maj|major|dur|m|min|minor|moll)\s*$/i);if(e){var n={CB:0,GB:1,DB:2,AB:3,EB:4,BB:5,F:6,C:7,G:8,D:9,A:10,E:11,B:12,H:12,"F#":13,"C#":14,"G#":15,"D#":16,"A#":17}[e[1].toUpperCase()],r={"":0,MAJ:0,MAJOR:0,DUR:0,M:1,MIN:1,MINOR:1,MOLL:1}[e[2].toUpperCase()];void 0!==n&&void 0!==r&&(r&&(n-=3),(n-=7)>=-7&&n<0?t=String.fromCharCode(256+n)+String.fromCharCode(r):n>=0&&n<=7&&(t=String.fromCharCode(n)+String.fromCharCode(r)))}if(2==t.length&&t.charCodeAt(1)<=1&&(t.charCodeAt(0)<=7||t.charCodeAt(0)<=255&&t.charCodeAt(0)>=249))return At(89,t);throw RangeError("Incorrect key signature: "+Xt(t))},smfSequencer:function(t){return At(127,Ht(t))}};function Mt(t,e,n){t.prototype[e]=function(){return this.send(n.apply(0,arguments))}}function Dt(t,e,n){t.prototype[e]=function(){for(var t=n.apply(0,arguments),e=this,r=0;r<t.length;r++)e=e.send(t[r]);return e}}function Ot(t,e,n){t.prototype[e]=function(){return this.send(n.apply(0,[this._chan].concat(Array.prototype.slice.call(arguments))))}}function Ft(t,e,n){t.prototype[e]=function(){for(var t=n.apply(0,[this._chan].concat(Array.prototype.slice.call(arguments))),e=this,r=0;r<t.length;r++)e=e.send(t[r]);return e}}function Lt(t,e){bt[t]=function(){return new bt(e.apply(0,arguments))}}function Bt(t,e){bt[t]=function(){return e.apply(0,arguments)}}function zt(t,e){bt[t]=function(){var t,n=[],r=e.apply(0,arguments);for(t=0;t<r.length;t++)n.push(new bt(r[t]));return n}}function Pt(t,e){Lt(t,e),H.prototype[t]=function(){var t,n=Array.prototype.slice.call(arguments);n.length<e.length?n=[this._master].concat(n):(t=kt(bt.noteValue(n[0],n[0])),n[0]=this._master);var r=e.apply(0,n);return r.mpe=t,this.send(r),this}}for(r in Tt)Tt.hasOwnProperty(r)&&Lt(r,Tt[r]);for(r in Rt)Rt.hasOwnProperty(r)&&Bt(r,Rt[r]);for(r in Et)Et.hasOwnProperty(r)&&Pt(r,Et[r]);for(r in _t)_t.hasOwnProperty(r)&&zt(r,_t[r]);for(r in $t)$t.hasOwnProperty(r)&&zt(r,$t[r]);function Vt(t,e){for(r in Tt)Tt.hasOwnProperty(r)&&Mt(t,r,Tt[r]);for(r in Rt)Rt.hasOwnProperty(r)&&Mt(t,r,Rt[r]);for(r in Et)Et.hasOwnProperty(r)&&Mt(t,r,Et[r]);for(r in _t)_t.hasOwnProperty(r)&&Dt(t,r,_t[r]);for(r in $t)$t.hasOwnProperty(r)&&Dt(t,r,$t[r]);if(e){for(r in Et)Et.hasOwnProperty(r)&&Ot(e,r,Et[r]);for(r in _t)_t.hasOwnProperty(r)&&Ft(e,r,_t[r])}}Vt(L,G),H.prototype.noteOn=function(t,e){var n=bt.noteOn(this._master,t,e);return n._mpe=n[1],this.send(n),this},H.prototype.noteOff=function(t,e){var n=bt.noteOff(this._master,t,e);return n._mpe=n[1],this.send(n),this},H.prototype.aftertouch=function(t,e){var n=bt.aftertouch(this._master,t,e);return n._mpe=n[1],this.send(n),this};var Wt,Ut={a:10,b:11,c:12,d:13,e:14,f:15,A:10,B:11,C:12,D:13,E:14,F:15};for(r=0;r<16;r++)Ut[r]=r;function Gt(t){for(var e=[],n=0;n<t.length;n++)e[n]=t.charCodeAt(n);return e}function Ht(t){return t instanceof Array?function(t){for(var e="",n=0;n<t.length;n++)e+=String.fromCharCode(t[n]);return e}(t):void 0===t?"":""+t}function jt(t){return(t<16?"0":"")+t.toString(16)}function qt(t){for(var e=[],n=0;n<t.length;n++)e[n]=jt(t[n]);return e.join(" ")}function Kt(t){return t.length?": "+qt(Gt(t)):""}function Xt(t){return t.length?": "+function(t){for(var e="",n=0;n<t.length;n++)"\n"==t[n]?e+="\\n":"\r"==t[n]?e+="\\r":"\t"==t[n]?e+="\\t":t.charCodeAt(n)<32?e+="\\x"+jt(t.charCodeAt(n)):e+=t[n];return e}(ct.lib.fromUTF8(t)):""}function Yt(){var t=this instanceof Yt?this:t=new Yt;return t.reset(),arguments.length&&Yt.prototype.setup.apply(t,arguments),t}function Jt(){if(!Wt&&"undefined"!=typeof window){var t=window.AudioContext||window.webkitAudioContext;if(t){(Wt=new t)&&!Wt.createGain&&(Wt.createGain=Wt.createGainNode);var e=function(){if("running"!=Wt.state){Wt.resume();var t=Wt.createOscillator(),n=Wt.createGain();try{n.gain.value=0}catch(t){}n.gain.setTargetAtTime(0,Wt.currentTime,.01),t.connect(n),n.connect(Wt.destination),t.start||(t.start=t.noteOn),t.stop||(t.stop=t.noteOff),t.start(.1),t.stop(.11)}else document.removeEventListener("touchstart",e),document.removeEventListener("touchend",e),document.removeEventListener("mousedown",e),document.removeEventListener("keydown",e)};document.addEventListener("touchstart",e),document.addEventListener("touchend",e),document.addEventListener("mousedown",e),document.addEventListener("keydown",e),e()}}}bt.prototype.getChannel=function(){if(32==this.ff&&1==this.dd.length&&this.dd.charCodeAt(0)<16)return this.dd.charCodeAt(0);var t=this[0];return void 0===t||t<128||t>239?void 0:15&t},bt.prototype.setChannel=function(t){if(void 0===(t=Ut[t]))return this;if(32==this.ff)this.dd=String.fromCharCode(t);else{var e=this[0];void 0!==e&&e>=128&&e<=239&&(this[0]=240&e|t)}return this},bt.prototype.getNote=function(){var t=this[0];if(!(void 0===t||t<128||t>175))return this[1]},bt.prototype.setNote=function(t){var e=this[0];return void 0===e||e<128||e>175||void 0!==(t=bt.noteValue(t))&&(this[1]=t),this},bt.prototype.getVelocity=function(){var t=this[0];if(!(void 0===t||t<128||t>159))return this[2]},bt.prototype.setVelocity=function(t){var e=this[0];return void 0===e||e<128||e>159||(t=parseInt(t))>=0&&t<128&&(this[2]=t),this},bt.prototype.getSysExChannel=function(){if(240==this[0])return this[2]},bt.prototype.setSysExChannel=function(t){return 240==this[0]&&this.length>2&&(t=parseInt(t))>=0&&t<128&&(this[2]=t),this},bt.prototype.getData=function(){if(void 0!==this.dd)return this.dd.toString()},bt.prototype.setData=function(t){return this.dd=Ht(t),this},bt.prototype.getText=function(){if(void 0!==this.dd)return ct.lib.fromUTF8(this.dd)},bt.prototype.setText=function(t){return this.dd=ct.lib.toUTF8(t),this},bt.prototype.getTempo=function(){if(81==this.ff&&void 0!==this.dd)return 65536*this.dd.charCodeAt(0)+256*this.dd.charCodeAt(1)+this.dd.charCodeAt(2)},bt.prototype.getBPM=function(){var t=this.getTempo();if(t)return 6e7/t},bt.prototype.getTimeSignature=function(){if(88==this.ff&&void 0!==this.dd)return[this.dd.charCodeAt(0),1<<this.dd.charCodeAt(1)]},bt.prototype.getKeySignature=function(){if(89==this.ff&&void 0!==this.dd){var t=this.dd.charCodeAt(0),e=this.dd.charCodeAt(1);if(128&t&&(t-=256),t>=-7&&t<=7&&e>=0&&e<=1)return[t,["Cb","Gb","Db","Ab","Eb","Bb","F","C","G","D","A","E","B","F#","C#","G#","D#","A#"][e?t+10:t+7],!!e]}},bt.prototype.isNoteOn=function(){var t=this[0];return!(void 0===t||t<144||t>159)&&this[2]>0},bt.prototype.isNoteOff=function(){var t=this[0];return!(void 0===t||t<128||t>159)&&(t<144||0==this[2])},bt.prototype.isSysEx=function(){return 240==this[0]},bt.prototype.isFullSysEx=function(){return 240==this[0]&&247==this[this.length-1]},bt.prototype.isSMF=function(){return this.ff>=0&&this.ff<=127},bt.prototype.isEOT=function(){return 47==this.ff},bt.prototype.isTempo=function(){return 81==this.ff},bt.prototype.isTimeSignature=function(){return 88==this.ff},bt.prototype.isKeySignature=function(){return 89==this.ff},bt.prototype.toString=function(){var t,e;if(!this.length){if(void 0!==this.ff){if(t="ff"+jt(this.ff)+" -- ",0==this.ff)t+="Sequence Number: "+function(t){for(var e=0,n=0;n<t.length;n++)e=(e<<8)+t.charCodeAt(n);return e}(this.dd);else if(this.ff>0&&this.ff<10)t+=["","Text","Copyright","Sequence Name","Instrument Name","Lyric","Marker","Cue Point","Program Name","Device Name"][this.ff]+Xt(this.dd);else if(32==this.ff)t+="Channel Prefix"+Kt(this.dd);else if(33==this.ff)t+="MIDI Port"+Kt(this.dd);else if(47==this.ff)t+="End of Track"+Kt(this.dd);else if(81==this.ff){t+="Tempo: "+Math.round(100*this.getBPM())/100+" bpm"}else if(84==this.ff)t+="SMPTE Offset: "+yt(Gt(this.dd));else if(88==this.ff){var n=1<<this.dd.charCodeAt(1);t+="Time Signature: "+this.dd.charCodeAt(0)+"/"+n,t+=" "+this.dd.charCodeAt(2)+" "+this.dd.charCodeAt(3)}else if(89==this.ff){t+="Key Signature: ";var r=this.getKeySignature();r?(t+=r[1],r[2]&&(t+=" min")):t+="invalid"}else 127==this.ff?t+="Sequencer Specific"+Kt(this.dd):t+="SMF"+Kt(this.dd);return t}return"empty"}if(t=qt(this),this[0]<128)return t;if(e={241:"MIDI Time Code",242:"Song Position",243:"Song Select",244:"Undefined",245:"Undefined",246:"Tune request",248:"Timing clock",249:"Undefined",250:"Start",251:"Continue",252:"Stop",253:"Undefined",254:"Active Sensing",255:"Reset"}[this[0]])return t+" -- "+e;var s=this[0]>>4;return(e={8:"Note Off",10:"Aftertouch",12:"Program Change",13:"Channel Aftertouch",14:"Pitch Wheel"}[s])?t+" -- "+e:9==s?t+" -- "+(this[2]?"Note On":"Note Off"):11!=s?t:((e={0:"Bank Select MSB",1:"Modulation Wheel MSB",2:"Breath Controller MSB",4:"Foot Controller MSB",5:"Portamento Time MSB",6:"Data Entry MSB",7:"Channel Volume MSB",8:"Balance MSB",10:"Pan MSB",11:"Expression Controller MSB",12:"Effect Control 1 MSB",13:"Effect Control 2 MSB",16:"General Purpose Controller 1 MSB",17:"General Purpose Controller 2 MSB",18:"General Purpose Controller 3 MSB",19:"General Purpose Controller 4 MSB",32:"Bank Select LSB",33:"Modulation Wheel LSB",34:"Breath Controller LSB",36:"Foot Controller LSB",37:"Portamento Time LSB",38:"Data Entry LSB",39:"Channel Volume LSB",40:"Balance LSB",42:"Pan LSB",43:"Expression Controller LSB",44:"Effect control 1 LSB",45:"Effect control 2 LSB",48:"General Purpose Controller 1 LSB",49:"General Purpose Controller 2 LSB",50:"General Purpose Controller 3 LSB",51:"General Purpose Controller 4 LSB",64:"Damper Pedal On/Off",65:"Portamento On/Off",66:"Sostenuto On/Off",67:"Soft Pedal On/Off",68:"Legato Footswitch",69:"Hold 2",70:"Sound Controller 1",71:"Sound Controller 2",72:"Sound Controller 3",73:"Sound Controller 4",74:"Sound Controller 5",75:"Sound Controller 6",76:"Sound Controller 7",77:"Sound Controller 8",78:"Sound Controller 9",79:"Sound Controller 10",80:"General Purpose Controller 5",81:"General Purpose Controller 6",82:"General Purpose Controller 7",83:"General Purpose Controller 8",84:"Portamento Control",88:"High Resolution Velocity Prefix",91:"Effects 1 Depth",92:"Effects 2 Depth",93:"Effects 3 Depth",94:"Effects 4 Depth",95:"Effects 5 Depth",96:"Data Increment",97:"Data Decrement",98:"Non-Registered Parameter Number LSB",99:"Non-Registered Parameter Number MSB",100:"Registered Parameter Number LSB",101:"Registered Parameter Number MSB",120:"All Sound Off",121:"Reset All Controllers",122:"Local Control On/Off",123:"All Notes Off",124:"Omni Mode Off",125:"Omni Mode On",126:"Mono Mode On",127:"Poly Mode On"}[this[1]])||(e="Undefined"),t+" -- "+e)},bt.prototype._stamp=function(t){return this._from.push(t._orig?t._orig:t),this},bt.prototype._unstamp=function(t){if(void 0===t)this._from=[];else{t._orig&&(t=t._orig);var e=this._from.indexOf(t);e>-1&&this._from.splice(e,1)}return this},bt.prototype._stamped=function(t){t._orig&&(t=t._orig);for(var e=0;e<this._from.length;e++)if(this._from[e]==t)return!0;return!1},ct.MIDI=bt,Yt.validate=function(t){var e=t instanceof Array?t:arguments;if(e[0]!=parseInt(e[0])||e[0]<0||e[0]>14)throw RangeError("Bad master channel value: "+e[0]);if(e[1]!=parseInt(e[1])||e[1]<0||e[0]+e[1]>15)throw RangeError("Bad zone size value: "+e[1])},Yt.prototype.reset=function(){for(var t=0;t<16;t++)this[t]={band:0,master:t}},Yt.prototype.setup=function(t,e){var n;Yt.validate(t,e);var r=t+e;if((this[t].master!=t||this[t].band!=e)&&(e||this[t].band)){for(this[t].band?r<(n=t+this[t].band)&&(r=n):this[t].master==t-1?(n=t-1,r<(n+=this[n].band)&&(r=n),this[t-1]={band:0,master:t-1}):this[t].master!=t&&(n=this[t].master,r<(n+=this[n].band)&&(r=n),this[this[t].master].band=t-this[t].master-1),this[t].master=t,this[t].band=e,n=t+1;n<=t+e;n++)this[n].band&&r<n+this[n].band&&(r=n+this[n].band),this[n]={band:0,master:t};for(;n<=r;n++)this[n]={band:0,master:n}}},Yt.prototype.filter=function(t){var e=t.getChannel();if(!this[e]||!this[this[e].master].band)return t;var n,r,s,a=this[e].master,i=this[a].band;if(void 0!==t._mpe){for(s=256,n=a+1;n<=a+i;n++)if(this[n].notes){for(s>this[n].notes.length&&(e=n,s=this[n].notes.length),r=0;r<this[n].notes.length;r++)if(this[n].notes[r]==t._mpe){e=n,s=-1;break}}else s>0&&(e=n,s=0);t.setChannel(e),t._mpe=void 0}return e==a||(t.isNoteOn()?(this[e].notes||(this[e].notes=[]),v(this[e].notes,t.getNote())):t.isNoteOff()&&this[e].notes&&I(this[e].notes,t.getNote())),t},ct.MPE=Yt,(ct.lib={}).now=c,ct.lib.schedule=h,ct.lib.openMidiOut=function(t,e){var n=new L;return e._openOut(n),n._info=e._info(t),n},ct.lib.openMidiIn=function(t,e){var n=new L;return e._openIn(n),n._info=e._info(t),n},ct.lib.registerMidiOut=function(t,e){for(var n=e._info(t),r=0;r<Q._outs.length;r++)if(Q._outs[r].name==n.name)return!1;return n.engine=e,Q._outs.push(n),S&&($(),S._bad&&(S._repair(),S._resume())),!0},ct.lib.registerMidiIn=function(t,e){for(var n=e._info(t),r=0;r<Q._ins.length;r++)if(Q._ins[r].name==n.name)return!1;return n.engine=e,Q._ins.push(n),S&&($(),S._bad&&(S._repair(),S._resume())),!0},ct.lib.copyMidiHelpers=Vt,ct.lib.getAudioContext=function(){return Jt(),Wt};var Zt="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";ct.lib.fromBase64=function(t){var e,n,r,s,a,i,o="",u=0;for(t=t.replace(/[^A-Za-z0-9+/=]/g,"");u<t.length;)e=Zt.indexOf(t.charAt(u++))<<2|(s=Zt.indexOf(t.charAt(u++)))>>4,n=(15&s)<<4|(a=Zt.indexOf(t.charAt(u++)))>>2,r=(3&a)<<6|(i=Zt.indexOf(t.charAt(u++))),o+=String.fromCharCode(e),64!=a&&(o+=String.fromCharCode(n)),64!=i&&(o+=String.fromCharCode(r));return o},ct.lib.toBase64=function(t){var e,n,r,s,a,i=0,o=0,u="",l=[];if(!t)return t;do{e=(a=t.charCodeAt(i++)<<16|t.charCodeAt(i++)<<8|t.charCodeAt(i++))>>18&63,n=a>>12&63,r=a>>6&63,s=63&a,l[o++]=Zt.charAt(e)+Zt.charAt(n)+Zt.charAt(r)+Zt.charAt(s)}while(i<t.length);u=l.join("");var c=t.length%3;return c?u.slice(0,c-3)+"===".slice(c):u},ct.lib.fromUTF8=function(t){t=void 0===t?"":""+t;var e,n,r,s="";for(e=0;e<t.length;e++){if((n=t.charCodeAt(e))>255)return t;if(n<128)s+=t[e];else if(192==(224&n)){if(n=(31&n)<<6,++e>=t.length)return t;if(128!=(192&(r=t.charCodeAt(e))))return t;n+=63&r,s+=String.fromCharCode(n)}else if(224==(240&n)){if(n=(15&n)<<12,++e>=t.length)return t;if(128!=(192&(r=t.charCodeAt(e))))return t;if(n+=(63&r)<<6,++e>=t.length)return t;if(128!=(192&(r=t.charCodeAt(e))))return t;n+=63&r,s+=String.fromCharCode(n)}else if(240==(248&n)){if(n=(7&n)<<18,++e>=t.length)return t;if(128!=(192&(r=t.charCodeAt(e))))return t;if(n+=(63&r)<<12,++e>=t.length)return t;if(128!=(192&(r=t.charCodeAt(e))))return t;if(n+=(63&r)<<6,++e>=t.length)return t;if(128!=(192&(r=t.charCodeAt(e))))return t;if((n+=63&r)>1114111)return t;n-=65536,s+=String.fromCharCode(55296+(n>>10)),s+=String.fromCharCode(56320+(1023&n))}}return s},ct.lib.toUTF8=function(t){t=void 0===t?"":""+t;var e,n,r="";for(e=0;e<t.length;e++)(n=t.charCodeAt(e))<128?r+=t[e]:n<2048?(r+=String.fromCharCode(192+(n>>6)),r+=String.fromCharCode(128+(63&n))):n<65536?(r+=String.fromCharCode(224+(n>>12)),r+=String.fromCharCode(128+(n>>6&63)),r+=String.fromCharCode(128+(63&n))):(r+=String.fromCharCode(240+(n>>18)),r+=String.fromCharCode(128+(n>>12&63)),r+=String.fromCharCode(128+(n>>6&63)),r+=String.fromCharCode(128+(63&n)));return r};var Qt=[],te={},ee={},ne=i.Promise;function re(t,e,n){this.name=t,this.message=e,this.code=n}function se(t,e){this.bubbles=!1,this.cancelBubble=!1,this.cancelable=!1,this.currentTarget=e,this.defaultPrevented=!1,this.eventPhase=0,this.path=[],this.port=t,this.returnValue=!0,this.srcElement=e,this.target=e,this.timeStamp=c(),this.type="statechange"}function ae(t,e){this.bubbles=!1,this.cancelBubble=!1,this.cancelable=!1,this.currentTarget=t,this.data=e,this.defaultPrevented=!1,this.eventPhase=0,this.path=[],this.receivedTime=c(),this.returnValue=!0,this.srcElement=t,this.target=t,this.timeStamp=this.receivedTime,this.type="midimessage"}function ie(t,e){t&&(t.onstatechange&&t.onstatechange(new se(t,t)),e.onstatechange&&e.onstatechange(new se(t,e)))}function oe(t,e){var n=this,r=!1,s=null,a=null;this.type="input",this.id=e.id,this.name=e.name,this.manufacturer=e.man,this.version=e.ver,Object.defineProperty(this,"state",{get:function(){return e.connected?"connected":"disconnected"},enumerable:!0}),Object.defineProperty(this,"connection",{get:function(){return r?e.proxy?"open":"pending":"closed"},enumerable:!0}),Object.defineProperty(this,"onmidimessage",{get:function(){return a},set:function(t){if(t instanceof Function){if(a=t,!r)try{n.open()}catch(t){}}else a=null},enumerable:!0}),Object.defineProperty(this,"onstatechange",{get:function(){return s},set:function(t){s=t instanceof Function?t:null},enumerable:!0}),this.open=function(){return new ne((function(s,a){r?s(n):e.open().then((function(){r||(r=!0,ie(n,t)),s(n)}),(function(){a(new re("InvalidAccessError","Port is not available",15))}))}))},this.close=function(){return new ne((function(s){r&&(r=!1,e.close(),ie(n,t)),s(n)}))},Object.freeze(this)}function ue(t){for(var e,n;t.length;){for(e=0;e<t.length&&!(t[e]==parseInt(t[e])&&t[e]>=128&&t[e]<=255&&247!=t[e]);e++);if(t.splice(0,e),!t.length)return;if(240==t[0]){for(e=1;e<t.length&&247!=t[e];e++);if(e==t.length)return;return t.splice(0,e+1)}if((n=ce(t[0])+1)>t.length)return;for(e=1;e<n&&!(t[e]!=parseInt(t[e])||t[e]<0||t[e]>=128);e++);if(e==n)return t.splice(0,e);t.splice(0,e)}}function le(e,n,r,s){var a=this;this.id=e,this.name=n,this.man=r,this.ver=s,this.connected=!0,this.ports=[],this.pending=[],this.proxy=void 0,this.queue=[],this.onmidi=function(e){var n;for(a.queue=a.queue.concat(e.slice()),n=ue(a.queue);n;n=ue(a.queue))for(t=0;t<a.ports.length;t++)a.ports[t][0].onmidimessage&&(240!=n[0]||a.ports[t][1])&&a.ports[t][0].onmidimessage(new ae(a,new Uint8Array(n)))}}function ce(t){return t>=128&&t<=191||t>=224&&t<=239||242==t?2:t>=192&&t<=223||241==t||243==t?1:0}"function"!=typeof ne&&((ne=function(t){this.executor=t}).prototype.then=function(t,e){"function"!=typeof t&&(t=function(){}),"function"!=typeof e&&(e=function(){}),this.executor(t,e)}),le.prototype.open=function(){var t=this;return new ne((function(e,n){var r;t.proxy||!t.connected?e():(t.pending.push([e,n]),1==t.pending.length&&ct().openMidiIn(t.name).or((function(){for(r=0;r<t.pending.length;r++)t.pending[r][1]();t.pending=[]})).and((function(){for(t.proxy=this,t.proxy.connect(t.onmidi),r=0;r<t.pending.length;r++)t.pending[r][0]();t.pending=[]})))}))},le.prototype.close=function(){var t;if(this.proxy){for(t=0;t<this.ports.length;t++)if("open"==this.ports[t].connection)return;this.proxy.close(),this.proxy=void 0}},le.prototype.disconnect=function(){this.connected=!1,this.proxy&&(this.proxy.close(),this.proxy=void 0)},le.prototype.reconnect=function(){var t,e,n=this,r=[];for(this.connected=!0,t=0;t<Qt.length;t++)"closed"==(e=Qt[t].inputs.get(this.id)).connection?ie(e,Qt[t]):r.push([e,Qt[t]]);r.length&&ct()._openMidiInNR(n.name).or((function(){for(t=0;t<r.length;t++)r[t][0].close()})).and((function(){for(n.proxy=this,n.proxy.connect(n.onmidi),t=0;t<r.length;t++)ie(r[t][0],r[t][1])}))};var he="Failed to execute 'send' on 'MIDIOutput': ";function pe(t,e){var n=this,r=!1,s=null;this.type="output",this.id=e.id,this.name=e.name,this.manufacturer=e.man,this.version=e.ver,Object.defineProperty(this,"state",{get:function(){return e.connected?"connected":"disconnected"},enumerable:!0}),Object.defineProperty(this,"connection",{get:function(){return r?e.proxy?"open":"pending":"closed"},enumerable:!0}),Object.defineProperty(this,"onstatechange",{get:function(){return s},set:function(t){s=t instanceof Function?t:null},enumerable:!0}),this.open=function(){return new ne((function(s,a){r?s(n):e.open().then((function(){r||(r=!0,ie(n,t)),s(n)}),(function(){a(new re("InvalidAccessError","Port is not available",15))}))}))},this.close=function(){return new ne((function(s){r&&(r=!1,n.clear(),e.close(),ie(n,t)),s(n)}))},this.clear=function(){},this.send=function(s,a){if(function(t,e){var n,r,s,a=[];for(n=0;n<t.length;n++)if(t[n]!=parseInt(t[n])||t[n]<0||t[n]>255)throw TypeError(he+t[n]+" is not a UInt8 value.");for(r=0,n=0;n<t.length;n++)if(r){if(t[n]>127)throw TypeError(he+"Unexpected status byte at index "+n+" ("+t[n]+").");s.push(t[n]),r--}else{if(t[n]<128)throw TypeError(he+"Running status is not allowed at index "+n+" ("+t[n]+").");if(247==t[n])throw TypeError(he+"Unexpected end of system exclusive message at index "+n+" ("+t[n]+").");if(s=[t[n]],a.push(s),240==t[n]){if(!e)throw new re("InvalidAccessError",he+"System exclusive messag is not allowed at index "+n+" ("+t[n]+").",15);for(r=-1;n<t.length;n++)if(s.push(t[n]),247==t[n]){r=0;break}}else r=ce(t[n])}if(r)throw TypeError(he+"Message is incomplete")}(s,t.sysexEnabled),!e.connected)throw new re("InvalidStateError","Port is not connected",11);if(r){var i=c();a>i?setTimeout((function(){e.proxy.send(s)}),a-i):e.proxy.send(s)}else this.open().then((function(){n.send(s,a)}))},Object.freeze(this)}function de(t,e,n,r){this.id=t,this.name=e,this.man=n,this.ver=r,this.connected=!0,this.ports=[],this.pending=[],this.proxy=void 0}function fe(t){this.has=function(e){return t.hasOwnProperty(e)&&t[e].connected},this.keys=function(){try{var e=new Map;for(var n in t)this.has(n)&&e.set(n,this.get(n));return e.keys()}catch(t){}},this.values=function(){try{var e=new Map;for(var n in t)this.has(n)&&e.set(n,this.get(n));return e.values()}catch(t){}},this.entries=function(){try{var e=new Map;for(var n in t)this.has(n)&&e.set(n,this.get(n));return e.entries()}catch(t){}},this.forEach=function(e,n){for(var r in void 0===n&&(n=this),t)this.has(r)&&e.call(n,this.get(r),r,this)},Object.defineProperty(this,"size",{get:function(){var e=0;for(var n in t)this.has(n)&&e++;return e},enumerable:!0})}function me(t,e){this.get=function(n){if(ee.hasOwnProperty(n)&&ee[n].connected)return e[n]||(e[n]=new oe(t,ee[n]),ee[n].ports.push([e[n],t.sysexEnabled])),e[n]},Object.freeze(this)}function ge(t,e){this.get=function(n){if(te.hasOwnProperty(n)&&te[n].connected)return e[n]||(e[n]=new pe(t,te[n]),te[n].ports.push([e[n],t.sysexEnabled])),e[n]},Object.freeze(this)}function ye(t){var e,n,r,s;for(e=0;e<t.inputs.added.length;e++)r=t.inputs.added[e],ee.hasOwnProperty(r.id)||(ee[r.id]=new le(r.id,r.name,r.manufacturer,r.version)),ee[r.id].reconnect();for(e=0;e<t.outputs.added.length;e++)r=t.outputs.added[e],te.hasOwnProperty(r.id)||(te[r.id]=new de(r.id,r.name,r.manufacturer,r.version)),te[r.id].reconnect();for(e=0;e<t.inputs.removed.length;e++)if(r=t.inputs.removed[e],ee.hasOwnProperty(r.id)){for(s=[],n=0;n<Qt.length;n++)s.push([Qt[n].inputs.get(r.id),Qt[n]]);for(ee[r.id].disconnect(),n=0;n<s.length;n++)ie(s[n][0],s[n][1])}for(e=0;e<t.outputs.removed.length;e++)if(r=t.outputs.removed[e],te.hasOwnProperty(r.id)){for(s=[],n=0;n<Qt.length;n++)s.push([Qt[n].outputs.get(r.id),Qt[n]]);for(te[r.id].disconnect(),n=0;n<s.length;n++)ie(s[n][0],s[n][1])}}function be(t){var e,n,r=null;this.sysexEnabled=t,this.inputs=new me(this,{}),this.outputs=new ge(this,{}),Object.defineProperty(this,"onstatechange",{get:function(){return r},set:function(t){r=t instanceof Function?t:null},enumerable:!0}),Object.freeze(this);var s=S._info;for(e=0;e<s.inputs.length;e++)n=s.inputs[e],ee.hasOwnProperty(n.id)||(ee[n.id]=new le(n.id,n.name,n.manufacturer,n.version));for(e=0;e<s.outputs.length;e++)n=s.outputs[e],te.hasOwnProperty(n.id)||(te[n.id]=new de(n.id,n.name,n.manufacturer,n.version));Qt.length||ct().onChange(ye),Qt.push(this)}return de.prototype.open=function(){var t=this;return new ne((function(e,n){var r;t.proxy||!t.connected?e():(t.pending.push([e,n]),1==t.pending.length&&ct().openMidiOut(t.name).or((function(){for(r=0;r<t.pending.length;r++)t.pending[r][1]();t.pending=[]})).and((function(){for(t.proxy=this,r=0;r<t.pending.length;r++)t.pending[r][0]();t.pending=[]})))}))},de.prototype.close=function(){var t;if(this.proxy){for(t=0;t<this.ports.length;t++)if("open"==this.ports[t].connection)return;this.proxy.close(),this.proxy=void 0}},de.prototype.disconnect=function(){this.connected=!1,this.proxy&&(this.proxy.close(),this.proxy=void 0)},de.prototype.reconnect=function(){var t,e,n=this,r=[];for(this.connected=!0,t=0;t<Qt.length;t++)"closed"==(e=Qt[t].outputs.get(this.id)).connection?ie(e,Qt[t]):r.push([e,Qt[t]]);r.length&&ct()._openMidiOutNR(n.name).or((function(){for(t=0;t<r.length;t++)r[t][0].close()})).and((function(){for(n.proxy=this,t=0;t<r.length;t++)ie(r[t][0],r[t][1])}))},me.prototype=new fe(ee),me.prototype.constructor=me,ge.prototype=new fe(te),ge.prototype.constructor=ge,ct.requestMIDIAccess=function(t){return new ne((function(e,n){ct.JZZ(t).or((function(){})).and((function(){var r=!(!t||!t.sysex);if(r&&!this.info().sysex)n(new re("SecurityError","Sysex is not allowed",18));else{var s=new be(r);e(s)}}))}))},"undefined"==typeof navigator||navigator.requestMIDIAccess||(navigator.requestMIDIAccess=ct.requestMIDIAccess),ct.close=function(){Z._close&&Z._close()},ct}))}const fC=new class extends JS{constructor(){super(),this.interface=null,this.validation=!0,this._inputs=[],this._outputs=[],this._stateChangeQueue=[],this._octaveOffset=0,this.isNode&&(e.performance=Gn().performance,e.navigator=(pC||(pC=!0,dC()),hC))}async enable(t={},e=!1){if(this.enabled)return Promise.resolve();this.validation=!1!==t.validation,this.validation&&("function"==typeof t&&(t={callback:t,sysex:e}),e&&(t.sysex=!0)),this.supported||await new Promise(((e,n)=>{const r=this.time,s=setInterval((()=>{if(this.supported)clearInterval(s),e();else if(this.time>r+1500){clearInterval(s);let e=new Error("Web MIDI API support is not available in your environment.");"function"==typeof t.callback&&t.callback(e),n(e)}}),25)}));try{this.interface=await navigator.requestMIDIAccess({sysex:t.sysex,software:t.software})}catch(e){return"function"==typeof t.callback&&t.callback(e),Promise.reject(e)}let n={timestamp:this.time,target:this,type:"enabled"};this.emit("enabled",n),"function"==typeof t.callback&&t.callback(),this.interface.onstatechange=this._onInterfaceStateChange.bind(this);try{let t=await this._updateInputsAndOutputs();return Promise.resolve({inputs:t[0],outputs:t[1]})}catch(t){return Promise.reject(t)}}async disable(){if(!this.supported)throw new Error("The Web MIDI API is not supported by your environment.");return this._destroyInputsAndOutputs().then((()=>{this.isNode&&navigator.close(),this.interface&&(this.interface.onstatechange=void 0),this.interface=null;let t={timestamp:this.time,target:this,type:"disabled"};this.emit("disabled",t),this.removeListener()}))}getInputById(t){if(this.validation){if(!this.enabled)throw new Error("WebMidi is not enabled.");if(!t)return!1}for(let e=0;e<this.inputs.length;e++)if(this.inputs[e].id===t.toString())return this.inputs[e];return!1}getInputByName(t){if(this.validation){if(!this.enabled)throw new Error("WebMidi is not enabled.");if(!t)return!1;t=t.toString()}for(let e=0;e<this.inputs.length;e++)if(~this.inputs[e].name.indexOf(t))return this.inputs[e];return!1}getOutputByName(t){if(this.validation){if(!this.enabled)throw new Error("WebMidi is not enabled.");if(!t)return!1;t=t.toString()}for(let e=0;e<this.outputs.length;e++)if(~this.outputs[e].name.indexOf(t))return this.outputs[e];return!1}getOutputById(t){if(this.validation){if(!this.enabled)throw new Error("WebMidi is not enabled.");if(!t)return!1}for(let e=0;e<this.outputs.length;e++)if(this.outputs[e].id===t.toString())return this.outputs[e];return!1}getNoteNumberByName(t){this.validation&&"string"!=typeof t&&(t="");let e=t.match(/([CDEFGAB])(#{0,2}|b{0,2})(-?\d+)/i);if(!e)return!1;let n={C:0,D:2,E:4,F:5,G:7,A:9,B:11}[e[1].toUpperCase()],r=12*(parseInt(e[3])+1-Math.floor(this.octaveOffset))+n;return e[2].toLowerCase().indexOf("b")>-1?r-=e[2].length:e[2].toLowerCase().indexOf("#")>-1&&(r+=e[2].length),!(r<0||r>127)&&r}noteNameToNumber(t){return console.warn("The noteNameToNumber() method has been deprecated. Use getNoteNumberByName() instead."),this.getNoteNumberByName(t)}getOctave(t){return this.validation&&(t=parseInt(t)),!isNaN(t)&&t>=0&&t<=127&&Math.floor(t/12-1)+this.octaveOffset}sanitizeChannels(t){let e;if(this.validation)if("all"===t)e=["all"];else if("none"===t)return[];return e=Array.isArray(t)?t:[t],e.indexOf("all")>-1&&(e=[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]),e.map((function(t){return parseInt(t)})).filter((function(t){return t>=1&&t<=16}))}toMIDIChannels(t){return this.validation&&console.warn("The toMIDIChannels() method has been deprecated. Use sanitizeChannels() instead."),this.sanitizeChannels(t)}guessNoteNumber(t){let e=!1;return Number.isInteger(t)&&t>=0&&t<=127||parseInt(t)>=0&&parseInt(t)<=127?e=parseInt(t):("string"==typeof t||t instanceof String)&&(e=this.getNoteNumberByName(t)),!1!==e&&e}getValidNoteArray(t,e={}){let n=[];return Array.isArray(t)||(t=[t]),t.forEach((t=>{n.push(this.getNoteObject(t,e))})),n}getNoteObject(t,e){if(t instanceof rC)return t;{let n=this.guessNoteNumber(t);if(!1!==n)return new rC(n,e);throw new TypeError(`The input could not be parsed as a note (${t})`)}}convertToTimestamp(t){let e=!1,n=parseFloat(t);return!isNaN(n)&&("string"==typeof t&&"+"===t.substring(0,1)?n>=0&&(e=this.time+n):n>=0&&(e=n),e)}async _destroyInputsAndOutputs(){let t=[];return this.inputs.forEach((e=>t.push(e.destroy()))),this.outputs.forEach((e=>t.push(e.destroy()))),Promise.all(t).then((()=>{this._inputs=[],this._outputs=[]}))}_onInterfaceStateChange(t){this._updateInputsAndOutputs();let e={timestamp:t.timeStamp,type:t.port.state};this.interface&&"connected"===t.port.state?"output"===t.port.type?(e.port=this.getOutputById(t.port.id),e.target=e.port):"input"===t.port.type&&(e.port=this.getInputById(t.port.id),e.target=e.port):(e.port={connection:"closed",id:t.port.id,manufacturer:t.port.manufacturer,name:t.port.name,state:t.port.state,type:t.port.type},e.target=e.port),this.emit(t.port.state,e)}async _updateInputsAndOutputs(){return Promise.all([this._updateInputs(),this._updateOutputs()])}async _updateInputs(){let t=[];for(let t=0;t<this._inputs.length;t++){let e=!0,n=this.interface.inputs.values();for(let r=n.next();r&&!r.done;r=n.next())if(this._inputs[t]._midiInput===r.value){e=!1;break}e&&this._inputs.splice(t,1)}return this.interface&&this.interface.inputs.forEach((e=>{let n=!0;for(let t=0;t<this._inputs.length;t++)this._inputs[t]._midiInput===e&&(n=!1);if(n){let n=new tC(e);this._inputs.push(n),t.push(n.open())}})),Promise.all(t)}async _updateOutputs(){let t=[];for(let t=0;t<this._outputs.length;t++){let e=!0,n=this.interface.outputs.values();for(let r=n.next();r&&!r.done;r=n.next())if(this._outputs[t]._midiOutput===r.value){e=!1;break}e&&(this._outputs[t].close(),this._outputs.splice(t,1))}return this.interface&&this.interface.outputs.forEach((e=>{let n=!0;for(let t=0;t<this._outputs.length;t++)this._outputs[t]._midiOutput===e&&(n=!1);if(n){let n=new nC(e);this._outputs.push(n),t.push(n.open())}})),Promise.all(t)}get enabled(){return null!==this.interface}get inputs(){return this._inputs}get isNode(){return"[object process]"===Object.prototype.toString.call(void 0!==YS?YS:0)}get octaveOffset(){return this._octaveOffset}set octaveOffset(t){if(this.validation&&(t=parseInt(t),isNaN(t)))throw new TypeError("The 'octaveOffset' property must be a valid number.");this._octaveOffset=t}get outputs(){return this._outputs}get supported(){return!(!navigator||!navigator.requestMIDIAccess)}get sysexEnabled(){return!(!this.interface||!this.interface.sysexEnabled)}get time(){return performance.now()}get MIDI_CHANNEL_VOICE_MESSAGES(){return{noteoff:8,noteon:9,keyaftertouch:10,controlchange:11,channelmode:11,nrpn:11,programchange:12,channelaftertouch:13,pitchbend:14}}get MIDI_CHANNEL_MESSAGES(){return console.warn("MIDI_CHANNEL_MESSAGES has been deprecated. Use MIDI_CHANNEL_VOICE_MESSAGES instead."),this.MIDI_CHANNEL_VOICE_MESSAGES}get MIDI_CHANNEL_MODE_MESSAGES(){return{allsoundoff:120,resetallcontrollers:121,localcontrol:122,allnotesoff:123,omnimodeoff:124,omnimodeon:125,monomodeon:126,polymodeon:127}}get MIDI_CONTROL_CHANGE_MESSAGES(){return{bankselectcoarse:0,modulationwheelcoarse:1,breathcontrollercoarse:2,footcontrollercoarse:4,portamentotimecoarse:5,dataentrycoarse:6,volumecoarse:7,balancecoarse:8,pancoarse:10,expressioncoarse:11,effectcontrol1coarse:12,effectcontrol2coarse:13,generalpurposeslider1:16,generalpurposeslider2:17,generalpurposeslider3:18,generalpurposeslider4:19,bankselectfine:32,modulationwheelfine:33,breathcontrollerfine:34,footcontrollerfine:36,portamentotimefine:37,dataentryfine:38,volumefine:39,balancefine:40,panfine:42,expressionfine:43,effectcontrol1fine:44,effectcontrol2fine:45,holdpedal:64,portamento:65,sustenutopedal:66,softpedal:67,legatopedal:68,hold2pedal:69,soundvariation:70,resonance:71,soundreleasetime:72,soundattacktime:73,brightness:74,soundcontrol6:75,soundcontrol7:76,soundcontrol8:77,soundcontrol9:78,soundcontrol10:79,generalpurposebutton1:80,generalpurposebutton2:81,generalpurposebutton3:82,generalpurposebutton4:83,reverblevel:91,tremololevel:92,choruslevel:93,celestelevel:94,phaserlevel:95,databuttonincrement:96,databuttondecrement:97,nonregisteredparametercoarse:98,nonregisteredparameterfine:99,registeredparametercoarse:100,registeredparameterfine:101}}get MIDI_INTERFACE_EVENTS(){return["connected","disconnected"]}get MIDI_NRPN_MESSAGES(){return{entrymsb:6,entrylsb:38,increment:96,decrement:97,paramlsb:98,parammsb:99,nullactiveparameter:127}}get MIDI_REGISTERED_PARAMETER(){return{pitchbendrange:[0,0],channelfinetuning:[0,1],channelcoarsetuning:[0,2],tuningprogram:[0,3],tuningbank:[0,4],modulationrange:[0,5],azimuthangle:[61,0],elevationangle:[61,1],gain:[61,2],distanceratio:[61,3],maximumdistance:[61,4],maximumdistancegain:[61,5],referencedistanceratio:[61,6],panspreadangle:[61,7],rollangle:[61,8]}}get MIDI_SYSTEM_MESSAGES(){return{sysex:240,timecode:241,songposition:242,songselect:243,tunerequest:246,tuningrequest:246,sysexend:247,clock:248,start:250,continue:251,stop:252,activesensing:254,reset:255,midimessage:0,unknownsystemmessage:-1}}get NOTES(){return["C","C#","D","D#","E","F","F#","G","G#","A","A#","B"]}};fC.constructor=null;var mC,gC=(mC={})&&mC.__esModule?mC.default:mC;const yC=async t=>async function(t){return new Promise((async(e,n)=>{let r;(t=t||document.createElement("video")).onloadedmetadata=n=>{t.play(),t.width=t.videoWidth,t.height=t.videoHeight,console.log("Video camera",t),e(r)},t.onerror=t=>n(r);try{r=await navigator.mediaDevices.getUserMedia({audio:!1,video:{facingMode:"user"}}),t.srcObject=r}catch(t){n(t)}}))}(t);const bC=async t=>async function(t){return new Promise((async(e,n)=>{const r=()=>{t.width=t.naturalWidth,t.height=t.naturalHeight};t.naturalWidth>0?(r(),e(t)):(t.onloaded=()=>{r(),e(t)},t.onerror=t=>n(t))}))}(t),xC=document.querySelector("canvas"),wC=xC.getContext("2d");let vC=xC.width,IC=xC.height;const kC=(t,e="blue")=>{wC.fillStyle=e;const n=t[0],r=t[1],s=t[2],a=t[3],i=t[4];wC.strokeWidth=0;wC.beginPath(),wC.fillStyle="blue",wC.arcTo(s[0],s[1],r[0],r[1],6),wC.arcTo(r[0],r[1],i[0],i[1],6),wC.arcTo(i[0],i[1],a[0],a[1],6),wC.arcTo(a[0],a[1],s[0],s[1],6),wC.fill();wC.beginPath(),wC.fillStyle="black",wC.arc(n[0],n[1],2,0,sS),wC.fill()},NC=(t,e,n=5,r="blue",s=!1)=>{wC.fillStyle=r,wC.beginPath(),wC.arc(e[0],e[1],n,0,sS),wC.fill(),wC.beginPath(),wC.arc(t[0],t[1],n,0,sS),wC.fill(),wC.beginPath(),wC.moveTo(t[0],t[1]),wC.strokeStyle="orange",wC.fillStyle="orange",wC.lineTo(e[0],e[1]),s&&(wC.stroke(),wC.fillStyle=RS,wC.font="12px Oxanium",wC.textAlign="center",wC.fillText(`${Math.floor(mouthRange)}px`,t[0],t[1]-20))},SC=(t,e="yellow",n=!0)=>{const{annotations:r,mouthRange:s,mouthWidth:a,mouthOpen:i}=t,{lipsUpperInner:o,lipsLowerInner:u}=r,l=[o,u],c=o[5],h=u[5],p=wC.createLinearGradient(0,0,a,s);p.addColorStop(0,e),p.addColorStop(.5,"black"),p.addColorStop(1,e),wC.beginPath(),wC.moveTo(o[0][0],o[0][1]),wC.fillStyle=p;for(let t=0,e=l.length;t<e;t++){const e=l[t];for(let t=0,n=e.length;t<n;t++){const n=e[t][0],r=e[t][1];wC.lineTo(n,r)}}return wC.fill(),n&&NC(h,c,5),{lipUpperMiddle:c,lipLowerMiddle:h}},CC=(t,e,n="",r="10px",s="center")=>{wC.font=`900 ${r} Oxanium`,wC.textAlign=s,wC.fillStyle="white",wC.strokeStyle="black",wC.strokeText(`${n}`,t,e),wC.fillText(`${n}`,t,e)},EC=(t,e,n="")=>{const{bottomRight:r,topLeft:s}=t,a=`${e.toUpperCase()} - ${n}`;CC(s[0],s[1],a,"24px")},TC=function(t){return t*t};let _C=0;const $C=t=>_C+=t,AC=t=>{wC.fillStyle="hsla(90, 80%, "+(t?90:10)+"%, 0.9)",wC.strokeWidth=10,wC.font="32px Oxanium",wC.textAlign="right",wC.fillText("Quantise",10,10),wC.strokeRect(0,0,vC,IC)},RC={...MS,LIPS_RANGE:40,delayTime:.14,delayLength:10,feedback:.1,mouthCutOff:.2,mouthSilence:.05,volumeRate:.7,precision:2,ease:function(t){const e=t-1;return e*e*e+1}};class MC{constructor(t,e,n,r={}){this.options=Object.assign({},RC,r),this.name=t,this.counter=0,this.instrumentLoading=!1,this.data=null,this.audioContext=e,this.active=!1,this.tracks=0,this.octave=4,this.midiChannel="all",this.hue=r.hue||360*Math.random(),this.saturation=40,this.precision=Math.pow(10,parseInt(this.options.precision)),this.singing=!1,this.isMouthOpen=!1,this.lastNoteName="A0",this.debug=r.debug||!1,this.mouthScale=((t,e=1)=>{const n=1/(e-t);return e=>n*(e-t)})(this.options.mouthCutOff),this.stereoNode=e.createStereoPanner();const s=e.createDelay(this.options.delayLength),a=e.createGain();s.delayTime.value=this.options.delayTime,a.gain.value=this.options.feedback,this.gainNode=e.createGain(),this.gainNode.gain.value=0,this.stereoNode.connect(this.gainNode),this.gainNode.connect(n),this.button=document.getElementById(t),this.button.addEventListener("click",(t=>{this.instrumentLoading||this.loadInstrument(dS()),t.preventDefault()})),this.button.addEventListener("mouseover",(t=>{this.isMouseOver=!0})),this.button.addEventListener("mouseout",(t=>{this.isMouseOver=!1}))}get instrumentName(){return this.instrument?this.instrument.name:"loading"}get instrumentTitle(){return this.instrument?this.instrument.title:"loading"}get instrumentIndex(){return oS.indexOf(this.instrumentName)}get hasMIDI(){return this.midi&&this.midiChannel>-1}update(t){this.counter++,this.data=t}draw(t){if(!t&&!this.prediction)return;t||(t=this.prediction);let e=this.hue;this.instrumentLoading&&(e+=120);let n=this.saturation;const r=this.options;r.dots=e,r.mouth=`hsla(${(e+30)%360},${n}%,40%,0.8)`,r.mouthClosed=`hsla(${(e+30)%360},${n}%,10%,0.99)`,r.lipsUpperInner=`hsla(${(e+50)%360},${n}%,50%,1)`,r.lipsLowerInner=`hsla(${(e+50)%360},${n}%,50%,1)`,r.midwayBetweenEyes=`hsla(${(e+270)%360},${n}%,50%,1)`,r.leftEyeLower0=`hsla(${(e+300)%360},${n}%,50%,0.8)`,r.rightEyeLower0=`hsla(${(e+300)%360},${n}%,50%,0.8)`,r.leftEyeIris=`hsla(${(e+90)%360},${n}%,50%,1)`,r.rightEyeIris=`hsla(${(e+90)%360},${n}%,50%,1)`,((t,e=60,n=3,r=!0)=>{const{scaledMesh:s}=t,a=s.length;for(let t=0;t<a;t++){const i=s[t][0],o=s[t][1],u=1-(s[t][2]+45)/45,l=aS(n*TC(u),1,n),c=aS(u,.5,1);wC.beginPath(),r&&t===_C%a?(wC.stroke(),wC.font="22px Oxanium",wC.textAlign="center",wC.fillText(`#${t}`,i+l+1,o),wC.fillStyle="hsla(0,90%,70%,1)",wC.arc(i,o,3*l,0,sS)):(wC.fillStyle=`hsla(${e},70%,50%,${c})`,wC.arc(i,o,l,0,sS)),wC.fill()}})(t,r.dots,this.debug),((t,e=MS,n=!1,r=!1,s=!1)=>{const{scaledMesh:a,annotations:i}=t,{lipsUpperInner:o,lipsLowerInner:u}=i;SC(t,r&&n?e.mouth:e.mouthClosed,s);const{leftEyeIris:l,rightEyeIris:c}=i;kC(l,e.leftEyeIris),kC(c,e.rightEyeIris);const{leftEyeLower0:h,rightEyeLower0:p,midwayBetweenEyes:d}=i})(t,r,this.singing,this.isMouthOpen,this.debug);const{bottomRight:s,topLeft:a}=t.boundingBox,i=Math.abs(s[0]-a[0]),o=Math.abs(s[1]-a[1]);if(this.counter%12==0&&(this.button.style.setProperty("--person-a-x",`${s[0]}`),this.button.style.setProperty("--person-a-y",a[1]),this.button.style.setProperty("--person-a-w",i),this.button.style.setProperty("--person-a-h",o)),this.isMouseOver||this.instrumentLoading){const{silhouette:n}=t.annotations;EC(t.boundingBox,this.instrumentName,"\nclick for new instrument"),((t,e=4,n="red",r=!0)=>{wC.fillStyle=n,wC.strokeStyle=n,wC.moveTo(t[0][0],t[0][1]),wC.beginPath();for(let n=0,s=t.length;n<s;n++){const s=t[n][0],a=t[n][1];wC.arc(s,a,e,0,sS),r&&wC.lineTo(s,a)}wC.fill(),r&&wC.stroke()})(n,4,"hsla("+e+",50%,50%,0.3)",!0)}else if(this.instrumentLoading)EC(t.boundingBox,this.instrumentTitle,"loading...");else{const e=(this.debug,` ${this.lastNoteName}`);if(EC(t.boundingBox,this.instrumentTitle,e+(this.singing?iS[this.counter%(iS.length-1)]:this.isMouthOpen?"~":"")),this.debug){const e=[`gain:${this.gainNode.gain.value.toFixed(2)}`,`pitch:${t.pitch.toFixed(3)}`,`roll:${t.roll.toFixed(3)}`,`yaw:${t.yaw.toFixed(3)}`,`eyes:${t.eyeDirection.toFixed(3)}`,`mouth:${t.mouthOpen.toFixed(3)}`,`dims:${t.mouthWidth.toFixed(2)}x${t.mouthRange.toFixed(2)}`,(t.lookingRight,"left")];((t,e,n=[],r="10px",s=20)=>{let a=e;for(const e of n)CC(t,a,e,r,"left"),a+=s})(t.boundingBox.topLeft[0],t.boundingBox.topLeft[1]+40,e,"14px")}}}sing(){if(!this.data||this.tracks>18)return;const t=this.data,e=this.options,n=t.mouthOpen,r=t.yaw,s=aS(.5*(t.pitch+1),0,1),a=aS(t.roll+.5,0,1),i=t.eyeDirection,o=aS(n,0,1),u=(e.ease(o),Math.round(7*s));this.octave=u;const l=t.lookingRight,c=((t,e=3,n=!1)=>{let r,s;return n?(r=Math.floor(t*(hS.length-1)),s=hS[r]):(r=Math.floor(t*(pS.length-1)),s=pS[r]),`${s}${aS(e,1,7)}`})(a,this.octave,l);let h;if(this.lastNoteName=c,this.hue=360*a,this.saturation=100*n,this.stereoNode.pan.value=aS(i,-1,1),this.instrument&&o>=e.mouthCutOff){const t=this.instrument[c];t||console.log("note not found!",{noteName:c,roll:a,octave:this.octave,isMinor:l}),this.active=!0,this.tracks++;((t,e=0,n=xS,r={loop:!1})=>new Promise(((s,a)=>{const i=fS.createBufferSource();i.buffer=t,i.loop=r.loop,i.connect(n),i.onended=()=>{i.disconnect(),SS=!1,s()},i.onerror=t=>{i.disconnect(),SS=!1,a(t)},"suspended"===fS.state&&fS.resume(),0==e?i.start():i.start(0,fS.currentTime-e),SS=!0})))(t,0,this.stereoNode).then((()=>{this.active=!1,this.tracks--}));this.singing=!0,this.isMouthOpen=!0,h=this.mouthScale(o),h=e.ease(h),h=Math.round(h*this.precision)/this.precision,this.midi&&this.midiChannel&&this.midi.playNote(c,this.midiChannel,{velocity:o})}else o>e.mouthSilence&&o<e.mouthCutOff?(h=0,this.singing=!1,this.isMouthOpen=!0):(h=0,this.singing=!1,this.isMouthOpen=!1);return this.gainNode.gain.value=this.gainNode.gain.value+(h-this.gainNode.gain.value)*e.volumeRate,console.log("Gain",this.gainNode.gain.value,"newVolume",h,"Precision",this.precision),{yaw:r,pitch:s,lipPercentage:n}}async loadRandomInstrument(){return await this.loadInstrument(dS())}async loadPreviousInstrument(){const t=this.index,e=t-1<0?0:t-1;return await this.loadInstrument(oS[e])}async loadNextInstrument(){const t=this.index,e=t+1>=oS.length?0:t+1;return await this.loadInstrument(oS[e])}async loadInstrument(t){return this.instrumentLoading=!0,this.instrument=await(async(t="alto_sax-mp3",e="./FluidR3_GM",n)=>{const r={title:uS(t),name:t},s=await Promise.all(AS(t,e));return _S.forEach(((t,e)=>{r[t.split(".")[0]]=s[e]})),r})(t),this.instrumentLoading=!1,t}setMIDI(t,e="all"){this.midiChannel=e,this.midi=t}}const DC=(t,e=0)=>{let n=e;const r=t.length-1;return{reset:()=>(n=0,t[n]),previous:()=>{const e=n-1;return n=e<0?r:e,t[n]},next:()=>{const e=n+1;return n=e>r?0:e,t[n]},position:e=>t[e],length:t.length,current:()=>t[n],set:e=>t=e}},OC=[[255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0]],FC=[[0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0]],LC=[[255,0,255,0,255,0,255,0,255,0,255,0,255,0,255,0]],BC=(DC(OC[0]),DC(FC[0]),DC(LC[0]),(t,e,...n)=>{const r=t.next();r>0&&e(r,...n)}),zC=document.documentElement,PC=document.querySelector("main"),VC=document.querySelector("video"),WC=document.querySelector("img"),{isRecording:UC,startRecording:GC,stopRecording:HC}=(t=>{let e,n=!1;return{encodeRecording:(t,e="audio/mp3;")=>new Blob(t,{type:e}),startRecording:t=>new Promise(((r,s)=>{if(n)return s("already recording");e=[],n=!0,mS=new MediaRecorder(t),mS.ondataavailable=t=>{e.push(t.data),r(mS)},mS.start()})),stopRecording:()=>new Promise(((t,r)=>{if(!n)return r("Not recording");mS.onstop=r=>{n=!1,t(e)},mS.stop()})),isRecording:()=>n}})(),jC=LS(document.getElementById("feedback")),qC=(LS(document.getElementById("toast")),[]);let KC,XC,YC,JC,ZC,QC,tE,eE=VC,nE=16,rE=()=>2403/nE,sE=!1;const aE=(t=>{{const e=Object.assign({},t),n=new URLSearchParams(window.location.search);for(const[t,r]of n)console.log(`${t}:${r}`),e.key=BS(r);return console.log(`query:${e}`),e}})({metronome:!0,backingTrack:!1,synch:!0,debug:!1,duet:!1}),iE={maxFaces:aE.duet?2:1,shouldLoadIrisModel:!0},oE=async t=>qC.map((async e=>{const n=await e[t]();return jC(`${e.name} has ${n} loaded`),n})),uE=async()=>await oE("loadRandomInstrument"),lE=t=>{aE.duet;if(null==qC[t]){const e={dots:"green",leftEyeIris:"blue",rightEyeIris:"blue",hue:360*Math.random(),debug:aE.debug},n=new MC("person-"+["a","b","c"][t],fS,YC,e);return n.loadInstrument(dS()),JC&&JC.outputs&&JC.outputs.length>0&&n.setMIDI(JC.outputs[0]),qC.push(n),n}return qC[t]};zC.classList.add("loading"),jC("Initialising...<br> Please wait");const cE=async()=>(JC=await new Promise(((t,e)=>{gC.enable((n=>{if(n)return console.log("WebMidi could not be enabled.",n),void e("no MIDI");console.log("WebMidi enabled!"),console.log(gC.inputs),console.log(gC.outputs),t(gC)}))})),jC("MIDI Available<br>Stand By",0),JC.addListener("connected",(t=>{if(console.log(t),jC("MIDI Device connected!"),JC.outputs.length>0){lE(0).setMIDI(JC.outputs[0])}})),JC.addListener("disconnected",(t=>{console.log(t),jC("Lost MIDI Device connection")})),sE=JC&&JC.outputs&&JC.outputs.length>0,sE);var hE;hE=Object.assign({},iE,{}),(t=>{const e=oS.map(((t,e)=>`<label for="${t}">${lS[e]}</label><input id="${t}" name="instrument-selector" type="radio" value="${t}"></input>`)),n=`${e.join("")}`,r=document.getElementById("controls");DS=document.getElementById("button-instrument"),OS=document.getElementById("button-video"),FS=document.getElementById("button-record"),document.querySelector("h1").innerHTML+=t.duet?" duet":"";const s=document.createElement("fieldset");s.innerHTML=n,r.appendChild(s),console.error("Creating UI",{controls:r,fragment:s,uiOptions:e,uiSelect:n})})(aE),rS(eE,hE).then((async t=>{try{jC("Image downloaded...<br> Please wait"),XC=await bC(WC),jC("Attempting to locate camera..."),KC=await yC(VC),jC("Camera located!",0),PC.style.setProperty("--width",VC.width),PC.style.setProperty("--height",VC.height),e=VC.width,n=VC.height,vC=e||xC.width,IC=n||xC.height,fS=new(window.AudioContext||window.webkitAudioContext),bS=fS.createGain(),bS.gain.value=0,IS=fS.createDynamicsCompressor(),IS.threshold.value=-70,IS.knee.value=40,IS.ratio.value=15,IS.attack.value=.2,IS.release.value=.5,kS=fS.createConvolver(),xS=fS.createDelay(.01),wS=fS.createGain(),wS.gain.value=.2,vS=fS.createAnalyser(),vS.minDecibels=-90,vS.maxDecibels=-10,vS.smoothingTimeConstant=.85,vS.fftSize=2048,gS=vS.fftSize,vS.fftSize=256,gS=vS.frequencyBinCount,yS=new Uint8Array(gS),xS.connect(wS),wS.connect(xS),xS.connect(bS),bS.connect(IS),IS.connect(vS),vS.connect(fS.destination),YC=xS,jC("Audio Available...<br>Instrument undefined Sounds downloaded",0),ZC=VS(),QC={kick:DC(OC[0]),hat:DC(LC[0]),snare:DC(FC[0])},jC("Audio available...<br>Instrument Sounds ready")}catch(t){console.error("Bummer",t),jC("Something went wrong :(<br>"+t,0)}var e,n;try{await(async()=>{const t=async()=>{console.log("User input detected so enabling MIDI!"),await cE(),buttonVideo.documentElement.removeEventListener("mousedown",t)};buttonVideo.addEventListener("click",t)})()&&PC.classList.add("midi")}catch(t){console.log("no MIDI!"),PC.classList.add("no-midi")}xC.width=eE.width,xC.height=eE.height,PC.classList.add(eE.nodeName.toLowerCase()),NS=1,ES();let r=0;jC("Everything is ready to "+(eE===VC?"record":"read")),zC.classList.remove("loading"),zC.classList.remove("loaded"),t(eE===VC,(t=>{let e="";var n;if(r++,aE.synch?(n=eE,wC.save(),wC.translate(vC,0),wC.scale(-1,1),wC.drawImage(n,0,0),wC.restore()):wC.clearRect(0,0,vC,IC),((t,e)=>{const n=vC/e*2;let r,s=0;for(var a=0;a<e;a++)r=t[a],wC.fillStyle="hsla("+r/IC*360+",50%,50%,0.3)",wC.fillRect(s,IC-r,n,r),s+=n+1})(yS,gS),aE.metronome&&AC(),t){const n=0,r=t[n],s=lE(n);if(!(r&&r.faceInViewConfidence>.9))return jC("I need to see your face!"),void PC.classList.toggle("active",!1);PC.classList.toggle("active",!0),s.update(r),s.draw(r),aE.metronome||s.sing(),e+=`<br>PITCH:${r.pitch} ROLL:${r.roll} YAW:${r.yaw} MOUTH:${Math.ceil(100*r.mouthRange/RC.LIPS_RANGE)}%`}t?r<50?jC("Smile to begin!"):r<150?jC("Look at the screen and open your mouth!"):r<250?jC("Click your face to change instruments!"):r>1e4?jC("OMG I can't believe you are still here!"):e.length||jC("Look at me and open your mouth"):jC("No faces found!")})),((t,e=200)=>{null===jS&&(jS=new WS,"suspended"===jS.state&&jS.resume()),HS=e,US.onmessage=n=>{const r=KS(),s=n.data;switch(s.event){case"starting":const a=s.time;GS=r,qS=!0,console.log("EVENT_STARTING",{time:a,startTime:GS});break;case"tick":const i=s.intervals,o=i*e*.001,u=r-GS,l=s.time,c=l%e*.001,h=l-u,p=Math.floor(l/e);t&&t({timePassed:l,elapsed:u,expected:o,drift:h,level:p,intervals:i,lag:c});break;default:console.log("message: ",n)}},US.onerror=t=>{console.error("error...",{error:t}),US.postMessage({error:t,time:jS.currentTime})},US.postMessage({command:"start",time:jS.currentTime,interval:e}),console.log("Starting...",{audioContext:jS,interval:e,timingWorker:US}),KS()})((({timePassed:t,elapsed:e,expected:n,drift:r,level:s,intervals:a,lag:i})=>{aE.metronome&&(lE(0).sing(),AC(!0)),aE.backingTrack&&(BC(QC.kick,ZC.kick),BC(QC.snare,ZC.snare),BC(QC.hat,ZC.hat))}),rE())})),xC.addEventListener("mousedown",uE),VC.addEventListener("mousedown",uE),window.addEventListener("keydown",(async t=>{switch(t.key){case"Tab":aE.debug=!aE.debug,qC.forEach((t=>t.debug=aE.debug));break;case"ArrowLeft":(async()=>{await oE("loadPreviousInstrument")})();break;case"ArrowRight":(async()=>{await oE("loadNextInstrument")})();break;case"ArrowUp":nE=++nE>32?32:nE,XS(rE()),jC(`Bars ${nE}`,0);break;case"ArrowDown":nE=--nE<1?1:nE,XS(rE()),jC(`Bars ${nE}`,0);break;case",":$C(-1);break;case".":$C(1);break;case"w":ZC.cowbell();break;case"a":ZC.kick();break;case"s":ZC.snare();break;case"d":ZC.hat();break;case"q":ZC.clack();break;case"b":aE.backingTrack=!aE.backingTrack;break;case"r":UC()?(console.error("Recording END",tE),jC("Recording Ended - now encoding",0),HC().then((t=>{const e=encodeRecording(t,"audio/mp3;"),n=window.URL.createObjectURL(e);console.error("Recording END",{recording:t,audioSrc:n,mp3:e})}))):(jC("Recording START",0),console.error("Recording START"),tE=await GC(YC),console.error("Recording...",tE));break;default:aE.metronome=!aE.metronome,jC(aE.metronome?"Quantised enabled":"Quantise disabled")}console.log("key",aE,t)}));
//# sourceMappingURL=index.b6238d44.js.map
